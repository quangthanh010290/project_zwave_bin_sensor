C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE SELF_HEAL
OBJECT MODULE PLACED IN .\bin\self_heal.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\util_func\self_heal.c LARGE OBJECTADVANCED WARNINGLEVEL(1) OPTIMIZE(1
                    -1,SIZE) BROWSE NOINTPROMOTE INCDIR(..\..\Z-Wave\IO_Defines;..\..\Z-Wave\include;..\Util_Func;..\3Buttons_Bin) DB OE NOCO
                    - SB LC CD DEFINE(ZW_SLAVE,ZW_SLAVE_ROUTING,ZW_SLAVE_32,ZW030x,ZW_ZENSOR,ZW_SELF_HEAL,NOZW_DEBUG,US,NON_BATT,ZW_ROUTING_C
                    -ONTROL,ZW_DEBUG) DEBUG PRINT(.\build_prj\Bin_Sensor_ZW030x_US\list\self_heal.lst) TABS(2) OBJECT(.\bin\self_heal.obj)

line level    source

   1          /******************************* self_heal.c *******************************
   2           *           #######
   3           *           ##  ##
   4           *           #  ##    ####   #####    #####  ##  ##   #####
   5           *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6           *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7           *           ##  ##  ##      ##  ##      ##   #####      ##
   8           *          #######   ####   ##  ##  #####       ##  #####
   9           *                                           #####
  10           *          Z-Wave, the wireless language.
  11           *
  12           *              Copyright (c) 2006
  13           *              Zensys A/S
  14           *              Denmark
  15           *
  16           *              All Rights Reserved
  17           *
  18           *    This source file is subject to the terms and conditions of the
  19           *    Zensys Software License Agreement which restricts the manner
  20           *    in which it may be used.
  21           *
  22           *---------------------------------------------------------------------------
  23           *
  24           * Description: Implements functions that make is easy to support
  25           *              self-heal Operated Nodes
  26           *
  27           * Author:   Jonas Roum-Møller
  28           *
  29           * Last Changed By:  $Author: iza $
  30           * Revision:         $Revision: 21665 $
  31           * Last Changed:     $Date: 2011-11-07 13:25:35 +0100 (ma, 07 nov 2011) $
  32           *
  33           ****************************************************************************/
  34          
  35          /****************************************************************************/
  36          /*                              INCLUDE FILES                               */
  37          /****************************************************************************/
  38          /* Enhanced Slave - needed for battery operation (RTC timer) on 100 series */
  39          /* 200 Series have WUT */
  40          #if defined(ZW_SLAVE_32)
  41          #include <ZW_slave_32_api.h>
   1      =1  /*******************************  ZW_SLAVE_32_API.H  *******************************
   2      =1   *           #######
   3      =1   *           ##  ##
   4      =1   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =1   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =1   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =1   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =1   *          #######   ####   ##  ##  #####       ##  #####
   9      =1   *                                           #####
  10      =1   *          Z-Wave, the wireless lauguage.
  11      =1   *
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 2   

  12      =1   *              Copyright (c) 2001
  13      =1   *              Zensys A/S
  14      =1   *              Denmark
  15      =1   *
  16      =1   *              All Rights Reserved
  17      =1   *
  18      =1   *    This source file is subject to the terms and conditions of the
  19      =1   *    Zensys Software License Agreement which restricts the manner
  20      =1   *    in which it may be used.
  21      =1   *
  22      =1   *---------------------------------------------------------------------------
  23      =1   *
  24      =1   * Description: Z-Wave Slave node on Enhanced Module application interface
  25      =1   *
  26      =1   * Author:   Johann Sigfredsson
  27      =1   *
  28      =1   * Last Changed By:  $Author: sse $
  29      =1   * Revision:         $Revision: 9286 $
  30      =1   * Last Changed:     $Date: 2007-09-11 16:13:14 +0200 (ti, 11 sep 2007) $
  31      =1   *
  32      =1   ****************************************************************************/
  33      =1  #ifndef _ZW_SLAVE_32_API_H_
  34      =1  #define _ZW_SLAVE_32_API_H_
  35      =1  
  36      =1  #ifndef ZW_SLAVE_32
  39      =1  
  40      =1  /****************************************************************************/
  41      =1  /*                              INCLUDE FILES                               */
  42      =1  /****************************************************************************/
  43      =1  /* Include the basic slave functionality */
  44      =1  #include <ZW_slave_routing_api.h>
   1      =2  /*******************************  ZW_SLAVE_ROUTING_API.H  *******************************
   2      =2   *           #######
   3      =2   *           ##  ##
   4      =2   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =2   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =2   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =2   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =2   *          #######   ####   ##  ##  #####       ##  #####
   9      =2   *                                           #####
  10      =2   *          Z-Wave, the wireless lauguage.
  11      =2   *
  12      =2   *              Copyright (c) 2001
  13      =2   *              Zensys A/S
  14      =2   *              Denmark
  15      =2   *
  16      =2   *              All Rights Reserved
  17      =2   *
  18      =2   *    This source file is subject to the terms and conditions of the
  19      =2   *    Zensys Software License Agreement which restricts the manner
  20      =2   *    in which it may be used.
  21      =2   *
  22      =2   *---------------------------------------------------------------------------
  23      =2   *
  24      =2   * Description: Z-Wave Routing Slave node application interface
  25      =2   *
  26      =2   * Author:   Johann Sigfredsson
  27      =2   *
  28      =2   * Last Changed By:  $Author: jsi $
  29      =2   * Revision:         $Revision: 13306 $
  30      =2   * Last Changed:     $Date: 2009-03-05 12:36:29 +0100 (to, 05 mar 2009) $
  31      =2   *
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 3   

  32      =2   ****************************************************************************/
  33      =2  #ifndef _ZW_SLAVE_ROUTING_API_H_
  34      =2  #define _ZW_SLAVE_ROUTING_API_H_
  35      =2  
  36      =2  #ifndef ZW_SLAVE_ROUTING
  39      =2  
  40      =2  /****************************************************************************/
  41      =2  /*                              INCLUDE FILES                               */
  42      =2  /****************************************************************************/
  43      =2  /* Include the basic slave functionality */
  44      =2  #include <ZW_slave_api.h>
   1      =3  /*******************************  ZW_SLAVE_API.H  *******************************
   2      =3   *           #######
   3      =3   *           ##  ##
   4      =3   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =3   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =3   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =3   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =3   *          #######   ####   ##  ##  #####       ##  #####
   9      =3   *                                           #####
  10      =3   *          Z-Wave, the wireless lauguage.
  11      =3   *
  12      =3   *              Copyright (c) 2001
  13      =3   *              Zensys A/S
  14      =3   *              Denmark
  15      =3   *
  16      =3   *              All Rights Reserved
  17      =3   *
  18      =3   *    This source file is subject to the terms and conditions of the
  19      =3   *    Zensys Software License Agreement which restricts the manner
  20      =3   *    in which it may be used.
  21      =3   *
  22      =3   *---------------------------------------------------------------------------
  23      =3   *
  24      =3   * Description: Z-Wave Slave node application interface
  25      =3   *
  26      =3   * Author:   Ivar Jeppesen
  27      =3   *
  28      =3   * Last Changed By:  $Author: jsi $
  29      =3   * Revision:         $Revision: 22623 $
  30      =3   * Last Changed:     $Date: 2012-04-26 16:04:19 +0200 (to, 26 apr 2012) $
  31      =3   *
  32      =3   ****************************************************************************/
  33      =3  #ifndef _ZW_SLAVE_API_H_
  34      =3  #define _ZW_SLAVE_API_H_
  35      =3  
  36      =3  #ifndef ZW_SLAVE
  39      =3  
  40      =3  /****************************************************************************/
  41      =3  /*                              INCLUDE FILES                               */
  42      =3  /****************************************************************************/
  43      =3  #include <ZW_basis_api.h>
   1      =4  /*******************************  ZW_BASIS_API.H  *******************************
   2      =4   *           #######
   3      =4   *           ##  ##
   4      =4   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =4   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =4   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =4   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =4   *          #######   ####   ##  ##  #####       ##  #####
   9      =4   *                                           #####
  10      =4   *          Z-Wave, the wireless lauguage.
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 4   

  11      =4   *
  12      =4   *              Copyright (c) 2001
  13      =4   *              Zensys A/S
  14      =4   *              Denmark
  15      =4   *
  16      =4   *              All Rights Reserved
  17      =4   *
  18      =4   *    This source file is subject to the terms and conditions of the
  19      =4   *    Zensys Software License Agreement which restricts the manner
  20      =4   *    in which it may be used.
  21      =4   *
  22      =4   *---------------------------------------------------------------------------
  23      =4   *
  24      =4   * Description: Z-Wave common controller/slave application interface
  25      =4   *
  26      =4   * Author:   Ivar Jeppesen
  27      =4   *
  28      =4   * Last Changed By:  $Author: jfr $
  29      =4   * Revision:         $Revision: 25278 $
  30      =4   * Last Changed:     $Date: 2013-04-05 16:36:40 +0200 (fr, 05 apr 2013) $
  31      =4   *
  32      =4   ****************************************************************************/
  33      =4  #ifndef _ZW_BASIS_API_H_
  34      =4  #define _ZW_BASIS_API_H_
  35      =4  
  36      =4  /****************************************************************************/
  37      =4  /*                              INCLUDE FILES                               */
  38      =4  /****************************************************************************/
  39      =4  #include <config_lib.h>
   1      =5  /****************************  config_lib.h  *******************************
   2      =5   *           #######
   3      =5   *           ##  ##
   4      =5   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =5   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =5   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =5   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =5   *          #######   ####   ##  ##  #####       ##  #####
   9      =5   *                                           #####
  10      =5   *          Z-Wave, the wireless language.
  11      =5   *
  12      =5   *              Copyright (c) 2001
  13      =5   *              Zensys A/S
  14      =5   *              Denmark
  15      =5   *
  16      =5   *              All Rights Reserved
  17      =5   *
  18      =5   *    This source file is subject to the terms and conditions of the
  19      =5   *    Zensys Software License Agreement which restricts the manner
  20      =5   *    in which it may be used.
  21      =5   *
  22      =5   *---------------------------------------------------------------------------
  23      =5   *
  24      =5   * Description: This header file contains defines for library version
  25      =5   *  in a generalized way.
  26      =5   *
  27      =5   *  Don't change the name of the file, and son't change the names of
  28      =5   *  ZW_VERSION_MAJOR and ZW_VERSION_MINOR, as they are handled automatically by
  29      =5   *  the release procedure. The version information will be set automatically
  30      =5   *  by the "make_release.bat"-script.
  31      =5   *
  32      =5   * Author:   Erik Friis Harck
  33      =5   *
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 5   

  34      =5   * Last Changed By:  $Author: efh $
  35      =5   * Revision:         $Revision: 11456 $
  36      =5   * Last Changed:     $Date: 2008-09-25 16:29:18 +0200 (Thu, 25 Sep 2008) $
  37      =5   *
  38      =5   ****************************************************************************/
  39      =5  #ifndef _CONFIG_LIB_H_
  40      =5  #define _CONFIG_LIB_H_
  41      =5  
  42      =5  /* Z-Wave Library version. Auto generated do not change! */
  43      =5  #define ZW_VERSION_MAJOR 3
  44      =5  #define ZW_VERSION_MINOR 67
  45      =5  
  46      =5  #endif /* _CONFIG_LIB_H_ */
  47      =5  
  40      =4  #include <ZW_typedefs.h>
   1      =5  /*******************************  ZW_TYPEDEFS.H  *******************************
   2      =5   *           #######
   3      =5   *           ##  ##
   4      =5   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =5   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =5   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =5   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =5   *          #######   ####   ##  ##  #####       ##  #####
   9      =5   *                                           #####
  10      =5   *          Z-Wave, the wireless lauguage.
  11      =5   *
  12      =5   *              Copyright (c) 2001
  13      =5   *              Zensys A/S
  14      =5   *              Denmark
  15      =5   *
  16      =5   *              All Rights Reserved
  17      =5   *
  18      =5   *    This source file is subject to the terms and conditions of the
  19      =5   *    Zensys Software License Agreement which restricts the manner
  20      =5   *    in which it may be used.
  21      =5   *
  22      =5   *---------------------------------------------------------------------------
  23      =5   *
  24      =5   * Description: Module description
  25      =5   *
  26      =5   * Author:   Ivar Jeppesen
  27      =5   *
  28      =5   * Last Changed By:  $Author: jsi $
  29      =5   * Revision:         $Revision: 6611 $
  30      =5   * Last Changed:     $Date: 2005-06-16 11:28:32 +0200 (to, 16 jun 2005) $
  31      =5   *
  32      =5   ****************************************************************************/
  33      =5  #ifndef _ZW_TYPEDEFS_H_
  34      =5  #define _ZW_TYPEDEFS_H_
  35      =5  
  36      =5  /****************************************************************************/
  37      =5  /*                              INCLUDE FILES                               */
  38      =5  /****************************************************************************/
  39      =5  
  40      =5  /****************************************************************************/
  41      =5  /*                                 MACROS                                   */
  42      =5  /****************************************************************************/
  43      =5  
  44      =5  /* offset of field m in a struct s */
  45      =5  #define offsetof(s,m)   (WORD)( (BYTE_P)&(((s *)0)->m) - (BYTE_P)0 )
  46      =5  
  47      =5  /****************************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 6   

  48      =5  /*                     EXPORTED TYPES and DEFINITIONS                       */
  49      =5  /****************************************************************************/
  50      =5  #ifndef BYTE
  51      =5  typedef unsigned char   BYTE;
  52      =5  typedef unsigned short  WORD;
  53      =5  typedef unsigned long   DWORD;
  54      =5  
  55      =5  #define IIBYTE BYTE idata  /* Internal indexed data byte */
  56      =5  #define IBYTE  BYTE data   /* Internal data byte */
  57      =5  #define IWORD  WORD data   /* Internal data word */
  58      =5  #define IDWORD DWORD data  /* Internal data double word*/
  59      =5  #define PBYTE  BYTE pdata  /* External data byte residing in lower 256 byte in xdata */
  60      =5  #define PWORD  WORD pdata  /* External data word residing in lower 256 byte in xdata */
  61      =5  #define PDWORD DWORD pdata /* External data double word residing in lower 256 byte in xdata */
  62      =5  #define XBYTE  BYTE xdata  /* External data byte */
  63      =5  #define XWORD  WORD xdata  /* External data word */
  64      =5  #define XDWORD DWORD xdata /* External data double word */
  65      =5  #define BBYTE  BYTE bdata  /* Internal bit adressable byte */
  66      =5  #define BOOL   bit         /* Internal bit */
  67      =5  
  68      =5  #define CODE   code        /* Used for defining callback function which allways */
  69      =5                             /* resides in code space. */
  70      =5  
  71      =5  
  72      =5  typedef  BYTE * BYTE_P;
  73      =5  typedef  WORD * WORD_P;
  74      =5  typedef  DWORD  * DWORD_P;
  75      =5  #endif
  76      =5  
  77      =5  #ifndef NULL
  78      =5  #define NULL  (0)
  79      =5  #endif
  80      =5  
  81      =5  #ifndef TRUE
  82      =5  #define TRUE  (1)
  83      =5  #define FALSE (0)
  84      =5  #endif
  85      =5  
  86      =5  /* Define for making easy and consistent callback definitions */
  87      =5  #define VOID_CALLBACKFUNC(completedFunc)  void (CODE *completedFunc)
  88      =5  
  89      =5  #endif /* _ZW_TYPEDEFS_H_ */
  41      =4  #include <ZW_sysdefs.h>
   1      =5  /*******************************  ZW_SYSDEFS.H  *****************************
   2      =5   *           #######
   3      =5   *           ##  ##
   4      =5   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =5   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =5   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =5   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =5   *          #######   ####   ##  ##  #####       ##  #####
   9      =5   *                                           #####
  10      =5   *          Z-Wave, the wireless lauguage.
  11      =5   *
  12      =5   *              Copyright (c) 2001
  13      =5   *              Zensys A/S
  14      =5   *              Denmark
  15      =5   *
  16      =5   *              All Rights Reserved
  17      =5   *
  18      =5   *    This source file is subject to the terms and conditions of the
  19      =5   *    Zensys Software License Agreement which restricts the manner
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 7   

  20      =5   *    in which it may be used.
  21      =5   *
  22      =5   *---------------------------------------------------------------------------
  23      =5   *
  24      =5   * Description: Z-Wave system defines
  25      =5   *
  26      =5   * Author:   Ivar Jeppesen
  27      =5   *
  28      =5   * Last Changed By:  $Author: sse $
  29      =5   * Revision:         $Revision: 9286 $
  30      =5   * Last Changed:     $Date: 2007-09-11 16:13:14 +0200 (ti, 11 sep 2007) $
  31      =5   *
  32      =5   ****************************************************************************/
  33      =5  #ifndef _ZW_SYSDEFS_H_
  34      =5  #define _ZW_SYSDEFS_H_
  35      =5  
  36      =5  /****************************************************************************/
  37      =5  /*                              INCLUDE FILES                               */
  38      =5  /****************************************************************************/
  39      =5  #ifdef ZW030x
  40      =5  #include <ZW030x.h>
   1      =6  /*******************************  ZW0x0X.H  *****************************
   2      =6   *           #######
   3      =6   *           ##  ##
   4      =6   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =6   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =6   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =6   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =6   *          #######   ####   ##  ##  #####       ##  #####
   9      =6   *                                           #####
  10      =6   *          Z-Wave, the wireless lauguage.
  11      =6   *
  12      =6   *              Copyright (c) 2001
  13      =6   *              Zensys A/S
  14      =6   *              Denmark
  15      =6   *
  16      =6   *              All Rights Reserved
  17      =6   *
  18      =6   *    This source file is subject to the terms and conditions of the
  19      =6   *    Zensys Software License Agreement which restricts the manner
  20      =6   *    in which it may be used.
  21      =6   *
  22      =6   *---------------------------------------------------------------------------
  23      =6   *
  24      =6   * Description: Inventra 8051 SFR defines for the Z-Wave ZW030x RF transceiver.
  25      =6   *
  26      =6   * Author:   Samer Seoud
  27      =6   *
  28      =6   * Last Changed By:  $Author: sse $
  29      =6   * Revision:         $Revision: 9285 $
  30      =6   * Last Changed:     $Date: 2007-09-11 16:07:39 +0200 (ti, 11 sep 2007) $
  31      =6   *
  32      =6   ****************************************************************************/
  33      =6  #ifndef _ZW030X_H_
  34      =6  #define _ZW030X_H_
  35      =6  
  36      =6      // Ports : P0 P1
  37      =6  sfr P0       = 0x80;
  38      =6  sfr P1       = 0x90;
  39      =6      // Ports : P0 P1 direction registers
  40      =6  sfr P0DIR    = 0xAE;
  41      =6  sfr P1DIR    = 0xAF;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 8   

  42      =6      // Ports : P0 P1 pullup registers
  43      =6  sfr P0PULLUP = 0xB1;
  44      =6  sfr P1PULLUP = 0xB2;
  45      =6      // Address map end
  46      =6  // Auto-generated ^^^^^^^^^^^^^^^^^^
  47      =6  
  48      =6  /* The rest! */
  49      =6  sfr ACC    = 0xE0;
  50      =6  
  51      =6  /*Ports*/
  52      =6  sfr SP     = 0x81;
  53      =6  
  54      =6  sfr PCON   = 0x87;
  55      =6  sfr TCON   = 0x88;
  56      =6  sfr TMOD   = 0x89;
  57      =6  sfr TL0    = 0x8A;
  58      =6  sfr TL1    = 0x8B;
  59      =6  sfr TH0    = 0x8C;
  60      =6  sfr TH1    = 0x8D;
  61      =6  
  62      =6  
  63      =6  sfr IE     = 0xA8;
  64      =6  sfr IP     = 0xB8;
  65      =6  
  66      =6  sfr PSW    = 0xD0;
  67      =6  
  68      =6  sfr IE_1    = 0xE8;
  69      =6  sfr B      = 0xF0;
  70      =6  sfr IP1    = 0xF8;
  71      =6  
  72      =6  /******  BIT accessible Registers ******/
  73      =6  /*P0*/
  74      =6  sbit P0_0  = P0^0;
  75      =6  sbit P0_1  = P0^1;
  76      =6  
  77      =6  
  78      =6  /*P1*/
  79      =6  sbit P1_0  = P1^0;
  80      =6  sbit P1_1  = P1^1;
  81      =6  sbit P1_2  = P1^2;
  82      =6  sbit P1_3  = P1^3;
  83      =6  sbit P1_4  = P1^4;
  84      =6  sbit P1_5  = P1^5;
  85      =6  sbit P1_6  = P1^6;
  86      =6  sbit P1_7  = P1^7;
  87      =6  
  88      =6  
  89      =6  /*  TCON  */
  90      =6  sbit TF1   = TCON^7;
  91      =6  sbit TR1   = TCON^6;
  92      =6  sbit TF0   = TCON^5;
  93      =6  sbit TR0   = TCON^4;
  94      =6  sbit IE1   = TCON^3;
  95      =6  sbit IT1   = TCON^2;
  96      =6  sbit IE0   = TCON^1;
  97      =6  sbit IT0   = TCON^0;
  98      =6  
  99      =6  
 100      =6  /*IE*/
 101      =6  sbit EA     = IE^7;
 102      =6  sbit ESPI   = IE^5;
 103      =6  sbit ES     = IE^4;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 9   

 104      =6  sbit ET1    = IE^3;
 105      =6  sbit EX1    = IE^2;
 106      =6  sbit ET0    = IE^1;
 107      =6  sbit EX0    = IE^0;
 108      =6  
 109      =6  
 110      =6  
 111      =6  /*IP*/
 112      =6  sbit PSPI   = IP^5;
 113      =6  sbit PS     = IP^4;
 114      =6  sbit PT1    = IP^3;
 115      =6  sbit PX1    = IP^2;
 116      =6  sbit PT0    = IP^1;
 117      =6  sbit PX0    = IP^0;
 118      =6  
 119      =6  /* IE1 */
 120      =6  sbit ERF     = IE_1^3;
 121      =6  sbit EADC    = IE_1^2;
 122      =6  sbit EGPT    = IE_1^1;
 123      =6  sbit ETRI    = IE_1^0;
 124      =6  
 125      =6  /*IP1*/
 126      =6  sbit PRF      = IP1^3;
 127      =6  sbit PADC     = IP1^2;
 128      =6  sbit PGPT     = IP1^1;
 129      =6  sbit PTRI     = IP1^0;
 130      =6  
 131      =6  
 132      =6  
 133      =6  /*PSW*/
 134      =6  /*  PSW */
 135      =6  sbit CY    = PSW^7;
 136      =6  sbit AC    = PSW^6;
 137      =6  sbit F0    = PSW^5;
 138      =6  sbit RS1   = PSW^4;
 139      =6  sbit RS0   = PSW^3;
 140      =6  sbit OV    = PSW^2;
 141      =6  sbit FL    = PSW^1;
 142      =6  sbit P     = PSW^0;
 143      =6  
 144      =6  /*ACC*/
 145      =6  
 146      =6  
 147      =6  /****Common 8051 SFR registers not previously defined****/
 148      =6  /*  BYTE Register  */
 149      =6  sfr DPL  = 0x82;
 150      =6  sfr DPH  = 0x83;
 151      =6  
 152      =6  
 153      =6  
 154      =6  //ISR servicing external 0
 155      =6  #define INUM_INT0    0
 156      =6  
 157      =6  
 158      =6  //ISR servicing external 1
 159      =6  #define INUM_INT1    2
 160      =6  
 161      =6  //ISR servicing timer 1
 162      =6  #define INUM_TIMER1  3
 163      =6  
 164      =6  //ISR servicing serial port 0
 165      =6  #define INUM_SERIAL 4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 10  

 166      =6  
 167      =6  //ISR servicing serial port 1
 168      =6  #define INUM_SPI  5
 169      =6  
 170      =6  //INUM servicing TRIAC
 171      =6  #define INUM_TRIAC   6
 172      =6  
 173      =6  //ISR servicing general purpose timer
 174      =6  #define INUM_GP_TIMER  7
 175      =6  
 176      =6  //ISR servicing ADC
 177      =6  #define INUM_ADC 8
 178      =6  
 179      =6  
 180      =6  #endif /* _ZW030X_H_ */
  41      =5  #elif defined(ZW020x)
  44      =5  
  45      =5  #define __flash code
  46      =5  
  47      =5  /****************************************************************************/
  48      =5  /*                     EXPORTED TYPES and DEFINITIONS                       */
  49      =5  /****************************************************************************/
  50      =5  
  51      =5  /* Reference frequency */
  52      =5  #if defined(ZW020x) || defined(ZW030x)
  53      =5  #define CPU_FREQ  16000000
  54      =5  #endif
  55      =5  
  56      =5  #endif /* _ZW_SYSDEFS_H_ */
  42      =4  #include <ZW_transport_api.h>
   1      =5  /*******************************  ZW_TRANSPORT_API.H  ***********************
   2      =5   *           #######
   3      =5   *           ##  ##
   4      =5   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =5   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =5   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =5   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =5   *          #######   ####   ##  ##  #####       ##  #####
   9      =5   *                                           #####
  10      =5   *          Z-Wave, the wireless language.
  11      =5   *
  12      =5   *              Copyright (c) 2001
  13      =5   *              Zensys A/S
  14      =5   *              Denmark
  15      =5   *
  16      =5   *              All Rights Reserved
  17      =5   *
  18      =5   *    This source file is subject to the terms and conditions of the
  19      =5   *    Zensys Software License Agreement which restricts the manner
  20      =5   *    in which it may be used.
  21      =5   *
  22      =5   *---------------------------------------------------------------------------
  23      =5   *
  24      =5   * Description: Z-Wave Transport Application layer interface
  25      =5   *
  26      =5   * Author:   Ivar Jeppesen
  27      =5   *
  28      =5   * Last Changed By:  $Author: jfr $
  29      =5   * Revision:         $Revision: 25278 $
  30      =5   * Last Changed:     $Date: 2013-04-05 16:36:40 +0200 (fr, 05 apr 2013) $
  31      =5   *
  32      =5   ****************************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 11  

  33      =5  #ifndef _ZW_TRANSPORT_API_H_
  34      =5  #define _ZW_TRANSPORT_API_H_
  35      =5  
  36      =5  /****************************************************************************/
  37      =5  /*                              INCLUDE FILES                               */
  38      =5  /****************************************************************************/
  39      =5  
  40      =5  /****************************************************************************/
  41      =5  /*                     EXPORTED TYPES and DEFINITIONS                       */
  42      =5  /****************************************************************************/
  43      =5  
  44      =5  /* Max number of nodes in a Z-wave system */
  45      =5  #define ZW_MAX_NODES        232
  46      =5  
  47      =5  /************************************************************/
  48      =5  /* Node Information frame*/
  49      =5  /************************************************************/
  50      =5  #define NODEPARM_MAX  20   /* max. number of parameters */
  51      =5  
  52      =5  
  53      =5  /* Transmit frame option flags */
  54      =5  #define TRANSMIT_OPTION_ACK           0x01    /* request acknowledge from destination node */
  55      =5  #define TRANSMIT_OPTION_LOW_POWER     0x02    /* transmit at low output power level (1/3 of normal RF rang
             -e)*/
  56      =5  #define TRANSMIT_OPTION_AUTO_ROUTE    0x04    /* request retransmission via repeater nodes */
  57      =5  #ifdef ZW_SLAVE_ROUTING
  58      =5  /* Obsoleeted - use TRANSMIT_OPTION_AUTO_ROUTE */
  59      =5  #define TRANSMIT_OPTION_RETURN_ROUTE  TRANSMIT_OPTION_AUTO_ROUTE  /* request transmission via return route
             - */
  60      =5  #endif
  61      =5  /* do not use response route - Even if available */
  62      =5  #define TRANSMIT_OPTION_NO_ROUTE      0x10
  63      =5  /* Use explore frame if needed */
  64      =5  #define TRANSMIT_OPTION_EXPLORE       0x20
  65      =5  
  66      =5  /* Transmit frame option flag which are valid when sending explore frames  */
  67      =5  #define TRANSMIT_EXPLORE_OPTION_ACK         TRANSMIT_OPTION_ACK
  68      =5  #define TRANSMIT_EXPLORE_OPTION_LOW_POWER   TRANSMIT_OPTION_LOW_POWER
  69      =5  
  70      =5  /* speedoptions for ZW_SendData */
  71      =5  #define TRANSMIT_SPEED_OPTION_BAUD_AUTO         0x00
  72      =5  #define TRANSMIT_SPEED_OPTION_BAUD_9600         0x01
  73      =5  #define TRANSMIT_SPEED_OPTION_BAUD_40000        0x02
  74      =5  #define TRANSMIT_SPEED_OPTION_BAUD_RESERVED     0x04
  75      =5  #define TRANSMIT_SPEED_OPTION_BEAM_AUTO         0x08
  76      =5  #define TRANSMIT_SPEED_OPTION_BEAM_250MS        0x08
  77      =5  #define TRANSMIT_SPEED_OPTION_BEAM_1000MS       0x10
  78      =5  #define TRANSMIT_SPEED_OPTION_BEAM_RESERVED     0x18
  79      =5  
  80      =5  /* Received frame status flags */
  81      =5  #define RECEIVE_STATUS_ROUTED_BUSY    0x01
  82      =5  #define RECEIVE_STATUS_LOW_POWER      0x02  /* received at low output power level, this must */
  83      =5                                              /* have the same value as TRANSMIT_OPTION_LOW_POWER */
  84      =5  #define RECEIVE_STATUS_TYPE_MASK      0x0C  /* Mask for masking out the received frametype bits */
  85      =5  #define RECEIVE_STATUS_TYPE_SINGLE    0x00  /* Received frame is singlecast frame (rxOptions == xxxx00xx) 
             -*/
  86      =5  #define RECEIVE_STATUS_TYPE_BROAD     0x04  /* Received frame is broadcast frame  (rxOptions == xxxx01xx) 
             -*/
  87      =5  #define RECEIVE_STATUS_TYPE_MULTI     0x08  /* Received frame is multiecast frame (rxOptions == xxxx10xx) 
             -*/
  88      =5  /* Only TYPE_BROAD can be active at the same time as TYPE_EXPLORE */
  89      =5  #define RECEIVE_STATUS_TYPE_EXPLORE   0x10  /* Received frame is an explore frame (rxOptions == xxx1xxxx) 
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 12  

             -*/
  90      =5  #define RECEIVE_STATUS_FOREIGN_FRAME  0x40  /* Received frame is not send to me (useful only in promiscuou
             -s mode) */
  91      =5  
  92      =5  /* Predefined Node ID's */
  93      =5  #define NODE_BROADCAST              0xFF    /* broadcast */
  94      =5  #define ZW_TEST_NOT_A_NODEID        0x00    /* */
  95      =5  
  96      =5  /* Transmit complete codes */
  97      =5  #define TRANSMIT_COMPLETE_OK          0x00
  98      =5  #define TRANSMIT_COMPLETE_NO_ACK      0x01  /* retransmission error */
  99      =5  #define TRANSMIT_COMPLETE_FAIL        0x02  /* transmit error */
 100      =5  #define TRANSMIT_ROUTING_NOT_IDLE     0x03  /* transmit error */
 101      =5  #ifdef ZW_CONTROLLER
 106      =5  #define TRANSMIT_COMPLETE_HOP_0_FAIL  0x05
 107      =5  #define TRANSMIT_COMPLETE_HOP_1_FAIL  0x06
 108      =5  #define TRANSMIT_COMPLETE_HOP_2_FAIL  0x07
 109      =5  #define TRANSMIT_COMPLETE_HOP_3_FAIL  0x08
 110      =5  #define TRANSMIT_COMPLETE_HOP_4_FAIL  0x09
 111      =5  
 112      =5  /* ZW_REDISCOVERY_NEEDED callback values. */
 113      =5  /* Note that they are different from ZW_REQUEST_NETWORK_UPDATE callbacks */
 114      =5  #define ZW_ROUTE_LOST_FAILED      0x04  /* Node Asked wont help us */
 115      =5  #define ZW_ROUTE_LOST_ACCEPT      0x05  /* Accepted to help */
 116      =5  
 117      =5  
 118      =5  /* Max hops in route */
 119      =5  #define TRANSMIT_ROUTED_ATTEMPT   0x08
 120      =5  
 121      =5  #if defined(ZW_SLAVE_ROUTING) || defined(ZW_CONTROLLER)
 122      =5  #ifdef ZW_SLAVE_RETURNROUTEDEST_232
 125      =5  #define ZW_MAX_RETURN_ROUTE_DESTINATIONS   5
 126      =5  #endif
 127      =5  #endif
 128      =5  
 129      =5  
 130      =5  #ifdef ZW_SLAVE_ROUTING
 131      =5  /*============================   ZW_RouteDestinations   ======================
 132      =5  **    Function description
 133      =5  **      This contains a list of nodes that currently can be reached via
 134      =5  **      return routes.
 135      =5  **      This list should not be altered by Applications.s
 136      =5  **
 137      =5  **--------------------------------------------------------------------------*/
 138      =5  #ifdef ZW_SLAVE_RETURNROUTEDEST_232
 143      =5  extern IBYTE ZW_RouteDestinations[ZW_MAX_RETURN_ROUTE_DESTINATIONS];
 144      =5  #endif
 145      =5  #endif
 146      =5  
 147      =5  
 148      =5  #if (!defined(ZW_SLAVE_ROUTING) && !defined(ZW_CONTROLLER)) || defined(ZW_SLAVE_SENSOR)
 175      =5  
 176      =5  #ifndef ZW_CONTROLLER_BRIDGE
 177      =5  #ifdef ZW_ROUTING_CONTROL
 178      =5  /*=============================   ZW_SendData_Generic   ========================
 179      =5  **    Transmit data buffer to a single ZW-node or all ZW-nodes (broadcast).
 180      =5  **
 181      =5  **
 182      =5  **    txOptions:
 183      =5  **          TRANSMIT_OPTION_LOW_POWER   transmit at low output power level (1/3 of
 184      =5  **                                      normal RF range).
 185      =5  **          TRANSMIT_OPTION_ACK         The destination is asked to acknowledge the reception
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 13  

 186      =5  **                                      of the frame. A maximum of 2 retries are done if no
 187      =5  **                                      ACK received.
 188      =5  **          TRANSMIT_OPTION_AUTO_ROUTE  Request retransmission on singlecast frames
 189      =5  **                                      via repeater nodes (at normal output power level).
 190      =5  **          TRANSMIT_OPTION_EXPLORE     Use explore frame route resolution if all else fails
 191      =5  **
 192      =5  ** extern BYTE             RET  FALSE if transmitter queue overflow
 193      =5  ** ZW_SendData_Generic(
 194      =5  **   BYTE  nodeID,          IN  Destination node ID (0xFF == broadcast)
 195      =5  **   BYTE *pData,           IN  Data buffer pointer
 196      =5  **   BYTE  dataLength,      IN  Data buffer length
 197      =5  **   BYTE  txOptions,       IN  Transmit option flags
 198      =5  **   BYTE *proute           IN  ptr to Route[4] to use. Ignore if NULL. Unused hops must be 0
 199      =5  **   void (*completedFunc)( IN  Transmit completed call back function
 200      =5  **          BYTE txStatus));    IN Transmit status
 201      =5  **--------------------------------------------------------------------------*/
 202      =5  /* For backward compilability */
 203      =5  #define ZW_SendData(node,data,length,options,func) ZW_SendData_Generic(node,data,length,options,NULL,func)
 204      =5  #define ZW_SEND_DATA(node,data,length,options,func) ZW_SendData_Generic(node,data,length,options,NULL,func
             -)
 205      =5  /* Use this */
 206      =5  #define ZW_SEND_DATA_GENERIC(node,data,length,options,proute,func) ZW_SendData_Generic(node,data,length,op
             -tions,proute,func)
 207      =5  #else
 233      =5  #endif  /* !ZW_CONTROLLER_BRIDGE */
 234      =5  
 235      =5  
 236      =5  #ifdef ZW_CONTROLLER_BRIDGE
 268      =5  
 269      =5  
 270      =5  #endif /* (!ZW_SLAVE_ROUTING && !ZW_CONTROLLER) || ZW_SLAVE_SENSOR */
 271      =5  
 272      =5  
 273      =5  #if defined(ZW_CONTROLLER) || defined(ZW_SLAVE_ROUTING)
 274      =5  /*============================   ZW_SendDataAbort   ========================
 275      =5  **    Abort the ongoing transmit started with ZW_SendData()
 276      =5  **
 277      =5  **    Side effects:
 278      =5  **
 279      =5  **--------------------------------------------------------------------------*/
 280      =5  #define ZW_SEND_DATA_ABORT() ZW_SendDataAbort()
 281      =5  
 282      =5  
 283      =5  #ifndef ZW_CONTROLLER_BRIDGE
 284      =5  /*=============================   ZW_SendDataMulti   ========================
 285      =5  **    Transmit data buffer to a list of Z-Wave Nodes (multicast frame).
 286      =5  **
 287      =5  **
 288      =5  **    txOptions:
 289      =5  **          TRANSMIT_OPTION_LOW_POWER   transmit at low output power level (1/3 of
 290      =5  **                                      normal RF range).
 291      =5  **          TRANSMIT_OPTION_ACK         the multicast frame will be followed by a
 292      =5  **                                      singlecast frame to each of the destination nodes
 293      =5  **                                      and request acknowledge from each destination node.
 294      =5  **          TRANSMIT_OPTION_AUTO_ROUTE  request retransmission on singlecast frames
 295      =5  **                                      via repeater nodes (at normal output power level).
 296      =5  **          TRANSMIT_OPTION_EXPLORE     Use explore frame route resolution if all else fails
 297      =5  **
 298      =5  ** extern BYTE            RET  FALSE if transmitter queue overflow
 299      =5  ** ZW_SendDataMulti(
 300      =5  **  BYTE *pNodeIDList,     IN  List of destination node ID's
 301      =5  **  BYTE  numberNodes,     IN  Number of Nodes
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 14  

 302      =5  **  BYTE *pData,           IN  Data buffer pointer
 303      =5  **  BYTE  dataLength,      IN  Data buffer length
 304      =5  **  BYTE  txOptions,       IN  Transmit option flags
 305      =5  **  VOID_CALLBACKFUNC(completedFunc)( IN  Transmit completed call back function
 306      =5  **    BYTE txStatus)); IN Transmit status
 307      =5  **--------------------------------------------------------------------------*/
 308      =5  #define ZW_SEND_DATA_MULTI(nodelist,data,length,options,func) ZW_SendDataMulti(nodelist,data,length,option
             -s,func)
 309      =5  #endif
 310      =5  
 311      =5  
 312      =5  #ifdef ZW_CONTROLLER_BRIDGE
 342      =5  
 343      =5  #endif  /* defined(ZW_CONTROLLER) || defined(ZW_SLAVE_ROUTING) */
 344      =5  
 345      =5  /*============================   ZW_SEND_CONST =============================
 346      =5  **    Function description
 347      =5  **      If production test is enabled during start up.
 348      =5  **      Calling this function will transmit a constant signal until a new
 349      =5  **      RF function is called
 350      =5  **
 351      =5  **--------------------------------------------------------------------------*/
 352      =5  #define ZW_SEND_CONST() ZW_SendConst()
 353      =5  
 354      =5  
 355      =5  #ifdef ZW_SLAVE
 356      =5  /*============================ ZW_LOCK_RESPONSE_ROUTE ========================
 357      =5  **    Function description
 358      =5  **      This function locks and unlocks response route for specified node
 359      =5  **      IN  nodeID != 0x00 lock route to node
 360      =5  **          nodeID == 0x00 unlock entry
 361      =5  **    Side effects:
 362      =5  **
 363      =5  **--------------------------------------------------------------------------*/
 364      =5  #define ZW_LOCK_RESPONSE_ROUTE(node) ZW_LockRoute(node)
 365      =5  
 366      =5  #else
 379      =5  
 380      =5  
 381      =5  #if defined(ZW020x) || defined(ZW030x)
 382      =5  
 383      =5  #if defined(ZW_CONTROLLER) || defined(ZW_SLAVE_ROUTING)
 384      =5  
 385      =5  #ifndef ZW_CONTROLLER_BRIDGE
 386      =5  #ifdef ZW_ROUTING_CONTROL
 387      =5  /*===============================   ZW_SEND_DATA_META ==========================
 388      =5  **    Transmit Meta data buffer to a single Z-Wave node or all Z-Wave nodes
 389      =5  **    Only allowed for 40kbit nodes. If a 9600 destination is selected FALSE will
 390      =5  **    be returned. Parameters and return values identical with ZW_SEND_DATA
 391      =5  **    DOES NOT EXIST ON ZW0x0x targets
 392      =5  **    Side effects:
 393      =5  **
 394      =5  **--------------------------------------------------------------------------*/
 395      =5  #define ZW_SendDataMeta(destId,data,len,txOptions,func) ZW_SendDataMeta_Generic(destId,data,len,txOptions,
             -NULL,func)
 396      =5  #define ZW_SEND_DATA_META(destId,data,len,txOptions,func) ZW_SendDataMeta_Generic(destId,data,len,txOption
             -s,NULL,func)
 397      =5  #define ZW_SEND_DATA_META_GENERIC(destId,data,len,txOptions,proute,func) ZW_SendDataMeta_Generic(destId,da
             -ta,len,txOptions,proute,func)
 398      =5  #else
 409      =5  #endif  /* !ZW_CONTROLLER_BRIDGE */
 410      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 15  

 411      =5  
 412      =5  #ifdef ZW_CONTROLLER_BRIDGE
 425      =5  
 426      =5  #endif  /* defined(ZW_CONTROLLER) || defined(ZW_SLAVE_ROUTING) */
 427      =5  
 428      =5  #endif /* defined(ZW020x) || defined(ZW030x) */
 429      =5  
 430      =5  
 431      =5  /****************************************************************************/
 432      =5  /*                              EXPORTED DATA                               */
 433      =5  /****************************************************************************/
 434      =5  
 435      =5  /****************************************************************************/
 436      =5  /*                           EXPORTED FUNCTIONS                             */
 437      =5  /****************************************************************************/
 438      =5  
 439      =5  #ifdef ZW_SLAVE
 440      =5  /* TO#2133 fix - Keil compiler >7.50(8.xx) seems to have been changed somehow */
 441      =5  /* in the preprocessor part as if the 2 ZW_LockRoute definitions was ifdefed */
 442      =5  /* by ifdef ZW_SLAVE ... endif and ifdef ZW_CONTROLLER ... endif instead of */
 443      =5  /* ifdef ZW_SLAVE ... else ... endif, the Keil >7.50 reports Warning C235 */
 444      =5  /* on slave/slave routing/slave enhanced targets. */
 445      =5  /*============================   ZW_LockRoute   ==============================
 446      =5  **    Function description
 447      =5  **      This function locks and unlocks any temporary route to a specific nodeID
 448      =5  **    Side effects:
 449      =5  **
 450      =5  **--------------------------------------------------------------------------*/
 451      =5  void
 452      =5  ZW_LockRoute(
 453      =5    BYTE bNodeID);          /* IN if nonezero lock bNodeID entry, */
 454      =5                            /*    zero unlock entry */
 455      =5  
 456      =5  #else  /* ZW_SLAVE */
 472      =5  
 473      =5  
 474      =5  /*============================   ZW_SendConst  =============================
 475      =5  **    Function description
 476      =5  **      If production test is enabled it will transmit a constant signal
 477      =5  **      until a new RF function is called
 478      =5  **    Side effects:
 479      =5  **
 480      =5  **--------------------------------------------------------------------------*/
 481      =5  void
 482      =5  ZW_SendConst(void);
 483      =5  
 484      =5  
 485      =5  #if defined(ZW_CONTROLLER) || defined(ZW_SLAVE_ROUTING)
 486      =5  
 487      =5  #ifndef ZW_CONTROLLER_BRIDGE
 488      =5  #ifdef ZW_ROUTING_CONTROL
 489      =5  /*=============================   ZW_SendData_Generic   =========================
 490      =5  **    Transmit data buffer to a single ZW-node or all ZW-nodes (broadcast).
 491      =5  **
 492      =5  **
 493      =5  **    txOptions:
 494      =5  **          TRANSMIT_OPTION_LOW_POWER     transmit at low output power level
 495      =5  **                                        (1/3 of normal RF range).
 496      =5  **          TRANSMIT_OPTION_ACK           the multicast frame will be followed
 497      =5  **                                        by a  singlecast frame to each of
 498      =5  **                                        the destination nodes
 499      =5  **                                        and request acknowledge from each
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 16  

 500      =5  **                                        destination node.
 501      =5  **          TRANSMIT_OPTION_AUTO_ROUTE    request retransmission via repeater
 502      =5  **                                        nodes at normal output power level).
 503      =5  **          TRANSMIT_OPTION_RETURN_ROUTE  transmission via return route, if
 504      =5  **                                        no return route is registred then
 505      =5  **                                        the frame will be send as a
 506      =5  **                                        broadcast.
 507      =5  **          TRANSMIT_OPTION_EXPLORE     Use explore frame route resolution if all else fails
 508      =5  **
 509      =5  ** extern BYTE            RET FALSE if transmitter queue overflow
 510      =5  ** ZW_SendData_Generic(
 511      =5  **  BYTE  nodeID,          IN Destination node ID (0xFF == broadcast)
 512      =5  **  BYTE *pData,           IN Data buffer pointer
 513      =5  **  BYTE  dataLength,      IN Data buffer length
 514      =5  **  BYTE  txOptions,       IN Transmit option flags
 515      =5  **  BYTE_P proute          IN Route to use. Ignore if NULL should be terminated unused hops should be 0
 516      =5  **  void (*completedFunc)( IN  Transmit completed call back function
 517      =5  **         BYTE txStatus));    IN Transmit status
 518      =5  **--------------------------------------------------------------------------*/
 519      =5  extern BYTE                   /*RET  FALSE if transmitter busy      */
 520      =5  ZW_SendData_Generic(
 521      =5    BYTE  nodeID,               /*IN  Destination node ID (0xFF == broadcast) */
 522      =5    BYTE *pData,                /*IN  Data buffer pointer           */
 523      =5    BYTE  dataLength,           /*IN  Data buffer length            */
 524      =5    BYTE  txOptions,            /*IN  Transmit option flags         */
 525      =5    BYTE_P pRoute,  /* IN Route to use. Ignore if NULL should be terminated unused hops should be 0 */
 526      =5    VOID_CALLBACKFUNC(completedFunc)(BYTE)); /*IN  Transmit completed call back function  */
 527      =5  #else
 544      =5  #endif  /* !ZW_CONTROLLER_BRIDGE */
 545      =5  
 546      =5  
 547      =5  #ifdef ZW_CONTROLLER_BRIDGE
 588      =5  
 589      =5  
 590      =5  #ifndef ZW_CONTROLLER_BRIDGE
 591      =5  #ifdef ZW_ROUTING_CONTROL
 592      =5  /*============================   ZW_SendDataMeta_Generic =======================
 593      =5  **    Transmit Meta data buffer to a single Z-Wave node or all Z-Wave nodes
 594      =5  **    Only allowed for 40kbit nodes. If a 9600 destination is selected FALSE will
 595      =5  **    be returned. Parameters and return values identical with ZW_SEND_DATA
 596      =5  **    DOES NOT EXIST ON ZW0x0x targets
 597      =5  **    Side effects:
 598      =5  **
 599      =5  **--------------------------------------------------------------------------*/
 600      =5  BYTE
 601      =5  ZW_SendDataMeta_Generic(
 602      =5    BYTE  destNodeID, /* IN Destination node ID - 0xFF == all nodes */
 603      =5    BYTE *pData,      /* IN Data buffer pointer           */
 604      =5    BYTE  dataLength, /* IN Data buffer length            */
 605      =5    BYTE  txOptions,  /* IN Transmit option flags         */
 606      =5    BYTE_P pRoute,    /* IN Route to use. Ignore if NULL should be terminated unused hops should be 0 */
 607      =5    VOID_CALLBACKFUNC(completedFunc)(BYTE)); /* IN Transmit completed call back function  */
 608      =5  #else
 625      =5  #endif  /* !ZW_CONTROLLER_BRIDGE */
 626      =5  
 627      =5  
 628      =5  #ifdef ZW_CONTROLLER_BRIDGE
 647      =5  
 648      =5  #else /* defined(ZW_CONTROLLER) || defined(ZW_SLAVE_ROUTING) */
 667      =5  
 668      =5  
 669      =5  #if defined(ZW_CONTROLLER) || defined(ZW_SLAVE_ROUTING)
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 17  

 670      =5  
 671      =5  /*============================   ZW_SendDataAbort   ========================
 672      =5  **    Abort the ongoing transmit started with ZW_SendData()
 673      =5  **
 674      =5  **    Side effects:
 675      =5  **
 676      =5  **--------------------------------------------------------------------------*/
 677      =5  void                /*RET FALSE if transmitter busy      */
 678      =5  ZW_SendDataAbort(void);
 679      =5  
 680      =5  
 681      =5  #ifndef ZW_CONTROLLER_BRIDGE
 682      =5  /*===============================   ZW_SendDataMulti   ======================
 683      =5  **    Transmit data buffer to a list of Z-Wave Nodes (multicast frame).
 684      =5  **
 685      =5  **
 686      =5  **    txOptions:
 687      =5  **          TRANSMIT_OPTION_LOW_POWER   transmit at low output power level (1/3 of
 688      =5  **                                      normal RF range).
 689      =5  **          TRANSMIT_OPTION_ACK         the multicast frame will be followed by a
 690      =5  **                                      singlecast frame to each of the destination nodes
 691      =5  **                                      and request acknowledge from each destination node.
 692      =5  **          TRANSMIT_OPTION_AUTO_ROUTE  request retransmission on singlecast frames
 693      =5  **                                      via repeater nodes (at normal output power level).
 694      =5  **
 695      =5  **--------------------------------------------------------------------------*/
 696      =5  extern BYTE            /*RET  FALSE if transmitter busy      */
 697      =5  ZW_SendDataMulti(
 698      =5    BYTE *pNodeIDList,   /*IN  List of destination node ID's */
 699      =5    BYTE *pData,         /*IN  Data buffer pointer           */
 700      =5    BYTE  dataLength,    /*IN  Data buffer length            */
 701      =5    BYTE  txOptions,     /*IN  Transmit option flags         */
 702      =5    VOID_CALLBACKFUNC(completedFunc)(BYTE)); /*IN  Transmit completed call back function  */
 703      =5  #endif  /* !ZW_CONTROLLER_BRIDGE */
 704      =5  
 705      =5  
 706      =5  #ifdef ZW_CONTROLLER_BRIDGE
 730      =5  
 731      =5  #endif /* defined(ZW_CONTROLLER) || defined(ZW_SLAVE_ROUTING) */
 732      =5  
 733      =5  
 734      =5  #if defined(ZW_CONTROLLER) && !defined(ZW_CONTROLLER_STATIC)
 746      =5  
 747      =5  #endif /* _ZW_TRANSPORT_API_H_ */
 748      =5  
  43      =4  #include <ZW_timer_api.h>
   1      =5  /*******************************  ZW_TIMER_API.H  ***************************
   2      =5   *           #######
   3      =5   *           ##  ##
   4      =5   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =5   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =5   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =5   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =5   *          #######   ####   ##  ##  #####       ##  #####
   9      =5   *                                           #####
  10      =5   *          Z-Wave, the wireless lauguage.
  11      =5   *
  12      =5   *              Copyright (c) 2001
  13      =5   *              Zensys A/S
  14      =5   *              Denmark
  15      =5   *
  16      =5   *              All Rights Reserved
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 18  

  17      =5   *
  18      =5   *    This source file is subject to the terms and conditions of the
  19      =5   *    Zensys Software License Agreement which restricts the manner
  20      =5   *    in which it may be used.
  21      =5   *
  22      =5   *---------------------------------------------------------------------------
  23      =5   *
  24      =5   * Description: Timer service functions that handle delayed functions calls.
  25      =5   *              The time base is around 10 msec.
  26      =5   *
  27      =5   * Author:   Ivar Jeppesen
  28      =5   *
  29      =5   * Last Changed By:  $Author: sse $
  30      =5   * Revision:         $Revision: 9286 $
  31      =5   * Last Changed:     $Date: 2007-09-11 16:13:14 +0200 (ti, 11 sep 2007) $
  32      =5   *
  33      =5   ****************************************************************************/
  34      =5  #ifndef _ZW_TIMER_API_H_
  35      =5  #define _ZW_TIMER_API_H_
  36      =5  
  37      =5  /****************************************************************************/
  38      =5  /*                              INCLUDE FILES                               */
  39      =5  /****************************************************************************/
  40      =5  
  41      =5  
  42      =5  /****************************************************************************/
  43      =5  /*                     EXPORTED TYPES and DEFINITIONS                       */
  44      =5  /****************************************************************************/
  45      =5  /* One second timeout */
  46      =5  #define TIMER_ONE_SECOND   100
  47      =5  
  48      =5  /* One time timer */
  49      =5  #define TIMER_ONE_TIME     0
  50      =5  #define TIMER_FOREVER      (BYTE)-1
  51      =5  
  52      =5  /******************************  Timer **************************************
  53      =5  ** Timer service functions that handle delayed functions calls.
  54      =5  ** The time base is around 10 msec.
  55      =5  **/
  56      =5  
  57      =5  /*================================   TimerStart   ============================
  58      =5  **    Register a function that is called when the specified time has elapsed.
  59      =5  **    The function is called "repeats" times before the timer is stopped.
  60      =5  **
  61      =5  ** BYTE              RET Timer handle ( 1 to XX if success, 0xFF if failed)
  62      =5  ** TimerStart(
  63      =5  ** void (*func)(),   IN  Timeout function adddress
  64      =5  ** BYTE timerTicks,  IN  Timeout value (value * 10 msec.)
  65      =5  ** BYTE repeats);    IN  Number of function calls (-1: forever)
  66      =5  **--------------------------------------------------------------------------*/
  67      =5  #define ZW_TIMER_START(func,ticks,repeats) TimerStart(func,ticks,repeats)
  68      =5  
  69      =5  /*================================   TimerRestart  ===========================
  70      =5  **    Set the specified timer back to the initial value.
  71      =5  **
  72      =5  ** BYTE               RET TRUE if timer restarted
  73      =5  ** TimerRestart(
  74      =5  ** BYTE timerHandle); IN  Timer number to restart
  75      =5  **--------------------------------------------------------------------------*/
  76      =5  #define ZW_TIMER_RESTART(handle) TimerRestart(handle)
  77      =5  
  78      =5  /*================================   TimerCancel   ===========================
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 19  

  79      =5  **    Stop the specified timer.
  80      =5  **      0 and 0xFF indicates no timer running.. This is acceptable
  81      =5  ** BYTE               RET TRUE if timer cancelled
  82      =5  ** TimerCancel(
  83      =5  ** BYTE timerHandle); IN  Timer number to stop
  84      =5  **--------------------------------------------------------------------------*/
  85      =5  #define ZW_TIMER_CANCEL(handle) TimerCancel(handle)
  86      =5  
  87      =5  
  88      =5  /****************************************************************************/
  89      =5  /*                              EXPORTED DATA                               */
  90      =5  /****************************************************************************/
  91      =5  
  92      =5  #ifdef ZW_PRODUCTION_TEST_LIB
  95      =5  #if defined(ZW020x) || defined(ZW030x)
  96      =5  extern volatile WORD tickTime; /* global counter that is incremented every 10 msec */
  97      =5  #endif
  98      =5  #endif /*#ifdef ZW_PRODUCTION_TEST_LIB*/
  99      =5  
 100      =5  
 101      =5  
 102      =5  
 103      =5  /****************************************************************************/
 104      =5  /*                           EXPORTED FUNCTIONS                             */
 105      =5  /****************************************************************************/
 106      =5  
 107      =5  /*================================   TimerStart   ============================
 108      =5  **    Register a function that is called when the specified time has elapsed.
 109      =5  **    The function is called "repeats" times before the timer is stopped.
 110      =5  **
 111      =5  **--------------------------------------------------------------------------*/
 112      =5  extern  BYTE              /*RET Timer handle                     */
 113      =5  TimerStart(
 114      =5  void (CODE *func)(),      /*IN  Timeout function address          */
 115      =5  BYTE timerTicks,          /*IN  Timeout value (value * 10 msec.)  */
 116      =5  BYTE repeats);            /*IN  Number of function calls (-1: forever)  */
 117      =5  
 118      =5  /*================================   TimerRestart  ===========================
 119      =5  **    Set the specified timer back to the initial value.
 120      =5  **
 121      =5  **--------------------------------------------------------------------------*/
 122      =5  extern  BYTE              /*RET TRUE if timer restarted   */
 123      =5  TimerRestart(
 124      =5  BYTE timerHandle);        /*IN  Timer number to restart   */
 125      =5  
 126      =5  /*================================   TimerCancel   ===========================
 127      =5  **    Stop the specified timer.
 128      =5  **
 129      =5  **--------------------------------------------------------------------------*/
 130      =5  extern  BYTE              /*RET TRUE if timer cancelled   */
 131      =5  TimerCancel(
 132      =5  BYTE timerHandle);        /*IN  Timer number to stop      */
 133      =5  
 134      =5  #endif /* _ZW_TIMER_API_H_ */
  44      =4  #include <ZW_mem_api.h>
   1      =5  /*******************************  ZW_MEM_API.H  *******************************
   2      =5   *           #######
   3      =5   *           ##  ##
   4      =5   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =5   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =5   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =5   *           ##  ##  ##      ##  ##      ##   #####      ##
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 20  

   8      =5   *          #######   ####   ##  ##  #####       ##  #####
   9      =5   *                                           #####
  10      =5   *          Z-Wave, the wireless lauguage.
  11      =5   *
  12      =5   *              Copyright (c) 2001
  13      =5   *              Zensys A/S
  14      =5   *              Denmark
  15      =5   *
  16      =5   *              All Rights Reserved
  17      =5   *
  18      =5   *    This source file is subject to the terms and conditions of the
  19      =5   *    Zensys Software License Agreement which restricts the manner
  20      =5   *    in which it may be used.
  21      =5   *
  22      =5   *---------------------------------------------------------------------------
  23      =5   *
  24      =5   * Description: Copy of data to/from non-volatile memory (EEPROM)
  25      =5   *              Standard memory functions.
  26      =5   *
  27      =5   * Author:   Ivar Jeppesen
  28      =5   *
  29      =5   * Last Changed By:  $Author: jsi $
  30      =5   * Revision:         $Revision: 10469 $
  31      =5   * Last Changed:     $Date: 2008-06-09 14:08:13 +0200 (ma, 09 jun 2008) $
  32      =5   *
  33      =5   ****************************************************************************/
  34      =5  #ifndef _ZW_MEM_API_H_
  35      =5  #define _ZW_MEM_API_H_
  36      =5  
  37      =5  /****************************************************************************/
  38      =5  /*                              INCLUDE FILES                               */
  39      =5  /****************************************************************************/
  40      =5  #ifndef NO_MEM_FUNCTIONS
  41      =5  #define memcpy(dst, src, len)  __ZW_memcpy(len, dst, src)
  42      =5  #define memcmp(dst, src, len)  __ZW_memcmp(len, dst, src)
  43      =5  #define memset(dst, val, len)  __ZW_memset(val, len, dst)
  44      =5  #define ZW_memcpy(dst, src, len)  __ZW_memcpy(len, dst, src)
  45      =5  #define ZW_memcmp(dst, src, len)  __ZW_memcmp(len, dst, src)
  46      =5  #define ZW_memset(dst, val, len)  __ZW_memset(val, len, dst)
  47      =5  #endif
  48      =5  
  49      =5  /****************************************************************************/
  50      =5  /*                     EXPORTED TYPES and DEFINITIONS                       */
  51      =5  /****************************************************************************/
  52      =5  /****************************  Memory  **************************************
  53      =5  ** Copy of data to non-volatile memory (FLASH) only valid for slave and
  54      =5  ** slave_routing libraries
  55      =5  **
  56      =5  **  Side effects: The non-volatile memory write operation is delayed via a timer.
  57      =5  **                The physical write is delayed about 200 msec.
  58      =5  **/
  59      =5  
  60      =5  /*============================   MemoryGetID   ===============================
  61      =5  **  Copy the Home-ID and Node-ID to the specified RAM addresses
  62      =5  **  BYTE *homeid pointer to RAM were the home ID should be placed
  63      =5  **  BYTE *nodeid pointer to RAM were the Node ID should be placed.
  64      =5  **--------------------------------------------------------------------------*/
  65      =5  #define ZW_MEMORY_GET_ID(homeid,nodeid)   MemoryGetID(homeid,nodeid)
  66      =5  
  67      =5  /*============================   MemoryGetByte   ============================
  68      =5  **    Read one byte from the EEPROM
  69      =5  **
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 21  

  70      =5  ** BYTE               RET Data
  71      =5  ** MemoryGetByte(
  72      =5  ** WORD  offset );    IN   Application area offset
  73      =5  **--------------------------------------------------------------------------*/
  74      =5  #define ZW_MEM_GET_BYTE(offset) MemoryGetByte(offset)
  75      =5  
  76      =5  /*============================   MemoryPutByte   ============================
  77      =5  **    Write one byte to the EEPROM
  78      =5  **
  79      =5  ** BYTE               RET False if write buffer full
  80      =5  ** MemoryPutByte(
  81      =5  ** WORD  offset,      IN   Application area offset
  82      =5  ** BYTE  data );      IN   Data to store
  83      =5  **--------------------------------------------------------------------------*/
  84      =5  #define ZW_MEM_PUT_BYTE(offset,data) MemoryPutByte(offset,data)
  85      =5  
  86      =5  /*============================   MemoryGetBuffer   =============================
  87      =5  **    Read number of bytes from the EEPROM to a RAM buffer
  88      =5  **
  89      =5  ** void               RET Nothing
  90      =5  ** MemoryGetBuffer(
  91      =5  ** WORD  offset,      IN   Application area offset
  92      =5  ** BYTE  *buffer,     IN   Buffer pointer
  93      =5  ** BYTE  length );    IN   Number of bytes to read
  94      =5  **--------------------------------------------------------------------------*/
  95      =5  #define ZW_MEM_GET_BUFFER(offset,buffer,length) MemoryGetBuffer(offset,buffer,length)
  96      =5  
  97      =5  /*============================   MemoryPutBuffer   =============================
  98      =5  **    Copy number of bytes from a RAM buffer to the EEPROM
  99      =5  **
 100      =5  **  Side effects: The EEPROM write operation has been done when function returns
 101      =5  **                and the callback is called max 10ms later via a timer
 102      =5  **
 103      =5  ** BYTE               RET FALSE if the buffer put queue is full
 104      =5  ** MemoryPutBuffer(
 105      =5  ** WORD  offset,          IN   Application area offset
 106      =5  ** BYTE  *buffer,         IN   Buffer pointer
 107      =5  ** BYTE  length,          IN   Number of bytes to read
 108      =5  ** void (*func)( void) ); IN   Buffer write completed function pointer
 109      =5  **--------------------------------------------------------------------------*/
 110      =5  #define ZW_MEM_PUT_BUFFER(offset,buffer,length, func) MemoryPutBuffer(offset,buffer,length, func)
 111      =5  
 112      =5  
 113      =5  /*============================   ZW_MemoryPutBuffer   ========================
 114      =5  **    Copy number of bytes from a RAM buffer to the EEPROM
 115      =5  **
 116      =5  **  Side effects: The EEPROM write operation has been done when function returns
 117      =5  **
 118      =5  ** BYTE               RET FALSE if the buffer put queue is full
 119      =5  ** ZW_MemoryPutBuffer(
 120      =5  ** WORD  offset,          IN   Application area offset
 121      =5  ** BYTE  length,          IN   Number of bytes to write
 122      =5  ** BYTE  *buffer,         IN   Buffer pointer
 123      =5  **--------------------------------------------------------------------------*/
 124      =5  #define ZW_MEM_PUT_BUFFER_NO_CB(offset,buffer,length) ZW_MemoryPutBuffer(offset,buffer,length)
 125      =5  
 126      =5  
 127      =5  /*===============================   ZW_EepromInit   ====================================
 128      =5  ** This function writes ZEROs in the entire EEPROM, then it write the homeID
 129      =5  ** if it different from ZERO. This function will only operate in the production mode.
 130      =5  **-----------------------------------------------------------------------------------*/
 131      =5  #define ZW_EEPROM_INIT(HOMEID)       ZW_EepromInit(HOMEID)
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 22  

 132      =5  
 133      =5  /*============================   MemoryFlush   =============================
 134      =5  **    Write the content of the FLASH RAM buffer to the FLASH.
 135      =5  **
 136      =5  **  Side effects: During the write process the CPU wuill be in idle state.
 137      =5  **--------------------------------------------------------------------------*/
 138      =5  #define ZW_MEM_FLUSH()   ZW_MemoryFlush()
 139      =5  
 140      =5  
 141      =5  /****************************************************************************/
 142      =5  /*                              EXPORTED DATA                               */
 143      =5  /****************************************************************************/
 144      =5  
 145      =5  /****************************************************************************/
 146      =5  /*                           LOW LEVEL EXPORTED FUNCTIONS                   */
 147      =5  /****************************************************************************/
 148      =5  
 149      =5  
 150      =5  /****************************************************************************/
 151      =5  /*                           EXPORTED FUNCTIONS                             */
 152      =5  /****************************************************************************/
 153      =5  
 154      =5  /*============================   MemoryGetID   ===============================
 155      =5  **    Copy the Home-ID and Node-ID to the specified RAM addresses
 156      =5  **
 157      =5  **--------------------------------------------------------------------------*/
 158      =5  extern void               /*RET Nothing          */
 159      =5  MemoryGetID(
 160      =5    BYTE *homeID,           /*OUT  Home-ID pointer            */
 161      =5    BYTE *nodeID );         /*OUT  Node-ID pointer            */
 162      =5  
 163      =5  /*============================   MemoryGetByte   =============================
 164      =5  **  Read one byte from the EEPROM
 165      =5  **
 166      =5  **  Side effects:
 167      =5  **--------------------------------------------------------------------------*/
 168      =5  extern BYTE               /*RET Data          */
 169      =5  MemoryGetByte(
 170      =5    WORD  offset );         /*IN   Application area offset            */
 171      =5  
 172      =5  /*============================   MemoryPutByte   =============================
 173      =5  **  Add one byte to the EEPROM write queue
 174      =5  **
 175      =5  **  Side effects:
 176      =5  **
 177      =5  **--------------------------------------------------------------------------*/
 178      =5  extern BYTE               /*RET FALSE if write buffer full    */
 179      =5  MemoryPutByte(
 180      =5    WORD  offset,           /*IN   Application area offset   */
 181      =5    BYTE  bData );          /*IN   Data to store             */
 182      =5  
 183      =5  /*============================   MemoryGetBuffer   =============================
 184      =5  **    Read number of bytes from the EEPROM to a RAM buffer
 185      =5  **
 186      =5  **  Side effects:
 187      =5  **--------------------------------------------------------------------------*/
 188      =5  extern void               /*RET Nothing          */
 189      =5  MemoryGetBuffer(
 190      =5    WORD  offset,           /*IN   Application area offset   */
 191      =5    BYTE  *buffer,          /*IN   Buffer pointer            */
 192      =5    BYTE  length );         /*IN   Number of bytes to read  */
 193      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 23  

 194      =5  /*============================   MemoryPutBuffer   =============================
 195      =5  **    Copy number of bytes from a RAM buffer to the EEPROM
 196      =5  **
 197      =5  **  Side effects: Write has been executed when function returns and callback
 198      =5  **                is called via a timer max 10ms later
 199      =5  **--------------------------------------------------------------------------*/
 200      =5  extern BYTE               /*RET FALSE if the buffer put queue is full          */
 201      =5  MemoryPutBuffer(
 202      =5    WORD  offset,           /*IN   Application area offset   */
 203      =5    BYTE  *buffer,          /*IN   Buffer pointer            */
 204      =5    WORD  length,           /*IN   Number of bytes to copy   */
 205      =5    void (CODE *func)( void) );  /*IN   Buffer write completed function pointer */
 206      =5  
 207      =5  
 208      =5  /*==========================   ZW_MemoryPutBuffer   ==========================
 209      =5  **    Copy number of bytes from a RAM buffer to the EEPROM
 210      =5  **
 211      =5  **  Side effects: Write has been executed when function returns
 212      =5  **--------------------------------------------------------------------------*/
 213      =5  extern BYTE               /*RET FALSE if the buffer put queue is full       */
 214      =5  ZW_MemoryPutBuffer(
 215      =5    WORD  offset,           /* IN Application area offset   */
 216      =5    BYTE  *buffer,          /* IN Buffer pointer            */
 217      =5    WORD  length);          /* IN Number of bytes to copy   */
 218      =5  
 219      =5  
 220      =5  /*=============================   ZW_memcpy   ===============================
 221      =5  **    Copies length bytes from src to dst
 222      =5  **
 223      =5  **--------------------------------------------------------------------------*/
 224      =5  extern void       /* RET  Nothing */
 225      =5  __ZW_memcpy(
 226      =5    BYTE length,    /* IN   Number of bytes to copy */
 227      =5    BYTE *dst,      /* IN   Pointer to destination */
 228      =5    BYTE *src);     /* IN   Pointer to source */
 229      =5  
 230      =5  
 231      =5  /*=============================   ZW_memcmp   ===============================
 232      =5  **    Compares length bytes of src and dest
 233      =5  **
 234      =5  **--------------------------------------------------------------------------*/
 235      =5  extern BYTE       /* RET  0 if *src and *dst are equal, else 1 */
 236      =5  __ZW_memcmp(
 237      =5    BYTE length,    /* IN   Number of bytes to compare */
 238      =5    BYTE *dst,      /* IN   Pointer to buffer 1 */
 239      =5    BYTE *src);     /* IN   Pointer to buffer 2 */
 240      =5  
 241      =5  
 242      =5  /*===============================   ZW_memset   ==============================
 243      =5  **    Fill length bytes in dst with val
 244      =5  **
 245      =5  **--------------------------------------------------------------------------*/
 246      =5  void           /*RET Nothing */
 247      =5  __ZW_memset(
 248      =5    BYTE val,    /* IN Value to fill buffer with */
 249      =5    BYTE length, /* IN Number of bytes to set */
 250      =5    BYTE *dst);  /* IN Pointer to buffer to set/fill */
 251      =5  
 252      =5  
 253      =5  #if defined(ZW_CONTROLLER) || defined(ZW_SLAVE_32)
 254      =5  /*===============================   ZW_EepromInit   ====================================
 255      =5  ** This function writes ZEROs in the entire EEPROM, then it write the homeID
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 24  

 256      =5  ** if it different from ZERO. This function will only operate in the production mode.
 257      =5  **-----------------------------------------------------------------------------------*/
 258      =5  BOOL           /*RET: TRUE if the EEPROM was initialized else , FALSE*/
 259      =5  ZW_EepromInit(BYTE *pHomeID);    /* IN Pointer to home ID to be written to EEPROM */
 260      =5  #endif
 261      =5  
 262      =5  #if defined(ZW_SLAVE) && !defined(ZW_SLAVE_32)
 271      =5  
 272      =5  #endif /* _ZW_MEM_API_H_ */
  45      =4  #include <ZW_classcmd.h>
   1      =5  // Generated on: 1/16/2013 5:08:05 PM
   2      =5  /*******************************  ZW_classcmd.h  *******************************
   3      =5   *           #######
   4      =5   *           ##  ##
   5      =5   *           #  ##    ####   #####    #####  ##  ##   #####
   6      =5   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   7      =5   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   8      =5   *           ##  ##  ##      ##  ##      ##   #####      ##
   9      =5   *          #######   ####   ##  ##  #####       ##  #####
  10      =5   *                                           #####
  11      =5   *          Z-Wave, the wireless language.
  12      =5   *
  13      =5   *              Copyright (c) 2001
  14      =5   *              Zensys A/S
  15      =5   *              Denmark
  16      =5   *
  17      =5   *              All Rights Reserved
  18      =5   *
  19      =5   *    This source file is subject to the terms and conditions of the
  20      =5   *    Zensys Software License Agreement which restricts the manner
  21      =5   *    in which it may be used.
  22      =5   *
  23      =5   *---------------------------------------------------------------------------
  24      =5   *
  25      =5   * Description: Device and command class types and definitions.
  26      =5   *
  27      =5   *              Be aware that temporary types and definitions can be present
  28      =5   *              in this header file. Only the types and definitions found in
  29      =5   *              the latest version of the Z-Wave Device Class Specification
  30      =5   *              (doc. nr. 9031002xx) is valid.
  31      =5   *
  32      =5   * Author: JÑrgen Franck
  33      =5   *
  34      =5   * Last Changed By:  $Author: psh $
  35      =5   * Revision:         $Revision: 24006 $
  36      =5   * Last Changed:     $Date: 2013-01-17 10:05:03 +0100 (to, 17 jan 2013) $
  37      =5   *
  38      =5   ****************************************************************************/
  39      =5  #ifndef _ZW_CLASSCMD_H_
  40      =5  #define _ZW_CLASSCMD_H_
  41      =5  
  42      =5  /****************************************************************************
  43      =5   *    TYPES and DEFINITIONS
  44      =5   ***************************************************************************/
  45      =5  
  46      =5  
  47      =5  #define ZW_FRAME_COLLECTION_MACRO0\
  48      =5     ZW_COMMON_FRAME                                       ZW_Common;\
  49      =5  /* Command class Alarm */\
  50      =5    ZW_ALARM_GET_FRAME                                           ZW_AlarmGetFrame;\
  51      =5    ZW_ALARM_REPORT_FRAME                                        ZW_AlarmReportFrame;\
  52      =5  /* Command class Alarm V2 */\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 25  

  53      =5    ZW_ALARM_GET_V2_FRAME                                        ZW_AlarmGetV2Frame;\
  54      =5    ZW_ALARM_REPORT_1BYTE_V2_FRAME                               ZW_AlarmReport1byteV2Frame;\
  55      =5    ZW_ALARM_REPORT_2BYTE_V2_FRAME                               ZW_AlarmReport2byteV2Frame;\
  56      =5    ZW_ALARM_REPORT_3BYTE_V2_FRAME                               ZW_AlarmReport3byteV2Frame;\
  57      =5    ZW_ALARM_REPORT_4BYTE_V2_FRAME                               ZW_AlarmReport4byteV2Frame;\
  58      =5    ZW_ALARM_SET_V2_FRAME                                        ZW_AlarmSetV2Frame;\
  59      =5    ZW_ALARM_TYPE_SUPPORTED_GET_V2_FRAME                         ZW_AlarmTypeSupportedGetV2Frame;\
  60      =5    ZW_ALARM_TYPE_SUPPORTED_REPORT_1BYTE_V2_FRAME                ZW_AlarmTypeSupportedReport1byteV2Frame;\
  61      =5    ZW_ALARM_TYPE_SUPPORTED_REPORT_2BYTE_V2_FRAME                ZW_AlarmTypeSupportedReport2byteV2Frame;\
  62      =5    ZW_ALARM_TYPE_SUPPORTED_REPORT_3BYTE_V2_FRAME                ZW_AlarmTypeSupportedReport3byteV2Frame;\
  63      =5    ZW_ALARM_TYPE_SUPPORTED_REPORT_4BYTE_V2_FRAME                ZW_AlarmTypeSupportedReport4byteV2Frame;\
  64      =5  /* Command class Notification V3 */\
  65      =5    ZW_NOTIFICATION_GET_V3_FRAME                                 ZW_NotificationGetV3Frame;\
  66      =5    ZW_NOTIFICATION_REPORT_1BYTE_V3_FRAME                        ZW_NotificationReport1byteV3Frame;\
  67      =5    ZW_NOTIFICATION_REPORT_2BYTE_V3_FRAME                        ZW_NotificationReport2byteV3Frame;\
  68      =5    ZW_NOTIFICATION_REPORT_3BYTE_V3_FRAME                        ZW_NotificationReport3byteV3Frame;\
  69      =5    ZW_NOTIFICATION_REPORT_4BYTE_V3_FRAME                        ZW_NotificationReport4byteV3Frame;\
  70      =5    ZW_NOTIFICATION_SET_V3_FRAME                                 ZW_NotificationSetV3Frame;\
  71      =5    ZW_NOTIFICATION_SUPPORTED_GET_V3_FRAME                       ZW_NotificationSupportedGetV3Frame;\
  72      =5    ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V3_FRAME              ZW_NotificationSupportedReport1byteV3Frame;
             -\
  73      =5    ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V3_FRAME              ZW_NotificationSupportedReport2byteV3Frame;
             -\
  74      =5    ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V3_FRAME              ZW_NotificationSupportedReport3byteV3Frame;
             -\
  75      =5    ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V3_FRAME              ZW_NotificationSupportedReport4byteV3Frame;
             -\
  76      =5    ZW_EVENT_SUPPORTED_GET_V3_FRAME                              ZW_EventSupportedGetV3Frame;\
  77      =5    ZW_EVENT_SUPPORTED_REPORT_1BYTE_V3_FRAME                     ZW_EventSupportedReport1byteV3Frame;\
  78      =5    ZW_EVENT_SUPPORTED_REPORT_2BYTE_V3_FRAME                     ZW_EventSupportedReport2byteV3Frame;\
  79      =5    ZW_EVENT_SUPPORTED_REPORT_3BYTE_V3_FRAME                     ZW_EventSupportedReport3byteV3Frame;\
  80      =5    ZW_EVENT_SUPPORTED_REPORT_4BYTE_V3_FRAME                     ZW_EventSupportedReport4byteV3Frame;\
  81      =5  /* Command class Application Status */\
  82      =5    ZW_APPLICATION_BUSY_FRAME                                    ZW_ApplicationBusyFrame;\
  83      =5    ZW_APPLICATION_REJECTED_REQUEST_FRAME                        ZW_ApplicationRejectedRequestFrame;\
  84      =5  /* Command class Association Command Configuration */\
  85      =5    ZW_COMMAND_CONFIGURATION_GET_FRAME                           ZW_CommandConfigurationGetFrame;\
  86      =5    ZW_COMMAND_CONFIGURATION_REPORT_1BYTE_FRAME                  ZW_CommandConfigurationReport1byteFrame;\
  87      =5    ZW_COMMAND_CONFIGURATION_REPORT_2BYTE_FRAME                  ZW_CommandConfigurationReport2byteFrame;\
  88      =5    ZW_COMMAND_CONFIGURATION_REPORT_3BYTE_FRAME                  ZW_CommandConfigurationReport3byteFrame;\
  89      =5    ZW_COMMAND_CONFIGURATION_REPORT_4BYTE_FRAME                  ZW_CommandConfigurationReport4byteFrame;\
  90      =5    ZW_COMMAND_CONFIGURATION_SET_1BYTE_FRAME                     ZW_CommandConfigurationSet1byteFrame;\
  91      =5    ZW_COMMAND_CONFIGURATION_SET_2BYTE_FRAME                     ZW_CommandConfigurationSet2byteFrame;\
  92      =5    ZW_COMMAND_CONFIGURATION_SET_3BYTE_FRAME                     ZW_CommandConfigurationSet3byteFrame;\
  93      =5    ZW_COMMAND_CONFIGURATION_SET_4BYTE_FRAME                     ZW_CommandConfigurationSet4byteFrame;\
  94      =5    ZW_COMMAND_RECORDS_SUPPORTED_GET_FRAME                       ZW_CommandRecordsSupportedGetFrame;\
  95      =5    ZW_COMMAND_RECORDS_SUPPORTED_REPORT_FRAME                    ZW_CommandRecordsSupportedReportFrame;\
  96      =5  /* Command class Association */\
  97      =5    ZW_ASSOCIATION_GET_FRAME                                     ZW_AssociationGetFrame;\
  98      =5    ZW_ASSOCIATION_GROUPINGS_GET_FRAME                           ZW_AssociationGroupingsGetFrame;\
  99      =5    ZW_ASSOCIATION_GROUPINGS_REPORT_FRAME                        ZW_AssociationGroupingsReportFrame;\
 100      =5    ZW_ASSOCIATION_REMOVE_1BYTE_FRAME                            ZW_AssociationRemove1byteFrame;\
 101      =5    ZW_ASSOCIATION_REMOVE_2BYTE_FRAME                            ZW_AssociationRemove2byteFrame;\
 102      =5    ZW_ASSOCIATION_REMOVE_3BYTE_FRAME                            ZW_AssociationRemove3byteFrame;\
 103      =5    ZW_ASSOCIATION_REMOVE_4BYTE_FRAME                            ZW_AssociationRemove4byteFrame;\
 104      =5    ZW_ASSOCIATION_REPORT_1BYTE_FRAME                            ZW_AssociationReport1byteFrame;\
 105      =5    ZW_ASSOCIATION_REPORT_2BYTE_FRAME                            ZW_AssociationReport2byteFrame;\
 106      =5    ZW_ASSOCIATION_REPORT_3BYTE_FRAME                            ZW_AssociationReport3byteFrame;\
 107      =5    ZW_ASSOCIATION_REPORT_4BYTE_FRAME                            ZW_AssociationReport4byteFrame;\
 108      =5    ZW_ASSOCIATION_SET_1BYTE_FRAME                               ZW_AssociationSet1byteFrame;\
 109      =5    ZW_ASSOCIATION_SET_2BYTE_FRAME                               ZW_AssociationSet2byteFrame;\
 110      =5    ZW_ASSOCIATION_SET_3BYTE_FRAME                               ZW_AssociationSet3byteFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 26  

 111      =5    ZW_ASSOCIATION_SET_4BYTE_FRAME                               ZW_AssociationSet4byteFrame;\
 112      =5  /* Command class Association V2 */\
 113      =5    ZW_ASSOCIATION_GET_V2_FRAME                                  ZW_AssociationGetV2Frame;\
 114      =5    ZW_ASSOCIATION_GROUPINGS_GET_V2_FRAME                        ZW_AssociationGroupingsGetV2Frame;\
 115      =5    ZW_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME                     ZW_AssociationGroupingsReportV2Frame;\
 116      =5    ZW_ASSOCIATION_REMOVE_1BYTE_V2_FRAME                         ZW_AssociationRemove1byteV2Frame;\
 117      =5    ZW_ASSOCIATION_REMOVE_2BYTE_V2_FRAME                         ZW_AssociationRemove2byteV2Frame;\
 118      =5    ZW_ASSOCIATION_REMOVE_3BYTE_V2_FRAME                         ZW_AssociationRemove3byteV2Frame;\
 119      =5    ZW_ASSOCIATION_REMOVE_4BYTE_V2_FRAME                         ZW_AssociationRemove4byteV2Frame;\
 120      =5    ZW_ASSOCIATION_REPORT_1BYTE_V2_FRAME                         ZW_AssociationReport1byteV2Frame;\
 121      =5    ZW_ASSOCIATION_REPORT_2BYTE_V2_FRAME                         ZW_AssociationReport2byteV2Frame;\
 122      =5    ZW_ASSOCIATION_REPORT_3BYTE_V2_FRAME                         ZW_AssociationReport3byteV2Frame;\
 123      =5    ZW_ASSOCIATION_REPORT_4BYTE_V2_FRAME                         ZW_AssociationReport4byteV2Frame;\
 124      =5    ZW_ASSOCIATION_SET_1BYTE_V2_FRAME                            ZW_AssociationSet1byteV2Frame;\
 125      =5    ZW_ASSOCIATION_SET_2BYTE_V2_FRAME                            ZW_AssociationSet2byteV2Frame;\
 126      =5    ZW_ASSOCIATION_SET_3BYTE_V2_FRAME                            ZW_AssociationSet3byteV2Frame;\
 127      =5    ZW_ASSOCIATION_SET_4BYTE_V2_FRAME                            ZW_AssociationSet4byteV2Frame;\
 128      =5    ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V2_FRAME                   ZW_AssociationSpecificGroupGetV2Frame;\
 129      =5    ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V2_FRAME                ZW_AssociationSpecificGroupReportV2Frame;\
 130      =5  /* Command class Av Content Directory Md */\
 131      =5    ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_GET_FRAME                  ZW_AvContentBrowseMdByLetterGetFrame;\
 132      =5    ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT_FRAME               ZW_AvContentBrowseMdByLetterReportFrame;\
 133      =5    ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET_FRAME                ZW_AvContentBrowseMdChildCountGetFrame;\
 134      =5    ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT_FRAME             ZW_AvContentBrowseMdChildCountReportFrame;\
 135      =5    ZW_AV_CONTENT_BROWSE_MD_GET_FRAME                            ZW_AvContentBrowseMdGetFrame;\
 136      =5    ZW_AV_CONTENT_BROWSE_MD_REPORT_FRAME                         ZW_AvContentBrowseMdReportFrame;\
 137      =5    ZW_AV_MATCH_ITEM_TO_RENDERER_MD_GET_FRAME                    ZW_AvMatchItemToRendererMdGetFrame;\
 138      =5    ZW_AV_MATCH_ITEM_TO_RENDERER_MD_REPORT_FRAME                 ZW_AvMatchItemToRendererMdReportFrame;\
 139      =5  /* Command class Av Content Search Md */\
 140      =5    ZW_AV_CONTENT_SEARCH_MD_GET_FRAME                            ZW_AvContentSearchMdGetFrame;\
 141      =5    ZW_AV_CONTENT_SEARCH_MD_REPORT_FRAME                         ZW_AvContentSearchMdReportFrame;\
 142      =5  /* Command class Av Renderer Status */\
 143      =5    ZW_AV_RENDERER_STATUS_GET_FRAME                              ZW_AvRendererStatusGetFrame;\
 144      =5    ZW_AV_RENDERER_STATUS_REPORT_FRAME                           ZW_AvRendererStatusReportFrame;\
 145      =5  /* Command class Av Tagging Md */\
 146      =5    ZW_AV_TAGGING_MD_GET_FRAME                                   ZW_AvTaggingMdGetFrame;\
 147      =5    ZW_AV_TAGGING_MD_REPORT_FRAME                                ZW_AvTaggingMdReportFrame;\
 148      =5  /* Command class Basic Tariff Info */\
 149      =5    ZW_BASIC_TARIFF_INFO_GET_FRAME                               ZW_BasicTariffInfoGetFrame;\
 150      =5    ZW_BASIC_TARIFF_INFO_REPORT_FRAME                            ZW_BasicTariffInfoReportFrame;\
 151      =5  /* Command class Basic Window Covering */\
 152      =5    ZW_BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_FRAME            ZW_BasicWindowCoveringStartLevelChangeFrame
             -;\
 153      =5    ZW_BASIC_WINDOW_COVERING_STOP_LEVEL_CHANGE_FRAME             ZW_BasicWindowCoveringStopLevelChangeFrame;
             -\
 154      =5  /* Command class Basic */\
 155      =5    ZW_BASIC_GET_FRAME                                           ZW_BasicGetFrame;\
 156      =5    ZW_BASIC_REPORT_FRAME                                        ZW_BasicReportFrame;\
 157      =5    ZW_BASIC_SET_FRAME                                           ZW_BasicSetFrame;\
 158      =5  /* Command class Battery */\
 159      =5    ZW_BATTERY_GET_FRAME                                         ZW_BatteryGetFrame;\
 160      =5    ZW_BATTERY_REPORT_FRAME                                      ZW_BatteryReportFrame;\
 161      =5  /* Command class Chimney Fan */\
 162      =5    ZW_CHIMNEY_FAN_ALARM_LOG_GET_FRAME                           ZW_ChimneyFanAlarmLogGetFrame;\
 163      =5    ZW_CHIMNEY_FAN_ALARM_LOG_REPORT_FRAME                        ZW_ChimneyFanAlarmLogReportFrame;\
 164      =5    ZW_CHIMNEY_FAN_ALARM_LOG_SET_FRAME                           ZW_ChimneyFanAlarmLogSetFrame;\
 165      =5    ZW_CHIMNEY_FAN_ALARM_STATUS_GET_FRAME                        ZW_ChimneyFanAlarmStatusGetFrame;\
 166      =5    ZW_CHIMNEY_FAN_ALARM_STATUS_REPORT_FRAME                     ZW_ChimneyFanAlarmStatusReportFrame;\
 167      =5    ZW_CHIMNEY_FAN_ALARM_STATUS_SET_FRAME                        ZW_ChimneyFanAlarmStatusSetFrame;\
 168      =5    ZW_CHIMNEY_FAN_ALARM_TEMP_GET_FRAME                          ZW_ChimneyFanAlarmTempGetFrame;\
 169      =5    ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_1BYTE_FRAME                 ZW_ChimneyFanAlarmTempReport1byteFrame;\
 170      =5    ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_2BYTE_FRAME                 ZW_ChimneyFanAlarmTempReport2byteFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 27  

 171      =5    ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_3BYTE_FRAME                 ZW_ChimneyFanAlarmTempReport3byteFrame;\
 172      =5    ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_4BYTE_FRAME                 ZW_ChimneyFanAlarmTempReport4byteFrame;\
 173      =5    ZW_CHIMNEY_FAN_ALARM_TEMP_SET_1BYTE_FRAME                    ZW_ChimneyFanAlarmTempSet1byteFrame;\
 174      =5    ZW_CHIMNEY_FAN_ALARM_TEMP_SET_2BYTE_FRAME                    ZW_ChimneyFanAlarmTempSet2byteFrame;\
 175      =5    ZW_CHIMNEY_FAN_ALARM_TEMP_SET_3BYTE_FRAME                    ZW_ChimneyFanAlarmTempSet3byteFrame;\
 176      =5    ZW_CHIMNEY_FAN_ALARM_TEMP_SET_4BYTE_FRAME                    ZW_ChimneyFanAlarmTempSet4byteFrame;\
 177      =5    ZW_CHIMNEY_FAN_BOOST_TIME_GET_FRAME                          ZW_ChimneyFanBoostTimeGetFrame;\
 178      =5    ZW_CHIMNEY_FAN_BOOST_TIME_REPORT_FRAME                       ZW_ChimneyFanBoostTimeReportFrame;\
 179      =5    ZW_CHIMNEY_FAN_BOOST_TIME_SET_FRAME                          ZW_ChimneyFanBoostTimeSetFrame;\
 180      =5    ZW_CHIMNEY_FAN_DEFAULT_SET_FRAME                             ZW_ChimneyFanDefaultSetFrame;\
 181      =5    ZW_CHIMNEY_FAN_MIN_SPEED_GET_FRAME                           ZW_ChimneyFanMinSpeedGetFrame;\
 182      =5    ZW_CHIMNEY_FAN_MIN_SPEED_REPORT_FRAME                        ZW_ChimneyFanMinSpeedReportFrame;\
 183      =5    ZW_CHIMNEY_FAN_MIN_SPEED_SET_FRAME                           ZW_ChimneyFanMinSpeedSetFrame;\
 184      =5    ZW_CHIMNEY_FAN_MODE_GET_FRAME                                ZW_ChimneyFanModeGetFrame;\
 185      =5    ZW_CHIMNEY_FAN_MODE_REPORT_FRAME                             ZW_ChimneyFanModeReportFrame;\
 186      =5    ZW_CHIMNEY_FAN_MODE_SET_FRAME                                ZW_ChimneyFanModeSetFrame;\
 187      =5    ZW_CHIMNEY_FAN_SETUP_GET_FRAME                               ZW_ChimneyFanSetupGetFrame;\
 188      =5    ZW_CHIMNEY_FAN_SETUP_REPORT_1BYTE_FRAME                      ZW_ChimneyFanSetupReport1byteFrame;\
 189      =5    ZW_CHIMNEY_FAN_SETUP_REPORT_2BYTE_FRAME                      ZW_ChimneyFanSetupReport2byteFrame;\
 190      =5    ZW_CHIMNEY_FAN_SETUP_REPORT_3BYTE_FRAME                      ZW_ChimneyFanSetupReport3byteFrame;\
 191      =5    ZW_CHIMNEY_FAN_SETUP_REPORT_4BYTE_FRAME                      ZW_ChimneyFanSetupReport4byteFrame;\
 192      =5    ZW_CHIMNEY_FAN_SETUP_SET_1BYTE_FRAME                         ZW_ChimneyFanSetupSet1byteFrame;\
 193      =5    ZW_CHIMNEY_FAN_SETUP_SET_2BYTE_FRAME                         ZW_ChimneyFanSetupSet2byteFrame;\
 194      =5    ZW_CHIMNEY_FAN_SETUP_SET_3BYTE_FRAME                         ZW_ChimneyFanSetupSet3byteFrame;\
 195      =5    ZW_CHIMNEY_FAN_SETUP_SET_4BYTE_FRAME                         ZW_ChimneyFanSetupSet4byteFrame;\
 196      =5    ZW_CHIMNEY_FAN_SPEED_GET_FRAME                               ZW_ChimneyFanSpeedGetFrame;\
 197      =5    ZW_CHIMNEY_FAN_SPEED_REPORT_FRAME                            ZW_ChimneyFanSpeedReportFrame;\
 198      =5    ZW_CHIMNEY_FAN_SPEED_SET_FRAME                               ZW_ChimneyFanSpeedSetFrame;\
 199      =5    ZW_CHIMNEY_FAN_START_TEMP_GET_FRAME                          ZW_ChimneyFanStartTempGetFrame;\
 200      =5    ZW_CHIMNEY_FAN_START_TEMP_REPORT_1BYTE_FRAME                 ZW_ChimneyFanStartTempReport1byteFrame;\
 201      =5    ZW_CHIMNEY_FAN_START_TEMP_REPORT_2BYTE_FRAME                 ZW_ChimneyFanStartTempReport2byteFrame;\
 202      =5    ZW_CHIMNEY_FAN_START_TEMP_REPORT_3BYTE_FRAME                 ZW_ChimneyFanStartTempReport3byteFrame;\
 203      =5    ZW_CHIMNEY_FAN_START_TEMP_REPORT_4BYTE_FRAME                 ZW_ChimneyFanStartTempReport4byteFrame;\
 204      =5    ZW_CHIMNEY_FAN_START_TEMP_SET_1BYTE_FRAME                    ZW_ChimneyFanStartTempSet1byteFrame;\
 205      =5    ZW_CHIMNEY_FAN_START_TEMP_SET_2BYTE_FRAME                    ZW_ChimneyFanStartTempSet2byteFrame;\
 206      =5    ZW_CHIMNEY_FAN_START_TEMP_SET_3BYTE_FRAME                    ZW_ChimneyFanStartTempSet3byteFrame;\
 207      =5    ZW_CHIMNEY_FAN_START_TEMP_SET_4BYTE_FRAME                    ZW_ChimneyFanStartTempSet4byteFrame;\
 208      =5    ZW_CHIMNEY_FAN_STATE_GET_FRAME                               ZW_ChimneyFanStateGetFrame;\
 209      =5    ZW_CHIMNEY_FAN_STATE_REPORT_FRAME                            ZW_ChimneyFanStateReportFrame;\
 210      =5    ZW_CHIMNEY_FAN_STATE_SET_FRAME                               ZW_ChimneyFanStateSetFrame;\
 211      =5    ZW_CHIMNEY_FAN_STATUS_GET_FRAME                              ZW_ChimneyFanStatusGetFrame;\
 212      =5    ZW_CHIMNEY_FAN_STATUS_REPORT_1BYTE_FRAME                     ZW_ChimneyFanStatusReport1byteFrame;\
 213      =5    ZW_CHIMNEY_FAN_STATUS_REPORT_2BYTE_FRAME                     ZW_ChimneyFanStatusReport2byteFrame;\
 214      =5    ZW_CHIMNEY_FAN_STATUS_REPORT_3BYTE_FRAME                     ZW_ChimneyFanStatusReport3byteFrame;\
 215      =5    ZW_CHIMNEY_FAN_STATUS_REPORT_4BYTE_FRAME                     ZW_ChimneyFanStatusReport4byteFrame;\
 216      =5    ZW_CHIMNEY_FAN_STOP_TEMP_GET_FRAME                           ZW_ChimneyFanStopTempGetFrame;\
 217      =5    ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_1BYTE_FRAME                  ZW_ChimneyFanStopTempReport1byteFrame;\
 218      =5    ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_2BYTE_FRAME                  ZW_ChimneyFanStopTempReport2byteFrame;\
 219      =5    ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_3BYTE_FRAME                  ZW_ChimneyFanStopTempReport3byteFrame;\
 220      =5    ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_4BYTE_FRAME                  ZW_ChimneyFanStopTempReport4byteFrame;\
 221      =5    ZW_CHIMNEY_FAN_STOP_TEMP_SET_1BYTE_FRAME                     ZW_ChimneyFanStopTempSet1byteFrame;\
 222      =5    ZW_CHIMNEY_FAN_STOP_TEMP_SET_2BYTE_FRAME                     ZW_ChimneyFanStopTempSet2byteFrame;\
 223      =5    ZW_CHIMNEY_FAN_STOP_TEMP_SET_3BYTE_FRAME                     ZW_ChimneyFanStopTempSet3byteFrame;\
 224      =5    ZW_CHIMNEY_FAN_STOP_TEMP_SET_4BYTE_FRAME                     ZW_ChimneyFanStopTempSet4byteFrame;\
 225      =5    ZW_CHIMNEY_FAN_STOP_TIME_GET_FRAME                           ZW_ChimneyFanStopTimeGetFrame;\
 226      =5    ZW_CHIMNEY_FAN_STOP_TIME_REPORT_FRAME                        ZW_ChimneyFanStopTimeReportFrame;\
 227      =5    ZW_CHIMNEY_FAN_STOP_TIME_SET_FRAME                           ZW_ChimneyFanStopTimeSetFrame;\
 228      =5  /* Command class Climate Control Schedule */\
 229      =5    ZW_SCHEDULE_CHANGED_GET_FRAME                                ZW_ScheduleChangedGetFrame;\
 230      =5    ZW_SCHEDULE_CHANGED_REPORT_FRAME                             ZW_ScheduleChangedReportFrame;\
 231      =5    ZW_SCHEDULE_GET_FRAME                                        ZW_ScheduleGetFrame;\
 232      =5    ZW_SCHEDULE_OVERRIDE_GET_FRAME                               ZW_ScheduleOverrideGetFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 28  

 233      =5    ZW_SCHEDULE_OVERRIDE_REPORT_FRAME                            ZW_ScheduleOverrideReportFrame;\
 234      =5    ZW_SCHEDULE_OVERRIDE_SET_FRAME                               ZW_ScheduleOverrideSetFrame;\
 235      =5    ZW_SCHEDULE_REPORT_FRAME                                     ZW_ScheduleReportFrame;\
 236      =5    ZW_SCHEDULE_SET_FRAME                                        ZW_ScheduleSetFrame;\
 237      =5  /* Command class Clock */\
 238      =5    ZW_CLOCK_GET_FRAME                                           ZW_ClockGetFrame;\
 239      =5    ZW_CLOCK_REPORT_FRAME                                        ZW_ClockReportFrame;\
 240      =5    ZW_CLOCK_SET_FRAME                                           ZW_ClockSetFrame;\
 241      =5  /* Command class Configuration */\
 242      =5    ZW_CONFIGURATION_GET_FRAME                                   ZW_ConfigurationGetFrame;\
 243      =5    ZW_CONFIGURATION_REPORT_1BYTE_FRAME                          ZW_ConfigurationReport1byteFrame;\
 244      =5    ZW_CONFIGURATION_REPORT_2BYTE_FRAME                          ZW_ConfigurationReport2byteFrame;\
 245      =5    ZW_CONFIGURATION_REPORT_3BYTE_FRAME                          ZW_ConfigurationReport3byteFrame;\
 246      =5    ZW_CONFIGURATION_REPORT_4BYTE_FRAME                          ZW_ConfigurationReport4byteFrame;\
 247      =5    ZW_CONFIGURATION_SET_1BYTE_FRAME                             ZW_ConfigurationSet1byteFrame;\
 248      =5    ZW_CONFIGURATION_SET_2BYTE_FRAME                             ZW_ConfigurationSet2byteFrame;\
 249      =5    ZW_CONFIGURATION_SET_3BYTE_FRAME                             ZW_ConfigurationSet3byteFrame;\
 250      =5    ZW_CONFIGURATION_SET_4BYTE_FRAME                             ZW_ConfigurationSet4byteFrame;\
 251      =5  /* Command class Configuration V2 */\
 252      =5    ZW_CONFIGURATION_BULK_GET_V2_FRAME                           ZW_ConfigurationBulkGetV2Frame;\
 253      =5    VG_CONFIGURATION_BULK_REPORT_1BYTE_V2_VG                     VG_ConfigurationBulkReport1byteV2VGroup;\
 254      =5    VG_CONFIGURATION_BULK_REPORT_2BYTE_V2_VG                     VG_ConfigurationBulkReport2byteV2VGroup;\
 255      =5    VG_CONFIGURATION_BULK_REPORT_3BYTE_V2_VG                     VG_ConfigurationBulkReport3byteV2VGroup;\
 256      =5    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG                     VG_ConfigurationBulkReport4byteV2VGroup;\
 257      =5    ZW_CONFIGURATION_BULK_REPORT_1BYTE_V2_FRAME                  ZW_ConfigurationBulkReport1byteV2Frame;\
 258      =5    ZW_CONFIGURATION_BULK_REPORT_2BYTE_V2_FRAME                  ZW_ConfigurationBulkReport2byteV2Frame;\
 259      =5    ZW_CONFIGURATION_BULK_REPORT_3BYTE_V2_FRAME                  ZW_ConfigurationBulkReport3byteV2Frame;\
 260      =5    ZW_CONFIGURATION_BULK_REPORT_4BYTE_V2_FRAME                  ZW_ConfigurationBulkReport4byteV2Frame;\
 261      =5    VG_CONFIGURATION_BULK_SET_1BYTE_V2_VG                        VG_ConfigurationBulkSet1byteV2VGroup;\
 262      =5    VG_CONFIGURATION_BULK_SET_2BYTE_V2_VG                        VG_ConfigurationBulkSet2byteV2VGroup;\
 263      =5    VG_CONFIGURATION_BULK_SET_3BYTE_V2_VG                        VG_ConfigurationBulkSet3byteV2VGroup;\
 264      =5    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG                        VG_ConfigurationBulkSet4byteV2VGroup;\
 265      =5    ZW_CONFIGURATION_BULK_SET_1BYTE_V2_FRAME                     ZW_ConfigurationBulkSet1byteV2Frame;\
 266      =5    ZW_CONFIGURATION_BULK_SET_2BYTE_V2_FRAME                     ZW_ConfigurationBulkSet2byteV2Frame;\
 267      =5    ZW_CONFIGURATION_BULK_SET_3BYTE_V2_FRAME                     ZW_ConfigurationBulkSet3byteV2Frame;\
 268      =5    ZW_CONFIGURATION_BULK_SET_4BYTE_V2_FRAME                     ZW_ConfigurationBulkSet4byteV2Frame;\
 269      =5    ZW_CONFIGURATION_GET_V2_FRAME                                ZW_ConfigurationGetV2Frame;\
 270      =5    ZW_CONFIGURATION_REPORT_1BYTE_V2_FRAME                       ZW_ConfigurationReport1byteV2Frame;\
 271      =5    ZW_CONFIGURATION_REPORT_2BYTE_V2_FRAME                       ZW_ConfigurationReport2byteV2Frame;\
 272      =5    ZW_CONFIGURATION_REPORT_3BYTE_V2_FRAME                       ZW_ConfigurationReport3byteV2Frame;\
 273      =5    ZW_CONFIGURATION_REPORT_4BYTE_V2_FRAME                       ZW_ConfigurationReport4byteV2Frame;\
 274      =5    ZW_CONFIGURATION_SET_1BYTE_V2_FRAME                          ZW_ConfigurationSet1byteV2Frame;\
 275      =5    ZW_CONFIGURATION_SET_2BYTE_V2_FRAME                          ZW_ConfigurationSet2byteV2Frame;\
 276      =5    ZW_CONFIGURATION_SET_3BYTE_V2_FRAME                          ZW_ConfigurationSet3byteV2Frame;\
 277      =5    ZW_CONFIGURATION_SET_4BYTE_V2_FRAME                          ZW_ConfigurationSet4byteV2Frame;\
 278      =5  /* Command class Controller Replication */\
 279      =5    ZW_CTRL_REPLICATION_TRANSFER_GROUP_FRAME                     ZW_CtrlReplicationTransferGroupFrame;\
 280      =5    ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_1BYTE_FRAME          ZW_CtrlReplicationTransferGroupName1byteFra
             -me;\
 281      =5    ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_2BYTE_FRAME          ZW_CtrlReplicationTransferGroupName2byteFra
             -me;\
 282      =5    ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_3BYTE_FRAME          ZW_CtrlReplicationTransferGroupName3byteFra
             -me;\
 283      =5    ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_4BYTE_FRAME          ZW_CtrlReplicationTransferGroupName4byteFra
             -me;\
 284      =5    ZW_CTRL_REPLICATION_TRANSFER_SCENE_FRAME                     ZW_CtrlReplicationTransferSceneFrame;\
 285      =5    ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_1BYTE_FRAME          ZW_CtrlReplicationTransferSceneName1byteFra
             -me;\
 286      =5    ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_2BYTE_FRAME          ZW_CtrlReplicationTransferSceneName2byteFra
             -me;\
 287      =5    ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_3BYTE_FRAME          ZW_CtrlReplicationTransferSceneName3byteFra
             -me;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 29  

 288      =5    ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_4BYTE_FRAME          ZW_CtrlReplicationTransferSceneName4byteFra
             -me;\
 289      =5  /* Command class Dcp Config */\
 290      =5    ZW_DCP_LIST_REMOVE_FRAME                                     ZW_DcpListRemoveFrame;\
 291      =5    VG_DCP_LIST_SET_VG                                           VG_DcpListSetVGroup;\
 292      =5    ZW_DCP_LIST_SET_1BYTE_FRAME                                  ZW_DcpListSet1byteFrame;\
 293      =5    ZW_DCP_LIST_SET_2BYTE_FRAME                                  ZW_DcpListSet2byteFrame;\
 294      =5    ZW_DCP_LIST_SET_3BYTE_FRAME                                  ZW_DcpListSet3byteFrame;\
 295      =5    ZW_DCP_LIST_SET_4BYTE_FRAME                                  ZW_DcpListSet4byteFrame;\
 296      =5    ZW_DCP_LIST_SUPPORTED_GET_FRAME                              ZW_DcpListSupportedGetFrame;\
 297      =5    ZW_DCP_LIST_SUPPORTED_REPORT_FRAME                           ZW_DcpListSupportedReportFrame;\
 298      =5  /* Command class Dcp Monitor */\
 299      =5    ZW_DCP_EVENT_STATUS_GET_FRAME                                ZW_DcpEventStatusGetFrame;\
 300      =5    ZW_DCP_EVENT_STATUS_REPORT_FRAME                             ZW_DcpEventStatusReportFrame;\
 301      =5    ZW_DCP_LIST_GET_FRAME                                        ZW_DcpListGetFrame;\
 302      =5    VG_DCP_LIST_REPORT_VG                                        VG_DcpListReportVGroup;\
 303      =5    ZW_DCP_LIST_REPORT_1BYTE_FRAME                               ZW_DcpListReport1byteFrame;\
 304      =5    ZW_DCP_LIST_REPORT_2BYTE_FRAME                               ZW_DcpListReport2byteFrame;\
 305      =5    ZW_DCP_LIST_REPORT_3BYTE_FRAME                               ZW_DcpListReport3byteFrame;\
 306      =5    ZW_DCP_LIST_REPORT_4BYTE_FRAME                               ZW_DcpListReport4byteFrame;\
 307      =5  /* Command class Door Lock Logging */\
 308      =5    ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_GET_FRAME             ZW_DoorLockLoggingRecordsSupportedGetFrame;
             -\
 309      =5    ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_REPORT_FRAME          ZW_DoorLockLoggingRecordsSupportedReportFra
             -me;\
 310      =5    ZW_RECORD_GET_FRAME                                          ZW_RecordGetFrame;\
 311      =5    ZW_RECORD_REPORT_1BYTE_FRAME                                 ZW_RecordReport1byteFrame;\
 312      =5    ZW_RECORD_REPORT_2BYTE_FRAME                                 ZW_RecordReport2byteFrame;\
 313      =5    ZW_RECORD_REPORT_3BYTE_FRAME                                 ZW_RecordReport3byteFrame;\
 314      =5    ZW_RECORD_REPORT_4BYTE_FRAME                                 ZW_RecordReport4byteFrame;\
 315      =5  /* Command class Door Lock */\
 316      =5    ZW_DOOR_LOCK_CONFIGURATION_GET_FRAME                         ZW_DoorLockConfigurationGetFrame;\
 317      =5    ZW_DOOR_LOCK_CONFIGURATION_REPORT_FRAME                      ZW_DoorLockConfigurationReportFrame;\
 318      =5    ZW_DOOR_LOCK_CONFIGURATION_SET_FRAME                         ZW_DoorLockConfigurationSetFrame;\
 319      =5    ZW_DOOR_LOCK_OPERATION_GET_FRAME                             ZW_DoorLockOperationGetFrame;\
 320      =5    ZW_DOOR_LOCK_OPERATION_REPORT_FRAME                          ZW_DoorLockOperationReportFrame;\
 321      =5    ZW_DOOR_LOCK_OPERATION_SET_FRAME                             ZW_DoorLockOperationSetFrame;\
 322      =5  /* Command class Door Lock V2 */\
 323      =5    ZW_DOOR_LOCK_CONFIGURATION_GET_V2_FRAME                      ZW_DoorLockConfigurationGetV2Frame;\
 324      =5    ZW_DOOR_LOCK_CONFIGURATION_REPORT_V2_FRAME                   ZW_DoorLockConfigurationReportV2Frame;\
 325      =5    ZW_DOOR_LOCK_CONFIGURATION_SET_V2_FRAME                      ZW_DoorLockConfigurationSetV2Frame;\
 326      =5    ZW_DOOR_LOCK_OPERATION_GET_V2_FRAME                          ZW_DoorLockOperationGetV2Frame;\
 327      =5    ZW_DOOR_LOCK_OPERATION_REPORT_V2_FRAME                       ZW_DoorLockOperationReportV2Frame;\
 328      =5    ZW_DOOR_LOCK_OPERATION_SET_V2_FRAME                          ZW_DoorLockOperationSetV2Frame;\
 329      =5  /* Command class Energy Production */\
 330      =5    ZW_ENERGY_PRODUCTION_GET_FRAME                               ZW_EnergyProductionGetFrame;\
 331      =5    ZW_ENERGY_PRODUCTION_REPORT_1BYTE_FRAME                      ZW_EnergyProductionReport1byteFrame;\
 332      =5    ZW_ENERGY_PRODUCTION_REPORT_2BYTE_FRAME                      ZW_EnergyProductionReport2byteFrame;\
 333      =5    ZW_ENERGY_PRODUCTION_REPORT_3BYTE_FRAME                      ZW_EnergyProductionReport3byteFrame;\
 334      =5    ZW_ENERGY_PRODUCTION_REPORT_4BYTE_FRAME                      ZW_EnergyProductionReport4byteFrame;\
 335      =5  /* Command class Firmware Update Md */\
 336      =5    ZW_FIRMWARE_MD_GET_FRAME                                     ZW_FirmwareMdGetFrame;\
 337      =5    ZW_FIRMWARE_MD_REPORT_FRAME                                  ZW_FirmwareMdReportFrame;\
 338      =5    ZW_FIRMWARE_UPDATE_MD_GET_FRAME                              ZW_FirmwareUpdateMdGetFrame;\
 339      =5    ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_FRAME                     ZW_FirmwareUpdateMdReport1byteFrame;\
 340      =5    ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_FRAME                     ZW_FirmwareUpdateMdReport2byteFrame;\
 341      =5    ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_FRAME                     ZW_FirmwareUpdateMdReport3byteFrame;\
 342      =5    ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_FRAME                     ZW_FirmwareUpdateMdReport4byteFrame;\
 343      =5    ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_FRAME                      ZW_FirmwareUpdateMdRequestGetFrame;\
 344      =5    ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_FRAME                   ZW_FirmwareUpdateMdRequestReportFrame;\
 345      =5    ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_FRAME                    ZW_FirmwareUpdateMdStatusReportFrame;\
 346      =5  /* Command class Firmware Update Md V2 */\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 30  

 347      =5    ZW_FIRMWARE_MD_GET_V2_FRAME                                  ZW_FirmwareMdGetV2Frame;\
 348      =5    ZW_FIRMWARE_MD_REPORT_V2_FRAME                               ZW_FirmwareMdReportV2Frame;\
 349      =5    ZW_FIRMWARE_UPDATE_MD_GET_V2_FRAME                           ZW_FirmwareUpdateMdGetV2Frame;\
 350      =5    ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V2_FRAME                  ZW_FirmwareUpdateMdReport1byteV2Frame;\
 351      =5    ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V2_FRAME                  ZW_FirmwareUpdateMdReport2byteV2Frame;\
 352      =5    ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V2_FRAME                  ZW_FirmwareUpdateMdReport3byteV2Frame;\
 353      =5    ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V2_FRAME                  ZW_FirmwareUpdateMdReport4byteV2Frame;\
 354      =5    ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V2_FRAME                   ZW_FirmwareUpdateMdRequestGetV2Frame;\
 355      =5    ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V2_FRAME                ZW_FirmwareUpdateMdRequestReportV2Frame;\
 356      =5    ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V2_FRAME                 ZW_FirmwareUpdateMdStatusReportV2Frame;\
 357      =5  /* Command class Geographic Location */\
 358      =5    ZW_GEOGRAPHIC_LOCATION_GET_FRAME                             ZW_GeographicLocationGetFrame;\
 359      =5    ZW_GEOGRAPHIC_LOCATION_REPORT_FRAME                          ZW_GeographicLocationReportFrame;\
 360      =5    ZW_GEOGRAPHIC_LOCATION_SET_FRAME                             ZW_GeographicLocationSetFrame;\
 361      =5  /* Command class Grouping Name */\
 362      =5    ZW_GROUPING_NAME_GET_FRAME                                   ZW_GroupingNameGetFrame;\
 363      =5    ZW_GROUPING_NAME_REPORT_FRAME                                ZW_GroupingNameReportFrame;\
 364      =5    ZW_GROUPING_NAME_SET_FRAME                                   ZW_GroupingNameSetFrame;\
 365      =5  /* Command class Hail */\
 366      =5    ZW_HAIL_FRAME                                                ZW_HailFrame;\
 367      =5  /* Command class Hrv Control */\
 368      =5    ZW_HRV_CONTROL_BYPASS_GET_FRAME                              ZW_HrvControlBypassGetFrame;\
 369      =5    ZW_HRV_CONTROL_BYPASS_REPORT_FRAME                           ZW_HrvControlBypassReportFrame;\
 370      =5    ZW_HRV_CONTROL_BYPASS_SET_FRAME                              ZW_HrvControlBypassSetFrame;\
 371      =5    ZW_HRV_CONTROL_MODE_GET_FRAME                                ZW_HrvControlModeGetFrame;\
 372      =5    ZW_HRV_CONTROL_MODE_REPORT_FRAME                             ZW_HrvControlModeReportFrame;\
 373      =5    ZW_HRV_CONTROL_MODE_SET_FRAME                                ZW_HrvControlModeSetFrame;\
 374      =5    ZW_HRV_CONTROL_MODE_SUPPORTED_GET_FRAME                      ZW_HrvControlModeSupportedGetFrame;\
 375      =5    ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_1BYTE_FRAME             ZW_HrvControlModeSupportedReport1byteFrame;
             -\
 376      =5    ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_2BYTE_FRAME             ZW_HrvControlModeSupportedReport2byteFrame;
             -\
 377      =5    ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_3BYTE_FRAME             ZW_HrvControlModeSupportedReport3byteFrame;
             -\
 378      =5    ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_4BYTE_FRAME             ZW_HrvControlModeSupportedReport4byteFrame;
             -\
 379      =5    ZW_HRV_CONTROL_VENTILATION_RATE_GET_FRAME                    ZW_HrvControlVentilationRateGetFrame;\
 380      =5    ZW_HRV_CONTROL_VENTILATION_RATE_REPORT_FRAME                 ZW_HrvControlVentilationRateReportFrame;\
 381      =5    ZW_HRV_CONTROL_VENTILATION_RATE_SET_FRAME                    ZW_HrvControlVentilationRateSetFrame;\
 382      =5  /* Command class Hrv Status */\
 383      =5    ZW_HRV_STATUS_GET_FRAME                                      ZW_HrvStatusGetFrame;\
 384      =5    ZW_HRV_STATUS_REPORT_1BYTE_FRAME                             ZW_HrvStatusReport1byteFrame;\
 385      =5    ZW_HRV_STATUS_REPORT_2BYTE_FRAME                             ZW_HrvStatusReport2byteFrame;\
 386      =5    ZW_HRV_STATUS_REPORT_3BYTE_FRAME                             ZW_HrvStatusReport3byteFrame;\
 387      =5    ZW_HRV_STATUS_REPORT_4BYTE_FRAME                             ZW_HrvStatusReport4byteFrame;\
 388      =5    ZW_HRV_STATUS_SUPPORTED_GET_FRAME                            ZW_HrvStatusSupportedGetFrame;\
 389      =5    ZW_HRV_STATUS_SUPPORTED_REPORT_1BYTE_FRAME                   ZW_HrvStatusSupportedReport1byteFrame;\
 390      =5    ZW_HRV_STATUS_SUPPORTED_REPORT_2BYTE_FRAME                   ZW_HrvStatusSupportedReport2byteFrame;\
 391      =5    ZW_HRV_STATUS_SUPPORTED_REPORT_3BYTE_FRAME                   ZW_HrvStatusSupportedReport3byteFrame;\
 392      =5    ZW_HRV_STATUS_SUPPORTED_REPORT_4BYTE_FRAME                   ZW_HrvStatusSupportedReport4byteFrame;\
 393      =5  /* Command class Indicator */\
 394      =5    ZW_INDICATOR_GET_FRAME                                       ZW_IndicatorGetFrame;\
 395      =5    ZW_INDICATOR_REPORT_FRAME                                    ZW_IndicatorReportFrame;\
 396      =5    ZW_INDICATOR_SET_FRAME                                       ZW_IndicatorSetFrame;\
 397      =5  /* Command class Ip Configuration */\
 398      =5    ZW_IP_CONFIGURATION_GET_FRAME                                ZW_IpConfigurationGetFrame;\
 399      =5    ZW_IP_CONFIGURATION_RELEASE_FRAME                            ZW_IpConfigurationReleaseFrame;\
 400      =5    ZW_IP_CONFIGURATION_RENEW_FRAME                              ZW_IpConfigurationRenewFrame;\
 401      =5    ZW_IP_CONFIGURATION_REPORT_FRAME                             ZW_IpConfigurationReportFrame;\
 402      =5    ZW_IP_CONFIGURATION_SET_FRAME                                ZW_IpConfigurationSetFrame;\
 403      =5  /* Command class Language */\
 404      =5    ZW_LANGUAGE_GET_FRAME                                        ZW_LanguageGetFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 31  

 405      =5    ZW_LANGUAGE_REPORT_FRAME                                     ZW_LanguageReportFrame;\
 406      =5    ZW_LANGUAGE_SET_FRAME                                        ZW_LanguageSetFrame;\
 407      =5  /* Command class Lock */\
 408      =5    ZW_LOCK_GET_FRAME                                            ZW_LockGetFrame;\
 409      =5    ZW_LOCK_REPORT_FRAME                                         ZW_LockReportFrame;\
 410      =5    ZW_LOCK_SET_FRAME                                            ZW_LockSetFrame;\
 411      =5  /* Command class Manufacturer Specific */\
 412      =5    ZW_MANUFACTURER_SPECIFIC_GET_FRAME                           ZW_ManufacturerSpecificGetFrame;\
 413      =5    ZW_MANUFACTURER_SPECIFIC_REPORT_FRAME                        ZW_ManufacturerSpecificReportFrame;\
 414      =5  /* Command class Manufacturer Specific V2 */\
 415      =5    ZW_MANUFACTURER_SPECIFIC_GET_V2_FRAME                        ZW_ManufacturerSpecificGetV2Frame;\
 416      =5    ZW_MANUFACTURER_SPECIFIC_REPORT_V2_FRAME                     ZW_ManufacturerSpecificReportV2Frame;\
 417      =5    ZW_DEVICE_SPECIFIC_GET_V2_FRAME                              ZW_DeviceSpecificGetV2Frame;\
 418      =5    ZW_DEVICE_SPECIFIC_REPORT_1BYTE_V2_FRAME                     ZW_DeviceSpecificReport1byteV2Frame;\
 419      =5    ZW_DEVICE_SPECIFIC_REPORT_2BYTE_V2_FRAME                     ZW_DeviceSpecificReport2byteV2Frame;\
 420      =5    ZW_DEVICE_SPECIFIC_REPORT_3BYTE_V2_FRAME                     ZW_DeviceSpecificReport3byteV2Frame;\
 421      =5    ZW_DEVICE_SPECIFIC_REPORT_4BYTE_V2_FRAME                     ZW_DeviceSpecificReport4byteV2Frame;\
 422      =5  /* Command class Meter Pulse */\
 423      =5    ZW_METER_PULSE_GET_FRAME                                     ZW_MeterPulseGetFrame;\
 424      =5    ZW_METER_PULSE_REPORT_FRAME                                  ZW_MeterPulseReportFrame;\
 425      =5  /* Command class Meter Tbl Config */\
 426      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_1BYTE_FRAME              ZW_MeterTblTablePointAdmNoSet1byteFrame;\
 427      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_2BYTE_FRAME              ZW_MeterTblTablePointAdmNoSet2byteFrame;\
 428      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_3BYTE_FRAME              ZW_MeterTblTablePointAdmNoSet3byteFrame;\
 429      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_4BYTE_FRAME              ZW_MeterTblTablePointAdmNoSet4byteFrame;\
 430      =5  /* Command class Meter Tbl Monitor */\
 431      =5    VG_METER_TBL_STATUS_REPORT_VG                                VG_MeterTblStatusReportVGroup;\
 432      =5    ZW_METER_TBL_STATUS_REPORT_1BYTE_FRAME                       ZW_MeterTblStatusReport1byteFrame;\
 433      =5    ZW_METER_TBL_STATUS_REPORT_2BYTE_FRAME                       ZW_MeterTblStatusReport2byteFrame;\
 434      =5    ZW_METER_TBL_STATUS_REPORT_3BYTE_FRAME                       ZW_MeterTblStatusReport3byteFrame;\
 435      =5    ZW_METER_TBL_STATUS_REPORT_4BYTE_FRAME                       ZW_MeterTblStatusReport4byteFrame;\
 436      =5    ZW_METER_TBL_STATUS_DATE_GET_FRAME                           ZW_MeterTblStatusDateGetFrame;\
 437      =5    ZW_METER_TBL_STATUS_DEPTH_GET_FRAME                          ZW_MeterTblStatusDepthGetFrame;\
 438      =5    ZW_METER_TBL_STATUS_SUPPORTED_GET_FRAME                      ZW_MeterTblStatusSupportedGetFrame;\
 439      =5    ZW_METER_TBL_STATUS_SUPPORTED_REPORT_FRAME                   ZW_MeterTblStatusSupportedReportFrame;\
 440      =5    ZW_METER_TBL_CURRENT_DATA_GET_FRAME                          ZW_MeterTblCurrentDataGetFrame;\
 441      =5    VG_METER_TBL_CURRENT_DATA_REPORT_VG                          VG_MeterTblCurrentDataReportVGroup;\
 442      =5    ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME                 ZW_MeterTblCurrentDataReport1byteFrame;\
 443      =5    ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME                 ZW_MeterTblCurrentDataReport2byteFrame;\
 444      =5    ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME                 ZW_MeterTblCurrentDataReport3byteFrame;\
 445      =5    ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME                 ZW_MeterTblCurrentDataReport4byteFrame;\
 446      =5    ZW_METER_TBL_HISTORICAL_DATA_GET_FRAME                       ZW_MeterTblHistoricalDataGetFrame;\
 447      =5    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG                       VG_MeterTblHistoricalDataReportVGroup;\
 448      =5    ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME              ZW_MeterTblHistoricalDataReport1byteFrame;\
 449      =5  
 450      =5  #define ZW_FRAME_COLLECTION_MACRO1\
 451      =5    ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME              ZW_MeterTblHistoricalDataReport2byteFrame;\
 452      =5    ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME              ZW_MeterTblHistoricalDataReport3byteFrame;\
 453      =5    ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME              ZW_MeterTblHistoricalDataReport4byteFrame;\
 454      =5    ZW_METER_TBL_REPORT_FRAME                                    ZW_MeterTblReportFrame;\
 455      =5    ZW_METER_TBL_TABLE_CAPABILITY_GET_FRAME                      ZW_MeterTblTableCapabilityGetFrame;\
 456      =5    ZW_METER_TBL_TABLE_ID_GET_FRAME                              ZW_MeterTblTableIdGetFrame;\
 457      =5    ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_FRAME                     ZW_MeterTblTableIdReport1byteFrame;\
 458      =5    ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_FRAME                     ZW_MeterTblTableIdReport2byteFrame;\
 459      =5    ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_FRAME                     ZW_MeterTblTableIdReport3byteFrame;\
 460      =5    ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_FRAME                     ZW_MeterTblTableIdReport4byteFrame;\
 461      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_FRAME                    ZW_MeterTblTablePointAdmNoGetFrame;\
 462      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_FRAME           ZW_MeterTblTablePointAdmNoReport1byteFrame;
             -\
 463      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_FRAME           ZW_MeterTblTablePointAdmNoReport2byteFrame;
             -\
 464      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_FRAME           ZW_MeterTblTablePointAdmNoReport3byteFrame;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 32  

             -\
 465      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_FRAME           ZW_MeterTblTablePointAdmNoReport4byteFrame;
             -\
 466      =5  /* Command class Meter Tbl Monitor V2 */\
 467      =5    VG_METER_TBL_STATUS_REPORT_V2_VG                             VG_MeterTblStatusReportV2VGroup;\
 468      =5    ZW_METER_TBL_STATUS_REPORT_1BYTE_V2_FRAME                    ZW_MeterTblStatusReport1byteV2Frame;\
 469      =5    ZW_METER_TBL_STATUS_REPORT_2BYTE_V2_FRAME                    ZW_MeterTblStatusReport2byteV2Frame;\
 470      =5    ZW_METER_TBL_STATUS_REPORT_3BYTE_V2_FRAME                    ZW_MeterTblStatusReport3byteV2Frame;\
 471      =5    ZW_METER_TBL_STATUS_REPORT_4BYTE_V2_FRAME                    ZW_MeterTblStatusReport4byteV2Frame;\
 472      =5    ZW_METER_TBL_STATUS_DATE_GET_V2_FRAME                        ZW_MeterTblStatusDateGetV2Frame;\
 473      =5    ZW_METER_TBL_STATUS_DEPTH_GET_V2_FRAME                       ZW_MeterTblStatusDepthGetV2Frame;\
 474      =5    ZW_METER_TBL_STATUS_SUPPORTED_GET_V2_FRAME                   ZW_MeterTblStatusSupportedGetV2Frame;\
 475      =5    ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V2_FRAME                ZW_MeterTblStatusSupportedReportV2Frame;\
 476      =5    ZW_METER_TBL_CURRENT_DATA_GET_V2_FRAME                       ZW_MeterTblCurrentDataGetV2Frame;\
 477      =5    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG                       VG_MeterTblCurrentDataReportV2VGroup;\
 478      =5    ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_V2_FRAME              ZW_MeterTblCurrentDataReport1byteV2Frame;\
 479      =5    ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_V2_FRAME              ZW_MeterTblCurrentDataReport2byteV2Frame;\
 480      =5    ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_V2_FRAME              ZW_MeterTblCurrentDataReport3byteV2Frame;\
 481      =5    ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_V2_FRAME              ZW_MeterTblCurrentDataReport4byteV2Frame;\
 482      =5    ZW_METER_TBL_HISTORICAL_DATA_GET_V2_FRAME                    ZW_MeterTblHistoricalDataGetV2Frame;\
 483      =5    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG                    VG_MeterTblHistoricalDataReportV2VGroup;\
 484      =5    ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_V2_FRAME           ZW_MeterTblHistoricalDataReport1byteV2Frame
             -;\
 485      =5    ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_V2_FRAME           ZW_MeterTblHistoricalDataReport2byteV2Frame
             -;\
 486      =5    ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_V2_FRAME           ZW_MeterTblHistoricalDataReport3byteV2Frame
             -;\
 487      =5    ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_V2_FRAME           ZW_MeterTblHistoricalDataReport4byteV2Frame
             -;\
 488      =5    ZW_METER_TBL_REPORT_V2_FRAME                                 ZW_MeterTblReportV2Frame;\
 489      =5    ZW_METER_TBL_TABLE_CAPABILITY_GET_V2_FRAME                   ZW_MeterTblTableCapabilityGetV2Frame;\
 490      =5    ZW_METER_TBL_TABLE_ID_GET_V2_FRAME                           ZW_MeterTblTableIdGetV2Frame;\
 491      =5    ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V2_FRAME                  ZW_MeterTblTableIdReport1byteV2Frame;\
 492      =5    ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V2_FRAME                  ZW_MeterTblTableIdReport2byteV2Frame;\
 493      =5    ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V2_FRAME                  ZW_MeterTblTableIdReport3byteV2Frame;\
 494      =5    ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V2_FRAME                  ZW_MeterTblTableIdReport4byteV2Frame;\
 495      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V2_FRAME                 ZW_MeterTblTablePointAdmNoGetV2Frame;\
 496      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_V2_FRAME        ZW_MeterTblTablePointAdmNoReport1byteV2Fram
             -e;\
 497      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_V2_FRAME        ZW_MeterTblTablePointAdmNoReport2byteV2Fram
             -e;\
 498      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_V2_FRAME        ZW_MeterTblTablePointAdmNoReport3byteV2Fram
             -e;\
 499      =5    ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_V2_FRAME        ZW_MeterTblTablePointAdmNoReport4byteV2Fram
             -e;\
 500      =5  /* Command class Meter Tbl Push */\
 501      =5    ZW_METER_TBL_PUSH_CONFIGURATION_GET_FRAME                    ZW_MeterTblPushConfigurationGetFrame;\
 502      =5    ZW_METER_TBL_PUSH_CONFIGURATION_REPORT_FRAME                 ZW_MeterTblPushConfigurationReportFrame;\
 503      =5    ZW_METER_TBL_PUSH_CONFIGURATION_SET_FRAME                    ZW_MeterTblPushConfigurationSetFrame;\
 504      =5  /* Command class Meter */\
 505      =5    ZW_METER_GET_FRAME                                           ZW_MeterGetFrame;\
 506      =5    ZW_METER_REPORT_1BYTE_FRAME                                  ZW_MeterReport1byteFrame;\
 507      =5    ZW_METER_REPORT_2BYTE_FRAME                                  ZW_MeterReport2byteFrame;\
 508      =5    ZW_METER_REPORT_3BYTE_FRAME                                  ZW_MeterReport3byteFrame;\
 509      =5    ZW_METER_REPORT_4BYTE_FRAME                                  ZW_MeterReport4byteFrame;\
 510      =5  /* Command class Meter V2 */\
 511      =5    ZW_METER_GET_V2_FRAME                                        ZW_MeterGetV2Frame;\
 512      =5    ZW_METER_REPORT_1BYTE_V2_FRAME                               ZW_MeterReport1byteV2Frame;\
 513      =5    ZW_METER_REPORT_2BYTE_V2_FRAME                               ZW_MeterReport2byteV2Frame;\
 514      =5    ZW_METER_REPORT_3BYTE_V2_FRAME                               ZW_MeterReport3byteV2Frame;\
 515      =5    ZW_METER_REPORT_4BYTE_V2_FRAME                               ZW_MeterReport4byteV2Frame;\
 516      =5    ZW_METER_RESET_V2_FRAME                                      ZW_MeterResetV2Frame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 33  

 517      =5    ZW_METER_SUPPORTED_GET_V2_FRAME                              ZW_MeterSupportedGetV2Frame;\
 518      =5    ZW_METER_SUPPORTED_REPORT_V2_FRAME                           ZW_MeterSupportedReportV2Frame;\
 519      =5  /* Command class Meter V3 */\
 520      =5    ZW_METER_GET_V3_FRAME                                        ZW_MeterGetV3Frame;\
 521      =5    ZW_METER_REPORT_1BYTE_V3_FRAME                               ZW_MeterReport1byteV3Frame;\
 522      =5    ZW_METER_REPORT_2BYTE_V3_FRAME                               ZW_MeterReport2byteV3Frame;\
 523      =5    ZW_METER_REPORT_3BYTE_V3_FRAME                               ZW_MeterReport3byteV3Frame;\
 524      =5    ZW_METER_REPORT_4BYTE_V3_FRAME                               ZW_MeterReport4byteV3Frame;\
 525      =5    ZW_METER_RESET_V3_FRAME                                      ZW_MeterResetV3Frame;\
 526      =5    ZW_METER_SUPPORTED_GET_V3_FRAME                              ZW_MeterSupportedGetV3Frame;\
 527      =5    ZW_METER_SUPPORTED_REPORT_V3_FRAME                           ZW_MeterSupportedReportV3Frame;\
 528      =5  /* Command class Mtp Window Covering */\
 529      =5    ZW_MOVE_TO_POSITION_GET_FRAME                                ZW_MoveToPositionGetFrame;\
 530      =5    ZW_MOVE_TO_POSITION_REPORT_FRAME                             ZW_MoveToPositionReportFrame;\
 531      =5    ZW_MOVE_TO_POSITION_SET_FRAME                                ZW_MoveToPositionSetFrame;\
 532      =5  /* Command class Multi Channel Association V2 */\
 533      =5    ZW_MULTI_CHANNEL_ASSOCIATION_GET_V2_FRAME                    ZW_MultiChannelAssociationGetV2Frame;\
 534      =5    ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V2_FRAME          ZW_MultiChannelAssociationGroupingsGetV2Fra
             -me;\
 535      =5    ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME       ZW_MultiChannelAssociationGroupingsReportV2
             -Frame;\
 536      =5    ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V2_FRAME           ZW_MultiChannelAssociationRemove1byteV2Fram
             -e;\
 537      =5    ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V2_FRAME           ZW_MultiChannelAssociationRemove2byteV2Fram
             -e;\
 538      =5    ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V2_FRAME           ZW_MultiChannelAssociationRemove3byteV2Fram
             -e;\
 539      =5    ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V2_FRAME           ZW_MultiChannelAssociationRemove4byteV2Fram
             -e;\
 540      =5    ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V2_FRAME           ZW_MultiChannelAssociationReport1byteV2Fram
             -e;\
 541      =5    ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V2_FRAME           ZW_MultiChannelAssociationReport2byteV2Fram
             -e;\
 542      =5    ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V2_FRAME           ZW_MultiChannelAssociationReport3byteV2Fram
             -e;\
 543      =5    ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V2_FRAME           ZW_MultiChannelAssociationReport4byteV2Fram
             -e;\
 544      =5    ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V2_FRAME              ZW_MultiChannelAssociationSet1byteV2Frame;\
 545      =5    ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V2_FRAME              ZW_MultiChannelAssociationSet2byteV2Frame;\
 546      =5    ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V2_FRAME              ZW_MultiChannelAssociationSet3byteV2Frame;\
 547      =5    ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V2_FRAME              ZW_MultiChannelAssociationSet4byteV2Frame;\
 548      =5  /* Command class Multi Channel V2 */\
 549      =5    ZW_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAME                     ZW_MultiChannelCapabilityGetV2Frame;\
 550      =5    ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V2_FRAME            ZW_MultiChannelCapabilityReport1byteV2Frame
             -;\
 551      =5    ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V2_FRAME            ZW_MultiChannelCapabilityReport2byteV2Frame
             -;\
 552      =5    ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V2_FRAME            ZW_MultiChannelCapabilityReport3byteV2Frame
             -;\
 553      =5    ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V2_FRAME            ZW_MultiChannelCapabilityReport4byteV2Frame
             -;\
 554      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_V2_FRAME                     ZW_MultiChannelEndPointFindV2Frame;\
 555      =5    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG                 VG_MultiChannelEndPointFindReportV2VGroup;\
 556      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V2_FRAME        ZW_MultiChannelEndPointFindReport1byteV2Fra
             -me;\
 557      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V2_FRAME        ZW_MultiChannelEndPointFindReport2byteV2Fra
             -me;\
 558      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V2_FRAME        ZW_MultiChannelEndPointFindReport3byteV2Fra
             -me;\
 559      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V2_FRAME        ZW_MultiChannelEndPointFindReport4byteV2Fra
             -me;\
 560      =5    ZW_MULTI_CHANNEL_END_POINT_GET_V2_FRAME                      ZW_MultiChannelEndPointGetV2Frame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 34  

 561      =5    ZW_MULTI_CHANNEL_END_POINT_REPORT_V2_FRAME                   ZW_MultiChannelEndPointReportV2Frame;\
 562      =5    ZW_MULTI_INSTANCE_GET_V2_FRAME                               ZW_MultiInstanceGetV2Frame;\
 563      =5    ZW_MULTI_INSTANCE_REPORT_V2_FRAME                            ZW_MultiInstanceReportV2Frame;\
 564      =5  /* Command class Multi Channel V3 */\
 565      =5    ZW_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAME                     ZW_MultiChannelCapabilityGetV3Frame;\
 566      =5    ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V3_FRAME            ZW_MultiChannelCapabilityReport1byteV3Frame
             -;\
 567      =5    ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V3_FRAME            ZW_MultiChannelCapabilityReport2byteV3Frame
             -;\
 568      =5    ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V3_FRAME            ZW_MultiChannelCapabilityReport3byteV3Frame
             -;\
 569      =5    ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V3_FRAME            ZW_MultiChannelCapabilityReport4byteV3Frame
             -;\
 570      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_V3_FRAME                     ZW_MultiChannelEndPointFindV3Frame;\
 571      =5    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG                 VG_MultiChannelEndPointFindReportV3VGroup;\
 572      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V3_FRAME        ZW_MultiChannelEndPointFindReport1byteV3Fra
             -me;\
 573      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V3_FRAME        ZW_MultiChannelEndPointFindReport2byteV3Fra
             -me;\
 574      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V3_FRAME        ZW_MultiChannelEndPointFindReport3byteV3Fra
             -me;\
 575      =5    ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V3_FRAME        ZW_MultiChannelEndPointFindReport4byteV3Fra
             -me;\
 576      =5    ZW_MULTI_CHANNEL_END_POINT_GET_V3_FRAME                      ZW_MultiChannelEndPointGetV3Frame;\
 577      =5    ZW_MULTI_CHANNEL_END_POINT_REPORT_V3_FRAME                   ZW_MultiChannelEndPointReportV3Frame;\
 578      =5    ZW_MULTI_INSTANCE_GET_V3_FRAME                               ZW_MultiInstanceGetV3Frame;\
 579      =5    ZW_MULTI_INSTANCE_REPORT_V3_FRAME                            ZW_MultiInstanceReportV3Frame;\
 580      =5  /* Command class Multi Instance Association */\
 581      =5    ZW_MULTI_INSTANCE_ASSOCIATION_GET_FRAME                      ZW_MultiInstanceAssociationGetFrame;\
 582      =5    ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_GET_FRAME            ZW_MultiInstanceAssociationGroupingsGetFram
             -e;\
 583      =5    ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_REPORT_FRAME         ZW_MultiInstanceAssociationGroupingsReportF
             -rame;\
 584      =5    ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_1BYTE_FRAME             ZW_MultiInstanceAssociationRemove1byteFrame
             -;\
 585      =5    ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_2BYTE_FRAME             ZW_MultiInstanceAssociationRemove2byteFrame
             -;\
 586      =5    ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_3BYTE_FRAME             ZW_MultiInstanceAssociationRemove3byteFrame
             -;\
 587      =5    ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_4BYTE_FRAME             ZW_MultiInstanceAssociationRemove4byteFrame
             -;\
 588      =5    ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_1BYTE_FRAME             ZW_MultiInstanceAssociationReport1byteFrame
             -;\
 589      =5    ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_2BYTE_FRAME             ZW_MultiInstanceAssociationReport2byteFrame
             -;\
 590      =5    ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_3BYTE_FRAME             ZW_MultiInstanceAssociationReport3byteFrame
             -;\
 591      =5    ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_4BYTE_FRAME             ZW_MultiInstanceAssociationReport4byteFrame
             -;\
 592      =5    ZW_MULTI_INSTANCE_ASSOCIATION_SET_1BYTE_FRAME                ZW_MultiInstanceAssociationSet1byteFrame;\
 593      =5    ZW_MULTI_INSTANCE_ASSOCIATION_SET_2BYTE_FRAME                ZW_MultiInstanceAssociationSet2byteFrame;\
 594      =5    ZW_MULTI_INSTANCE_ASSOCIATION_SET_3BYTE_FRAME                ZW_MultiInstanceAssociationSet3byteFrame;\
 595      =5    ZW_MULTI_INSTANCE_ASSOCIATION_SET_4BYTE_FRAME                ZW_MultiInstanceAssociationSet4byteFrame;\
 596      =5  /* Command class Multi Instance */\
 597      =5    ZW_MULTI_INSTANCE_GET_FRAME                                  ZW_MultiInstanceGetFrame;\
 598      =5    ZW_MULTI_INSTANCE_REPORT_FRAME                               ZW_MultiInstanceReportFrame;\
 599      =5  /* Command class Network Management Proxy */\
 600      =5    ZW_NODE_INFO_CACHED_GET_FRAME                                ZW_NodeInfoCachedGetFrame;\
 601      =5    ZW_NODE_INFO_CACHED_REPORT_1BYTE_FRAME                       ZW_NodeInfoCachedReport1byteFrame;\
 602      =5    ZW_NODE_INFO_CACHED_REPORT_2BYTE_FRAME                       ZW_NodeInfoCachedReport2byteFrame;\
 603      =5    ZW_NODE_INFO_CACHED_REPORT_3BYTE_FRAME                       ZW_NodeInfoCachedReport3byteFrame;\
 604      =5    ZW_NODE_INFO_CACHED_REPORT_4BYTE_FRAME                       ZW_NodeInfoCachedReport4byteFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 35  

 605      =5    ZW_NODE_LIST_GET_FRAME                                       ZW_NodeListGetFrame;\
 606      =5    ZW_NODE_LIST_REPORT_1BYTE_FRAME                              ZW_NodeListReport1byteFrame;\
 607      =5    ZW_NODE_LIST_REPORT_2BYTE_FRAME                              ZW_NodeListReport2byteFrame;\
 608      =5    ZW_NODE_LIST_REPORT_3BYTE_FRAME                              ZW_NodeListReport3byteFrame;\
 609      =5    ZW_NODE_LIST_REPORT_4BYTE_FRAME                              ZW_NodeListReport4byteFrame;\
 610      =5  /* Command class Network Management Basic */\
 611      =5    ZW_LEARN_MODE_SET_FRAME                                      ZW_LearnModeSetFrame;\
 612      =5    ZW_LEARN_MODE_SET_STATUS_FRAME                               ZW_LearnModeSetStatusFrame;\
 613      =5    ZW_NODE_INFORMATION_SEND_FRAME                               ZW_NodeInformationSendFrame;\
 614      =5    ZW_NETWORK_UPDATE_REQUEST_FRAME                              ZW_NetworkUpdateRequestFrame;\
 615      =5    ZW_NETWORK_UPDATE_REQUEST_STATUS_FRAME                       ZW_NetworkUpdateRequestStatusFrame;\
 616      =5    ZW_DEFAULT_SET_FRAME                                         ZW_DefaultSetFrame;\
 617      =5    ZW_DEFAULT_SET_COMPLETE_FRAME                                ZW_DefaultSetCompleteFrame;\
 618      =5  /* Command class Network Management Inclusion */\
 619      =5    ZW_FAILED_NODE_REMOVE_FRAME                                  ZW_FailedNodeRemoveFrame;\
 620      =5    ZW_FAILED_NODE_REMOVE_STATUS_FRAME                           ZW_FailedNodeRemoveStatusFrame;\
 621      =5    ZW_NODE_ADD_FRAME                                            ZW_NodeAddFrame;\
 622      =5    ZW_NODE_ADD_STATUS_1BYTE_FRAME                               ZW_NodeAddStatus1byteFrame;\
 623      =5    ZW_NODE_ADD_STATUS_2BYTE_FRAME                               ZW_NodeAddStatus2byteFrame;\
 624      =5    ZW_NODE_ADD_STATUS_3BYTE_FRAME                               ZW_NodeAddStatus3byteFrame;\
 625      =5    ZW_NODE_ADD_STATUS_4BYTE_FRAME                               ZW_NodeAddStatus4byteFrame;\
 626      =5    ZW_NODE_REMOVE_FRAME                                         ZW_NodeRemoveFrame;\
 627      =5    ZW_NODE_REMOVE_STATUS_FRAME                                  ZW_NodeRemoveStatusFrame;\
 628      =5    ZW_FAILED_NODE_REPLACE_FRAME                                 ZW_FailedNodeReplaceFrame;\
 629      =5    ZW_FAILED_NODE_REPLACE_STATUS_FRAME                          ZW_FailedNodeReplaceStatusFrame;\
 630      =5    ZW_NODE_NEIGHBOR_UPDATE_REQUEST_FRAME                        ZW_NodeNeighborUpdateRequestFrame;\
 631      =5    ZW_NODE_NEIGHBOR_UPDATE_STATUS_FRAME                         ZW_NodeNeighborUpdateStatusFrame;\
 632      =5    ZW_RETURN_ROUTE_ASSIGN_FRAME                                 ZW_ReturnRouteAssignFrame;\
 633      =5    ZW_RETURN_ROUTE_ASSIGN_COMPLETE_FRAME                        ZW_ReturnRouteAssignCompleteFrame;\
 634      =5    ZW_RETURN_ROUTE_DELETE_FRAME                                 ZW_ReturnRouteDeleteFrame;\
 635      =5    ZW_RETURN_ROUTE_DELETE_COMPLETE_FRAME                        ZW_ReturnRouteDeleteCompleteFrame;\
 636      =5  /* Command class Node Naming */\
 637      =5    ZW_NODE_NAMING_NODE_LOCATION_REPORT_FRAME                    ZW_NodeNamingNodeLocationReportFrame;\
 638      =5    ZW_NODE_NAMING_NODE_LOCATION_SET_FRAME                       ZW_NodeNamingNodeLocationSetFrame;\
 639      =5    ZW_NODE_NAMING_NODE_LOCATION_GET_FRAME                       ZW_NodeNamingNodeLocationGetFrame;\
 640      =5    ZW_NODE_NAMING_NODE_NAME_GET_FRAME                           ZW_NodeNamingNodeNameGetFrame;\
 641      =5    ZW_NODE_NAMING_NODE_NAME_REPORT_FRAME                        ZW_NodeNamingNodeNameReportFrame;\
 642      =5    ZW_NODE_NAMING_NODE_NAME_SET_FRAME                           ZW_NodeNamingNodeNameSetFrame;\
 643      =5  /* Command class Powerlevel */\
 644      =5    ZW_POWERLEVEL_GET_FRAME                                      ZW_PowerlevelGetFrame;\
 645      =5    ZW_POWERLEVEL_REPORT_FRAME                                   ZW_PowerlevelReportFrame;\
 646      =5    ZW_POWERLEVEL_SET_FRAME                                      ZW_PowerlevelSetFrame;\
 647      =5    ZW_POWERLEVEL_TEST_NODE_GET_FRAME                            ZW_PowerlevelTestNodeGetFrame;\
 648      =5    ZW_POWERLEVEL_TEST_NODE_REPORT_FRAME                         ZW_PowerlevelTestNodeReportFrame;\
 649      =5    ZW_POWERLEVEL_TEST_NODE_SET_FRAME                            ZW_PowerlevelTestNodeSetFrame;\
 650      =5  /* Command class Prepayment Encapsulation */\
 651      =5    ZW_CMD_ENCAPSULATION_1BYTE_FRAME                             ZW_CmdEncapsulation1byteFrame;\
 652      =5    ZW_CMD_ENCAPSULATION_2BYTE_FRAME                             ZW_CmdEncapsulation2byteFrame;\
 653      =5    ZW_CMD_ENCAPSULATION_3BYTE_FRAME                             ZW_CmdEncapsulation3byteFrame;\
 654      =5    ZW_CMD_ENCAPSULATION_4BYTE_FRAME                             ZW_CmdEncapsulation4byteFrame;\
 655      =5  /* Command class Prepayment */\
 656      =5    ZW_PREPAYMENT_BALANCE_GET_FRAME                              ZW_PrepaymentBalanceGetFrame;\
 657      =5    ZW_PREPAYMENT_BALANCE_REPORT_FRAME                           ZW_PrepaymentBalanceReportFrame;\
 658      =5    ZW_PREPAYMENT_SUPPORTED_GET_FRAME                            ZW_PrepaymentSupportedGetFrame;\
 659      =5    ZW_PREPAYMENT_SUPPORTED_REPORT_FRAME                         ZW_PrepaymentSupportedReportFrame;\
 660      =5  /* Command class Proprietary */\
 661      =5    ZW_PROPRIETARY_GET_1BYTE_FRAME                               ZW_ProprietaryGet1byteFrame;\
 662      =5    ZW_PROPRIETARY_GET_2BYTE_FRAME                               ZW_ProprietaryGet2byteFrame;\
 663      =5    ZW_PROPRIETARY_GET_3BYTE_FRAME                               ZW_ProprietaryGet3byteFrame;\
 664      =5    ZW_PROPRIETARY_GET_4BYTE_FRAME                               ZW_ProprietaryGet4byteFrame;\
 665      =5    ZW_PROPRIETARY_REPORT_1BYTE_FRAME                            ZW_ProprietaryReport1byteFrame;\
 666      =5    ZW_PROPRIETARY_REPORT_2BYTE_FRAME                            ZW_ProprietaryReport2byteFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 36  

 667      =5    ZW_PROPRIETARY_REPORT_3BYTE_FRAME                            ZW_ProprietaryReport3byteFrame;\
 668      =5    ZW_PROPRIETARY_REPORT_4BYTE_FRAME                            ZW_ProprietaryReport4byteFrame;\
 669      =5    ZW_PROPRIETARY_SET_1BYTE_FRAME                               ZW_ProprietarySet1byteFrame;\
 670      =5    ZW_PROPRIETARY_SET_2BYTE_FRAME                               ZW_ProprietarySet2byteFrame;\
 671      =5    ZW_PROPRIETARY_SET_3BYTE_FRAME                               ZW_ProprietarySet3byteFrame;\
 672      =5    ZW_PROPRIETARY_SET_4BYTE_FRAME                               ZW_ProprietarySet4byteFrame;\
 673      =5  /* Command class Protection */\
 674      =5    ZW_PROTECTION_GET_FRAME                                      ZW_ProtectionGetFrame;\
 675      =5    ZW_PROTECTION_REPORT_FRAME                                   ZW_ProtectionReportFrame;\
 676      =5    ZW_PROTECTION_SET_FRAME                                      ZW_ProtectionSetFrame;\
 677      =5  /* Command class Protection V2 */\
 678      =5    ZW_PROTECTION_EC_GET_V2_FRAME                                ZW_ProtectionEcGetV2Frame;\
 679      =5    ZW_PROTECTION_EC_REPORT_V2_FRAME                             ZW_ProtectionEcReportV2Frame;\
 680      =5    ZW_PROTECTION_EC_SET_V2_FRAME                                ZW_ProtectionEcSetV2Frame;\
 681      =5    ZW_PROTECTION_GET_V2_FRAME                                   ZW_ProtectionGetV2Frame;\
 682      =5    ZW_PROTECTION_REPORT_V2_FRAME                                ZW_ProtectionReportV2Frame;\
 683      =5    ZW_PROTECTION_SET_V2_FRAME                                   ZW_ProtectionSetV2Frame;\
 684      =5    ZW_PROTECTION_SUPPORTED_GET_V2_FRAME                         ZW_ProtectionSupportedGetV2Frame;\
 685      =5    ZW_PROTECTION_SUPPORTED_REPORT_V2_FRAME                      ZW_ProtectionSupportedReportV2Frame;\
 686      =5    ZW_PROTECTION_TIMEOUT_GET_V2_FRAME                           ZW_ProtectionTimeoutGetV2Frame;\
 687      =5    ZW_PROTECTION_TIMEOUT_REPORT_V2_FRAME                        ZW_ProtectionTimeoutReportV2Frame;\
 688      =5    ZW_PROTECTION_TIMEOUT_SET_V2_FRAME                           ZW_ProtectionTimeoutSetV2Frame;\
 689      =5  /* Command class Rate Tbl Config */\
 690      =5    ZW_RATE_TBL_REMOVE_1BYTE_FRAME                               ZW_RateTblRemove1byteFrame;\
 691      =5    ZW_RATE_TBL_REMOVE_2BYTE_FRAME                               ZW_RateTblRemove2byteFrame;\
 692      =5    ZW_RATE_TBL_REMOVE_3BYTE_FRAME                               ZW_RateTblRemove3byteFrame;\
 693      =5    ZW_RATE_TBL_REMOVE_4BYTE_FRAME                               ZW_RateTblRemove4byteFrame;\
 694      =5    ZW_RATE_TBL_SET_1BYTE_FRAME                                  ZW_RateTblSet1byteFrame;\
 695      =5    ZW_RATE_TBL_SET_2BYTE_FRAME                                  ZW_RateTblSet2byteFrame;\
 696      =5    ZW_RATE_TBL_SET_3BYTE_FRAME                                  ZW_RateTblSet3byteFrame;\
 697      =5    ZW_RATE_TBL_SET_4BYTE_FRAME                                  ZW_RateTblSet4byteFrame;\
 698      =5  /* Command class Rate Tbl Monitor */\
 699      =5    ZW_RATE_TBL_ACTIVE_RATE_GET_FRAME                            ZW_RateTblActiveRateGetFrame;\
 700      =5    ZW_RATE_TBL_ACTIVE_RATE_REPORT_FRAME                         ZW_RateTblActiveRateReportFrame;\
 701      =5    ZW_RATE_TBL_CURRENT_DATA_GET_FRAME                           ZW_RateTblCurrentDataGetFrame;\
 702      =5    VG_RATE_TBL_CURRENT_DATA_REPORT_VG                           VG_RateTblCurrentDataReportVGroup;\
 703      =5    ZW_RATE_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME                  ZW_RateTblCurrentDataReport1byteFrame;\
 704      =5    ZW_RATE_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME                  ZW_RateTblCurrentDataReport2byteFrame;\
 705      =5    ZW_RATE_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME                  ZW_RateTblCurrentDataReport3byteFrame;\
 706      =5    ZW_RATE_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME                  ZW_RateTblCurrentDataReport4byteFrame;\
 707      =5    ZW_RATE_TBL_GET_FRAME                                        ZW_RateTblGetFrame;\
 708      =5    ZW_RATE_TBL_HISTORICAL_DATA_GET_FRAME                        ZW_RateTblHistoricalDataGetFrame;\
 709      =5    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG                        VG_RateTblHistoricalDataReportVGroup;\
 710      =5    ZW_RATE_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME               ZW_RateTblHistoricalDataReport1byteFrame;\
 711      =5    ZW_RATE_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME               ZW_RateTblHistoricalDataReport2byteFrame;\
 712      =5    ZW_RATE_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME               ZW_RateTblHistoricalDataReport3byteFrame;\
 713      =5    ZW_RATE_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME               ZW_RateTblHistoricalDataReport4byteFrame;\
 714      =5    ZW_RATE_TBL_REPORT_1BYTE_FRAME                               ZW_RateTblReport1byteFrame;\
 715      =5    ZW_RATE_TBL_REPORT_2BYTE_FRAME                               ZW_RateTblReport2byteFrame;\
 716      =5    ZW_RATE_TBL_REPORT_3BYTE_FRAME                               ZW_RateTblReport3byteFrame;\
 717      =5    ZW_RATE_TBL_REPORT_4BYTE_FRAME                               ZW_RateTblReport4byteFrame;\
 718      =5    ZW_RATE_TBL_SUPPORTED_GET_FRAME                              ZW_RateTblSupportedGetFrame;\
 719      =5    ZW_RATE_TBL_SUPPORTED_REPORT_FRAME                           ZW_RateTblSupportedReportFrame;\
 720      =5  /* Command class Remote Association Activate */\
 721      =5    ZW_REMOTE_ASSOCIATION_ACTIVATE_FRAME                         ZW_RemoteAssociationActivateFrame;\
 722      =5  /* Command class Remote Association */\
 723      =5    ZW_REMOTE_ASSOCIATION_CONFIGURATION_GET_FRAME                ZW_RemoteAssociationConfigurationGetFrame;\
 724      =5    ZW_REMOTE_ASSOCIATION_CONFIGURATION_REPORT_FRAME             ZW_RemoteAssociationConfigurationReportFram
             -e;\
 725      =5    ZW_REMOTE_ASSOCIATION_CONFIGURATION_SET_FRAME                ZW_RemoteAssociationConfigurationSetFrame;\
 726      =5  /* Command class Scene Activation */\
 727      =5    ZW_SCENE_ACTIVATION_SET_FRAME                                ZW_SceneActivationSetFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 37  

 728      =5  /* Command class Scene Actuator Conf */\
 729      =5    ZW_SCENE_ACTUATOR_CONF_GET_FRAME                             ZW_SceneActuatorConfGetFrame;\
 730      =5    ZW_SCENE_ACTUATOR_CONF_REPORT_FRAME                          ZW_SceneActuatorConfReportFrame;\
 731      =5    ZW_SCENE_ACTUATOR_CONF_SET_FRAME                             ZW_SceneActuatorConfSetFrame;\
 732      =5  /* Command class Scene Controller Conf */\
 733      =5    ZW_SCENE_CONTROLLER_CONF_GET_FRAME                           ZW_SceneControllerConfGetFrame;\
 734      =5    ZW_SCENE_CONTROLLER_CONF_REPORT_FRAME                        ZW_SceneControllerConfReportFrame;\
 735      =5    ZW_SCENE_CONTROLLER_CONF_SET_FRAME                           ZW_SceneControllerConfSetFrame;\
 736      =5  /* Command class Schedule Entry Lock */\
 737      =5    ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_FRAME                  ZW_ScheduleEntryLockEnableAllSetFrame;\
 738      =5    ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_FRAME                      ZW_ScheduleEntryLockEnableSetFrame;\
 739      =5    ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_FRAME                    ZW_ScheduleEntryLockWeekDayGetFrame;\
 740      =5    ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_FRAME                 ZW_ScheduleEntryLockWeekDayReportFrame;\
 741      =5    ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_FRAME                    ZW_ScheduleEntryLockWeekDaySetFrame;\
 742      =5    ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_FRAME                    ZW_ScheduleEntryLockYearDayGetFrame;\
 743      =5    ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_FRAME                 ZW_ScheduleEntryLockYearDayReportFrame;\
 744      =5    ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_FRAME                    ZW_ScheduleEntryLockYearDaySetFrame;\
 745      =5    ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_FRAME                   ZW_ScheduleEntryTypeSupportedGetFrame;\
 746      =5    ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_FRAME                ZW_ScheduleEntryTypeSupportedReportFrame;\
 747      =5  /* Command class Schedule Entry Lock V2 */\
 748      =5    ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V2_FRAME               ZW_ScheduleEntryLockEnableAllSetV2Frame;\
 749      =5    ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2_FRAME                   ZW_ScheduleEntryLockEnableSetV2Frame;\
 750      =5    ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V2_FRAME              ZW_ScheduleEntryLockTimeOffsetGetV2Frame;\
 751      =5    ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V2_FRAME           ZW_ScheduleEntryLockTimeOffsetReportV2Frame
             -;\
 752      =5    ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V2_FRAME              ZW_ScheduleEntryLockTimeOffsetSetV2Frame;\
 753      =5    ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V2_FRAME                 ZW_ScheduleEntryLockWeekDayGetV2Frame;\
 754      =5    ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V2_FRAME              ZW_ScheduleEntryLockWeekDayReportV2Frame;\
 755      =5    ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V2_FRAME                 ZW_ScheduleEntryLockWeekDaySetV2Frame;\
 756      =5    ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V2_FRAME                 ZW_ScheduleEntryLockYearDayGetV2Frame;\
 757      =5    ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V2_FRAME              ZW_ScheduleEntryLockYearDayReportV2Frame;\
 758      =5    ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V2_FRAME                 ZW_ScheduleEntryLockYearDaySetV2Frame;\
 759      =5    ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V2_FRAME                ZW_ScheduleEntryTypeSupportedGetV2Frame;\
 760      =5    ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V2_FRAME             ZW_ScheduleEntryTypeSupportedReportV2Frame;
             -\
 761      =5  /* Command class Schedule Entry Lock V3 */\
 762      =5    ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V3_FRAME               ZW_ScheduleEntryLockEnableAllSetV3Frame;\
 763      =5    ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3_FRAME                   ZW_ScheduleEntryLockEnableSetV3Frame;\
 764      =5    ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V3_FRAME              ZW_ScheduleEntryLockTimeOffsetGetV3Frame;\
 765      =5    ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V3_FRAME           ZW_ScheduleEntryLockTimeOffsetReportV3Frame
             -;\
 766      =5    ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V3_FRAME              ZW_ScheduleEntryLockTimeOffsetSetV3Frame;\
 767      =5    ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V3_FRAME                 ZW_ScheduleEntryLockWeekDayGetV3Frame;\
 768      =5    ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V3_FRAME              ZW_ScheduleEntryLockWeekDayReportV3Frame;\
 769      =5    ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V3_FRAME                 ZW_ScheduleEntryLockWeekDaySetV3Frame;\
 770      =5    ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V3_FRAME                 ZW_ScheduleEntryLockYearDayGetV3Frame;\
 771      =5    ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V3_FRAME              ZW_ScheduleEntryLockYearDayReportV3Frame;\
 772      =5    ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V3_FRAME                 ZW_ScheduleEntryLockYearDaySetV3Frame;\
 773      =5    ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V3_FRAME                ZW_ScheduleEntryTypeSupportedGetV3Frame;\
 774      =5    ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V3_FRAME             ZW_ScheduleEntryTypeSupportedReportV3Frame;
             -\
 775      =5    ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V3_FRAME          ZW_ScheduleEntryLockDailyRepeatingGetV3Fram
             -e;\
 776      =5    ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V3_FRAME       ZW_ScheduleEntryLockDailyRepeatingReportV3F
             -rame;\
 777      =5    ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V3_FRAME          ZW_ScheduleEntryLockDailyRepeatingSetV3Fram
             -e;\
 778      =5  /* Command class Screen Attributes */\
 779      =5    ZW_SCREEN_ATTRIBUTES_GET_FRAME                               ZW_ScreenAttributesGetFrame;\
 780      =5    ZW_SCREEN_ATTRIBUTES_REPORT_FRAME                            ZW_ScreenAttributesReportFrame;\
 781      =5  /* Command class Screen Attributes V2 */\
 782      =5    ZW_SCREEN_ATTRIBUTES_GET_V2_FRAME                            ZW_ScreenAttributesGetV2Frame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 38  

 783      =5    ZW_SCREEN_ATTRIBUTES_REPORT_V2_FRAME                         ZW_ScreenAttributesReportV2Frame;\
 784      =5  /* Command class Screen Md */\
 785      =5    ZW_SCREEN_MD_GET_FRAME                                       ZW_ScreenMdGetFrame;\
 786      =5    VG_SCREEN_MD_REPORT_1BYTE_VG                                 VG_ScreenMdReport1byteVGroup;\
 787      =5    VG_SCREEN_MD_REPORT_2BYTE_VG                                 VG_ScreenMdReport2byteVGroup;\
 788      =5    VG_SCREEN_MD_REPORT_3BYTE_VG                                 VG_ScreenMdReport3byteVGroup;\
 789      =5    VG_SCREEN_MD_REPORT_4BYTE_VG                                 VG_ScreenMdReport4byteVGroup;\
 790      =5    ZW_SCREEN_MD_REPORT_1BYTE_FRAME                              ZW_ScreenMdReport1byteFrame;\
 791      =5    ZW_SCREEN_MD_REPORT_2BYTE_FRAME                              ZW_ScreenMdReport2byteFrame;\
 792      =5    ZW_SCREEN_MD_REPORT_3BYTE_FRAME                              ZW_ScreenMdReport3byteFrame;\
 793      =5    ZW_SCREEN_MD_REPORT_4BYTE_FRAME                              ZW_ScreenMdReport4byteFrame;\
 794      =5  /* Command class Screen Md V2 */\
 795      =5    ZW_SCREEN_MD_GET_V2_FRAME                                    ZW_ScreenMdGetV2Frame;\
 796      =5    VG_SCREEN_MD_REPORT_1BYTE_V2_VG                              VG_ScreenMdReport1byteV2VGroup;\
 797      =5    VG_SCREEN_MD_REPORT_2BYTE_V2_VG                              VG_ScreenMdReport2byteV2VGroup;\
 798      =5    VG_SCREEN_MD_REPORT_3BYTE_V2_VG                              VG_ScreenMdReport3byteV2VGroup;\
 799      =5    VG_SCREEN_MD_REPORT_4BYTE_V2_VG                              VG_ScreenMdReport4byteV2VGroup;\
 800      =5    ZW_SCREEN_MD_REPORT_1BYTE_V2_FRAME                           ZW_ScreenMdReport1byteV2Frame;\
 801      =5    ZW_SCREEN_MD_REPORT_2BYTE_V2_FRAME                           ZW_ScreenMdReport2byteV2Frame;\
 802      =5    ZW_SCREEN_MD_REPORT_3BYTE_V2_FRAME                           ZW_ScreenMdReport3byteV2Frame;\
 803      =5    ZW_SCREEN_MD_REPORT_4BYTE_V2_FRAME                           ZW_ScreenMdReport4byteV2Frame;\
 804      =5  /* Command class Security Panel Mode */\
 805      =5    ZW_SECURITY_PANEL_MODE_GET_FRAME                             ZW_SecurityPanelModeGetFrame;\
 806      =5    ZW_SECURITY_PANEL_MODE_REPORT_FRAME                          ZW_SecurityPanelModeReportFrame;\
 807      =5    ZW_SECURITY_PANEL_MODE_SET_FRAME                             ZW_SecurityPanelModeSetFrame;\
 808      =5    ZW_SECURITY_PANEL_MODE_SUPPORTED_GET_FRAME                   ZW_SecurityPanelModeSupportedGetFrame;\
 809      =5    ZW_SECURITY_PANEL_MODE_SUPPORTED_REPORT_FRAME                ZW_SecurityPanelModeSupportedReportFrame;\
 810      =5  /* Command class Security Panel Zone Sensor */\
 811      =5    ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_REPORT_FRAME         ZW_CommandClassSecurityPanelZoneSensorInsta
             -lledReportFrame;\
 812      =5    ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_GET_FRAME                 ZW_SecurityPanelZoneSensorTypeGetFrame;\
 813      =5    ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_REPORT_FRAME              ZW_SecurityPanelZoneSensorTypeReportFrame;\
 814      =5    ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_GET_FRAME            ZW_SecurityPanelZoneSensorInstalledGetFrame
             -;\
 815      =5    ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_GET_FRAME                ZW_SecurityPanelZoneSensorStateGetFrame;\
 816      =5    ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_REPORT_FRAME             ZW_SecurityPanelZoneSensorStateReportFrame;
             -\
 817      =5  /* Command class Security Panel Zone */\
 818      =5    ZW_SECURITY_PANEL_ZONE_NUMBER_SUPPORTED_GET_FRAME            ZW_SecurityPanelZoneNumberSupportedGetFrame
             -;\
 819      =5    ZW_SECURITY_PANEL_ZONE_STATE_GET_FRAME                       ZW_SecurityPanelZoneStateGetFrame;\
 820      =5    ZW_SECURITY_PANEL_ZONE_STATE_REPORT_FRAME                    ZW_SecurityPanelZoneStateReportFrame;\
 821      =5    ZW_SECURITY_PANEL_ZONE_SUPPORTED_REPORT_FRAME                ZW_SecurityPanelZoneSupportedReportFrame;\
 822      =5    ZW_SECURITY_PANEL_ZONE_TYPE_GET_FRAME                        ZW_SecurityPanelZoneTypeGetFrame;\
 823      =5    ZW_SECURITY_PANEL_ZONE_TYPE_REPORT_FRAME                     ZW_SecurityPanelZoneTypeReportFrame;\
 824      =5  /* Command class Security */\
 825      =5    ZW_NETWORK_KEY_SET_1BYTE_FRAME                               ZW_NetworkKeySet1byteFrame;\
 826      =5    ZW_NETWORK_KEY_SET_2BYTE_FRAME                               ZW_NetworkKeySet2byteFrame;\
 827      =5    ZW_NETWORK_KEY_SET_3BYTE_FRAME                               ZW_NetworkKeySet3byteFrame;\
 828      =5    ZW_NETWORK_KEY_SET_4BYTE_FRAME                               ZW_NetworkKeySet4byteFrame;\
 829      =5    ZW_NETWORK_KEY_VERIFY_FRAME                                  ZW_NetworkKeyVerifyFrame;\
 830      =5    ZW_SECURITY_COMMANDS_SUPPORTED_GET_FRAME                     ZW_SecurityCommandsSupportedGetFrame;\
 831      =5    ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_1BYTE_FRAME            ZW_SecurityCommandsSupportedReport1byteFram
             -e;\
 832      =5    ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_2BYTE_FRAME            ZW_SecurityCommandsSupportedReport2byteFram
             -e;\
 833      =5    ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_3BYTE_FRAME            ZW_SecurityCommandsSupportedReport3byteFram
             -e;\
 834      =5    ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_4BYTE_FRAME            ZW_SecurityCommandsSupportedReport4byteFram
             -e;\
 835      =5    ZW_SECURITY_MESSAGE_ENCAPSULATION_1BYTE_FRAME                ZW_SecurityMessageEncapsulation1byteFrame;\
 836      =5    ZW_SECURITY_MESSAGE_ENCAPSULATION_2BYTE_FRAME                ZW_SecurityMessageEncapsulation2byteFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 39  

 837      =5    ZW_SECURITY_MESSAGE_ENCAPSULATION_3BYTE_FRAME                ZW_SecurityMessageEncapsulation3byteFrame;\
 838      =5    ZW_SECURITY_MESSAGE_ENCAPSULATION_4BYTE_FRAME                ZW_SecurityMessageEncapsulation4byteFrame;\
 839      =5    ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_1BYTE_FRAME      ZW_SecurityMessageEncapsulationNonceGet1byt
             -eFrame;\
 840      =5    ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_2BYTE_FRAME      ZW_SecurityMessageEncapsulationNonceGet2byt
             -eFrame;\
 841      =5    ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_3BYTE_FRAME      ZW_SecurityMessageEncapsulationNonceGet3byt
             -eFrame;\
 842      =5    ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_4BYTE_FRAME      ZW_SecurityMessageEncapsulationNonceGet4byt
             -eFrame;\
 843      =5    ZW_SECURITY_NONCE_GET_FRAME                                  ZW_SecurityNonceGetFrame;\
 844      =5    ZW_SECURITY_NONCE_REPORT_FRAME                               ZW_SecurityNonceReportFrame;\
 845      =5    ZW_SECURITY_SCHEME_GET_FRAME                                 ZW_SecuritySchemeGetFrame;\
 846      =5    ZW_SECURITY_SCHEME_INHERIT_FRAME                             ZW_SecuritySchemeInheritFrame;\
 847      =5    ZW_SECURITY_SCHEME_REPORT_FRAME                              ZW_SecuritySchemeReportFrame;\
 848      =5  /* Command class Sensor Alarm */\
 849      =5    ZW_SENSOR_ALARM_GET_FRAME                                    ZW_SensorAlarmGetFrame;\
 850      =5    ZW_SENSOR_ALARM_REPORT_FRAME                                 ZW_SensorAlarmReportFrame;\
 851      =5  
 852      =5  #define ZW_FRAME_COLLECTION_MACRO2\
 853      =5    ZW_SENSOR_ALARM_SUPPORTED_GET_FRAME                          ZW_SensorAlarmSupportedGetFrame;\
 854      =5    ZW_SENSOR_ALARM_SUPPORTED_REPORT_1BYTE_FRAME                 ZW_SensorAlarmSupportedReport1byteFrame;\
 855      =5    ZW_SENSOR_ALARM_SUPPORTED_REPORT_2BYTE_FRAME                 ZW_SensorAlarmSupportedReport2byteFrame;\
 856      =5    ZW_SENSOR_ALARM_SUPPORTED_REPORT_3BYTE_FRAME                 ZW_SensorAlarmSupportedReport3byteFrame;\
 857      =5    ZW_SENSOR_ALARM_SUPPORTED_REPORT_4BYTE_FRAME                 ZW_SensorAlarmSupportedReport4byteFrame;\
 858      =5  /* Command class Sensor Binary */\
 859      =5    ZW_SENSOR_BINARY_GET_FRAME                                   ZW_SensorBinaryGetFrame;\
 860      =5    ZW_SENSOR_BINARY_REPORT_FRAME                                ZW_SensorBinaryReportFrame;\
 861      =5  /* Command class Sensor Binary V2 */\
 862      =5    ZW_SENSOR_BINARY_GET_V2_FRAME                                ZW_SensorBinaryGetV2Frame;\
 863      =5    ZW_SENSOR_BINARY_REPORT_V2_FRAME                             ZW_SensorBinaryReportV2Frame;\
 864      =5    ZW_SENSOR_BINARY_SUPPORTED_GET_SENSOR_V2_FRAME               ZW_SensorBinarySupportedGetSensorV2Frame;\
 865      =5    ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_1BYTE_V2_FRAME      ZW_SensorBinarySupportedSensorReport1byteV2
             -Frame;\
 866      =5    ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_2BYTE_V2_FRAME      ZW_SensorBinarySupportedSensorReport2byteV2
             -Frame;\
 867      =5    ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_3BYTE_V2_FRAME      ZW_SensorBinarySupportedSensorReport3byteV2
             -Frame;\
 868      =5    ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_4BYTE_V2_FRAME      ZW_SensorBinarySupportedSensorReport4byteV2
             -Frame;\
 869      =5  /* Command class Sensor Configuration */\
 870      =5    ZW_SENSOR_TRIGGER_LEVEL_GET_FRAME                            ZW_SensorTriggerLevelGetFrame;\
 871      =5    ZW_SENSOR_TRIGGER_LEVEL_REPORT_1BYTE_FRAME                   ZW_SensorTriggerLevelReport1byteFrame;\
 872      =5    ZW_SENSOR_TRIGGER_LEVEL_REPORT_2BYTE_FRAME                   ZW_SensorTriggerLevelReport2byteFrame;\
 873      =5    ZW_SENSOR_TRIGGER_LEVEL_REPORT_3BYTE_FRAME                   ZW_SensorTriggerLevelReport3byteFrame;\
 874      =5    ZW_SENSOR_TRIGGER_LEVEL_REPORT_4BYTE_FRAME                   ZW_SensorTriggerLevelReport4byteFrame;\
 875      =5    ZW_SENSOR_TRIGGER_LEVEL_SET_1BYTE_FRAME                      ZW_SensorTriggerLevelSet1byteFrame;\
 876      =5    ZW_SENSOR_TRIGGER_LEVEL_SET_2BYTE_FRAME                      ZW_SensorTriggerLevelSet2byteFrame;\
 877      =5    ZW_SENSOR_TRIGGER_LEVEL_SET_3BYTE_FRAME                      ZW_SensorTriggerLevelSet3byteFrame;\
 878      =5    ZW_SENSOR_TRIGGER_LEVEL_SET_4BYTE_FRAME                      ZW_SensorTriggerLevelSet4byteFrame;\
 879      =5  /* Command class Sensor Multilevel */\
 880      =5    ZW_SENSOR_MULTILEVEL_GET_FRAME                               ZW_SensorMultilevelGetFrame;\
 881      =5    ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_FRAME                      ZW_SensorMultilevelReport1byteFrame;\
 882      =5    ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_FRAME                      ZW_SensorMultilevelReport2byteFrame;\
 883      =5    ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_FRAME                      ZW_SensorMultilevelReport3byteFrame;\
 884      =5    ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_FRAME                      ZW_SensorMultilevelReport4byteFrame;\
 885      =5  /* Command class Sensor Multilevel V2 */\
 886      =5    ZW_SENSOR_MULTILEVEL_GET_V2_FRAME                            ZW_SensorMultilevelGetV2Frame;\
 887      =5    ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V2_FRAME                   ZW_SensorMultilevelReport1byteV2Frame;\
 888      =5    ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V2_FRAME                   ZW_SensorMultilevelReport2byteV2Frame;\
 889      =5    ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V2_FRAME                   ZW_SensorMultilevelReport3byteV2Frame;\
 890      =5    ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V2_FRAME                   ZW_SensorMultilevelReport4byteV2Frame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 40  

 891      =5  /* Command class Sensor Multilevel V3 */\
 892      =5    ZW_SENSOR_MULTILEVEL_GET_V3_FRAME                            ZW_SensorMultilevelGetV3Frame;\
 893      =5    ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V3_FRAME                   ZW_SensorMultilevelReport1byteV3Frame;\
 894      =5    ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V3_FRAME                   ZW_SensorMultilevelReport2byteV3Frame;\
 895      =5    ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V3_FRAME                   ZW_SensorMultilevelReport3byteV3Frame;\
 896      =5    ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V3_FRAME                   ZW_SensorMultilevelReport4byteV3Frame;\
 897      =5  /* Command class Sensor Multilevel V4 */\
 898      =5    ZW_SENSOR_MULTILEVEL_GET_V4_FRAME                            ZW_SensorMultilevelGetV4Frame;\
 899      =5    ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V4_FRAME                   ZW_SensorMultilevelReport1byteV4Frame;\
 900      =5    ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V4_FRAME                   ZW_SensorMultilevelReport2byteV4Frame;\
 901      =5    ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V4_FRAME                   ZW_SensorMultilevelReport3byteV4Frame;\
 902      =5    ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V4_FRAME                   ZW_SensorMultilevelReport4byteV4Frame;\
 903      =5  /* Command class Sensor Multilevel V5 */\
 904      =5    ZW_SENSOR_MULTILEVEL_GET_V5_FRAME                            ZW_SensorMultilevelGetV5Frame;\
 905      =5    ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V5_FRAME                   ZW_SensorMultilevelReport1byteV5Frame;\
 906      =5    ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V5_FRAME                   ZW_SensorMultilevelReport2byteV5Frame;\
 907      =5    ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V5_FRAME                   ZW_SensorMultilevelReport3byteV5Frame;\
 908      =5    ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V5_FRAME                   ZW_SensorMultilevelReport4byteV5Frame;\
 909      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V5_FRAME           ZW_SensorMultilevelSupportedGetSensorV5Fram
             -e;\
 910      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V5_FRAME  ZW_SensorMultilevelSupportedSensorReport1by
             -teV5Frame;\
 911      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V5_FRAME  ZW_SensorMultilevelSupportedSensorReport2by
             -teV5Frame;\
 912      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V5_FRAME  ZW_SensorMultilevelSupportedSensorReport3by
             -teV5Frame;\
 913      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V5_FRAME  ZW_SensorMultilevelSupportedSensorReport4by
             -teV5Frame;\
 914      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V5_FRAME            ZW_SensorMultilevelSupportedGetScaleV5Frame
             -;\
 915      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V5_FRAME         ZW_SensorMultilevelSupportedScaleReportV5Fr
             -ame;\
 916      =5  /* Command class Sensor Multilevel V6 */\
 917      =5    ZW_SENSOR_MULTILEVEL_GET_V6_FRAME                            ZW_SensorMultilevelGetV6Frame;\
 918      =5    ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V6_FRAME                   ZW_SensorMultilevelReport1byteV6Frame;\
 919      =5    ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V6_FRAME                   ZW_SensorMultilevelReport2byteV6Frame;\
 920      =5    ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V6_FRAME                   ZW_SensorMultilevelReport3byteV6Frame;\
 921      =5    ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V6_FRAME                   ZW_SensorMultilevelReport4byteV6Frame;\
 922      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V6_FRAME           ZW_SensorMultilevelSupportedGetSensorV6Fram
             -e;\
 923      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V6_FRAME  ZW_SensorMultilevelSupportedSensorReport1by
             -teV6Frame;\
 924      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V6_FRAME  ZW_SensorMultilevelSupportedSensorReport2by
             -teV6Frame;\
 925      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V6_FRAME  ZW_SensorMultilevelSupportedSensorReport3by
             -teV6Frame;\
 926      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V6_FRAME  ZW_SensorMultilevelSupportedSensorReport4by
             -teV6Frame;\
 927      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V6_FRAME            ZW_SensorMultilevelSupportedGetScaleV6Frame
             -;\
 928      =5    ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V6_FRAME         ZW_SensorMultilevelSupportedScaleReportV6Fr
             -ame;\
 929      =5  /* Command class Silence Alarm */\
 930      =5    ZW_SENSOR_ALARM_SET_1BYTE_FRAME                              ZW_SensorAlarmSet1byteFrame;\
 931      =5    ZW_SENSOR_ALARM_SET_2BYTE_FRAME                              ZW_SensorAlarmSet2byteFrame;\
 932      =5    ZW_SENSOR_ALARM_SET_3BYTE_FRAME                              ZW_SensorAlarmSet3byteFrame;\
 933      =5    ZW_SENSOR_ALARM_SET_4BYTE_FRAME                              ZW_SensorAlarmSet4byteFrame;\
 934      =5  /* Command class Simple Av Control */\
 935      =5    ZW_SIMPLE_AV_CONTROL_GET_FRAME                               ZW_SimpleAvControlGetFrame;\
 936      =5    ZW_SIMPLE_AV_CONTROL_REPORT_FRAME                            ZW_SimpleAvControlReportFrame;\
 937      =5    VG_SIMPLE_AV_CONTROL_SET_VG                                  VG_SimpleAvControlSetVGroup;\
 938      =5    ZW_SIMPLE_AV_CONTROL_SET_1BYTE_FRAME                         ZW_SimpleAvControlSet1byteFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 41  

 939      =5    ZW_SIMPLE_AV_CONTROL_SET_2BYTE_FRAME                         ZW_SimpleAvControlSet2byteFrame;\
 940      =5    ZW_SIMPLE_AV_CONTROL_SET_3BYTE_FRAME                         ZW_SimpleAvControlSet3byteFrame;\
 941      =5    ZW_SIMPLE_AV_CONTROL_SET_4BYTE_FRAME                         ZW_SimpleAvControlSet4byteFrame;\
 942      =5    ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_FRAME                     ZW_SimpleAvControlSupportedGetFrame;\
 943      =5    ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_FRAME            ZW_SimpleAvControlSupportedReport1byteFrame
             -;\
 944      =5    ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_FRAME            ZW_SimpleAvControlSupportedReport2byteFrame
             -;\
 945      =5    ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_FRAME            ZW_SimpleAvControlSupportedReport3byteFrame
             -;\
 946      =5    ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_FRAME            ZW_SimpleAvControlSupportedReport4byteFrame
             -;\
 947      =5  /* Command class Switch All */\
 948      =5    ZW_SWITCH_ALL_GET_FRAME                                      ZW_SwitchAllGetFrame;\
 949      =5    ZW_SWITCH_ALL_OFF_FRAME                                      ZW_SwitchAllOffFrame;\
 950      =5    ZW_SWITCH_ALL_ON_FRAME                                       ZW_SwitchAllOnFrame;\
 951      =5    ZW_SWITCH_ALL_REPORT_FRAME                                   ZW_SwitchAllReportFrame;\
 952      =5    ZW_SWITCH_ALL_SET_FRAME                                      ZW_SwitchAllSetFrame;\
 953      =5  /* Command class Switch Binary */\
 954      =5    ZW_SWITCH_BINARY_GET_FRAME                                   ZW_SwitchBinaryGetFrame;\
 955      =5    ZW_SWITCH_BINARY_REPORT_FRAME                                ZW_SwitchBinaryReportFrame;\
 956      =5    ZW_SWITCH_BINARY_SET_FRAME                                   ZW_SwitchBinarySetFrame;\
 957      =5  /* Command class Switch Multilevel */\
 958      =5    ZW_SWITCH_MULTILEVEL_GET_FRAME                               ZW_SwitchMultilevelGetFrame;\
 959      =5    ZW_SWITCH_MULTILEVEL_REPORT_FRAME                            ZW_SwitchMultilevelReportFrame;\
 960      =5    ZW_SWITCH_MULTILEVEL_SET_FRAME                               ZW_SwitchMultilevelSetFrame;\
 961      =5    ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_FRAME                ZW_SwitchMultilevelStartLevelChangeFrame;\
 962      =5    ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME                 ZW_SwitchMultilevelStopLevelChangeFrame;\
 963      =5  /* Command class Switch Multilevel V2 */\
 964      =5    ZW_SWITCH_MULTILEVEL_GET_V2_FRAME                            ZW_SwitchMultilevelGetV2Frame;\
 965      =5    ZW_SWITCH_MULTILEVEL_REPORT_V2_FRAME                         ZW_SwitchMultilevelReportV2Frame;\
 966      =5    ZW_SWITCH_MULTILEVEL_SET_V2_FRAME                            ZW_SwitchMultilevelSetV2Frame;\
 967      =5    ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V2_FRAME             ZW_SwitchMultilevelStartLevelChangeV2Frame;
             -\
 968      =5    ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V2_FRAME              ZW_SwitchMultilevelStopLevelChangeV2Frame;\
 969      =5  /* Command class Switch Multilevel V3 */\
 970      =5    ZW_SWITCH_MULTILEVEL_GET_V3_FRAME                            ZW_SwitchMultilevelGetV3Frame;\
 971      =5    ZW_SWITCH_MULTILEVEL_REPORT_V3_FRAME                         ZW_SwitchMultilevelReportV3Frame;\
 972      =5    ZW_SWITCH_MULTILEVEL_SET_V3_FRAME                            ZW_SwitchMultilevelSetV3Frame;\
 973      =5    ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V3_FRAME             ZW_SwitchMultilevelStartLevelChangeV3Frame;
             -\
 974      =5    ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V3_FRAME              ZW_SwitchMultilevelStopLevelChangeV3Frame;\
 975      =5    ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V3_FRAME                  ZW_SwitchMultilevelSupportedGetV3Frame;\
 976      =5    ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_V3_FRAME               ZW_SwitchMultilevelSupportedReportV3Frame;\
 977      =5  /* Command class Switch Toggle Binary */\
 978      =5    ZW_SWITCH_TOGGLE_BINARY_SET_FRAME                            ZW_SwitchToggleBinarySetFrame;\
 979      =5    ZW_SWITCH_TOGGLE_BINARY_GET_FRAME                            ZW_SwitchToggleBinaryGetFrame;\
 980      =5    ZW_SWITCH_TOGGLE_BINARY_REPORT_FRAME                         ZW_SwitchToggleBinaryReportFrame;\
 981      =5  /* Command class Switch Toggle Multilevel */\
 982      =5    ZW_SWITCH_TOGGLE_MULTILEVEL_SET_FRAME                        ZW_SwitchToggleMultilevelSetFrame;\
 983      =5    ZW_SWITCH_TOGGLE_MULTILEVEL_GET_FRAME                        ZW_SwitchToggleMultilevelGetFrame;\
 984      =5    ZW_SWITCH_TOGGLE_MULTILEVEL_REPORT_FRAME                     ZW_SwitchToggleMultilevelReportFrame;\
 985      =5    ZW_SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_FRAME         ZW_SwitchToggleMultilevelStartLevelChangeFr
             -ame;\
 986      =5    ZW_SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME          ZW_SwitchToggleMultilevelStopLevelChangeFra
             -me;\
 987      =5  /* Command class Tariff Config */\
 988      =5    ZW_TARIFF_TBL_REMOVE_1BYTE_FRAME                             ZW_TariffTblRemove1byteFrame;\
 989      =5    ZW_TARIFF_TBL_REMOVE_2BYTE_FRAME                             ZW_TariffTblRemove2byteFrame;\
 990      =5    ZW_TARIFF_TBL_REMOVE_3BYTE_FRAME                             ZW_TariffTblRemove3byteFrame;\
 991      =5    ZW_TARIFF_TBL_REMOVE_4BYTE_FRAME                             ZW_TariffTblRemove4byteFrame;\
 992      =5    ZW_TARIFF_TBL_SET_FRAME                                      ZW_TariffTblSetFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 42  

 993      =5    ZW_TARIFF_TBL_SUPPLIER_SET_1BYTE_FRAME                       ZW_TariffTblSupplierSet1byteFrame;\
 994      =5    ZW_TARIFF_TBL_SUPPLIER_SET_2BYTE_FRAME                       ZW_TariffTblSupplierSet2byteFrame;\
 995      =5    ZW_TARIFF_TBL_SUPPLIER_SET_3BYTE_FRAME                       ZW_TariffTblSupplierSet3byteFrame;\
 996      =5    ZW_TARIFF_TBL_SUPPLIER_SET_4BYTE_FRAME                       ZW_TariffTblSupplierSet4byteFrame;\
 997      =5  /* Command class Tariff Tbl Monitor */\
 998      =5    ZW_TARIFF_TBL_COST_GET_FRAME                                 ZW_TariffTblCostGetFrame;\
 999      =5    ZW_TARIFF_TBL_COST_REPORT_FRAME                              ZW_TariffTblCostReportFrame;\
1000      =5    ZW_TARIFF_TBL_GET_FRAME                                      ZW_TariffTblGetFrame;\
1001      =5    ZW_TARIFF_TBL_REPORT_FRAME                                   ZW_TariffTblReportFrame;\
1002      =5    ZW_TARIFF_TBL_SUPPLIER_GET_FRAME                             ZW_TariffTblSupplierGetFrame;\
1003      =5    ZW_TARIFF_TBL_SUPPLIER_REPORT_1BYTE_FRAME                    ZW_TariffTblSupplierReport1byteFrame;\
1004      =5    ZW_TARIFF_TBL_SUPPLIER_REPORT_2BYTE_FRAME                    ZW_TariffTblSupplierReport2byteFrame;\
1005      =5    ZW_TARIFF_TBL_SUPPLIER_REPORT_3BYTE_FRAME                    ZW_TariffTblSupplierReport3byteFrame;\
1006      =5    ZW_TARIFF_TBL_SUPPLIER_REPORT_4BYTE_FRAME                    ZW_TariffTblSupplierReport4byteFrame;\
1007      =5  /* Command class Thermostat Fan Mode */\
1008      =5    ZW_THERMOSTAT_FAN_MODE_GET_FRAME                             ZW_ThermostatFanModeGetFrame;\
1009      =5    ZW_THERMOSTAT_FAN_MODE_REPORT_FRAME                          ZW_ThermostatFanModeReportFrame;\
1010      =5    ZW_THERMOSTAT_FAN_MODE_SET_FRAME                             ZW_ThermostatFanModeSetFrame;\
1011      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_FRAME                   ZW_ThermostatFanModeSupportedGetFrame;\
1012      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_FRAME          ZW_ThermostatFanModeSupportedReport1byteFra
             -me;\
1013      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_FRAME          ZW_ThermostatFanModeSupportedReport2byteFra
             -me;\
1014      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_FRAME          ZW_ThermostatFanModeSupportedReport3byteFra
             -me;\
1015      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_FRAME          ZW_ThermostatFanModeSupportedReport4byteFra
             -me;\
1016      =5  /* Command class Thermostat Fan Mode V2 */\
1017      =5    ZW_THERMOSTAT_FAN_MODE_GET_V2_FRAME                          ZW_ThermostatFanModeGetV2Frame;\
1018      =5    ZW_THERMOSTAT_FAN_MODE_REPORT_V2_FRAME                       ZW_ThermostatFanModeReportV2Frame;\
1019      =5    ZW_THERMOSTAT_FAN_MODE_SET_V2_FRAME                          ZW_ThermostatFanModeSetV2Frame;\
1020      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V2_FRAME                ZW_ThermostatFanModeSupportedGetV2Frame;\
1021      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME       ZW_ThermostatFanModeSupportedReport1byteV2F
             -rame;\
1022      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME       ZW_ThermostatFanModeSupportedReport2byteV2F
             -rame;\
1023      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME       ZW_ThermostatFanModeSupportedReport3byteV2F
             -rame;\
1024      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME       ZW_ThermostatFanModeSupportedReport4byteV2F
             -rame;\
1025      =5  /* Command class Thermostat Fan Mode V3 */\
1026      =5    ZW_THERMOSTAT_FAN_MODE_GET_V3_FRAME                          ZW_ThermostatFanModeGetV3Frame;\
1027      =5    ZW_THERMOSTAT_FAN_MODE_REPORT_V3_FRAME                       ZW_ThermostatFanModeReportV3Frame;\
1028      =5    ZW_THERMOSTAT_FAN_MODE_SET_V3_FRAME                          ZW_ThermostatFanModeSetV3Frame;\
1029      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V3_FRAME                ZW_ThermostatFanModeSupportedGetV3Frame;\
1030      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V3_FRAME       ZW_ThermostatFanModeSupportedReport1byteV3F
             -rame;\
1031      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V3_FRAME       ZW_ThermostatFanModeSupportedReport2byteV3F
             -rame;\
1032      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V3_FRAME       ZW_ThermostatFanModeSupportedReport3byteV3F
             -rame;\
1033      =5    ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V3_FRAME       ZW_ThermostatFanModeSupportedReport4byteV3F
             -rame;\
1034      =5  /* Command class Thermostat Fan State */\
1035      =5    ZW_THERMOSTAT_FAN_STATE_GET_FRAME                            ZW_ThermostatFanStateGetFrame;\
1036      =5    ZW_THERMOSTAT_FAN_STATE_REPORT_FRAME                         ZW_ThermostatFanStateReportFrame;\
1037      =5  /* Command class Thermostat Heating */\
1038      =5    ZW_THERMOSTAT_HEATING_STATUS_REPORT_FRAME                    ZW_ThermostatHeatingStatusReportFrame;\
1039      =5    ZW_THERMOSTAT_HEATING_MODE_GET_FRAME                         ZW_ThermostatHeatingModeGetFrame;\
1040      =5    ZW_THERMOSTAT_HEATING_MODE_REPORT_FRAME                      ZW_ThermostatHeatingModeReportFrame;\
1041      =5    ZW_THERMOSTAT_HEATING_MODE_SET_FRAME                         ZW_ThermostatHeatingModeSetFrame;\
1042      =5    ZW_THERMOSTAT_HEATING_RELAY_STATUS_GET_FRAME                 ZW_ThermostatHeatingRelayStatusGetFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 43  

1043      =5    ZW_THERMOSTAT_HEATING_RELAY_STATUS_REPORT_FRAME              ZW_ThermostatHeatingRelayStatusReportFrame;
             -\
1044      =5    ZW_THERMOSTAT_HEATING_SETPOINT_GET_FRAME                     ZW_ThermostatHeatingSetpointGetFrame;\
1045      =5    ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_1BYTE_FRAME            ZW_ThermostatHeatingSetpointReport1byteFram
             -e;\
1046      =5    ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_2BYTE_FRAME            ZW_ThermostatHeatingSetpointReport2byteFram
             -e;\
1047      =5    ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_3BYTE_FRAME            ZW_ThermostatHeatingSetpointReport3byteFram
             -e;\
1048      =5    ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_4BYTE_FRAME            ZW_ThermostatHeatingSetpointReport4byteFram
             -e;\
1049      =5    ZW_THERMOSTAT_HEATING_SETPOINT_SET_1BYTE_FRAME               ZW_ThermostatHeatingSetpointSet1byteFrame;\
1050      =5    ZW_THERMOSTAT_HEATING_SETPOINT_SET_2BYTE_FRAME               ZW_ThermostatHeatingSetpointSet2byteFrame;\
1051      =5    ZW_THERMOSTAT_HEATING_SETPOINT_SET_3BYTE_FRAME               ZW_ThermostatHeatingSetpointSet3byteFrame;\
1052      =5    ZW_THERMOSTAT_HEATING_SETPOINT_SET_4BYTE_FRAME               ZW_ThermostatHeatingSetpointSet4byteFrame;\
1053      =5    ZW_THERMOSTAT_HEATING_STATUS_GET_FRAME                       ZW_ThermostatHeatingStatusGetFrame;\
1054      =5    ZW_THERMOSTAT_HEATING_STATUS_SET_FRAME                       ZW_ThermostatHeatingStatusSetFrame;\
1055      =5    ZW_THERMOSTAT_HEATING_TIMED_OFF_SET_FRAME                    ZW_ThermostatHeatingTimedOffSetFrame;\
1056      =5  /* Command class Thermostat Mode */\
1057      =5    ZW_THERMOSTAT_MODE_GET_FRAME                                 ZW_ThermostatModeGetFrame;\
1058      =5    ZW_THERMOSTAT_MODE_REPORT_FRAME                              ZW_ThermostatModeReportFrame;\
1059      =5    ZW_THERMOSTAT_MODE_SET_FRAME                                 ZW_ThermostatModeSetFrame;\
1060      =5    ZW_THERMOSTAT_MODE_SUPPORTED_GET_FRAME                       ZW_ThermostatModeSupportedGetFrame;\
1061      =5    ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_FRAME              ZW_ThermostatModeSupportedReport1byteFrame;
             -\
1062      =5    ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_FRAME              ZW_ThermostatModeSupportedReport2byteFrame;
             -\
1063      =5    ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_FRAME              ZW_ThermostatModeSupportedReport3byteFrame;
             -\
1064      =5    ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_FRAME              ZW_ThermostatModeSupportedReport4byteFrame;
             -\
1065      =5  /* Command class Thermostat Mode V2 */\
1066      =5    ZW_THERMOSTAT_MODE_GET_V2_FRAME                              ZW_ThermostatModeGetV2Frame;\
1067      =5    ZW_THERMOSTAT_MODE_REPORT_V2_FRAME                           ZW_ThermostatModeReportV2Frame;\
1068      =5    ZW_THERMOSTAT_MODE_SET_V2_FRAME                              ZW_ThermostatModeSetV2Frame;\
1069      =5    ZW_THERMOSTAT_MODE_SUPPORTED_GET_V2_FRAME                    ZW_ThermostatModeSupportedGetV2Frame;\
1070      =5    ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME           ZW_ThermostatModeSupportedReport1byteV2Fram
             -e;\
1071      =5    ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME           ZW_ThermostatModeSupportedReport2byteV2Fram
             -e;\
1072      =5    ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME           ZW_ThermostatModeSupportedReport3byteV2Fram
             -e;\
1073      =5    ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME           ZW_ThermostatModeSupportedReport4byteV2Fram
             -e;\
1074      =5  /* Command class Thermostat Operating State */\
1075      =5    ZW_THERMOSTAT_OPERATING_STATE_GET_FRAME                      ZW_ThermostatOperatingStateGetFrame;\
1076      =5    ZW_THERMOSTAT_OPERATING_STATE_REPORT_FRAME                   ZW_ThermostatOperatingStateReportFrame;\
1077      =5  /* Command class Thermostat Operating State V2 */\
1078      =5    ZW_THERMOSTAT_OPERATING_STATE_GET_V2_FRAME                   ZW_ThermostatOperatingStateGetV2Frame;\
1079      =5    ZW_THERMOSTAT_OPERATING_STATE_REPORT_V2_FRAME                ZW_ThermostatOperatingStateReportV2Frame;\
1080      =5    ZW_THERMOSTAT_OPERATING_STATE_LOGGING_SUPPORTED_GET_V2_FRAME ZW_ThermostatOperatingStateLoggingSupported
             -GetV2Frame;\
1081      =5    ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_1BYTE_V2_FRAME ZW_ThermostatOperatingLoggingSupportedRe
             -port1byteV2Frame;\
1082      =5    ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_2BYTE_V2_FRAME ZW_ThermostatOperatingLoggingSupportedRe
             -port2byteV2Frame;\
1083      =5    ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_3BYTE_V2_FRAME ZW_ThermostatOperatingLoggingSupportedRe
             -port3byteV2Frame;\
1084      =5    ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_4BYTE_V2_FRAME ZW_ThermostatOperatingLoggingSupportedRe
             -port4byteV2Frame;\
1085      =5    ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_1BYTE_V2_FRAME     ZW_ThermostatOperatingStateLoggingGet1byteV
             -2Frame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 44  

1086      =5    ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_2BYTE_V2_FRAME     ZW_ThermostatOperatingStateLoggingGet2byteV
             -2Frame;\
1087      =5    ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_3BYTE_V2_FRAME     ZW_ThermostatOperatingStateLoggingGet3byteV
             -2Frame;\
1088      =5    ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_4BYTE_V2_FRAME     ZW_ThermostatOperatingStateLoggingGet4byteV
             -2Frame;\
1089      =5    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG           VG_ThermostatOperatingStateLoggingReportV2V
             -Group;\
1090      =5    ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_1BYTE_V2_FRAME  ZW_ThermostatOperatingStateLoggingReport1by
             -teV2Frame;\
1091      =5    ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_2BYTE_V2_FRAME  ZW_ThermostatOperatingStateLoggingReport2by
             -teV2Frame;\
1092      =5    ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_3BYTE_V2_FRAME  ZW_ThermostatOperatingStateLoggingReport3by
             -teV2Frame;\
1093      =5    ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_4BYTE_V2_FRAME  ZW_ThermostatOperatingStateLoggingReport4by
             -teV2Frame;\
1094      =5  /* Command class Thermostat Setback */\
1095      =5    ZW_THERMOSTAT_SETBACK_GET_FRAME                              ZW_ThermostatSetbackGetFrame;\
1096      =5    ZW_THERMOSTAT_SETBACK_REPORT_FRAME                           ZW_ThermostatSetbackReportFrame;\
1097      =5    ZW_THERMOSTAT_SETBACK_SET_FRAME                              ZW_ThermostatSetbackSetFrame;\
1098      =5  /* Command class Thermostat Setpoint */\
1099      =5    ZW_THERMOSTAT_SETPOINT_GET_FRAME                             ZW_ThermostatSetpointGetFrame;\
1100      =5    ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_FRAME                    ZW_ThermostatSetpointReport1byteFrame;\
1101      =5    ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_FRAME                    ZW_ThermostatSetpointReport2byteFrame;\
1102      =5    ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_FRAME                    ZW_ThermostatSetpointReport3byteFrame;\
1103      =5    ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_FRAME                    ZW_ThermostatSetpointReport4byteFrame;\
1104      =5    ZW_THERMOSTAT_SETPOINT_SET_1BYTE_FRAME                       ZW_ThermostatSetpointSet1byteFrame;\
1105      =5    ZW_THERMOSTAT_SETPOINT_SET_2BYTE_FRAME                       ZW_ThermostatSetpointSet2byteFrame;\
1106      =5    ZW_THERMOSTAT_SETPOINT_SET_3BYTE_FRAME                       ZW_ThermostatSetpointSet3byteFrame;\
1107      =5    ZW_THERMOSTAT_SETPOINT_SET_4BYTE_FRAME                       ZW_ThermostatSetpointSet4byteFrame;\
1108      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_FRAME                   ZW_ThermostatSetpointSupportedGetFrame;\
1109      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_FRAME          ZW_ThermostatSetpointSupportedReport1byteFr
             -ame;\
1110      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_FRAME          ZW_ThermostatSetpointSupportedReport2byteFr
             -ame;\
1111      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_FRAME          ZW_ThermostatSetpointSupportedReport3byteFr
             -ame;\
1112      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_FRAME          ZW_ThermostatSetpointSupportedReport4byteFr
             -ame;\
1113      =5  /* Command class Thermostat Setpoint V2 */\
1114      =5    ZW_THERMOSTAT_SETPOINT_GET_V2_FRAME                          ZW_ThermostatSetpointGetV2Frame;\
1115      =5    ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V2_FRAME                 ZW_ThermostatSetpointReport1byteV2Frame;\
1116      =5    ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V2_FRAME                 ZW_ThermostatSetpointReport2byteV2Frame;\
1117      =5    ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V2_FRAME                 ZW_ThermostatSetpointReport3byteV2Frame;\
1118      =5    ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V2_FRAME                 ZW_ThermostatSetpointReport4byteV2Frame;\
1119      =5    ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V2_FRAME                    ZW_ThermostatSetpointSet1byteV2Frame;\
1120      =5    ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V2_FRAME                    ZW_ThermostatSetpointSet2byteV2Frame;\
1121      =5    ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V2_FRAME                    ZW_ThermostatSetpointSet3byteV2Frame;\
1122      =5    ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V2_FRAME                    ZW_ThermostatSetpointSet4byteV2Frame;\
1123      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V2_FRAME                ZW_ThermostatSetpointSupportedGetV2Frame;\
1124      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_V2_FRAME       ZW_ThermostatSetpointSupportedReport1byteV2
             -Frame;\
1125      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_V2_FRAME       ZW_ThermostatSetpointSupportedReport2byteV2
             -Frame;\
1126      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_V2_FRAME       ZW_ThermostatSetpointSupportedReport3byteV2
             -Frame;\
1127      =5    ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_V2_FRAME       ZW_ThermostatSetpointSupportedReport4byteV2
             -Frame;\
1128      =5  /* Command class Time Parameters */\
1129      =5    ZW_TIME_PARAMETERS_GET_FRAME                                 ZW_TimeParametersGetFrame;\
1130      =5    ZW_TIME_PARAMETERS_REPORT_FRAME                              ZW_TimeParametersReportFrame;\
1131      =5    ZW_TIME_PARAMETERS_SET_FRAME                                 ZW_TimeParametersSetFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 45  

1132      =5  /* Command class Time */\
1133      =5    ZW_DATE_GET_FRAME                                            ZW_DateGetFrame;\
1134      =5    ZW_DATE_REPORT_FRAME                                         ZW_DateReportFrame;\
1135      =5    ZW_TIME_GET_FRAME                                            ZW_TimeGetFrame;\
1136      =5    ZW_TIME_REPORT_FRAME                                         ZW_TimeReportFrame;\
1137      =5  /* Command class Time V2 */\
1138      =5    ZW_DATE_GET_V2_FRAME                                         ZW_DateGetV2Frame;\
1139      =5    ZW_DATE_REPORT_V2_FRAME                                      ZW_DateReportV2Frame;\
1140      =5    ZW_TIME_GET_V2_FRAME                                         ZW_TimeGetV2Frame;\
1141      =5    ZW_TIME_OFFSET_GET_V2_FRAME                                  ZW_TimeOffsetGetV2Frame;\
1142      =5    ZW_TIME_OFFSET_REPORT_V2_FRAME                               ZW_TimeOffsetReportV2Frame;\
1143      =5    ZW_TIME_OFFSET_SET_V2_FRAME                                  ZW_TimeOffsetSetV2Frame;\
1144      =5    ZW_TIME_REPORT_V2_FRAME                                      ZW_TimeReportV2Frame;\
1145      =5  /* Command class Transport Service */\
1146      =5    ZW_COMMAND_FIRST_FRAGMENT_1BYTE_FRAME                        ZW_CommandFirstFragment1byteFrame;\
1147      =5    ZW_COMMAND_FIRST_FRAGMENT_2BYTE_FRAME                        ZW_CommandFirstFragment2byteFrame;\
1148      =5    ZW_COMMAND_FIRST_FRAGMENT_3BYTE_FRAME                        ZW_CommandFirstFragment3byteFrame;\
1149      =5    ZW_COMMAND_FIRST_FRAGMENT_4BYTE_FRAME                        ZW_CommandFirstFragment4byteFrame;\
1150      =5    ZW_COMMAND_FRAGMENT_COMPLETE_FRAME                           ZW_CommandFragmentCompleteFrame;\
1151      =5    VG_COMMAND_FRAGMENT_REQUEST_VG                               VG_CommandFragmentRequestVGroup;\
1152      =5    ZW_COMMAND_FRAGMENT_REQUEST_1BYTE_FRAME                      ZW_CommandFragmentRequest1byteFrame;\
1153      =5    ZW_COMMAND_FRAGMENT_REQUEST_2BYTE_FRAME                      ZW_CommandFragmentRequest2byteFrame;\
1154      =5    ZW_COMMAND_FRAGMENT_REQUEST_3BYTE_FRAME                      ZW_CommandFragmentRequest3byteFrame;\
1155      =5    ZW_COMMAND_FRAGMENT_REQUEST_4BYTE_FRAME                      ZW_CommandFragmentRequest4byteFrame;\
1156      =5    ZW_COMMAND_FRAGMENT_WAIT_FRAME                               ZW_CommandFragmentWaitFrame;\
1157      =5    ZW_COMMAND_SUBSEQUENT_FRAGMENT_1BYTE_FRAME                   ZW_CommandSubsequentFragment1byteFrame;\
1158      =5    ZW_COMMAND_SUBSEQUENT_FRAGMENT_2BYTE_FRAME                   ZW_CommandSubsequentFragment2byteFrame;\
1159      =5    ZW_COMMAND_SUBSEQUENT_FRAGMENT_3BYTE_FRAME                   ZW_CommandSubsequentFragment3byteFrame;\
1160      =5    ZW_COMMAND_SUBSEQUENT_FRAGMENT_4BYTE_FRAME                   ZW_CommandSubsequentFragment4byteFrame;\
1161      =5  /* Command class User Code */\
1162      =5    ZW_USER_CODE_GET_FRAME                                       ZW_UserCodeGetFrame;\
1163      =5    ZW_USER_CODE_REPORT_FRAME                                    ZW_UserCodeReportFrame;\
1164      =5    ZW_USER_CODE_SET_FRAME                                       ZW_UserCodeSetFrame;\
1165      =5    ZW_USERS_NUMBER_GET_FRAME                                    ZW_UsersNumberGetFrame;\
1166      =5    ZW_USERS_NUMBER_REPORT_FRAME                                 ZW_UsersNumberReportFrame;\
1167      =5  /* Command class Version */\
1168      =5    ZW_VERSION_COMMAND_CLASS_GET_FRAME                           ZW_VersionCommandClassGetFrame;\
1169      =5    ZW_VERSION_COMMAND_CLASS_REPORT_FRAME                        ZW_VersionCommandClassReportFrame;\
1170      =5    ZW_VERSION_GET_FRAME                                         ZW_VersionGetFrame;\
1171      =5    ZW_VERSION_REPORT_FRAME                                      ZW_VersionReportFrame;\
1172      =5  /* Command class Wake Up */\
1173      =5    ZW_WAKE_UP_INTERVAL_GET_FRAME                                ZW_WakeUpIntervalGetFrame;\
1174      =5    ZW_WAKE_UP_INTERVAL_REPORT_FRAME                             ZW_WakeUpIntervalReportFrame;\
1175      =5    ZW_WAKE_UP_INTERVAL_SET_FRAME                                ZW_WakeUpIntervalSetFrame;\
1176      =5    ZW_WAKE_UP_NO_MORE_INFORMATION_FRAME                         ZW_WakeUpNoMoreInformationFrame;\
1177      =5    ZW_WAKE_UP_NOTIFICATION_FRAME                                ZW_WakeUpNotificationFrame;\
1178      =5  /* Command class Wake Up V2 */\
1179      =5    ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V2_FRAME                ZW_WakeUpIntervalCapabilitiesGetV2Frame;\
1180      =5    ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V2_FRAME             ZW_WakeUpIntervalCapabilitiesReportV2Frame;
             -\
1181      =5    ZW_WAKE_UP_INTERVAL_GET_V2_FRAME                             ZW_WakeUpIntervalGetV2Frame;\
1182      =5    ZW_WAKE_UP_INTERVAL_REPORT_V2_FRAME                          ZW_WakeUpIntervalReportV2Frame;\
1183      =5    ZW_WAKE_UP_INTERVAL_SET_V2_FRAME                             ZW_WakeUpIntervalSetV2Frame;\
1184      =5    ZW_WAKE_UP_NO_MORE_INFORMATION_V2_FRAME                      ZW_WakeUpNoMoreInformationV2Frame;\
1185      =5    ZW_WAKE_UP_NOTIFICATION_V2_FRAME                             ZW_WakeUpNotificationV2Frame;\
1186      =5  /* Command class Zip 6lowpan */\
1187      =5    ZW_LOWPAN_FIRST_FRAGMENT_1BYTE_FRAME                         ZW_LowpanFirstFragment1byteFrame;\
1188      =5    ZW_LOWPAN_FIRST_FRAGMENT_2BYTE_FRAME                         ZW_LowpanFirstFragment2byteFrame;\
1189      =5    ZW_LOWPAN_FIRST_FRAGMENT_3BYTE_FRAME                         ZW_LowpanFirstFragment3byteFrame;\
1190      =5    ZW_LOWPAN_FIRST_FRAGMENT_4BYTE_FRAME                         ZW_LowpanFirstFragment4byteFrame;\
1191      =5    ZW_LOWPAN_SUBSEQUENT_FRAGMENT_1BYTE_FRAME                    ZW_LowpanSubsequentFragment1byteFrame;\
1192      =5    ZW_LOWPAN_SUBSEQUENT_FRAGMENT_2BYTE_FRAME                    ZW_LowpanSubsequentFragment2byteFrame;\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 46  

1193      =5    ZW_LOWPAN_SUBSEQUENT_FRAGMENT_3BYTE_FRAME                    ZW_LowpanSubsequentFragment3byteFrame;\
1194      =5    ZW_LOWPAN_SUBSEQUENT_FRAGMENT_4BYTE_FRAME                    ZW_LowpanSubsequentFragment4byteFrame;\
1195      =5  /* Command class Zip */\
1196      =5    ZW_COMMAND_ZIP_PACKET_1BYTE_FRAME                            ZW_CommandZipPacket1byteFrame;\
1197      =5    ZW_COMMAND_ZIP_PACKET_2BYTE_FRAME                            ZW_CommandZipPacket2byteFrame;\
1198      =5    ZW_COMMAND_ZIP_PACKET_3BYTE_FRAME                            ZW_CommandZipPacket3byteFrame;\
1199      =5    ZW_COMMAND_ZIP_PACKET_4BYTE_FRAME                            ZW_CommandZipPacket4byteFrame;\
1200      =5  /* Command class Application Capability */\
1201      =5    ZW_COMMAND_COMMAND_CLASS_NOT_SUPPORTED_FRAME                 ZW_CommandCommandClassNotSupportedFrame;\
1202      =5  /* Command class Color Control */\
1203      =5    ZW_CAPABILITY_GET_FRAME                                      ZW_CapabilityGetFrame;\
1204      =5    ZW_CAPABILITY_REPORT_FRAME                                   ZW_CapabilityReportFrame;\
1205      =5    ZW_STATE_GET_FRAME                                           ZW_StateGetFrame;\
1206      =5    ZW_STATE_REPORT_FRAME                                        ZW_StateReportFrame;\
1207      =5    VG_STATE_SET_VG                                              VG_StateSetVGroup;\
1208      =5    ZW_STATE_SET_1BYTE_FRAME                                     ZW_StateSet1byteFrame;\
1209      =5    ZW_STATE_SET_2BYTE_FRAME                                     ZW_StateSet2byteFrame;\
1210      =5    ZW_STATE_SET_3BYTE_FRAME                                     ZW_StateSet3byteFrame;\
1211      =5    ZW_STATE_SET_4BYTE_FRAME                                     ZW_StateSet4byteFrame;\
1212      =5    ZW_START_CAPABILITY_LEVEL_CHANGE_FRAME                       ZW_StartCapabilityLevelChangeFrame;\
1213      =5    ZW_STOP_STATE_CHANGE_FRAME                                   ZW_StopStateChangeFrame;\
1214      =5  /* Command class Schedule */\
1215      =5    ZW_SCHEDULE_SUPPORTED_GET_FRAME                              ZW_ScheduleSupportedGetFrame;\
1216      =5    VG_SCHEDULE_SUPPORTED_REPORT_VG                              VG_ScheduleSupportedReportVGroup;\
1217      =5    ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_FRAME                     ZW_ScheduleSupportedReport1byteFrame;\
1218      =5    ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_FRAME                     ZW_ScheduleSupportedReport2byteFrame;\
1219      =5    ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_FRAME                     ZW_ScheduleSupportedReport3byteFrame;\
1220      =5    ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_FRAME                     ZW_ScheduleSupportedReport4byteFrame;\
1221      =5    VG_COMMAND_SCHEDULE_SET_1BYTE_VG                             VG_CommandScheduleSet1byteVGroup;\
1222      =5    VG_COMMAND_SCHEDULE_SET_2BYTE_VG                             VG_CommandScheduleSet2byteVGroup;\
1223      =5    VG_COMMAND_SCHEDULE_SET_3BYTE_VG                             VG_CommandScheduleSet3byteVGroup;\
1224      =5    VG_COMMAND_SCHEDULE_SET_4BYTE_VG                             VG_CommandScheduleSet4byteVGroup;\
1225      =5    ZW_COMMAND_SCHEDULE_SET_1BYTE_FRAME                          ZW_CommandScheduleSet1byteFrame;\
1226      =5    ZW_COMMAND_SCHEDULE_SET_2BYTE_FRAME                          ZW_CommandScheduleSet2byteFrame;\
1227      =5    ZW_COMMAND_SCHEDULE_SET_3BYTE_FRAME                          ZW_CommandScheduleSet3byteFrame;\
1228      =5    ZW_COMMAND_SCHEDULE_SET_4BYTE_FRAME                          ZW_CommandScheduleSet4byteFrame;\
1229      =5    ZW_COMMAND_SCHEDULE_GET_FRAME                                ZW_CommandScheduleGetFrame;\
1230      =5    VG_COMMAND_SCHEDULE_REPORT_1BYTE_VG                          VG_CommandScheduleReport1byteVGroup;\
1231      =5    VG_COMMAND_SCHEDULE_REPORT_2BYTE_VG                          VG_CommandScheduleReport2byteVGroup;\
1232      =5    VG_COMMAND_SCHEDULE_REPORT_3BYTE_VG                          VG_CommandScheduleReport3byteVGroup;\
1233      =5    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG                          VG_CommandScheduleReport4byteVGroup;\
1234      =5    ZW_COMMAND_SCHEDULE_REPORT_1BYTE_FRAME                       ZW_CommandScheduleReport1byteFrame;\
1235      =5    ZW_COMMAND_SCHEDULE_REPORT_2BYTE_FRAME                       ZW_CommandScheduleReport2byteFrame;\
1236      =5    ZW_COMMAND_SCHEDULE_REPORT_3BYTE_FRAME                       ZW_CommandScheduleReport3byteFrame;\
1237      =5    ZW_COMMAND_SCHEDULE_REPORT_4BYTE_FRAME                       ZW_CommandScheduleReport4byteFrame;\
1238      =5    ZW_SCHEDULE_REMOVE_FRAME                                     ZW_ScheduleRemoveFrame;\
1239      =5    ZW_SCHEDULE_STATE_SET_FRAME                                  ZW_ScheduleStateSetFrame;\
1240      =5    ZW_SCHEDULE_STATE_GET_FRAME                                  ZW_ScheduleStateGetFrame;\
1241      =5    ZW_SCHEDULE_STATE_REPORT_FRAME                               ZW_ScheduleStateReportFrame;\
1242      =5  /* Command class Network Management Primary */\
1243      =5    ZW_CONTROLLER_CHANGE_FRAME                                   ZW_ControllerChangeFrame;\
1244      =5    ZW_CONTROLLER_CHANGE_STATUS_1BYTE_FRAME                      ZW_ControllerChangeStatus1byteFrame;\
1245      =5    ZW_CONTROLLER_CHANGE_STATUS_2BYTE_FRAME                      ZW_ControllerChangeStatus2byteFrame;\
1246      =5    ZW_CONTROLLER_CHANGE_STATUS_3BYTE_FRAME                      ZW_ControllerChangeStatus3byteFrame;\
1247      =5    ZW_CONTROLLER_CHANGE_STATUS_4BYTE_FRAME                      ZW_ControllerChangeStatus4byteFrame;\
1248      =5  /* Command class Zip Nd */\
1249      =5    ZW_ZIP_NODE_SOLICITATION_FRAME                               ZW_ZipNodeSolicitationFrame;\
1250      =5    ZW_ZIP_INV_NODE_SOLICITATION_FRAME                           ZW_ZipInvNodeSolicitationFrame;\
1251      =5    ZW_ZIP_NODE_ADVERTISEMENT_FRAME                              ZW_ZipNodeAdvertisementFrame;\
1252      =5  /* Command class Association Grp Info */\
1253      =5  
1254      =5  #define ZW_FRAME_COLLECTION_MACRO3\
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 47  

1255      =5    ZW_ASSOCIATION_GROUP_NAME_GET_FRAME                          ZW_AssociationGroupNameGetFrame;\
1256      =5    ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_FRAME                 ZW_AssociationGroupNameReport1byteFrame;\
1257      =5    ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_FRAME                 ZW_AssociationGroupNameReport2byteFrame;\
1258      =5    ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_FRAME                 ZW_AssociationGroupNameReport3byteFrame;\
1259      =5    ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_FRAME                 ZW_AssociationGroupNameReport4byteFrame;\
1260      =5    ZW_ASSOCIATION_GROUP_INFO_GET_FRAME                          ZW_AssociationGroupInfoGetFrame;\
1261      =5    VG_ASSOCIATION_GROUP_INFO_REPORT_VG                          VG_AssociationGroupInfoReportVGroup;\
1262      =5    ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_FRAME                 ZW_AssociationGroupInfoReport1byteFrame;\
1263      =5    ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_FRAME                 ZW_AssociationGroupInfoReport2byteFrame;\
1264      =5    ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_FRAME                 ZW_AssociationGroupInfoReport3byteFrame;\
1265      =5    ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_FRAME                 ZW_AssociationGroupInfoReport4byteFrame;\
1266      =5    ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_FRAME                  ZW_AssociationGroupCommandListGetFrame;\
1267      =5    ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_FRAME         ZW_AssociationGroupCommandListReport1byteFr
             -ame;\
1268      =5    ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_FRAME         ZW_AssociationGroupCommandListReport2byteFr
             -ame;\
1269      =5    ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_FRAME         ZW_AssociationGroupCommandListReport3byteFr
             -ame;\
1270      =5    ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_FRAME         ZW_AssociationGroupCommandListReport4byteFr
             -ame;\
1271      =5  /* Command class Device Reset Locally */\
1272      =5    ZW_DEVICE_RESET_LOCALLY_NOTIFICATION_FRAME                   ZW_DeviceResetLocallyNotificationFrame;\
1273      =5  /* Command class Central Scene */\
1274      =5    ZW_CENTRAL_SCENE_SUPPORTED_GET_FRAME                         ZW_CentralSceneSupportedGetFrame;\
1275      =5    ZW_CENTRAL_SCENE_SUPPORTED_REPORT_FRAME                      ZW_CentralSceneSupportedReportFrame;\
1276      =5    ZW_CENTRAL_SCENE_NOTIFICATION_FRAME                          ZW_CentralSceneNotificationFrame;\
1277      =5  /* Command class Ip Association */\
1278      =5    ZW_IP_ASSOCIATION_SET_1BYTE_FRAME                            ZW_IpAssociationSet1byteFrame;\
1279      =5    ZW_IP_ASSOCIATION_SET_2BYTE_FRAME                            ZW_IpAssociationSet2byteFrame;\
1280      =5    ZW_IP_ASSOCIATION_SET_3BYTE_FRAME                            ZW_IpAssociationSet3byteFrame;\
1281      =5    ZW_IP_ASSOCIATION_SET_4BYTE_FRAME                            ZW_IpAssociationSet4byteFrame;\
1282      =5    ZW_IP_ASSOCIATION_GET_FRAME                                  ZW_IpAssociationGetFrame;\
1283      =5    ZW_IP_ASSOCIATION_REPORT_1BYTE_FRAME                         ZW_IpAssociationReport1byteFrame;\
1284      =5    ZW_IP_ASSOCIATION_REPORT_2BYTE_FRAME                         ZW_IpAssociationReport2byteFrame;\
1285      =5    ZW_IP_ASSOCIATION_REPORT_3BYTE_FRAME                         ZW_IpAssociationReport3byteFrame;\
1286      =5    ZW_IP_ASSOCIATION_REPORT_4BYTE_FRAME                         ZW_IpAssociationReport4byteFrame;\
1287      =5    ZW_IP_ASSOCIATION_REMOVE_1BYTE_FRAME                         ZW_IpAssociationRemove1byteFrame;\
1288      =5    ZW_IP_ASSOCIATION_REMOVE_2BYTE_FRAME                         ZW_IpAssociationRemove2byteFrame;\
1289      =5    ZW_IP_ASSOCIATION_REMOVE_3BYTE_FRAME                         ZW_IpAssociationRemove3byteFrame;\
1290      =5    ZW_IP_ASSOCIATION_REMOVE_4BYTE_FRAME                         ZW_IpAssociationRemove4byteFrame;\
1291      =5  /* Command class Antitheft */\
1292      =5    ZW_ANTITHEFT_SET_1BYTE_FRAME                                 ZW_AntitheftSet1byteFrame;\
1293      =5    ZW_ANTITHEFT_SET_2BYTE_FRAME                                 ZW_AntitheftSet2byteFrame;\
1294      =5    ZW_ANTITHEFT_SET_3BYTE_FRAME                                 ZW_AntitheftSet3byteFrame;\
1295      =5    ZW_ANTITHEFT_SET_4BYTE_FRAME                                 ZW_AntitheftSet4byteFrame;\
1296      =5    ZW_ANTITHEFT_GET_FRAME                                       ZW_AntitheftGetFrame;\
1297      =5    ZW_ANTITHEFT_REPORT_1BYTE_FRAME                              ZW_AntitheftReport1byteFrame;\
1298      =5    ZW_ANTITHEFT_REPORT_2BYTE_FRAME                              ZW_AntitheftReport2byteFrame;\
1299      =5    ZW_ANTITHEFT_REPORT_3BYTE_FRAME                              ZW_AntitheftReport3byteFrame;\
1300      =5    ZW_ANTITHEFT_REPORT_4BYTE_FRAME                              ZW_AntitheftReport4byteFrame;\
1301      =5  /* Command class Antitheft V2 */\
1302      =5    ZW_ANTITHEFT_SET_1BYTE_V2_FRAME                              ZW_AntitheftSet1byteV2Frame;\
1303      =5    ZW_ANTITHEFT_SET_2BYTE_V2_FRAME                              ZW_AntitheftSet2byteV2Frame;\
1304      =5    ZW_ANTITHEFT_SET_3BYTE_V2_FRAME                              ZW_AntitheftSet3byteV2Frame;\
1305      =5    ZW_ANTITHEFT_SET_4BYTE_V2_FRAME                              ZW_AntitheftSet4byteV2Frame;\
1306      =5    ZW_ANTITHEFT_GET_V2_FRAME                                    ZW_AntitheftGetV2Frame;\
1307      =5    ZW_ANTITHEFT_REPORT_1BYTE_V2_FRAME                           ZW_AntitheftReport1byteV2Frame;\
1308      =5    ZW_ANTITHEFT_REPORT_2BYTE_V2_FRAME                           ZW_AntitheftReport2byteV2Frame;\
1309      =5    ZW_ANTITHEFT_REPORT_3BYTE_V2_FRAME                           ZW_AntitheftReport3byteV2Frame;\
1310      =5    ZW_ANTITHEFT_REPORT_4BYTE_V2_FRAME                           ZW_AntitheftReport4byteV2Frame;\
1311      =5  
1312      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 48  

1313      =5  /************ Basic Device Class identifiers **************/
1314      =5  #define BASIC_TYPE_CONTROLLER                                                            0x01 /*Node is a 
             -portable controller */
1315      =5  #define BASIC_TYPE_ROUTING_SLAVE                                                         0x04 /*Node is a 
             -slave with routing capabilities*/
1316      =5  #define BASIC_TYPE_SLAVE                                                                 0x03 /*Node is a 
             -slave*/
1317      =5  #define BASIC_TYPE_STATIC_CONTROLLER                                                     0x02 /*Node is a 
             -static controller*/
1318      =5  
1319      =5  
1320      =5  /***** Generic and Specific Device Class identifiers ******/
1321      =5  /* Device class Av Control Point */
1322      =5  #define GENERIC_TYPE_AV_CONTROL_POINT                                                    0x03 /*AV Control
             - Point*/
1323      =5  #define SPECIFIC_TYPE_DOORBELL                                                           0x12
1324      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1325      =5  #define SPECIFIC_TYPE_SATELLITE_RECEIVER                                                 0x04 /*Satellite 
             -Receiver*/
1326      =5  #define SPECIFIC_TYPE_SATELLITE_RECEIVER_V2                                              0x11 /*Satellite 
             -Receiver V2*/
1327      =5  
1328      =5  /* Device class Display */
1329      =5  #define GENERIC_TYPE_DISPLAY                                                             0x04
1330      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00
1331      =5  #define SPECIFIC_TYPE_SIMPLE_DISPLAY                                                     0x01 /*Display (s
             -imple) Device Type*/
1332      =5  
1333      =5  /* Device class Entry Control */
1334      =5  #define GENERIC_TYPE_ENTRY_CONTROL                                                       0x40 /*Entry Cont
             -rol*/
1335      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class Not Used*/
1336      =5  #define SPECIFIC_TYPE_DOOR_LOCK                                                          0x01 /*Door Lock*
             -/
1337      =5  #define SPECIFIC_TYPE_ADVANCED_DOOR_LOCK                                                 0x02 /*Advanced D
             -oor Lock*/
1338      =5  #define SPECIFIC_TYPE_SECURE_KEYPAD_DOOR_LOCK                                            0x03 /*Door Lock 
             -(keypad âlever) Device Type*/
1339      =5  #define SPECIFIC_TYPE_SECURE_KEYPAD_DOOR_LOCK_DEADBOLT                                   0x04 /*Door Lock 
             -(keypad â deadbolt) Device Type*/
1340      =5  
1341      =5  /* Device class Generic Controller */
1342      =5  #define GENERIC_TYPE_GENERIC_CONTROLLER                                                  0x01 /*Remote Con
             -troller*/
1343      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1344      =5  #define SPECIFIC_TYPE_PORTABLE_REMOTE_CONTROLLER                                         0x01 /*Remote Con
             -trol (Multi Purpose) Device Type*/
1345      =5  #define SPECIFIC_TYPE_PORTABLE_SCENE_CONTROLLER                                          0x02 /*Portable S
             -cene Controller*/
1346      =5  #define SPECIFIC_TYPE_PORTABLE_INSTALLER_TOOL                                            0x03
1347      =5  #define SPECIFIC_TYPE_REMOTE_CONTROL_AV                                                  0x04 /*Remote Con
             -trol (AV) Device Type*/
1348      =5  #define SPECIFIC_TYPE_REMOTE_CONTROL_SIMPLE                                              0x06 /*Remote Con
             -trol (Simple) Device Type*/
1349      =5  
1350      =5  /* Device class Meter */
1351      =5  #define GENERIC_TYPE_METER                                                               0x31 /*Meter*/
1352      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 49  

1353      =5  #define SPECIFIC_TYPE_SIMPLE_METER                                                       0x01 /*Sub Energy
             - Meter Device Type*/
1354      =5  #define SPECIFIC_TYPE_ADV_ENERGY_CONTROL                                                 0x02 /*Whole Home
             - Energy Meter (Advanced) Device Type*/
1355      =5  #define SPECIFIC_TYPE_WHOLE_HOME_METER_SIMPLE                                            0x03 /*Whole Home
             - Meter (Simple) Device Type*/
1356      =5  
1357      =5  /* Device class Meter Pulse */
1358      =5  #define GENERIC_TYPE_METER_PULSE                                                         0x30 /*Pulse Mete
             -r*/
1359      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1360      =5  
1361      =5  /* Device class Non Interoperable */
1362      =5  #define GENERIC_TYPE_NON_INTEROPERABLE                                                   0xFF /*Non intero
             -perable*/
1363      =5  
1364      =5  /* Device class Repeater Slave */
1365      =5  #define GENERIC_TYPE_REPEATER_SLAVE                                                      0x0F /*Repeater S
             -lave*/
1366      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1367      =5  #define SPECIFIC_TYPE_REPEATER_SLAVE                                                     0x01 /*Basic Repe
             -ater Slave*/
1368      =5  
1369      =5  /* Device class Security Panel */
1370      =5  #define GENERIC_TYPE_SECURITY_PANEL                                                      0x17
1371      =5  #define SPECIFIC_TYPE_ZONED_SECURITY_PANEL                                               0x01
1372      =5  
1373      =5  /* Device class Semi Interoperable */
1374      =5  #define GENERIC_TYPE_SEMI_INTEROPERABLE                                                  0x50 /*Semi Inter
             -operable*/
1375      =5  #define SPECIFIC_TYPE_ENERGY_PRODUCTION                                                  0x01 /*Energy Pro
             -duction*/
1376      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1377      =5  
1378      =5  /* Device class Sensor Alarm */
1379      =5  #define GENERIC_TYPE_SENSOR_ALARM                                                        0xA1
1380      =5  #define SPECIFIC_TYPE_ADV_ZENSOR_NET_ALARM_SENSOR                                        0x05
1381      =5  #define SPECIFIC_TYPE_ADV_ZENSOR_NET_SMOKE_SENSOR                                        0x0A
1382      =5  #define SPECIFIC_TYPE_BASIC_ROUTING_ALARM_SENSOR                                         0x01
1383      =5  #define SPECIFIC_TYPE_BASIC_ROUTING_SMOKE_SENSOR                                         0x06
1384      =5  #define SPECIFIC_TYPE_BASIC_ZENSOR_NET_ALARM_SENSOR                                      0x03
1385      =5  #define SPECIFIC_TYPE_BASIC_ZENSOR_NET_SMOKE_SENSOR                                      0x08
1386      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00
1387      =5  #define SPECIFIC_TYPE_ROUTING_ALARM_SENSOR                                               0x02
1388      =5  #define SPECIFIC_TYPE_ROUTING_SMOKE_SENSOR                                               0x07
1389      =5  #define SPECIFIC_TYPE_ZENSOR_NET_ALARM_SENSOR                                            0x04
1390      =5  #define SPECIFIC_TYPE_ZENSOR_NET_SMOKE_SENSOR                                            0x09
1391      =5  #define SPECIFIC_TYPE_ALARM_SENSOR                                                       0x0B /*Sensor (Al
             -arm) Device Type*/
1392      =5  
1393      =5  /* Device class Sensor Binary */
1394      =5  #define GENERIC_TYPE_SENSOR_BINARY                                                       0x20 /*Binary Sen
             -sor*/
1395      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1396      =5  #define SPECIFIC_TYPE_ROUTING_SENSOR_BINARY                                              0x01 /*Routing Bi
             -nary Sensor*/
1397      =5  
1398      =5  /* Device class Sensor Multilevel */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 50  

1399      =5  #define GENERIC_TYPE_SENSOR_MULTILEVEL                                                   0x21 /*Multilevel
             - Sensor*/
1400      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1401      =5  #define SPECIFIC_TYPE_ROUTING_SENSOR_MULTILEVEL                                          0x01 /*Sensor (Mu
             -ltilevel) Device Type*/
1402      =5  #define SPECIFIC_TYPE_CHIMNEY_FAN                                                        0x02
1403      =5  
1404      =5  /* Device class Static Controller */
1405      =5  #define GENERIC_TYPE_STATIC_CONTROLLER                                                   0x02 /*Static Con
             -troller*/
1406      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1407      =5  #define SPECIFIC_TYPE_PC_CONTROLLER                                                      0x01 /*Central Co
             -ntroller Device Type*/
1408      =5  #define SPECIFIC_TYPE_SCENE_CONTROLLER                                                   0x02 /*Scene Cont
             -roller*/
1409      =5  #define SPECIFIC_TYPE_STATIC_INSTALLER_TOOL                                              0x03
1410      =5  #define SPECIFIC_TYPE_SET_TOP_BOX                                                        0x04 /*Set Top Bo
             -x Device Type*/
1411      =5  #define SPECIFIC_TYPE_SUB_SYSTEM_CONTROLLER                                              0x05 /*Sub System
             - Controller Device Type*/
1412      =5  #define SPECIFIC_TYPE_TV                                                                 0x06 /*TV Device 
             -Type*/
1413      =5  #define SPECIFIC_TYPE_GATEWAY                                                            0x07 /*Gateway De
             -vice Type*/
1414      =5  
1415      =5  /* Device class Switch Binary */
1416      =5  #define GENERIC_TYPE_SWITCH_BINARY                                                       0x10 /*Binary Swi
             -tch*/
1417      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1418      =5  #define SPECIFIC_TYPE_POWER_SWITCH_BINARY                                                0x01 /*On/Off Pow
             -er Switch Device Type*/
1419      =5  #define SPECIFIC_TYPE_SCENE_SWITCH_BINARY                                                0x03 /*Binary Sce
             -ne Switch*/
1420      =5  #define SPECIFIC_TYPE_POWER_STRIP                                                        0x04 /*Power Stri
             -p Device Type*/
1421      =5  #define SPECIFIC_TYPE_SIREN                                                              0x05 /*Siren Devi
             -ce Type*/
1422      =5  #define SPECIFIC_TYPE_VALVE_OPEN_CLOSE                                                   0x06 /*Valve (ope
             -n/close) Device Type*/
1423      =5  #define SPECIFIC_DEVICE_BINARY_TUNABLE_COLOR_LIGHT                                       0x02
1424      =5  
1425      =5  /* Device class Switch Multilevel */
1426      =5  #define GENERIC_TYPE_SWITCH_MULTILEVEL                                                   0x11 /*Multilevel
             - Switch*/
1427      =5  #define SPECIFIC_TYPE_CLASS_A_MOTOR_CONTROL                                              0x05 /*Window Cov
             -ering No Position/Endpoint Device Type*/
1428      =5  #define SPECIFIC_TYPE_CLASS_B_MOTOR_CONTROL                                              0x06 /*Window Cov
             -ering Endpoint Aware Device Type*/
1429      =5  #define SPECIFIC_TYPE_CLASS_C_MOTOR_CONTROL                                              0x07 /*Window Cov
             -ering Position/Endpoint Aware Device Type*/
1430      =5  #define SPECIFIC_TYPE_MOTOR_MULTIPOSITION                                                0x03 /*Multiposit
             -ion Motor*/
1431      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1432      =5  #define SPECIFIC_TYPE_POWER_SWITCH_MULTILEVEL                                            0x01 /*Light Dimm
             -er Switch Device Type*/
1433      =5  #define SPECIFIC_TYPE_SCENE_SWITCH_MULTILEVEL                                            0x04 /*Multilevel
             - Scene Switch*/
1434      =5  #define SPECIFIC_TYPE_FAN_SWITCH                                                         0x05 /*Fan Switch
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 51  

             - Device Type*/
1435      =5  
1436      =5  /* Device class Switch Remote */
1437      =5  #define GENERIC_TYPE_SWITCH_REMOTE                                                       0x12 /*Remote Swi
             -tch*/
1438      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1439      =5  #define SPECIFIC_TYPE_SWITCH_REMOTE_BINARY                                               0x01 /*Binary Rem
             -ote Switch*/
1440      =5  #define SPECIFIC_TYPE_SWITCH_REMOTE_MULTILEVEL                                           0x02 /*Multilevel
             - Remote Switch*/
1441      =5  #define SPECIFIC_TYPE_SWITCH_REMOTE_TOGGLE_BINARY                                        0x03 /*Binary Tog
             -gle Remote Switch*/
1442      =5  #define SPECIFIC_TYPE_SWITCH_REMOTE_TOGGLE_MULTILEVEL                                    0x04 /*Multilevel
             - Toggle Remote Switch*/
1443      =5  
1444      =5  /* Device class Switch Toggle */
1445      =5  #define GENERIC_TYPE_SWITCH_TOGGLE                                                       0x13 /*Toggle Swi
             -tch*/
1446      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1447      =5  #define SPECIFIC_TYPE_SWITCH_TOGGLE_BINARY                                               0x01 /*Binary Tog
             -gle Switch*/
1448      =5  #define SPECIFIC_TYPE_SWITCH_TOGGLE_MULTILEVEL                                           0x02 /*Multilevel
             - Toggle Switch*/
1449      =5  
1450      =5  /* Device class Thermostat */
1451      =5  #define GENERIC_TYPE_THERMOSTAT                                                          0x08 /*Thermostat
             -*/
1452      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1453      =5  #define SPECIFIC_TYPE_SETBACK_SCHEDULE_THERMOSTAT                                        0x03 /*Setback Sc
             -hedule Thermostat*/
1454      =5  #define SPECIFIC_TYPE_SETBACK_THERMOSTAT                                                 0x05 /*Thermostat
             - (Setback) Device Type*/
1455      =5  #define SPECIFIC_TYPE_SETPOINT_THERMOSTAT                                                0x04
1456      =5  #define SPECIFIC_TYPE_THERMOSTAT_GENERAL                                                 0x02 /*Thermostat
             - General*/
1457      =5  #define SPECIFIC_TYPE_THERMOSTAT_GENERAL_V2                                              0x06 /*Thermostat
             - (HVAC) Device Type*/
1458      =5  #define SPECIFIC_TYPE_THERMOSTAT_HEATING                                                 0x01 /*Thermostat
             - Heating*/
1459      =5  
1460      =5  /* Device class Ventilation */
1461      =5  #define GENERIC_TYPE_VENTILATION                                                         0x16
1462      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00
1463      =5  #define SPECIFIC_TYPE_RESIDENTIAL_HRV                                                    0x01
1464      =5  
1465      =5  /* Device class Window Covering */
1466      =5  #define GENERIC_TYPE_WINDOW_COVERING                                                     0x09 /*Window Cov
             -ering*/
1467      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific D
             -evice Class not used*/
1468      =5  #define SPECIFIC_TYPE_SIMPLE_WINDOW_COVERING                                             0x01 /*Simple Win
             -dow Covering Control*/
1469      =5  
1470      =5  /* Device class Zip Node */
1471      =5  #define GENERIC_TYPE_ZIP_NODE                                                            0x15
1472      =5  #define SPECIFIC_TYPE_NOT_USED                                                           0x00
1473      =5  #define SPECIFIC_TYPE_ZIP_ADV_NODE                                                       0x02
1474      =5  #define SPECIFIC_TYPE_ZIP_TUN_NODE                                                       0x01
1475      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 52  

1476      =5  /* Device class Wall Controller */
1477      =5  #define GENERIC_TYPE_WALL_CONTROLLER                                                     0x18
1478      =5  #define SPECIFIC_TYPE_BASIC_WALL_CONTROLLER                                              0x01 /*Wall Contr
             -oller Device Type*/
1479      =5  
1480      =5  /* Device class Network Extender */
1481      =5  #define GENERIC_TYPE_NETWORK_EXTENDER                                                    0x05 /*Network Ex
             -tender Generic Device Class*/
1482      =5  #define SPECIFIC_TYPE_SECURE_EXTENDER                                                    0x01 /*Specific D
             -evice Secure Extender*/
1483      =5  
1484      =5  
1485      =5  /************* Z-Wave+ Role Type identifiers **************/
1486      =5  #define ROLE_TYPE_CENTRAL_STATIC_CONTROLLER                                              0x01
1487      =5  #define ROLE_TYPE_SUB_STATIC_CONTROLLER                                                  0x02
1488      =5  #define ROLE_TYPE_PORTABLE_CONTROLLER                                                    0x03
1489      =5  #define ROLE_TYPE_PORTABLE_REPORTING_CONTROLLER                                          0x04
1490      =5  #define ROLE_TYPE_PORTABLE_SLAVE                                                         0x05
1491      =5  #define ROLE_TYPE_ALWAYS_ON_SLAVE                                                        0x06
1492      =5  #define ROLE_TYPE_SLEEPING_REPORTING_SLAVE                                               0x07
1493      =5  #define ROLE_TYPE_REACHABLE_SLEEPING_SLAVE                                               0x08
1494      =5  
1495      =5  /************* Manufacturer ID identifiers **************/
1496      =5  #define MFG_ID_2B_ELECTRONICS                                      0x0028   //2B Electronics
1497      =5  #define MFG_ID_2GIG_TECHNOLOGIES_INC                               0x009B   //2gig Technologies Inc.
1498      =5  #define MFG_ID_3E_TECHNOLOGIES                                     0x002A   //3e Technologies
1499      =5  #define MFG_ID_A1_COMPONENTS                                       0x0022   //A-1 Components
1500      =5  #define MFG_ID_ABILIA                                              0x0117   //Abilia
1501      =5  #define MFG_ID_ACT_ADVANCED_CONTROL_TECHNOLOGIES                   0x0001   //ACT - Advanced Control Techn
             -ologies
1502      =5  #define MFG_ID_AEON_LABS                                           0x0086   //AEON Labs
1503      =5  #define MFG_ID_AIRLINE_MECHANICAL_CO_LTD                           0x0111   //Airline Mechanical Co., Ltd.
1504      =5  #define MFG_ID_ALARMCOM                                            0x0094   //Alarm.com
1505      =5  #define MFG_ID_ASIA_HEADING                                        0x0029   //Asia Heading
1506      =5  #define MFG_ID_ATECH                                               0x002B   //Atech
1507      =5  #define MFG_ID_BALBOA_INSTRUMENTS                                  0x0018   //Balboa Instruments
1508      =5  #define MFG_ID_BENEXT                                              0x008A   //BeNext
1509      =5  #define MFG_ID_BESAFER                                             0x002C   //BeSafer
1510      =5  #define MFG_ID_BOCA_DEVICES                                        0x0023   //Boca Devices
1511      =5  #define MFG_ID_BROADBAND_ENERGY_NETWORKS_INC                       0x002D   //Broadband Energy Networks In
             -c.
1512      =5  #define MFG_ID_BULOGICS                                            0x0026   //BuLogics
1513      =5  #define MFG_ID_CAMEO_COMMUNICATIONS_INC                            0x009C   //Cameo Communications Inc.
1514      =5  #define MFG_ID_CARRIER                                             0x002E   //Carrier
1515      =5  #define MFG_ID_CASAWORKS                                           0x000B   //CasaWorks
1516      =5  #define MFG_ID_CHROMAGIC_TECHNOLOGIES_CORPORATION                  0x0116   //Chromagic Technologies Corpo
             -ration
1517      =5  #define MFG_ID_COLOR_KINETICS_INCORPORATED                         0x002F   //Color Kinetics Incorporated
1518      =5  #define MFG_ID_CONNECTED_OBJECT                                    0x011B   //Connected Object
1519      =5  #define MFG_ID_CONTROLTHINK_LC                                     0x0019   //ControlThink LC
1520      =5  #define MFG_ID_CONVERGEX_LTD                                       0x000F   //ConvergeX Ltd.
1521      =5  #define MFG_ID_COOPER_LIGHTING                                     0x0079   //Cooper Lighting
1522      =5  #define MFG_ID_COOPER_WIRING_DEVICES                               0x001A   //Cooper Wiring Devices
1523      =5  #define MFG_ID_COVENTIVE_TECHNOLOGIES_INC                          0x009D   //Coventive Technologies Inc.
1524      =5  #define MFG_ID_CYBERHOUSE                                          0x0014   //Cyberhouse
1525      =5  #define MFG_ID_CYBERTAN_TECHNOLOGY_INC                             0x0067   //CyberTAN Technology, Inc.
1526      =5  #define MFG_ID_CYTECH_TECHNOLOGY_PRE_LTD                           0x0030   //Cytech Technology Pre Ltd.
1527      =5  #define MFG_ID_DANFOSS                                             0x0002   //Danfoss
1528      =5  #define MFG_ID_DESTINY_NETWORKS                                    0x0031   //Destiny Networks
1529      =5  #define MFG_ID_DIEHL_AKO                                           0x0103   //Diehl AKO
1530      =5  #define MFG_ID_DIGITAL_5_INC                                       0x0032   //Digital 5, Inc.
1531      =5  #define MFG_ID_ECOLINK                                             0x11F   //Ecolink
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 53  

1532      =5  #define MFG_ID_EKA_SYSTEMS                                         0x0087   //Eka Systems
1533      =5  #define MFG_ID_ELECTRONIC_SOLUTIONS                                0x0033   //Electronic Solutions
1534      =5  #define MFG_ID_ELGEV_ELECTRONICS_LTD                               0x0034   //El-Gev Electronics LTD
1535      =5  #define MFG_ID_ELK_PRODUCTS_INC                                    0x001B   //ELK Products, Inc.
1536      =5  #define MFG_ID_EMBEDIT_A_S                                         0x0035   //Embedit A/S
1537      =5  #define MFG_ID_EVERSPRING                                          0x0060   //Everspring
1538      =5  #define MFG_ID_EVOLVE                                              0x0113   //Evolve
1539      =5  #define MFG_ID_EXCEPTIONAL_INNOVATIONS                             0x0036   //Exceptional Innovations
1540      =5  #define MFG_ID_EXHAUSTO                                            0x0004   //Exhausto
1541      =5  #define MFG_ID_EXIGENT_SENSORS                                     0x009F   //Exigent Sensors
1542      =5  #define MFG_ID_FAKRO                                               0x0085   //Fakro
1543      =5  #define MFG_ID_FIBARGROUP                                          0x010F   //Fibargroup
1544      =5  #define MFG_ID_FOARD_SYSTEMS                                       0x0037   //Foard Systems
1545      =5  #define MFG_ID_FORTREZZ_LLC                                        0x0084   //FortrezZ LLC
1546      =5  #define MFG_ID_FOXCONN                                             0x011D   //Foxconn
1547      =5  #define MFG_ID_FROSTDALE                                           0x0110   //Frostdale
1548      =5  #define MFG_ID_GOOD_WAY_TECHNOLOGY_CO_LTD                          0x0068   //Good Way Technology Co., Ltd
1549      =5  #define MFG_ID_GREENWAVE_REALITY_INC                               0x0099   //GreenWave Reality Inc.
1550      =5  #define MFG_ID_HITECH_AUTOMATION                                   0x0017   //HiTech Automation
1551      =5  #define MFG_ID_HOME_AUTOMATED_INC                                  0x005B   //Home Automated Inc.
1552      =5  #define MFG_ID_HOME_AUTOMATED_LIVING                               0x000D   //Home Automated Living
1553      =5  #define MFG_ID_HOME_AUTOMATION_EUROPE                              0x009A   //Home Automation Europe
1554      =5  #define MFG_ID_HOME_DIRECTOR                                       0x0038   //Home Director
1555      =5  #define MFG_ID_HOMEMANAGEABLES_INC                                 0x0070   //Homemanageables, Inc.
1556      =5  #define MFG_ID_HOMEPRO                                             0x0050   //Homepro
1557      =5  #define MFG_ID_HOMESCENARIO                                        0x0162   //HomeScenario
1558      =5  #define MFG_ID_HOMESEER_TECHNOLOGIES                               0x000C   //HomeSeer Technologies
1559      =5  #define MFG_ID_HONEYWELL                                           0x0039   //Honeywell
1560      =5  #define MFG_ID_HORSTMANN_CONTROLS_LIMITED                          0x0059   //Horstmann Controls Limited
1561      =5  #define MFG_ID_ICOM_TECHNOLOGY_BV                                  0x0011   //iCOM Technology b.v.
1562      =5  #define MFG_ID_INGERSOLL_RAND_SCHLAGE                              0x006C   //Ingersoll Rand (Schlage)
1563      =5  #define MFG_ID_INLON_SRL                                           0x003A   //Inlon Srl
1564      =5  #define MFG_ID_INNOVUS                                             0x0077   //INNOVUS
1565      =5  #define MFG_ID_INTEL                                               0x0006   //Intel
1566      =5  #define MFG_ID_INTELLICON                                          0x001C   //IntelliCon
1567      =5  #define MFG_ID_INTERMATIC                                          0x0005   //Intermatic
1568      =5  #define MFG_ID_INTERNET_DOM                                        0x0013   //Internet Dom
1569      =5  #define MFG_ID_IR_SEC_SAFETY                                       0x003B   //IR Sec. & Safety
1570      =5  #define MFG_ID_JASCO_PRODUCTS                                      0x0063   //Jasco Products
1571      =5  #define MFG_ID_KAMSTRUP_A_S                                        0x0091   //Kamstrup A/S
1572      =5  #define MFG_ID_LAGOTEK_CORPORATION                                 0x0051   //Lagotek Corporation
1573      =5  #define MFG_ID_LEVITON                                             0x001D   //Leviton
1574      =5  #define MFG_ID_LIFESTYLE_NETWORKS                                  0x003C   //Lifestyle Networks
1575      =5  #define MFG_ID_LOGITECH                                            0x007F   //Logitech
1576      =5  #define MFG_ID_LOUDWATER_TECHNOLOGIES_LLC                          0x0025   //Loudwater Technologies, LLC
1577      =5  #define MFG_ID_LS_CONTROL                                          0x0071   //LS Control
1578      =5  #define MFG_ID_MARMITEK_BV                                         0x003D   //Marmitek BV
1579      =5  #define MFG_ID_MARTEC_ACCESS_PRODUCTS                              0x003E   //Martec Access Products
1580      =5  #define MFG_ID_MB_TURN_KEY_DESIGN                                  0x008F   //MB Turn Key Design
1581      =5  #define MFG_ID_MERTEN                                              0x007A   //Merten
1582      =5  #define MFG_ID_MITSUMI                                             0x0112   //MITSUMI
1583      =5  #define MFG_ID_MONSTER_CABLE                                       0x007E   //Monster Cable
1584      =5  #define MFG_ID_MOTOROLA                                            0x003F   //Motorola
1585      =5  #define MFG_ID_MTC_MAINTRONIC_GERMANY                              0x0083   //MTC Maintronic Germany
1586      =5  #define MFG_ID_NAPCO_SECURITY_TECHNOLOGIES_INC                     0x0121   //Napco Security Technologies,
             - Inc.
1587      =5  #define MFG_ID_NORTHQ                                              0x0096   //NorthQ
1588      =5  #define MFG_ID_NOVAR_ELECTRICAL_DEVICES_AND_SYSTEMS_EDS            0x0040   //Novar Electrical Devices and
             - Systems (EDS)
1589      =5  #define MFG_ID_OMNIMA_LIMITED                                      0x0119   //Omnima Limited
1590      =5  #define MFG_ID_OPENPEAK_INC                                        0x0041   //OpenPeak Inc.
1591      =5  #define MFG_ID_POLYCONTROL                                         0x010E   //Poly-control
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 54  

1592      =5  #define MFG_ID_POWERLYNX                                           0x0016   //PowerLynx
1593      =5  #define MFG_ID_PRAGMATIC_CONSULTING_INC                            0x0042   //Pragmatic Consulting Inc.
1594      =5  #define MFG_ID_PULSE_TECHNOLOGIES_ASPALIS                          0x005D   //Pulse Technologies (Aspalis)
1595      =5  #define MFG_ID_QEES                                                0x0095   //Qees
1596      =5  #define MFG_ID_RADIO_THERMOSTAT_COMPANY_OF_AMERICA_RTC             0x0098   //Radio Thermostat Company of 
             -America (RTC)
1597      =5  #define MFG_ID_RARITAN                                             0x008E   //Raritan
1598      =5  #define MFG_ID_REITZGROUPDE                                        0x0064   //Reitz-Group.de
1599      =5  #define MFG_ID_REMOTEC_TECHNOLOGY_LTD                              0x5254   //Remotec Technology Ltd
1600      =5  #define MFG_ID_RESIDENTIAL_CONTROL_SYSTEMS_INC_RCS                 0x0010   //Residential Control Systems,
             - Inc. (RCS)
1601      =5  #define MFG_ID_RS_SCENE_AUTOMATION                                 0x0065   //RS Scene Automation
1602      =5  #define MFG_ID_RYHERD_VENTURES                                     0x001E   //Ryherd Ventures
1603      =5  #define MFG_ID_SAN_SHIH_ELECTRICAL_ENTERPRISE_CO_LTD               0x0093   //San Shih Electrical Enterpri
             -se Co., Ltd.
1604      =5  #define MFG_ID_SCIENTIA_TECHNOLOGIES_INC                           0x001F   //Scientia Technologies, Inc.
1605      =5  #define MFG_ID_SECURE_WIRELESS                                     0x011E   //Secure Wireless
1606      =5  #define MFG_ID_SELUXIT                                             0x0069   //Seluxit
1607      =5  #define MFG_ID_SENMATIC_A_S                                        0x0043   //Senmatic A/S
1608      =5  #define MFG_ID_SEQUOIA_TECHNOLOGY_LTD                              0x0044   //Sequoia Technology LTD
1609      =5  #define MFG_ID_SIGMA_DESIGNS                                       0x0000   //Sigma Designs
1610      =5  #define MFG_ID_SINE_WIRELESS                                       0x0045   //Sine Wireless
1611      =5  #define MFG_ID_SMART_PRODUCTS_INC                                  0x0046   //Smart Products, Inc.
1612      =5  #define MFG_ID_SMK_MANUFACTURING_INC                               0x0102   //SMK Manufacturing Inc.
1613      =5  #define MFG_ID_SOMFY                                               0x0047   //Somfy
1614      =5  #define MFG_ID_SYLVANIA                                            0x0009   //Sylvania
1615      =5  #define MFG_ID_TEAM_PRECISION_PCL                                  0x0089   //Team Precision PCL
1616      =5  #define MFG_ID_TECHNIKU                                            0x000A   //Techniku
1617      =5  #define MFG_ID_TELL_IT_ONLINE                                      0x0012   //Tell It Online
1618      =5  #define MFG_ID_TELSEY                                              0x0048   //Telsey
1619      =5  #define MFG_ID_THERE_CORPORATION                                   0x010C   //There Corporation
1620      =5  #define MFG_ID_TKB_HOME                                            0x0118   //TKB Home
1621      =5  #define MFG_ID_TKH_GROUP_EMINENT                                   0x011C   //TKH Group / Eminent
1622      =5  #define MFG_ID_TRANE_CORPORATION                                   0x008B   //Trane Corporation
1623      =5  #define MFG_ID_TRICKLESTAR                                         0x0066   //TrickleStar
1624      =5  #define MFG_ID_TRICKLESTAR_LTD_FORMER_EMPOWER_CONTROLS_LTD         0x006B   //Tricklestar Ltd. (former Emp
             -ower Controls Ltd.)
1625      =5  #define MFG_ID_TRIDIUM                                             0x0055   //Tridium
1626      =5  #define MFG_ID_TWISTHINK                                           0x0049   //Twisthink
1627      =5  #define MFG_ID_UNIVERSAL_ELECTRONICS_INC                           0x0020   //Universal Electronics Inc.
1628      =5  #define MFG_ID_VDA                                                 0x010A   //VDA
1629      =5  #define MFG_ID_VERO_DUCO                                           0x0080   //Vero Duco
1630      =5  #define MFG_ID_VIEWSONIC_CORPORATION                               0x005E   //ViewSonic Corporation
1631      =5  #define MFG_ID_VIMAR_CRS                                           0x0007   //Vimar CRS
1632      =5  #define MFG_ID_VISION_SECURITY                                     0x0109   //Vision Security
1633      =5  #define MFG_ID_VISUALIZE                                           0x004A   //Visualize
1634      =5  #define MFG_ID_WATT_STOPPER                                        0x004B   //Watt Stopper
1635      =5  #define MFG_ID_WAYNE_DALTON                                        0x0008   //Wayne Dalton
1636      =5  #define MFG_ID_WENZHOU_MTLC_ELECTRIC_APPLIANCES_COLTD              0x011A   //Wenzhou MTLC Electric Applia
             -nces Co.,Ltd.
1637      =5  #define MFG_ID_WINTOP                                              0x0097   //Wintop
1638      =5  #define MFG_ID_WOODWARD_LABS                                       0x004C   //Woodward Labs
1639      =5  #define MFG_ID_WRAP                                                0x0003   //Wrap
1640      =5  #define MFG_ID_XANBOO                                              0x004D   //Xanboo
1641      =5  #define MFG_ID_ZDATA_LLC                                           0x004E   //Zdata, LLC.
1642      =5  #define MFG_ID_ZONOFF                                              0x0120   //Zonoff
1643      =5  #define MFG_ID_ZWAVE_TECHNOLOGIA                                   0x004F   //Z-Wave Technologia
1644      =5  #define MFG_ID_ZWAVEME                                             0x0115   //Z-Wave.Me
1645      =5  #define MFG_ID_ZYKRONIX                                            0x0021   //Zykronix
1646      =5  
1647      =5  
1648      =5  /*************** command class identifiers ****************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 55  

1649      =5  #define COMMAND_CLASS_ALARM                                                              0x71
1650      =5  #define COMMAND_CLASS_ALARM_V2                                                           0x71
1651      =5  #define COMMAND_CLASS_NOTIFICATION_V3                                                    0x71
1652      =5  #define COMMAND_CLASS_APPLICATION_STATUS                                                 0x22
1653      =5  #define COMMAND_CLASS_ASSOCIATION_COMMAND_CONFIGURATION                                  0x9B
1654      =5  #define COMMAND_CLASS_ASSOCIATION                                                        0x85
1655      =5  #define COMMAND_CLASS_ASSOCIATION_V2                                                     0x85
1656      =5  #define COMMAND_CLASS_AV_CONTENT_DIRECTORY_MD                                            0x95
1657      =5  #define COMMAND_CLASS_AV_CONTENT_SEARCH_MD                                               0x97
1658      =5  #define COMMAND_CLASS_AV_RENDERER_STATUS                                                 0x96
1659      =5  #define COMMAND_CLASS_AV_TAGGING_MD                                                      0x99
1660      =5  #define COMMAND_CLASS_BASIC_TARIFF_INFO                                                  0x36
1661      =5  #define COMMAND_CLASS_BASIC_WINDOW_COVERING                                              0x50
1662      =5  #define COMMAND_CLASS_BASIC                                                              0x20
1663      =5  #define COMMAND_CLASS_BATTERY                                                            0x80
1664      =5  #define COMMAND_CLASS_CHIMNEY_FAN                                                        0x2A
1665      =5  #define COMMAND_CLASS_CLIMATE_CONTROL_SCHEDULE                                           0x46
1666      =5  #define COMMAND_CLASS_CLOCK                                                              0x81
1667      =5  #define COMMAND_CLASS_CONFIGURATION                                                      0x70
1668      =5  #define COMMAND_CLASS_CONFIGURATION_V2                                                   0x70
1669      =5  #define COMMAND_CLASS_CONTROLLER_REPLICATION                                             0x21
1670      =5  #define COMMAND_CLASS_CRC_16_ENCAP                                                       0x56
1671      =5  #define COMMAND_CLASS_DCP_CONFIG                                                         0x3A
1672      =5  #define COMMAND_CLASS_DCP_MONITOR                                                        0x3B
1673      =5  #define COMMAND_CLASS_DOOR_LOCK_LOGGING                                                  0x4C
1674      =5  #define COMMAND_CLASS_DOOR_LOCK                                                          0x62
1675      =5  #define COMMAND_CLASS_DOOR_LOCK_V2                                                       0x62
1676      =5  #define COMMAND_CLASS_ENERGY_PRODUCTION                                                  0x90
1677      =5  #define COMMAND_CLASS_FIRMWARE_UPDATE_MD                                                 0x7A
1678      =5  #define COMMAND_CLASS_FIRMWARE_UPDATE_MD_V2                                              0x7A
1679      =5  #define COMMAND_CLASS_GEOGRAPHIC_LOCATION                                                0x8C
1680      =5  #define COMMAND_CLASS_GROUPING_NAME                                                      0x7B
1681      =5  #define COMMAND_CLASS_HAIL                                                               0x82
1682      =5  #define COMMAND_CLASS_HRV_CONTROL                                                        0x39
1683      =5  #define COMMAND_CLASS_HRV_STATUS                                                         0x37
1684      =5  #define COMMAND_CLASS_INDICATOR                                                          0x87
1685      =5  #define COMMAND_CLASS_IP_CONFIGURATION                                                   0x9A
1686      =5  #define COMMAND_CLASS_LANGUAGE                                                           0x89
1687      =5  #define COMMAND_CLASS_LOCK                                                               0x76
1688      =5  #define COMMAND_CLASS_MANUFACTURER_PROPRIETARY                                           0x91
1689      =5  #define COMMAND_CLASS_MANUFACTURER_SPECIFIC                                              0x72
1690      =5  #define COMMAND_CLASS_MANUFACTURER_SPECIFIC_V2                                           0x72
1691      =5  #define COMMAND_CLASS_MARK                                                               0xEF
1692      =5  #define COMMAND_CLASS_METER_PULSE                                                        0x35
1693      =5  #define COMMAND_CLASS_METER_TBL_CONFIG                                                   0x3C
1694      =5  #define COMMAND_CLASS_METER_TBL_MONITOR                                                  0x3D
1695      =5  #define COMMAND_CLASS_METER_TBL_MONITOR_V2                                               0x3D
1696      =5  #define COMMAND_CLASS_METER_TBL_PUSH                                                     0x3E
1697      =5  #define COMMAND_CLASS_METER                                                              0x32
1698      =5  #define COMMAND_CLASS_METER_V2                                                           0x32
1699      =5  #define COMMAND_CLASS_METER_V3                                                           0x32
1700      =5  #define COMMAND_CLASS_MTP_WINDOW_COVERING                                                0x51
1701      =5  #define COMMAND_CLASS_MULTI_CHANNEL_ASSOCIATION_V2                                       0x8E
1702      =5  #define COMMAND_CLASS_MULTI_CHANNEL_V2                                                   0x60
1703      =5  #define COMMAND_CLASS_MULTI_CHANNEL_V3                                                   0x60
1704      =5  #define COMMAND_CLASS_MULTI_CMD                                                          0x8F
1705      =5  #define COMMAND_CLASS_MULTI_INSTANCE_ASSOCIATION                                         0x8E
1706      =5  #define COMMAND_CLASS_MULTI_INSTANCE                                                     0x60
1707      =5  #define COMMAND_CLASS_NETWORK_MANAGEMENT_PROXY                                           0x52
1708      =5  #define COMMAND_CLASS_NETWORK_MANAGEMENT_BASIC                                           0x4D
1709      =5  #define COMMAND_CLASS_NETWORK_MANAGEMENT_INCLUSION                                       0x34
1710      =5  #define COMMAND_CLASS_NO_OPERATION                                                       0x00
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 56  

1711      =5  #define COMMAND_CLASS_NODE_NAMING                                                        0x77
1712      =5  #define COMMAND_CLASS_NON_INTEROPERABLE                                                  0xF0
1713      =5  #define COMMAND_CLASS_POWERLEVEL                                                         0x73
1714      =5  #define COMMAND_CLASS_PREPAYMENT_ENCAPSULATION                                           0x41
1715      =5  #define COMMAND_CLASS_PREPAYMENT                                                         0x3F
1716      =5  #define COMMAND_CLASS_PROPRIETARY                                                        0x88
1717      =5  #define COMMAND_CLASS_PROTECTION                                                         0x75
1718      =5  #define COMMAND_CLASS_PROTECTION_V2                                                      0x75
1719      =5  #define COMMAND_CLASS_RATE_TBL_CONFIG                                                    0x48
1720      =5  #define COMMAND_CLASS_RATE_TBL_MONITOR                                                   0x49
1721      =5  #define COMMAND_CLASS_REMOTE_ASSOCIATION_ACTIVATE                                        0x7C
1722      =5  #define COMMAND_CLASS_REMOTE_ASSOCIATION                                                 0x7D
1723      =5  #define COMMAND_CLASS_SCENE_ACTIVATION                                                   0x2B
1724      =5  #define COMMAND_CLASS_SCENE_ACTUATOR_CONF                                                0x2C
1725      =5  #define COMMAND_CLASS_SCENE_CONTROLLER_CONF                                              0x2D
1726      =5  #define COMMAND_CLASS_SCHEDULE_ENTRY_LOCK                                                0x4E
1727      =5  #define COMMAND_CLASS_SCHEDULE_ENTRY_LOCK_V2                                             0x4E
1728      =5  #define COMMAND_CLASS_SCHEDULE_ENTRY_LOCK_V3                                             0x4E
1729      =5  #define COMMAND_CLASS_SCREEN_ATTRIBUTES                                                  0x93
1730      =5  #define COMMAND_CLASS_SCREEN_ATTRIBUTES_V2                                               0x93
1731      =5  #define COMMAND_CLASS_SCREEN_MD                                                          0x92
1732      =5  #define COMMAND_CLASS_SCREEN_MD_V2                                                       0x92
1733      =5  #define COMMAND_CLASS_SECURITY_PANEL_MODE                                                0x24
1734      =5  #define COMMAND_CLASS_SECURITY_PANEL_ZONE_SENSOR                                         0x2F
1735      =5  #define COMMAND_CLASS_SECURITY_PANEL_ZONE                                                0x2E
1736      =5  #define COMMAND_CLASS_SECURITY                                                           0x98
1737      =5  #define COMMAND_CLASS_SENSOR_ALARM                                                       0x9C /*SDS10963-4
             - The Sensor Alarm command class can be used to realize Sensor Alarms.*/
1738      =5  #define COMMAND_CLASS_SENSOR_BINARY                                                      0x30
1739      =5  #define COMMAND_CLASS_SENSOR_BINARY_V2                                                   0x30
1740      =5  #define COMMAND_CLASS_SENSOR_CONFIGURATION                                               0x9E /*This comma
             -nd class adds the possibility for sensors to act on either a measured value or on a*/
1741      =5  #define COMMAND_CLASS_SENSOR_MULTILEVEL                                                  0x31
1742      =5  #define COMMAND_CLASS_SENSOR_MULTILEVEL_V2                                               0x31
1743      =5  #define COMMAND_CLASS_SENSOR_MULTILEVEL_V3                                               0x31
1744      =5  #define COMMAND_CLASS_SENSOR_MULTILEVEL_V4                                               0x31
1745      =5  #define COMMAND_CLASS_SENSOR_MULTILEVEL_V5                                               0x31
1746      =5  #define COMMAND_CLASS_SENSOR_MULTILEVEL_V6                                               0x31
1747      =5  #define COMMAND_CLASS_SILENCE_ALARM                                                      0x9D /*SDS10963-4
             - The Alarm Silence command class can be used to nuisance silence to temporarily disable the sounding*/
1748      =5  #define COMMAND_CLASS_SIMPLE_AV_CONTROL                                                  0x94
1749      =5  #define COMMAND_CLASS_SWITCH_ALL                                                         0x27
1750      =5  #define COMMAND_CLASS_SWITCH_BINARY                                                      0x25
1751      =5  #define COMMAND_CLASS_SWITCH_MULTILEVEL                                                  0x26
1752      =5  #define COMMAND_CLASS_SWITCH_MULTILEVEL_V2                                               0x26
1753      =5  #define COMMAND_CLASS_SWITCH_MULTILEVEL_V3                                               0x26
1754      =5  #define COMMAND_CLASS_SWITCH_TOGGLE_BINARY                                               0x28
1755      =5  #define COMMAND_CLASS_SWITCH_TOGGLE_MULTILEVEL                                           0x29
1756      =5  #define COMMAND_CLASS_TARIFF_CONFIG                                                      0x4A
1757      =5  #define COMMAND_CLASS_TARIFF_TBL_MONITOR                                                 0x4B
1758      =5  #define COMMAND_CLASS_THERMOSTAT_FAN_MODE                                                0x44
1759      =5  #define COMMAND_CLASS_THERMOSTAT_FAN_MODE_V2                                             0x44
1760      =5  #define COMMAND_CLASS_THERMOSTAT_FAN_MODE_V3                                             0x44
1761      =5  #define COMMAND_CLASS_THERMOSTAT_FAN_STATE                                               0x45
1762      =5  #define COMMAND_CLASS_THERMOSTAT_HEATING                                                 0x38
1763      =5  #define COMMAND_CLASS_THERMOSTAT_MODE                                                    0x40
1764      =5  #define COMMAND_CLASS_THERMOSTAT_MODE_V2                                                 0x40
1765      =5  #define COMMAND_CLASS_THERMOSTAT_OPERATING_STATE                                         0x42
1766      =5  #define COMMAND_CLASS_THERMOSTAT_OPERATING_STATE_V2                                      0x42
1767      =5  #define COMMAND_CLASS_THERMOSTAT_SETBACK                                                 0x47
1768      =5  #define COMMAND_CLASS_THERMOSTAT_SETPOINT                                                0x43
1769      =5  #define COMMAND_CLASS_THERMOSTAT_SETPOINT_V2                                             0x43
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 57  

1770      =5  #define COMMAND_CLASS_TIME_PARAMETERS                                                    0x8B
1771      =5  #define COMMAND_CLASS_TIME                                                               0x8A
1772      =5  #define COMMAND_CLASS_TIME_V2                                                            0x8A
1773      =5  #define COMMAND_CLASS_TRANSPORT_SERVICE                                                  0x55
1774      =5  #define COMMAND_CLASS_USER_CODE                                                          0x63
1775      =5  #define COMMAND_CLASS_VERSION                                                            0x86
1776      =5  #define COMMAND_CLASS_WAKE_UP                                                            0x84
1777      =5  #define COMMAND_CLASS_WAKE_UP_V2                                                         0x84
1778      =5  #define COMMAND_CLASS_ZIP_6LOWPAN                                                        0x4F
1779      =5  #define COMMAND_CLASS_ZIP                                                                0x23
1780      =5  #define COMMAND_CLASS_APPLICATION_CAPABILITY                                             0x57
1781      =5  #define COMMAND_CLASS_COLOR_CONTROL                                                      0x33
1782      =5  #define COMMAND_CLASS_SCHEDULE                                                           0x53
1783      =5  #define COMMAND_CLASS_NETWORK_MANAGEMENT_PRIMARY                                         0x54
1784      =5  #define COMMAND_CLASS_ZIP_ND                                                             0x58
1785      =5  #define COMMAND_CLASS_ASSOCIATION_GRP_INFO                                               0x59
1786      =5  #define COMMAND_CLASS_DEVICE_RESET_LOCALLY                                               0x5A
1787      =5  #define COMMAND_CLASS_CENTRAL_SCENE                                                      0x5B
1788      =5  #define COMMAND_CLASS_IP_ASSOCIATION                                                     0x5C
1789      =5  #define COMMAND_CLASS_ANTITHEFT                                                          0x5D
1790      =5  #define COMMAND_CLASS_ANTITHEFT_V2                                                       0x5D
1791      =5  
1792      =5  /*************** command class extended identifiers ****************/
1793      =5  #define COMMAND_CLASS_SECURITY_SCHEME0_MARK                                              0xF100
1794      =5  
1795      =5  /* Unknown command class commands */
1796      =5  #define UNKNOWN_VERSION                                                                  0x00
1797      =5  
1798      =5  /* Alarm command class commands */
1799      =5  #define ALARM_VERSION                                                                    0x01
1800      =5  #define ALARM_GET                                                                        0x04
1801      =5  #define ALARM_REPORT                                                                     0x05
1802      =5  
1803      =5  /* Alarm command class commands */
1804      =5  #define ALARM_VERSION_V2                                                                 0x02
1805      =5  #define ALARM_GET_V2                                                                     0x04
1806      =5  #define ALARM_REPORT_V2                                                                  0x05
1807      =5  #define ALARM_SET_V2                                                                     0x06
1808      =5  #define ALARM_TYPE_SUPPORTED_GET_V2                                                      0x07
1809      =5  #define ALARM_TYPE_SUPPORTED_REPORT_V2                                                   0x08
1810      =5  /* Values used for Alarm Get command */
1811      =5  #define ALARM_GET_RESERVED_V2                                                            0x00
1812      =5  #define ALARM_GET_SMOKE_V2                                                               0x01
1813      =5  #define ALARM_GET_CO_V2                                                                  0x02
1814      =5  #define ALARM_GET_CO2_V2                                                                 0x03
1815      =5  #define ALARM_GET_HEAT_V2                                                                0x04
1816      =5  #define ALARM_GET_WATER_V2                                                               0x05
1817      =5  #define ALARM_GET_ACCESS_CONTROL_V2                                                      0x06
1818      =5  #define ALARM_GET_BURGLAR_V2                                                             0x07
1819      =5  #define ALARM_GET_POWER_MANAGEMENT_V2                                                    0x08
1820      =5  #define ALARM_GET_SYSTEM_V2                                                              0x09
1821      =5  #define ALARM_GET_EMERGENCY_V2                                                           0x0A
1822      =5  #define ALARM_GET_CLOCK_V2                                                               0x0B
1823      =5  #define ALARM_GET_FIRST_V2                                                               0xFF
1824      =5  /* Values used for Alarm Report command */
1825      =5  #define ALARM_REPORT_RESERVED_V2                                                         0x00
1826      =5  #define ALARM_REPORT_SMOKE_V2                                                            0x01
1827      =5  #define ALARM_REPORT_CO_V2                                                               0x02
1828      =5  #define ALARM_REPORT_CO2_V2                                                              0x03
1829      =5  #define ALARM_REPORT_HEAT_V2                                                             0x04
1830      =5  #define ALARM_REPORT_WATER_V2                                                            0x05
1831      =5  #define ALARM_REPORT_ACCESS_CONTROL_V2                                                   0x06
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 58  

1832      =5  #define ALARM_REPORT_BURGLAR_V2                                                          0x07
1833      =5  #define ALARM_REPORT_POWER_MANAGEMENT_V2                                                 0x08
1834      =5  #define ALARM_REPORT_SYSTEM_V2                                                           0x09
1835      =5  #define ALARM_REPORT_EMERGENCY_V2                                                        0x0A
1836      =5  #define ALARM_REPORT_CLOCK_V2                                                            0x0B
1837      =5  #define ALARM_REPORT_FIRST_V2                                                            0xFF
1838      =5  /* Values used for Alarm Set command */
1839      =5  #define ALARM_SET_RESERVED_V2                                                            0x00
1840      =5  #define ALARM_SET_SMOKE_V2                                                               0x01
1841      =5  #define ALARM_SET_CO_V2                                                                  0x02
1842      =5  #define ALARM_SET_CO2_V2                                                                 0x03
1843      =5  #define ALARM_SET_HEAT_V2                                                                0x04
1844      =5  #define ALARM_SET_WATER_V2                                                               0x05
1845      =5  #define ALARM_SET_ACCESS_CONTROL_V2                                                      0x06
1846      =5  #define ALARM_SET_BURGLAR_V2                                                             0x07
1847      =5  #define ALARM_SET_POWER_MANAGEMENT_V2                                                    0x08
1848      =5  #define ALARM_SET_SYSTEM_V2                                                              0x09
1849      =5  #define ALARM_SET_EMERGENCY_V2                                                           0x0A
1850      =5  #define ALARM_SET_CLOCK_V2                                                               0x0B
1851      =5  #define ALARM_SET_FIRST_V2                                                               0xFF
1852      =5  /* Values used for Alarm Type Supported Report command */
1853      =5  #define ALARM_TYPE_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V2              0x1F
1854      =5  #define ALARM_TYPE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V2                         0x60
1855      =5  #define ALARM_TYPE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                        0x05
1856      =5  #define ALARM_TYPE_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V2                     0x80
1857      =5  
1858      =5  /* Notification command class commands */
1859      =5  #define NOTIFICATION_VERSION_V3                                                          0x03
1860      =5  #define NOTIFICATION_GET_V3                                                              0x04
1861      =5  #define NOTIFICATION_REPORT_V3                                                           0x05
1862      =5  #define NOTIFICATION_SET_V3                                                              0x06
1863      =5  #define NOTIFICATION_SUPPORTED_GET_V3                                                    0x07
1864      =5  #define NOTIFICATION_SUPPORTED_REPORT_V3                                                 0x08
1865      =5  #define EVENT_SUPPORTED_GET_V3                                                           0x01
1866      =5  #define EVENT_SUPPORTED_REPORT_V3                                                        0x02
1867      =5  /* Values used for Notification Get command */
1868      =5  #define NOTIFICATION_GET_RESERVED_V3                                                     0x00
1869      =5  #define NOTIFICATION_GET_SMOKE_V3                                                        0x01
1870      =5  #define NOTIFICATION_GET_CO_V3                                                           0x02
1871      =5  #define NOTIFICATION_GET_CO2_V3                                                          0x03
1872      =5  #define NOTIFICATION_GET_HEAT_V3                                                         0x04
1873      =5  #define NOTIFICATION_GET_WATER_V3                                                        0x05
1874      =5  #define NOTIFICATION_GET_ACCESS_CONTROL_V3                                               0x06
1875      =5  #define NOTIFICATION_GET_BURGLAR_V3                                                      0x07
1876      =5  #define NOTIFICATION_GET_POWER_MANAGEMENT_V3                                             0x08
1877      =5  #define NOTIFICATION_GET_SYSTEM_V3                                                       0x09
1878      =5  #define NOTIFICATION_GET_EMERGENCY_V3                                                    0x0A
1879      =5  #define NOTIFICATION_GET_CLOCK_V3                                                        0x0B
1880      =5  #define NOTIFICATION_GET_FIRST_V3                                                        0xFF
1881      =5  /* Values used for Notification Report command */
1882      =5  #define NOTIFICATION_REPORT_RESERVED_V3                                                  0x00
1883      =5  #define NOTIFICATION_REPORT_SMOKE_V3                                                     0x01
1884      =5  #define NOTIFICATION_REPORT_CO_V3                                                        0x02
1885      =5  #define NOTIFICATION_REPORT_CO2_V3                                                       0x03
1886      =5  #define NOTIFICATION_REPORT_HEAT_V3                                                      0x04
1887      =5  #define NOTIFICATION_REPORT_WATER_V3                                                     0x05
1888      =5  #define NOTIFICATION_REPORT_ACCESS_CONTROL_V3                                            0x06
1889      =5  #define NOTIFICATION_REPORT_BURGLAR_V3                                                   0x07
1890      =5  #define NOTIFICATION_REPORT_POWER_MANAGEMENT_V3                                          0x08
1891      =5  #define NOTIFICATION_REPORT_SYSTEM_V3                                                    0x09
1892      =5  #define NOTIFICATION_REPORT_EMERGENCY_V3                                                 0x0A
1893      =5  #define NOTIFICATION_REPORT_CLOCK_V3                                                     0x0B
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 59  

1894      =5  #define NOTIFICATION_REPORT_FIRST_V3                                                     0xFF
1895      =5  #define NOTIFICATION_REPORT_PROPERTIES1_EVENT_PARAMETERS_LENGTH_MASK_V3                  0x1F
1896      =5  #define NOTIFICATION_REPORT_PROPERTIES1_RESERVED_MASK_V3                                 0x60
1897      =5  #define NOTIFICATION_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                                0x05
1898      =5  #define NOTIFICATION_REPORT_PROPERTIES1_SEQUENCE_BIT_MASK_V3                             0x80
1899      =5  /* Values used for Notification Set command */
1900      =5  #define NOTIFICATION_SET_RESERVED_V3                                                     0x00
1901      =5  #define NOTIFICATION_SET_SMOKE_V3                                                        0x01
1902      =5  #define NOTIFICATION_SET_CO_V3                                                           0x02
1903      =5  #define NOTIFICATION_SET_CO2_V3                                                          0x03
1904      =5  #define NOTIFICATION_SET_HEAT_V3                                                         0x04
1905      =5  #define NOTIFICATION_SET_WATER_V3                                                        0x05
1906      =5  #define NOTIFICATION_SET_ACCESS_CONTROL_V3                                               0x06
1907      =5  #define NOTIFICATION_SET_BURGLAR_V3                                                      0x07
1908      =5  #define NOTIFICATION_SET_POWER_MANAGEMENT_V3                                             0x08
1909      =5  #define NOTIFICATION_SET_SYSTEM_V3                                                       0x09
1910      =5  #define NOTIFICATION_SET_EMERGENCY_V3                                                    0x0A
1911      =5  #define NOTIFICATION_SET_CLOCK_V3                                                        0x0B
1912      =5  #define NOTIFICATION_SET_FIRST_V3                                                        0xFF
1913      =5  /* Values used for Notification Supported Report command */
1914      =5  #define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V3            0x1F
1915      =5  #define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V3                       0x60
1916      =5  #define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                      0x05
1917      =5  #define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V3                   0x80
1918      =5  /* Values used for Event Supported Get command */
1919      =5  #define EVENT_SUPPORTED_GET_RESERVED_V3                                                  0x00
1920      =5  #define EVENT_SUPPORTED_GET_SMOKE_V3                                                     0x01
1921      =5  #define EVENT_SUPPORTED_GET_CO_V3                                                        0x02
1922      =5  #define EVENT_SUPPORTED_GET_CO2_V3                                                       0x03
1923      =5  #define EVENT_SUPPORTED_GET_HEAT_V3                                                      0x04
1924      =5  #define EVENT_SUPPORTED_GET_WATER_V3                                                     0x05
1925      =5  #define EVENT_SUPPORTED_GET_ACCESS_CONTROL_V3                                            0x06
1926      =5  #define EVENT_SUPPORTED_GET_BURGLAR_V3                                                   0x07
1927      =5  #define EVENT_SUPPORTED_GET_POWER_MANAGEMENT_V3                                          0x08
1928      =5  #define EVENT_SUPPORTED_GET_SYSTEM_V3                                                    0x09
1929      =5  #define EVENT_SUPPORTED_GET_EMERGENCY_V3                                                 0x0A
1930      =5  #define EVENT_SUPPORTED_GET_CLOCK_V3                                                     0x0B
1931      =5  #define EVENT_SUPPORTED_GET_FIRST_V3                                                     0xFF
1932      =5  /* Values used for Event Supported Report command */
1933      =5  #define EVENT_SUPPORTED_REPORT_RESERVED_V3                                               0x00
1934      =5  #define EVENT_SUPPORTED_REPORT_SMOKE_V3                                                  0x01
1935      =5  #define EVENT_SUPPORTED_REPORT_CO_V3                                                     0x02
1936      =5  #define EVENT_SUPPORTED_REPORT_CO2_V3                                                    0x03
1937      =5  #define EVENT_SUPPORTED_REPORT_HEAT_V3                                                   0x04
1938      =5  #define EVENT_SUPPORTED_REPORT_WATER_V3                                                  0x05
1939      =5  #define EVENT_SUPPORTED_REPORT_ACCESS_CONTROL_V3                                         0x06
1940      =5  #define EVENT_SUPPORTED_REPORT_BURGLAR_V3                                                0x07
1941      =5  #define EVENT_SUPPORTED_REPORT_POWER_MANAGEMENT_V3                                       0x08
1942      =5  #define EVENT_SUPPORTED_REPORT_SYSTEM_V3                                                 0x09
1943      =5  #define EVENT_SUPPORTED_REPORT_EMERGENCY_V3                                              0x0A
1944      =5  #define EVENT_SUPPORTED_REPORT_CLOCK_V3                                                  0x0B
1945      =5  #define EVENT_SUPPORTED_REPORT_FIRST_V3                                                  0xFF
1946      =5  #define EVENT_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V3                   0x1F
1947      =5  #define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V3                              0xE0
1948      =5  #define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                             0x05
1949      =5  
1950      =5  /* Application Status command class commands */
1951      =5  #define APPLICATION_STATUS_VERSION                                                       0x01
1952      =5  #define APPLICATION_BUSY                                                                 0x01
1953      =5  #define APPLICATION_REJECTED_REQUEST                                                     0x02
1954      =5  /* Values used for Application Busy command */
1955      =5  #define APPLICATION_BUSY_TRY_AGAIN_LATER                                                 0x00
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 60  

1956      =5  #define APPLICATION_BUSY_TRY_AGAIN_IN_WAIT_TIME_SECONDS                                  0x01
1957      =5  #define APPLICATION_BUSY_REQUEST_QUEUED_EXECUTED_LATER                                   0x02
1958      =5  
1959      =5  /* Association Command Configuration command class commands */
1960      =5  #define ASSOCIATION_COMMAND_CONFIGURATION_VERSION                                        0x01
1961      =5  #define COMMAND_CONFIGURATION_GET                                                        0x04
1962      =5  #define COMMAND_CONFIGURATION_REPORT                                                     0x05
1963      =5  #define COMMAND_CONFIGURATION_SET                                                        0x03
1964      =5  #define COMMAND_RECORDS_SUPPORTED_GET                                                    0x01
1965      =5  #define COMMAND_RECORDS_SUPPORTED_REPORT                                                 0x02
1966      =5  /* Values used for Command Configuration Report command */
1967      =5  #define COMMAND_CONFIGURATION_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_MASK                  0x0F
1968      =5  #define COMMAND_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_MASK                           0x70
1969      =5  #define COMMAND_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_SHIFT                          0x04
1970      =5  #define COMMAND_CONFIGURATION_REPORT_PROPERTIES1_FIRST_BIT_MASK                          0x80
1971      =5  /* Values used for Command Records Supported Report command */
1972      =5  #define COMMAND_RECORDS_SUPPORTED_REPORT_PROPERTIES1_CONF_CMD_BIT_MASK                   0x01
1973      =5  #define COMMAND_RECORDS_SUPPORTED_REPORT_PROPERTIES1_V_C_BIT_MASK                        0x02
1974      =5  #define COMMAND_RECORDS_SUPPORTED_REPORT_PROPERTIES1_MAX_COMMAND_LENGTH_MASK             0xFC
1975      =5  #define COMMAND_RECORDS_SUPPORTED_REPORT_PROPERTIES1_MAX_COMMAND_LENGTH_SHIFT            0x02
1976      =5  
1977      =5  /* Association command class commands */
1978      =5  #define ASSOCIATION_VERSION                                                              0x01
1979      =5  #define ASSOCIATION_GET                                                                  0x02
1980      =5  #define ASSOCIATION_GROUPINGS_GET                                                        0x05
1981      =5  #define ASSOCIATION_GROUPINGS_REPORT                                                     0x06
1982      =5  #define ASSOCIATION_REMOVE                                                               0x04
1983      =5  #define ASSOCIATION_REPORT                                                               0x03
1984      =5  #define ASSOCIATION_SET                                                                  0x01
1985      =5  
1986      =5  /* Association command class commands */
1987      =5  #define ASSOCIATION_VERSION_V2                                                           0x02
1988      =5  #define ASSOCIATION_GET_V2                                                               0x02
1989      =5  #define ASSOCIATION_GROUPINGS_GET_V2                                                     0x05
1990      =5  #define ASSOCIATION_GROUPINGS_REPORT_V2                                                  0x06
1991      =5  #define ASSOCIATION_REMOVE_V2                                                            0x04
1992      =5  #define ASSOCIATION_REPORT_V2                                                            0x03
1993      =5  #define ASSOCIATION_SET_V2                                                               0x01
1994      =5  #define ASSOCIATION_SPECIFIC_GROUP_GET_V2                                                0x0B
1995      =5  #define ASSOCIATION_SPECIFIC_GROUP_REPORT_V2                                             0x0C
1996      =5  
1997      =5  /* Av Content Directory Md command class commands */
1998      =5  #define AV_CONTENT_DIRECTORY_MD_VERSION                                                  0x01
1999      =5  #define AV_CONTENT_BROWSE_MD_BY_LETTER_GET                                               0x03
2000      =5  #define AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT                                            0x04
2001      =5  #define AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET                                             0x05
2002      =5  #define AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT                                          0x06
2003      =5  #define AV_CONTENT_BROWSE_MD_GET                                                         0x01
2004      =5  #define AV_CONTENT_BROWSE_MD_REPORT                                                      0x02
2005      =5  #define AV_MATCH_ITEM_TO_RENDERER_MD_GET                                                 0x07
2006      =5  #define AV_MATCH_ITEM_TO_RENDERER_MD_REPORT                                              0x08
2007      =5  
2008      =5  /* Av Content Search Md command class commands */
2009      =5  #define AV_CONTENT_SEARCH_MD_VERSION                                                     0x01
2010      =5  #define AV_CONTENT_SEARCH_MD_GET                                                         0x01
2011      =5  #define AV_CONTENT_SEARCH_MD_REPORT                                                      0x02
2012      =5  
2013      =5  /* Av Renderer Status command class commands */
2014      =5  #define AV_RENDERER_STATUS_VERSION                                                       0x01
2015      =5  #define AV_RENDERER_STATUS_GET                                                           0x01
2016      =5  #define AV_RENDERER_STATUS_REPORT                                                        0x02
2017      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 61  

2018      =5  /* Av Tagging Md command class commands */
2019      =5  #define AV_TAGGING_MD_VERSION                                                            0x01
2020      =5  #define AV_TAGGING_MD_GET                                                                0x01
2021      =5  #define AV_TAGGING_MD_REPORT                                                             0x02
2022      =5  
2023      =5  /* Basic Tariff Info command class commands */
2024      =5  #define BASIC_TARIFF_INFO_VERSION                                                        0x01
2025      =5  #define BASIC_TARIFF_INFO_GET                                                            0x01
2026      =5  #define BASIC_TARIFF_INFO_REPORT                                                         0x02
2027      =5  /* Values used for Basic Tariff Info Report command */
2028      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES1_TOTAL_NO_IMPORT_RATES_MASK                  0x0F
2029      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES1_RESERVED_MASK                               0x70
2030      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES1_RESERVED_SHIFT                              0x04
2031      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES1_DUAL_BIT_MASK                               0x80
2032      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES2_E1_CURRENT_RATE_IN_USE_MASK                 0x0F
2033      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES2_RESERVED_MASK                               0xF0
2034      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES2_RESERVED_SHIFT                              0x04
2035      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES3_E2_CURRENT_RATE_IN_USE_MASK                 0x0F
2036      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES3_RESERVED_MASK                               0xF0
2037      =5  #define BASIC_TARIFF_INFO_REPORT_PROPERTIES3_RESERVED_SHIFT                              0x04
2038      =5  
2039      =5  /* Basic Window Covering command class commands */
2040      =5  #define BASIC_WINDOW_COVERING_VERSION                                                    0x01
2041      =5  #define BASIC_WINDOW_COVERING_START_LEVEL_CHANGE                                         0x01
2042      =5  #define BASIC_WINDOW_COVERING_STOP_LEVEL_CHANGE                                          0x02
2043      =5  /* Values used for Basic Window Covering Start Level Change command */
2044      =5  #define BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_LEVEL_RESERVED1_MASK                    0x3F
2045      =5  #define BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_LEVEL_OPEN_CLOSE_BIT_MASK               0x40
2046      =5  #define BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_LEVEL_RESERVED2_BIT_MASK                0x80
2047      =5  
2048      =5  /* Basic command class commands */
2049      =5  #define BASIC_VERSION                                                                    0x01
2050      =5  #define BASIC_GET                                                                        0x02
2051      =5  #define BASIC_REPORT                                                                     0x03
2052      =5  #define BASIC_SET                                                                        0x01
2053      =5  
2054      =5  /* Battery command class commands */
2055      =5  #define BATTERY_VERSION                                                                  0x01
2056      =5  #define BATTERY_GET                                                                      0x02
2057      =5  #define BATTERY_REPORT                                                                   0x03
2058      =5  
2059      =5  /* Chimney Fan command class commands */
2060      =5  #define CHIMNEY_FAN_VERSION                                                              0x01
2061      =5  #define CHIMNEY_FAN_ALARM_LOG_GET                                                        0x20
2062      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT                                                     0x21
2063      =5  #define CHIMNEY_FAN_ALARM_LOG_SET                                                        0x1F
2064      =5  #define CHIMNEY_FAN_ALARM_STATUS_GET                                                     0x23
2065      =5  #define CHIMNEY_FAN_ALARM_STATUS_REPORT                                                  0x24
2066      =5  #define CHIMNEY_FAN_ALARM_STATUS_SET                                                     0x22
2067      =5  #define CHIMNEY_FAN_ALARM_TEMP_GET                                                       0x0E
2068      =5  #define CHIMNEY_FAN_ALARM_TEMP_REPORT                                                    0x0F
2069      =5  #define CHIMNEY_FAN_ALARM_TEMP_SET                                                       0x0D
2070      =5  #define CHIMNEY_FAN_BOOST_TIME_GET                                                       0x11
2071      =5  #define CHIMNEY_FAN_BOOST_TIME_REPORT                                                    0x12
2072      =5  #define CHIMNEY_FAN_BOOST_TIME_SET                                                       0x10
2073      =5  #define CHIMNEY_FAN_DEFAULT_SET                                                          0x28
2074      =5  #define CHIMNEY_FAN_MIN_SPEED_GET                                                        0x26
2075      =5  #define CHIMNEY_FAN_MIN_SPEED_REPORT                                                     0x27
2076      =5  #define CHIMNEY_FAN_MIN_SPEED_SET                                                        0x25
2077      =5  #define CHIMNEY_FAN_MODE_GET                                                             0x17
2078      =5  #define CHIMNEY_FAN_MODE_REPORT                                                          0x18
2079      =5  #define CHIMNEY_FAN_MODE_SET                                                             0x16
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 62  

2080      =5  #define CHIMNEY_FAN_SETUP_GET                                                            0x1A
2081      =5  #define CHIMNEY_FAN_SETUP_REPORT                                                         0x1B
2082      =5  #define CHIMNEY_FAN_SETUP_SET                                                            0x19
2083      =5  #define CHIMNEY_FAN_SPEED_GET                                                            0x05
2084      =5  #define CHIMNEY_FAN_SPEED_REPORT                                                         0x06
2085      =5  #define CHIMNEY_FAN_SPEED_SET                                                            0x04
2086      =5  #define CHIMNEY_FAN_START_TEMP_GET                                                       0x08
2087      =5  #define CHIMNEY_FAN_START_TEMP_REPORT                                                    0x09
2088      =5  #define CHIMNEY_FAN_START_TEMP_SET                                                       0x07
2089      =5  #define CHIMNEY_FAN_STATE_GET                                                            0x02
2090      =5  #define CHIMNEY_FAN_STATE_REPORT                                                         0x03
2091      =5  #define CHIMNEY_FAN_STATE_SET                                                            0x01
2092      =5  #define CHIMNEY_FAN_STATUS_GET                                                           0x1D
2093      =5  #define CHIMNEY_FAN_STATUS_REPORT                                                        0x1E
2094      =5  #define CHIMNEY_FAN_STOP_TEMP_GET                                                        0x0B
2095      =5  #define CHIMNEY_FAN_STOP_TEMP_REPORT                                                     0x0C
2096      =5  #define CHIMNEY_FAN_STOP_TEMP_SET                                                        0x0A
2097      =5  #define CHIMNEY_FAN_STOP_TIME_GET                                                        0x14
2098      =5  #define CHIMNEY_FAN_STOP_TIME_REPORT                                                     0x15
2099      =5  #define CHIMNEY_FAN_STOP_TIME_SET                                                        0x13
2100      =5  /* Values used for Chimney Fan Alarm Log Report command */
2101      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_RESERVED1_BIT_MASK                    0x01
2102      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_EXTERNAL_ALARM_1_BIT_MASK             0x02
2103      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_SENSOR_ERROR_1_BIT_MASK               0x04
2104      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_ALARM_TEMPERATURE_EXCEEDED_1_BIT_MASK 0x08
2105      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_RESERVED2_MASK                        0x70
2106      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_RESERVED2_SHIFT                       0x04
2107      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_ALARM_STILL_ACTIVE_1_BIT_MASK         0x80
2108      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_RESERVED1_BIT_MASK                    0x01
2109      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_EXTERNAL_ALARM_2_BIT_MASK             0x02
2110      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_SENSOR_ERROR_2_BIT_MASK               0x04
2111      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_ALARM_TEMPERATURE_EXCEEDED_2_BIT_MASK 0x08
2112      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_RESERVED2_MASK                        0x70
2113      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_RESERVED2_SHIFT                       0x04
2114      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_ALARM_STILL_ACTIVE_2_BIT_MASK         0x80
2115      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_RESERVED1_BIT_MASK                    0x01
2116      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_EXTERNAL_ALARM_3_BIT_MASK             0x02
2117      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_SENSOR_ERROR_3_BIT_MASK               0x04
2118      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_ALARM_TEMPERATURE_EXCEEDED_3_BIT_MASK 0x08
2119      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_RESERVED2_MASK                        0x70
2120      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_RESERVED2_SHIFT                       0x04
2121      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_ALARM_STILL_ACTIVE_3_BIT_MASK         0x80
2122      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_RESERVED1_BIT_MASK                    0x01
2123      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_EXTERNAL_ALARM_4_BIT_MASK             0x02
2124      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_SENSOR_ERROR_4_BIT_MASK               0x04
2125      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_ALARM_TEMPERATURE_EXCEEDED_4_BIT_MASK 0x08
2126      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_RESERVED2_MASK                        0x70
2127      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_RESERVED2_SHIFT                       0x04
2128      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_ALARM_STILL_ACTIVE_4_BIT_MASK         0x80
2129      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_RESERVED1_BIT_MASK                    0x01
2130      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_EXTERNAL_ALARM_5_BIT_MASK             0x02
2131      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_SENSOR_ERROR_5_BIT_MASK               0x04
2132      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_ALARM_TEMPERATURE_EXCEEDED_5_BIT_MASK 0x08
2133      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_RESERVED2_MASK                        0x70
2134      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_RESERVED2_SHIFT                       0x04
2135      =5  #define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_ALARM_STILL_ACTIVE_5_BIT_MASK         0x80
2136      =5  /* Values used for Chimney Fan Alarm Log Set command */
2137      =5  #define CHIMNEY_FAN_ALARM_LOG_SET_RESET_LOG                                              0x08
2138      =5  /* Values used for Chimney Fan Alarm Status Report command */
2139      =5  #define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_SERVICE_BIT_MASK                    0x01
2140      =5  #define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_EXTERNAL_ALARM_BIT_MASK             0x02
2141      =5  #define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_SENSOR_ERROR_BIT_MASK               0x04
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 63  

2142      =5  #define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_ALARM_TEMPERATURE_EXCEEDED_BIT_MASK 0x08
2143      =5  #define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_NOT_USED_MASK                       0x30
2144      =5  #define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_NOT_USED_SHIFT                      0x04
2145      =5  #define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_SPEED_CHANGE_ENABLE_BIT_MASK        0x40
2146      =5  #define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_START_TEMPERATURE_EXCEEDED_BIT_MASK 0x80
2147      =5  /* Values used for Chimney Fan Alarm Status Set command */
2148      =5  #define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_NOT_USED1_BIT_MASK                          0x01
2149      =5  #define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_ACKNOWLEDGE_EXTERNAL_ALARM_BIT_MASK         0x02
2150      =5  #define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_ACKNOWLEDGE_SENSOR_ERROR_BIT_MASK           0x04
2151      =5  #define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_ACKNOWLEDGE_ALARM_TEMPERATURE_EXCEEDED_BIT_MASK 0x08
2152      =5  #define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_NOT_USED2_MASK                              0xF0
2153      =5  #define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_NOT_USED2_SHIFT                             0x04
2154      =5  /* Values used for Chimney Fan Alarm Temp Report command */
2155      =5  #define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_SIZE_MASK                              0x07
2156      =5  #define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_SCALE_MASK                             0x18
2157      =5  #define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_SCALE_SHIFT                            0x03
2158      =5  #define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_PRECISION_MASK                         0xE0
2159      =5  #define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_PRECISION_SHIFT                        0x05
2160      =5  /* Values used for Chimney Fan Alarm Temp Set command */
2161      =5  #define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_SIZE_MASK                                 0x07
2162      =5  #define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_SCALE_MASK                                0x18
2163      =5  #define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_SCALE_SHIFT                               0x03
2164      =5  #define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_PRECISION_MASK                            0xE0
2165      =5  #define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_PRECISION_SHIFT                           0x05
2166      =5  /* Values used for Chimney Fan Mode Report command */
2167      =5  #define CHIMNEY_FAN_MODE_REPORT_OFF                                                      0x00
2168      =5  #define CHIMNEY_FAN_MODE_REPORT_ON                                                       0xFF
2169      =5  /* Values used for Chimney Fan Mode Set command */
2170      =5  #define CHIMNEY_FAN_MODE_SET_OFF                                                         0x00
2171      =5  #define CHIMNEY_FAN_MODE_SET_ON                                                          0xFF
2172      =5  /* Values used for Chimney Fan Setup Report command */
2173      =5  #define CHIMNEY_FAN_SETUP_REPORT_OFF                                                     0x00
2174      =5  #define CHIMNEY_FAN_SETUP_REPORT_ON                                                      0xFF
2175      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_SIZE_1_MASK                                 0x07
2176      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_SCALE_1_MASK                                0x18
2177      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_SCALE_1_SHIFT                               0x03
2178      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_PRECISION_1_MASK                            0xE0
2179      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_PRECISION_1_SHIFT                           0x05
2180      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_SIZE_2_MASK                                 0x07
2181      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_SCALE_2_MASK                                0x18
2182      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_SCALE_2_SHIFT                               0x03
2183      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_PRECISION_2_MASK                            0xE0
2184      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_PRECISION_2_SHIFT                           0x05
2185      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_SIZE_3_MASK                                 0x07
2186      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_SCALE_3_MASK                                0x18
2187      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_SCALE_3_SHIFT                               0x03
2188      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_PRECISION_3_MASK                            0xE0
2189      =5  #define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_PRECISION_3_SHIFT                           0x05
2190      =5  /* Values used for Chimney Fan Setup Set command */
2191      =5  #define CHIMNEY_FAN_SETUP_SET_OFF                                                        0x00
2192      =5  #define CHIMNEY_FAN_SETUP_SET_ON                                                         0xFF
2193      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_SIZE_1_MASK                                    0x07
2194      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_SCALE_1_MASK                                   0x18
2195      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_SCALE_1_SHIFT                                  0x03
2196      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_PRECISION_1_MASK                               0xE0
2197      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_PRECISION_1_SHIFT                              0x05
2198      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_SIZE_2_MASK                                    0x07
2199      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_SCALE_2_MASK                                   0x18
2200      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_SCALE_2_SHIFT                                  0x03
2201      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_PRECISION_2_MASK                               0xE0
2202      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_PRECISION_2_SHIFT                              0x05
2203      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_SIZE_3_MASK                                    0x07
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 64  

2204      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_SCALE_3_MASK                                   0x18
2205      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_SCALE_3_SHIFT                                  0x03
2206      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_PRECISION_3_MASK                               0xE0
2207      =5  #define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_PRECISION_3_SHIFT                              0x05
2208      =5  /* Values used for Chimney Fan Start Temp Report command */
2209      =5  #define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_SIZE_MASK                              0x07
2210      =5  #define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_SCALE_MASK                             0x18
2211      =5  #define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_SCALE_SHIFT                            0x03
2212      =5  #define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_PRECISION_MASK                         0xE0
2213      =5  #define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_PRECISION_SHIFT                        0x05
2214      =5  /* Values used for Chimney Fan Start Temp Set command */
2215      =5  #define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_SIZE_MASK                                 0x07
2216      =5  #define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_SCALE_MASK                                0x18
2217      =5  #define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_SCALE_SHIFT                               0x03
2218      =5  #define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_PRECISION_MASK                            0xE0
2219      =5  #define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_PRECISION_SHIFT                           0x05
2220      =5  /* Values used for Chimney Fan State Report command */
2221      =5  #define CHIMNEY_FAN_STATE_REPORT_OFF                                                     0x00
2222      =5  #define CHIMNEY_FAN_STATE_REPORT_BOOST                                                   0x01
2223      =5  #define CHIMNEY_FAN_STATE_REPORT_EXHAUST                                                 0x02
2224      =5  #define CHIMNEY_FAN_STATE_REPORT_RELOAD                                                  0x03
2225      =5  #define CHIMNEY_FAN_STATE_REPORT_VENTING                                                 0x04
2226      =5  #define CHIMNEY_FAN_STATE_REPORT_STOP                                                    0x05
2227      =5  #define CHIMNEY_FAN_STATE_REPORT_VENTING_EX                                              0x06
2228      =5  #define CHIMNEY_FAN_STATE_REPORT_SERVICE                                                 0x07
2229      =5  #define CHIMNEY_FAN_STATE_REPORT_SENSOR_FAILURE                                          0x08
2230      =5  #define CHIMNEY_FAN_STATE_REPORT_CHIMNEY_FIRE                                            0x09
2231      =5  #define CHIMNEY_FAN_STATE_REPORT_EXTERNAL_ALARM                                          0x0A
2232      =5  /* Values used for Chimney Fan State Set command */
2233      =5  #define CHIMNEY_FAN_STATE_SET_NEXT_STATE                                                 0x01
2234      =5  /* Values used for Chimney Fan Status Report command */
2235      =5  #define CHIMNEY_FAN_STATUS_REPORT_OFF                                                    0x00
2236      =5  #define CHIMNEY_FAN_STATUS_REPORT_BOOST                                                  0x01
2237      =5  #define CHIMNEY_FAN_STATUS_REPORT_EXHAUST                                                0x02
2238      =5  #define CHIMNEY_FAN_STATUS_REPORT_RELOAD                                                 0x03
2239      =5  #define CHIMNEY_FAN_STATUS_REPORT_VENTING                                                0x04
2240      =5  #define CHIMNEY_FAN_STATUS_REPORT_STOP                                                   0x05
2241      =5  #define CHIMNEY_FAN_STATUS_REPORT_VENTING_EX                                             0x06
2242      =5  #define CHIMNEY_FAN_STATUS_REPORT_SERVICE                                                0x07
2243      =5  #define CHIMNEY_FAN_STATUS_REPORT_SENSOR_FAILURE                                         0x08
2244      =5  #define CHIMNEY_FAN_STATUS_REPORT_CHIMNEY_FIRE                                           0x09
2245      =5  #define CHIMNEY_FAN_STATUS_REPORT_EXTERNAL_ALARM                                         0x0A
2246      =5  #define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_SERVICE_BIT_MASK                          0x01
2247      =5  #define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_EXTERNAL_ALARM_BIT_MASK                   0x02
2248      =5  #define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_SENSOR_ERROR_BIT_MASK                     0x04
2249      =5  #define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_ALARM_TEMPERATURE_EXCEEDED_BIT_MASK       0x08
2250      =5  #define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_NOT_USED_MASK                             0x30
2251      =5  #define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_NOT_USED_SHIFT                            0x04
2252      =5  #define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_SPEED_CHANGE_ENABLE_BIT_MASK              0x40
2253      =5  #define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_START_TEMPERATURE_EXCEEDED_BIT_MASK       0x80
2254      =5  #define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_SIZE_MASK                                  0x07
2255      =5  #define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_SCALE_MASK                                 0x18
2256      =5  #define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_SCALE_SHIFT                                0x03
2257      =5  #define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_PRECISION_MASK                             0xE0
2258      =5  #define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_PRECISION_SHIFT                            0x05
2259      =5  /* Values used for Chimney Fan Stop Temp Report command */
2260      =5  #define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_SIZE_MASK                               0x07
2261      =5  #define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_SCALE_MASK                              0x18
2262      =5  #define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_SCALE_SHIFT                             0x03
2263      =5  #define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_PRECISION_MASK                          0xE0
2264      =5  #define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_PRECISION_SHIFT                         0x05
2265      =5  /* Values used for Chimney Fan Stop Temp Set command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 65  

2266      =5  #define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_SIZE_MASK                                  0x07
2267      =5  #define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_SCALE_MASK                                 0x18
2268      =5  #define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_SCALE_SHIFT                                0x03
2269      =5  #define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_PRECISION_MASK                             0xE0
2270      =5  #define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_PRECISION_SHIFT                            0x05
2271      =5  
2272      =5  /* Climate Control Schedule command class commands */
2273      =5  #define CLIMATE_CONTROL_SCHEDULE_VERSION                                                 0x01
2274      =5  #define SCHEDULE_CHANGED_GET                                                             0x04
2275      =5  #define SCHEDULE_CHANGED_REPORT                                                          0x05
2276      =5  #define SCHEDULE_GET                                                                     0x02
2277      =5  #define SCHEDULE_OVERRIDE_GET                                                            0x07
2278      =5  #define SCHEDULE_OVERRIDE_REPORT                                                         0x08
2279      =5  #define SCHEDULE_OVERRIDE_SET                                                            0x06
2280      =5  #define SCHEDULE_REPORT                                                                  0x03
2281      =5  #define SCHEDULE_SET                                                                     0x01
2282      =5  /* Values used for Schedule Get command */
2283      =5  #define SCHEDULE_GET_PROPERTIES1_WEEKDAY_MASK                                            0x07
2284      =5  #define SCHEDULE_GET_PROPERTIES1_RESERVED_MASK                                           0xF8
2285      =5  #define SCHEDULE_GET_PROPERTIES1_RESERVED_SHIFT                                          0x03
2286      =5  /* Values used for Schedule Override Report command */
2287      =5  #define SCHEDULE_OVERRIDE_REPORT_PROPERTIES1_OVERRIDE_TYPE_MASK                          0x03
2288      =5  #define SCHEDULE_OVERRIDE_REPORT_PROPERTIES1_RESERVED_MASK                               0xFC
2289      =5  #define SCHEDULE_OVERRIDE_REPORT_PROPERTIES1_RESERVED_SHIFT                              0x02
2290      =5  #define SCHEDULE_OVERRIDE_REPORT_NO_OVERRIDE                                             0x00
2291      =5  #define SCHEDULE_OVERRIDE_REPORT_TEMPORARY_OVERRIDE                                      0x01
2292      =5  #define SCHEDULE_OVERRIDE_REPORT_PERMANENT_OVERRIDE                                      0x02
2293      =5  #define SCHEDULE_OVERRIDE_REPORT_RESERVED                                                0x03
2294      =5  /* Values used for Schedule Override Set command */
2295      =5  #define SCHEDULE_OVERRIDE_SET_PROPERTIES1_OVERRIDE_TYPE_MASK                             0x03
2296      =5  #define SCHEDULE_OVERRIDE_SET_PROPERTIES1_RESERVED_MASK                                  0xFC
2297      =5  #define SCHEDULE_OVERRIDE_SET_PROPERTIES1_RESERVED_SHIFT                                 0x02
2298      =5  #define SCHEDULE_OVERRIDE_SET_NO_OVERRIDE                                                0x00
2299      =5  #define SCHEDULE_OVERRIDE_SET_TEMPORARY_OVERRIDE                                         0x01
2300      =5  #define SCHEDULE_OVERRIDE_SET_PERMANENT_OVERRIDE                                         0x02
2301      =5  #define SCHEDULE_OVERRIDE_SET_RESERVED                                                   0x03
2302      =5  /* Values used for Schedule Report command */
2303      =5  #define SCHEDULE_REPORT_PROPERTIES1_WEEKDAY_MASK                                         0x07
2304      =5  #define SCHEDULE_REPORT_PROPERTIES1_RESERVED_MASK                                        0xF8
2305      =5  #define SCHEDULE_REPORT_PROPERTIES1_RESERVED_SHIFT                                       0x03
2306      =5  /* Values used for Schedule Set command */
2307      =5  #define SCHEDULE_SET_PROPERTIES1_WEEKDAY_MASK                                            0x07
2308      =5  #define SCHEDULE_SET_PROPERTIES1_RESERVED_MASK                                           0xF8
2309      =5  #define SCHEDULE_SET_PROPERTIES1_RESERVED_SHIFT                                          0x03
2310      =5  
2311      =5  /* Clock command class commands */
2312      =5  #define CLOCK_VERSION                                                                    0x01
2313      =5  #define CLOCK_GET                                                                        0x05
2314      =5  #define CLOCK_REPORT                                                                     0x06
2315      =5  #define CLOCK_SET                                                                        0x04
2316      =5  /* Values used for Clock Report command */
2317      =5  #define CLOCK_REPORT_LEVEL_HOUR_MASK                                                     0x1F
2318      =5  #define CLOCK_REPORT_LEVEL_WEEKDAY_MASK                                                  0xE0
2319      =5  #define CLOCK_REPORT_LEVEL_WEEKDAY_SHIFT                                                 0x05
2320      =5  /* Values used for Clock Set command */
2321      =5  #define CLOCK_SET_LEVEL_HOUR_MASK                                                        0x1F
2322      =5  #define CLOCK_SET_LEVEL_WEEKDAY_MASK                                                     0xE0
2323      =5  #define CLOCK_SET_LEVEL_WEEKDAY_SHIFT                                                    0x05
2324      =5  
2325      =5  /* Configuration command class commands */
2326      =5  #define CONFIGURATION_VERSION                                                            0x01
2327      =5  #define CONFIGURATION_GET                                                                0x05
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 66  

2328      =5  #define CONFIGURATION_REPORT                                                             0x06
2329      =5  #define CONFIGURATION_SET                                                                0x04
2330      =5  /* Values used for Configuration Report command */
2331      =5  #define CONFIGURATION_REPORT_LEVEL_SIZE_MASK                                             0x07
2332      =5  #define CONFIGURATION_REPORT_LEVEL_RESERVED_MASK                                         0xF8
2333      =5  #define CONFIGURATION_REPORT_LEVEL_RESERVED_SHIFT                                        0x03
2334      =5  /* Values used for Configuration Set command */
2335      =5  #define CONFIGURATION_SET_LEVEL_SIZE_MASK                                                0x07
2336      =5  #define CONFIGURATION_SET_LEVEL_RESERVED_MASK                                            0x78
2337      =5  #define CONFIGURATION_SET_LEVEL_RESERVED_SHIFT                                           0x03
2338      =5  #define CONFIGURATION_SET_LEVEL_DEFAULT_BIT_MASK                                         0x80
2339      =5  
2340      =5  /* Configuration command class commands */
2341      =5  #define CONFIGURATION_VERSION_V2                                                         0x02
2342      =5  #define CONFIGURATION_BULK_GET_V2                                                        0x08
2343      =5  #define CONFIGURATION_BULK_REPORT_V2                                                     0x09
2344      =5  #define CONFIGURATION_BULK_SET_V2                                                        0x07
2345      =5  #define CONFIGURATION_GET_V2                                                             0x05
2346      =5  #define CONFIGURATION_REPORT_V2                                                          0x06
2347      =5  #define CONFIGURATION_SET_V2                                                             0x04
2348      =5  /* Values used for Configuration Bulk Report command */
2349      =5  #define CONFIGURATION_BULK_REPORT_PROPERTIES1_SIZE_MASK_V2                               0x07
2350      =5  #define CONFIGURATION_BULK_REPORT_PROPERTIES1_RESERVED_MASK_V2                           0x38
2351      =5  #define CONFIGURATION_BULK_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                          0x03
2352      =5  #define CONFIGURATION_BULK_REPORT_PROPERTIES1_HANDSHAKE_BIT_MASK_V2                      0x40
2353      =5  #define CONFIGURATION_BULK_REPORT_PROPERTIES1_DEFAULT_BIT_MASK_V2                        0x80
2354      =5  /* Values used for Configuration Bulk Set command */
2355      =5  #define CONFIGURATION_BULK_SET_PROPERTIES1_SIZE_MASK_V2                                  0x07
2356      =5  #define CONFIGURATION_BULK_SET_PROPERTIES1_RESERVED_MASK_V2                              0x38
2357      =5  #define CONFIGURATION_BULK_SET_PROPERTIES1_RESERVED_SHIFT_V2                             0x03
2358      =5  #define CONFIGURATION_BULK_SET_PROPERTIES1_HANDSHAKE_BIT_MASK_V2                         0x40
2359      =5  #define CONFIGURATION_BULK_SET_PROPERTIES1_DEFAULT_BIT_MASK_V2                           0x80
2360      =5  /* Values used for Configuration Report command */
2361      =5  #define CONFIGURATION_REPORT_LEVEL_SIZE_MASK_V2                                          0x07
2362      =5  #define CONFIGURATION_REPORT_LEVEL_RESERVED_MASK_V2                                      0xF8
2363      =5  #define CONFIGURATION_REPORT_LEVEL_RESERVED_SHIFT_V2                                     0x03
2364      =5  /* Values used for Configuration Set command */
2365      =5  #define CONFIGURATION_SET_LEVEL_SIZE_MASK_V2                                             0x07
2366      =5  #define CONFIGURATION_SET_LEVEL_RESERVED_MASK_V2                                         0x78
2367      =5  #define CONFIGURATION_SET_LEVEL_RESERVED_SHIFT_V2                                        0x03
2368      =5  #define CONFIGURATION_SET_LEVEL_DEFAULT_BIT_MASK_V2                                      0x80
2369      =5  
2370      =5  /* Controller Replication command class commands */
2371      =5  #define CONTROLLER_REPLICATION_VERSION                                                   0x01
2372      =5  #define CTRL_REPLICATION_TRANSFER_GROUP                                                  0x31
2373      =5  #define CTRL_REPLICATION_TRANSFER_GROUP_NAME                                             0x32
2374      =5  #define CTRL_REPLICATION_TRANSFER_SCENE                                                  0x33
2375      =5  #define CTRL_REPLICATION_TRANSFER_SCENE_NAME                                             0x34
2376      =5  
2377      =5  /* Crc 16 Encap command class commands */
2378      =5  #define CRC_16_ENCAP_VERSION                                                             0x01
2379      =5  #define CRC_16_ENCAP                                                                     0x01
2380      =5  
2381      =5  /* Dcp Config command class commands */
2382      =5  #define DCP_CONFIG_VERSION                                                               0x01
2383      =5  #define DCP_LIST_REMOVE                                                                  0x04
2384      =5  #define DCP_LIST_SET                                                                     0x03
2385      =5  #define DCP_LIST_SUPPORTED_GET                                                           0x01
2386      =5  #define DCP_LIST_SUPPORTED_REPORT                                                        0x02
2387      =5  /* Values used for Dcp List Set command */
2388      =5  #define DCP_LIST_SET_PROPERTIES1_NUMBER_OF_DC_MASK                                       0x03
2389      =5  #define DCP_LIST_SET_PROPERTIES1_RESERVED_MASK                                           0xFC
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 67  

2390      =5  #define DCP_LIST_SET_PROPERTIES1_RESERVED_SHIFT                                          0x02
2391      =5  
2392      =5  /* Dcp Monitor command class commands */
2393      =5  #define DCP_MONITOR_VERSION                                                              0x01
2394      =5  #define DCP_EVENT_STATUS_GET                                                             0x03
2395      =5  #define DCP_EVENT_STATUS_REPORT                                                          0x04
2396      =5  #define DCP_LIST_GET                                                                     0x01
2397      =5  #define DCP_LIST_REPORT                                                                  0x02
2398      =5  /* Values used for Dcp List Report command */
2399      =5  #define DCP_LIST_REPORT_PROPERTIES1_NUMBER_OF_DC_MASK                                    0x03
2400      =5  #define DCP_LIST_REPORT_PROPERTIES1_RESERVED_MASK                                        0xFC
2401      =5  #define DCP_LIST_REPORT_PROPERTIES1_RESERVED_SHIFT                                       0x02
2402      =5  
2403      =5  /* Door Lock Logging command class commands */
2404      =5  #define DOOR_LOCK_LOGGING_VERSION                                                        0x01
2405      =5  #define DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_GET                                          0x01
2406      =5  #define DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_REPORT                                       0x02
2407      =5  #define RECORD_GET                                                                       0x03
2408      =5  #define RECORD_REPORT                                                                    0x04
2409      =5  /* Values used for Record Report command */
2410      =5  #define RECORD_REPORT_PROPERTIES1_HOUR_LOCAL_TIME_MASK                                   0x1F
2411      =5  #define RECORD_REPORT_PROPERTIES1_RECORD_STATUS_MASK                                     0xE0
2412      =5  #define RECORD_REPORT_PROPERTIES1_RECORD_STATUS_SHIFT                                    0x05
2413      =5  
2414      =5  /* Door Lock command class commands */
2415      =5  #define DOOR_LOCK_VERSION                                                                0x01
2416      =5  #define DOOR_LOCK_CONFIGURATION_GET                                                      0x05
2417      =5  #define DOOR_LOCK_CONFIGURATION_REPORT                                                   0x06
2418      =5  #define DOOR_LOCK_CONFIGURATION_SET                                                      0x04
2419      =5  #define DOOR_LOCK_OPERATION_GET                                                          0x02
2420      =5  #define DOOR_LOCK_OPERATION_REPORT                                                       0x03
2421      =5  #define DOOR_LOCK_OPERATION_SET                                                          0x01
2422      =5  /* Values used for Door Lock Configuration Report command */
2423      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_CONSTANT_OPERATION                                0x01
2424      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_TIMED_OPERATION                                   0x02
2425      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_STATE_MASK        0x0F
2426      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_STATE_MASK       0xF0
2427      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_STATE_SHIFT      0x04
2428      =5  /* Values used for Door Lock Configuration Set command */
2429      =5  #define DOOR_LOCK_CONFIGURATION_SET_CONSTANT_OPERATION                                   0x01
2430      =5  #define DOOR_LOCK_CONFIGURATION_SET_TIMED_OPERATION                                      0x02
2431      =5  #define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_INSIDE_DOOR_HANDLES_STATE_MASK           0x0F
2432      =5  #define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_STATE_MASK          0xF0
2433      =5  #define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_STATE_SHIFT         0x04
2434      =5  /* Values used for Door Lock Operation Report command */
2435      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED                                        0x00
2436      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_WITH_TIMEOUT                           0x01
2437      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES                0x10
2438      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT   0x11
2439      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES               0x20
2440      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT  0x21
2441      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_SECURED                                          0xFF
2442      =5  #define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_MODE_MASK             0x0F
2443      =5  #define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_MASK            0xF0
2444      =5  #define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_SHIFT           0x04
2445      =5  /* Values used for Door Lock Operation Set command */
2446      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED                                           0x00
2447      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_WITH_TIMEOUT                              0x01
2448      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES                   0x10
2449      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT      0x11
2450      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES                  0x20
2451      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT     0x21
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 68  

2452      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_SECURED                                             0xFF
2453      =5  
2454      =5  /* Door Lock command class commands */
2455      =5  #define DOOR_LOCK_VERSION_V2                                                             0x02
2456      =5  #define DOOR_LOCK_CONFIGURATION_GET_V2                                                   0x05
2457      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_V2                                                0x06
2458      =5  #define DOOR_LOCK_CONFIGURATION_SET_V2                                                   0x04
2459      =5  #define DOOR_LOCK_OPERATION_GET_V2                                                       0x02
2460      =5  #define DOOR_LOCK_OPERATION_REPORT_V2                                                    0x03
2461      =5  #define DOOR_LOCK_OPERATION_SET_V2                                                       0x01
2462      =5  /* Values used for Door Lock Configuration Report command */
2463      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_CONSTANT_OPERATION_V2                             0x01
2464      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_TIMED_OPERATION_V2                                0x02
2465      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_STATE_MASK_V2     0x0F
2466      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_STATE_MASK_V2    0xF0
2467      =5  #define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_STATE_SHIFT_V2   0x04
2468      =5  /* Values used for Door Lock Configuration Set command */
2469      =5  #define DOOR_LOCK_CONFIGURATION_SET_CONSTANT_OPERATION_V2                                0x01
2470      =5  #define DOOR_LOCK_CONFIGURATION_SET_TIMED_OPERATION_V2                                   0x02
2471      =5  #define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_INSIDE_DOOR_HANDLES_STATE_MASK_V2        0x0F
2472      =5  #define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_STATE_MASK_V2       0xF0
2473      =5  #define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_STATE_SHIFT_V2      0x04
2474      =5  /* Values used for Door Lock Operation Report command */
2475      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_V2                                     0x00
2476      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_WITH_TIMEOUT_V2                        0x01
2477      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V2             0x10
2478      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V2 0x11
2479      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V2            0x20
2480      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V2 0x21
2481      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_LOCK_STATE_UNKNOWN_V2                            0xFE
2482      =5  #define DOOR_LOCK_OPERATION_REPORT_DOOR_SECURED_V2                                       0xFF
2483      =5  #define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_MODE_MASK_V2          0x0F
2484      =5  #define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_MASK_V2         0xF0
2485      =5  #define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_SHIFT_V2        0x04
2486      =5  /* Values used for Door Lock Operation Set command */
2487      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_V2                                        0x00
2488      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_WITH_TIMEOUT_V2                           0x01
2489      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V2                0x10
2490      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V2   0x11
2491      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V2               0x20
2492      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V2  0x21
2493      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_LOCK_STATE_UNKNOWN_V2                               0xFE
2494      =5  #define DOOR_LOCK_OPERATION_SET_DOOR_SECURED_V2                                          0xFF
2495      =5  
2496      =5  /* Energy Production command class commands */
2497      =5  #define ENERGY_PRODUCTION_VERSION                                                        0x01
2498      =5  #define ENERGY_PRODUCTION_GET                                                            0x02
2499      =5  #define ENERGY_PRODUCTION_REPORT                                                         0x03
2500      =5  /* Values used for Energy Production Get command */
2501      =5  #define ENERGY_PRODUCTION_GET_INSTANT_ENERGY_PRODUCTION                                  0x00
2502      =5  #define ENERGY_PRODUCTION_GET_TOTAL_ENERGY_PRODUCTION                                    0x01
2503      =5  #define ENERGY_PRODUCTION_GET_ENERGY_PRODUCTION_TODAY                                    0x02
2504      =5  #define ENERGY_PRODUCTION_GET_TOTAL_PRODUCTION_TIME                                      0x03
2505      =5  /* Values used for Energy Production Report command */
2506      =5  #define ENERGY_PRODUCTION_REPORT_INSTANT_ENERGY_PRODUCTION                               0x00
2507      =5  #define ENERGY_PRODUCTION_REPORT_TOTAL_ENERGY_PRODUCTION                                 0x01
2508      =5  #define ENERGY_PRODUCTION_REPORT_ENERGY_PRODUCTION_TODAY                                 0x02
2509      =5  #define ENERGY_PRODUCTION_REPORT_TOTAL_PRODUCTION_TIME                                   0x03
2510      =5  #define ENERGY_PRODUCTION_REPORT_LEVEL_SIZE_MASK                                         0x07
2511      =5  #define ENERGY_PRODUCTION_REPORT_LEVEL_SCALE_MASK                                        0x18
2512      =5  #define ENERGY_PRODUCTION_REPORT_LEVEL_SCALE_SHIFT                                       0x03
2513      =5  #define ENERGY_PRODUCTION_REPORT_LEVEL_PRECISION_MASK                                    0xE0
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 69  

2514      =5  #define ENERGY_PRODUCTION_REPORT_LEVEL_PRECISION_SHIFT                                   0x05
2515      =5  
2516      =5  /* Firmware Update Md command class commands */
2517      =5  #define FIRMWARE_UPDATE_MD_VERSION                                                       0x01
2518      =5  #define FIRMWARE_MD_GET                                                                  0x01
2519      =5  #define FIRMWARE_MD_REPORT                                                               0x02
2520      =5  #define FIRMWARE_UPDATE_MD_GET                                                           0x05
2521      =5  #define FIRMWARE_UPDATE_MD_REPORT                                                        0x06
2522      =5  #define FIRMWARE_UPDATE_MD_REQUEST_GET                                                   0x03
2523      =5  #define FIRMWARE_UPDATE_MD_REQUEST_REPORT                                                0x04
2524      =5  #define FIRMWARE_UPDATE_MD_STATUS_REPORT                                                 0x07
2525      =5  /* Values used for Firmware Update Md Get command */
2526      =5  #define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK                          0x7F
2527      =5  #define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_ZERO_BIT_MASK                                 0x80
2528      =5  /* Values used for Firmware Update Md Report command */
2529      =5  #define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK                       0x7F
2530      =5  #define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK                              0x80
2531      =5  /* Values used for Firmware Update Md Request Report command */
2532      =5  #define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION                            0x00
2533      =5  #define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION                        0x01
2534      =5  #define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION                              0xFF
2535      =5  /* Values used for Firmware Update Md Status Report command */
2536      =5  #define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR        0x00
2537      =5  #define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE                               0x01
2538      =5  #define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY                                    0xFF
2539      =5  
2540      =5  /* Firmware Update Md command class commands */
2541      =5  #define FIRMWARE_UPDATE_MD_VERSION_V2                                                    0x02
2542      =5  #define FIRMWARE_MD_GET_V2                                                               0x01
2543      =5  #define FIRMWARE_MD_REPORT_V2                                                            0x02
2544      =5  #define FIRMWARE_UPDATE_MD_GET_V2                                                        0x05
2545      =5  #define FIRMWARE_UPDATE_MD_REPORT_V2                                                     0x06
2546      =5  #define FIRMWARE_UPDATE_MD_REQUEST_GET_V2                                                0x03
2547      =5  #define FIRMWARE_UPDATE_MD_REQUEST_REPORT_V2                                             0x04
2548      =5  #define FIRMWARE_UPDATE_MD_STATUS_REPORT_V2                                              0x07
2549      =5  /* Values used for Firmware Update Md Get command */
2550      =5  #define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK_V2                       0x7F
2551      =5  #define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_ZERO_BIT_MASK_V2                              0x80
2552      =5  /* Values used for Firmware Update Md Report command */
2553      =5  #define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK_V2                    0x7F
2554      =5  #define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK_V2                           0x80
2555      =5  /* Values used for Firmware Update Md Request Report command */
2556      =5  #define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION_V2                         0x00
2557      =5  #define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION_V2                     0x01
2558      =5  #define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION_V2                           0xFF
2559      =5  /* Values used for Firmware Update Md Status Report command */
2560      =5  #define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR_V2     0x00
2561      =5  #define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_V2                            0x01
2562      =5  #define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_V2                                 0xFF
2563      =5  
2564      =5  /* Geographic Location command class commands */
2565      =5  #define GEOGRAPHIC_LOCATION_VERSION                                                      0x01
2566      =5  #define GEOGRAPHIC_LOCATION_GET                                                          0x02
2567      =5  #define GEOGRAPHIC_LOCATION_REPORT                                                       0x03
2568      =5  #define GEOGRAPHIC_LOCATION_SET                                                          0x01
2569      =5  /* Values used for Geographic Location Report command */
2570      =5  #define GEOGRAPHIC_LOCATION_REPORT_LEVEL_LONGITUDE_MINUTES_MASK                          0x7F
2571      =5  #define GEOGRAPHIC_LOCATION_REPORT_LEVEL_LONG_SIGN_BIT_MASK                              0x80
2572      =5  #define GEOGRAPHIC_LOCATION_REPORT_LEVEL2_LATITUDE_MINUTES_MASK                          0x7F
2573      =5  #define GEOGRAPHIC_LOCATION_REPORT_LEVEL2_LAT_SIGN_BIT_MASK                              0x80
2574      =5  /* Values used for Geographic Location Set command */
2575      =5  #define GEOGRAPHIC_LOCATION_SET_LEVEL_LONGITUDE_MINUTES_MASK                             0x7F
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 70  

2576      =5  #define GEOGRAPHIC_LOCATION_SET_LEVEL_LONG_SIGN_BIT_MASK                                 0x80
2577      =5  #define GEOGRAPHIC_LOCATION_SET_LEVEL2_LATITUDE_MINUTES_MASK                             0x7F
2578      =5  #define GEOGRAPHIC_LOCATION_SET_LEVEL2_LAT_SIGN_BIT_MASK                                 0x80
2579      =5  
2580      =5  /* Grouping Name command class commands */
2581      =5  #define GROUPING_NAME_VERSION                                                            0x01
2582      =5  #define GROUPING_NAME_GET                                                                0x02
2583      =5  #define GROUPING_NAME_REPORT                                                             0x03
2584      =5  #define GROUPING_NAME_SET                                                                0x01
2585      =5  /* Values used for Grouping Name Report command */
2586      =5  #define GROUPING_NAME_REPORT_PROPERTIES1_CHAR_PRESENTATION_MASK                          0x07
2587      =5  #define GROUPING_NAME_REPORT_PROPERTIES1_RESERVED_MASK                                   0xF8
2588      =5  #define GROUPING_NAME_REPORT_PROPERTIES1_RESERVED_SHIFT                                  0x03
2589      =5  /* Values used for Grouping Name Set command */
2590      =5  #define GROUPING_NAME_SET_PROPERTIES1_CHAR_PRESENTATION_MASK                             0x07
2591      =5  #define GROUPING_NAME_SET_PROPERTIES1_RESERVED_MASK                                      0xF8
2592      =5  #define GROUPING_NAME_SET_PROPERTIES1_RESERVED_SHIFT                                     0x03
2593      =5  
2594      =5  /* Hail command class commands */
2595      =5  #define HAIL_VERSION                                                                     0x01
2596      =5  #define HAIL                                                                             0x01
2597      =5  
2598      =5  /* Hrv Control command class commands */
2599      =5  #define HRV_CONTROL_VERSION                                                              0x01
2600      =5  #define HRV_CONTROL_BYPASS_GET                                                           0x05
2601      =5  #define HRV_CONTROL_BYPASS_REPORT                                                        0x06
2602      =5  #define HRV_CONTROL_BYPASS_SET                                                           0x04
2603      =5  #define HRV_CONTROL_MODE_GET                                                             0x02
2604      =5  #define HRV_CONTROL_MODE_REPORT                                                          0x03
2605      =5  #define HRV_CONTROL_MODE_SET                                                             0x01
2606      =5  #define HRV_CONTROL_MODE_SUPPORTED_GET                                                   0x0A
2607      =5  #define HRV_CONTROL_MODE_SUPPORTED_REPORT                                                0x0B
2608      =5  #define HRV_CONTROL_VENTILATION_RATE_GET                                                 0x08
2609      =5  #define HRV_CONTROL_VENTILATION_RATE_REPORT                                              0x09
2610      =5  #define HRV_CONTROL_VENTILATION_RATE_SET                                                 0x07
2611      =5  /* Values used for Hrv Control Mode Report command */
2612      =5  #define HRV_CONTROL_MODE_REPORT_PROPERTIES1_MODE_MASK                                    0x1F
2613      =5  #define HRV_CONTROL_MODE_REPORT_MODE_OFF                                                 0x00
2614      =5  #define HRV_CONTROL_MODE_REPORT_MODE_DEMAND_AUTOMATIC                                    0x01
2615      =5  #define HRV_CONTROL_MODE_REPORT_MODE_SCHEDULE                                            0x02
2616      =5  #define HRV_CONTROL_MODE_REPORT_MODE_ENERGY_SAVINGS_MODE                                 0x03
2617      =5  #define HRV_CONTROL_MODE_REPORT_MODE_MANUAL                                              0x04
2618      =5  #define HRV_CONTROL_MODE_REPORT_PROPERTIES1_RESERVED_MASK                                0xE0
2619      =5  #define HRV_CONTROL_MODE_REPORT_PROPERTIES1_RESERVED_SHIFT                               0x05
2620      =5  /* Values used for Hrv Control Mode Set command */
2621      =5  #define HRV_CONTROL_MODE_SET_PROPERTIES1_MODE_MASK                                       0x1F
2622      =5  #define HRV_CONTROL_MODE_SET_MODE_OFF                                                    0x00
2623      =5  #define HRV_CONTROL_MODE_SET_MODE_DEMAND_AUTOMATIC                                       0x01
2624      =5  #define HRV_CONTROL_MODE_SET_MODE_SCHEDULE                                               0x02
2625      =5  #define HRV_CONTROL_MODE_SET_MODE_ENERGY_SAVINGS_MODE                                    0x03
2626      =5  #define HRV_CONTROL_MODE_SET_MODE_MANUAL                                                 0x04
2627      =5  #define HRV_CONTROL_MODE_SET_PROPERTIES1_RESERVED_MASK                                   0xE0
2628      =5  #define HRV_CONTROL_MODE_SET_PROPERTIES1_RESERVED_SHIFT                                  0x05
2629      =5  /* Values used for Hrv Control Mode Supported Report command */
2630      =5  #define HRV_CONTROL_MODE_SUPPORTED_REPORT_PROPERTIES1_MANUAL_CONTROL_SUPPORTED_MASK      0x0F
2631      =5  #define HRV_CONTROL_MODE_SUPPORTED_REPORT_MANUAL_CONTROL_SUPPORTED_BYPASS_OPEN_CLOSE     0x00
2632      =5  #define HRV_CONTROL_MODE_SUPPORTED_REPORT_MANUAL_CONTROL_SUPPORTED_BYPASS_AUTO           0x01
2633      =5  #define HRV_CONTROL_MODE_SUPPORTED_REPORT_MANUAL_CONTROL_SUPPORTED_MODULATED_BYPASS      0x02
2634      =5  #define HRV_CONTROL_MODE_SUPPORTED_REPORT_MANUAL_CONTROL_SUPPORTED_VENTILATION_RATE      0x03
2635      =5  #define HRV_CONTROL_MODE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK                      0xF0
2636      =5  #define HRV_CONTROL_MODE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT                     0x04
2637      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 71  

2638      =5  /* Hrv Status command class commands */
2639      =5  #define HRV_STATUS_VERSION                                                               0x01
2640      =5  #define HRV_STATUS_GET                                                                   0x01
2641      =5  #define HRV_STATUS_REPORT                                                                0x02
2642      =5  #define HRV_STATUS_SUPPORTED_GET                                                         0x03
2643      =5  #define HRV_STATUS_SUPPORTED_REPORT                                                      0x04
2644      =5  /* Values used for Hrv Status Get command */
2645      =5  #define HRV_STATUS_GET_OUTDOOR_AIR_TEMPERATURE                                           0x00
2646      =5  #define HRV_STATUS_GET_SUPPLY_AIR_TEMPERATURE                                            0x01
2647      =5  #define HRV_STATUS_GET_EXHAUST_AIR_TEMPERATURE                                           0x02
2648      =5  #define HRV_STATUS_GET_DISCHARGE_AIR_TEMPERATURE                                         0x03
2649      =5  #define HRV_STATUS_GET_ROOM_TEMPERATURE                                                  0x04
2650      =5  #define HRV_STATUS_GET_RELATIVE_HUMIDITY_IN_ROOM                                         0x05
2651      =5  #define HRV_STATUS_GET_REMAINING_FILTER_LIFE                                             0x06
2652      =5  /* Values used for Hrv Status Report command */
2653      =5  #define HRV_STATUS_REPORT_OUTDOOR_AIR_TEMPERATURE                                        0x00
2654      =5  #define HRV_STATUS_REPORT_SUPPLY_AIR_TEMPERATURE                                         0x01
2655      =5  #define HRV_STATUS_REPORT_EXHAUST_AIR_TEMPERATURE                                        0x02
2656      =5  #define HRV_STATUS_REPORT_DISCHARGE_AIR_TEMPERATURE                                      0x03
2657      =5  #define HRV_STATUS_REPORT_ROOM_TEMPERATURE                                               0x04
2658      =5  #define HRV_STATUS_REPORT_RELATIVE_HUMIDITY_IN_ROOM                                      0x05
2659      =5  #define HRV_STATUS_REPORT_REMAINING_FILTER_LIFE                                          0x06
2660      =5  #define HRV_STATUS_REPORT_PROPERTIES1_SIZE_MASK                                          0x07
2661      =5  #define HRV_STATUS_REPORT_PROPERTIES1_SCALE_MASK                                         0x18
2662      =5  #define HRV_STATUS_REPORT_PROPERTIES1_SCALE_SHIFT                                        0x03
2663      =5  #define HRV_STATUS_REPORT_PROPERTIES1_PRECISION_MASK                                     0xE0
2664      =5  #define HRV_STATUS_REPORT_PROPERTIES1_PRECISION_SHIFT                                    0x05
2665      =5  
2666      =5  /* Indicator command class commands */
2667      =5  #define INDICATOR_VERSION                                                                0x01
2668      =5  #define INDICATOR_GET                                                                    0x02
2669      =5  #define INDICATOR_REPORT                                                                 0x03
2670      =5  #define INDICATOR_SET                                                                    0x01
2671      =5  
2672      =5  /* Ip Configuration command class commands */
2673      =5  #define IP_CONFIGURATION_VERSION                                                         0x01
2674      =5  #define IP_CONFIGURATION_GET                                                             0x02
2675      =5  #define IP_CONFIGURATION_RELEASE                                                         0x04
2676      =5  #define IP_CONFIGURATION_RENEW                                                           0x05
2677      =5  #define IP_CONFIGURATION_REPORT                                                          0x03
2678      =5  #define IP_CONFIGURATION_SET                                                             0x01
2679      =5  /* Values used for Ip Configuration Report command */
2680      =5  #define IP_CONFIGURATION_REPORT_PROPERTIES1_AUTO_DNS_BIT_MASK                            0x01
2681      =5  #define IP_CONFIGURATION_REPORT_PROPERTIES1_AUTO_IP_BIT_MASK                             0x02
2682      =5  #define IP_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_MASK                                0xFC
2683      =5  #define IP_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_SHIFT                               0x02
2684      =5  /* Values used for Ip Configuration Set command */
2685      =5  #define IP_CONFIGURATION_SET_PROPERTIES1_AUTO_DNS_BIT_MASK                               0x01
2686      =5  #define IP_CONFIGURATION_SET_PROPERTIES1_AUTO_IP_BIT_MASK                                0x02
2687      =5  #define IP_CONFIGURATION_SET_PROPERTIES1_RESERVED_MASK                                   0xFC
2688      =5  #define IP_CONFIGURATION_SET_PROPERTIES1_RESERVED_SHIFT                                  0x02
2689      =5  
2690      =5  /* Language command class commands */
2691      =5  #define LANGUAGE_VERSION                                                                 0x01
2692      =5  #define LANGUAGE_GET                                                                     0x02
2693      =5  #define LANGUAGE_REPORT                                                                  0x03
2694      =5  #define LANGUAGE_SET                                                                     0x01
2695      =5  
2696      =5  /* Lock command class commands */
2697      =5  #define LOCK_VERSION                                                                     0x01
2698      =5  #define LOCK_GET                                                                         0x02
2699      =5  #define LOCK_REPORT                                                                      0x03
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 72  

2700      =5  #define LOCK_SET                                                                         0x01
2701      =5  
2702      =5  /* Manufacturer Proprietary command class commands */
2703      =5  #define MANUFACTURER_PROPRIETARY_VERSION                                                 0x01
2704      =5  
2705      =5  /* Manufacturer Specific command class commands */
2706      =5  #define MANUFACTURER_SPECIFIC_VERSION                                                    0x01
2707      =5  #define MANUFACTURER_SPECIFIC_GET                                                        0x04
2708      =5  #define MANUFACTURER_SPECIFIC_REPORT                                                     0x05
2709      =5  
2710      =5  /* Manufacturer Specific command class commands */
2711      =5  #define MANUFACTURER_SPECIFIC_VERSION_V2                                                 0x02
2712      =5  #define MANUFACTURER_SPECIFIC_GET_V2                                                     0x04
2713      =5  #define MANUFACTURER_SPECIFIC_REPORT_V2                                                  0x05
2714      =5  #define DEVICE_SPECIFIC_GET_V2                                                           0x06
2715      =5  #define DEVICE_SPECIFIC_REPORT_V2                                                        0x07
2716      =5  /* Values used for Device Specific Get command */
2717      =5  #define DEVICE_SPECIFIC_GET_PROPERTIES1_DEVICE_ID_TYPE_MASK_V2                           0x07
2718      =5  #define DEVICE_SPECIFIC_GET_DEVICE_ID_TYPE_RESERVED_V2                                   0x00
2719      =5  #define DEVICE_SPECIFIC_GET_DEVICE_ID_TYPE_SERIAL_NUMBER_V2                              0x01
2720      =5  #define DEVICE_SPECIFIC_GET_PROPERTIES1_RESERVED_MASK_V2                                 0xF8
2721      =5  #define DEVICE_SPECIFIC_GET_PROPERTIES1_RESERVED_SHIFT_V2                                0x03
2722      =5  /* Values used for Device Specific Report command */
2723      =5  #define DEVICE_SPECIFIC_REPORT_PROPERTIES1_DEVICE_ID_TYPE_MASK_V2                        0x07
2724      =5  #define DEVICE_SPECIFIC_REPORT_DEVICE_ID_TYPE_RESERVED_V2                                0x00
2725      =5  #define DEVICE_SPECIFIC_REPORT_DEVICE_ID_TYPE_SERIAL_NUMBER_V2                           0x01
2726      =5  #define DEVICE_SPECIFIC_REPORT_PROPERTIES1_RESERVED_MASK_V2                              0xF8
2727      =5  #define DEVICE_SPECIFIC_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                             0x03
2728      =5  #define DEVICE_SPECIFIC_REPORT_PROPERTIES2_DEVICE_ID_DATA_LENGTH_INDICATOR_MASK_V2       0x1F
2729      =5  #define DEVICE_SPECIFIC_REPORT_PROPERTIES2_DEVICE_ID_DATA_FORMAT_MASK_V2                 0xE0
2730      =5  #define DEVICE_SPECIFIC_REPORT_PROPERTIES2_DEVICE_ID_DATA_FORMAT_SHIFT_V2                0x05
2731      =5  #define DEVICE_SPECIFIC_REPORT_DEVICE_ID_DATA_FORMAT_RESERVED_V2                         0x00
2732      =5  #define DEVICE_SPECIFIC_REPORT_DEVICE_ID_DATA_FORMAT_BINARY_V2                           0x01
2733      =5  
2734      =5  /* Mark command class commands */
2735      =5  #define MARK_VERSION                                                                     0x01
2736      =5  
2737      =5  /* Meter Pulse command class commands */
2738      =5  #define METER_PULSE_VERSION                                                              0x01
2739      =5  #define METER_PULSE_GET                                                                  0x04
2740      =5  #define METER_PULSE_REPORT                                                               0x05
2741      =5  
2742      =5  /* Meter Tbl Config command class commands */
2743      =5  #define METER_TBL_CONFIG_VERSION                                                         0x01
2744      =5  #define METER_TBL_TABLE_POINT_ADM_NO_SET                                                 0x01
2745      =5  /* Values used for Meter Tbl Table Point Adm No Set command */
2746      =5  #define METER_TBL_TABLE_POINT_ADM_NO_SET_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK           0x1F
2747      =5  #define METER_TBL_TABLE_POINT_ADM_NO_SET_PROPERTIES1_RESERVED_MASK                       0xE0
2748      =5  #define METER_TBL_TABLE_POINT_ADM_NO_SET_PROPERTIES1_RESERVED_SHIFT                      0x05
2749      =5  
2750      =5  /* Meter Tbl Monitor command class commands */
2751      =5  #define METER_TBL_MONITOR_VERSION                                                        0x01
2752      =5  #define METER_TBL_STATUS_REPORT                                                          0x0B
2753      =5  #define METER_TBL_STATUS_DATE_GET                                                        0x0A
2754      =5  #define METER_TBL_STATUS_DEPTH_GET                                                       0x09
2755      =5  #define METER_TBL_STATUS_SUPPORTED_GET                                                   0x07
2756      =5  #define METER_TBL_STATUS_SUPPORTED_REPORT                                                0x08
2757      =5  #define METER_TBL_CURRENT_DATA_GET                                                       0x0C
2758      =5  #define METER_TBL_CURRENT_DATA_REPORT                                                    0x0D
2759      =5  #define METER_TBL_HISTORICAL_DATA_GET                                                    0x0E
2760      =5  #define METER_TBL_HISTORICAL_DATA_REPORT                                                 0x0F
2761      =5  #define METER_TBL_REPORT                                                                 0x06
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 73  

2762      =5  #define METER_TBL_TABLE_CAPABILITY_GET                                                   0x05
2763      =5  #define METER_TBL_TABLE_ID_GET                                                           0x03
2764      =5  #define METER_TBL_TABLE_ID_REPORT                                                        0x04
2765      =5  #define METER_TBL_TABLE_POINT_ADM_NO_GET                                                 0x01
2766      =5  #define METER_TBL_TABLE_POINT_ADM_NO_REPORT                                              0x02
2767      =5  /* Values used for Meter Tbl Current Data Report command */
2768      =5  #define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK                         0x03
2769      =5  #define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_MASK                          0xFC
2770      =5  #define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT                         0x02
2771      =5  /* Values used for Meter Tbl Historical Data Report command */
2772      =5  #define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK                      0x03
2773      =5  #define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_MASK                       0xFC
2774      =5  #define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT                      0x02
2775      =5  /* Values used for Meter Tbl Report command */
2776      =5  #define METER_TBL_REPORT_PROPERTIES1_METER_TYPE_MASK                                     0x3F
2777      =5  #define METER_TBL_REPORT_PROPERTIES1_RATE_TYPE_MASK                                      0xC0
2778      =5  #define METER_TBL_REPORT_PROPERTIES1_RATE_TYPE_SHIFT                                     0x06
2779      =5  #define METER_TBL_REPORT_PROPERTIES2_PAY_METER_MASK                                      0x0F
2780      =5  #define METER_TBL_REPORT_PAY_METER_RESERVED                                              0x00
2781      =5  #define METER_TBL_REPORT_PAY_METER_CREDITMETER                                           0x01
2782      =5  #define METER_TBL_REPORT_PAY_METER_PREPAYMENT_METER                                      0x02
2783      =5  #define METER_TBL_REPORT_PAY_METER_PREPAYMENT_METER_DEBT                                 0x03
2784      =5  #define METER_TBL_REPORT_PROPERTIES2_RESERVED_MASK                                       0xF0
2785      =5  #define METER_TBL_REPORT_PROPERTIES2_RESERVED_SHIFT                                      0x04
2786      =5  /* Values used for Meter Tbl Table Id Report command */
2787      =5  #define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK                  0x1F
2788      =5  #define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_MASK                              0xE0
2789      =5  #define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_SHIFT                             0x05
2790      =5  /* Values used for Meter Tbl Table Point Adm No Report command */
2791      =5  #define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK        0x1F
2792      =5  #define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_MASK                    0xE0
2793      =5  #define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_SHIFT                   0x05
2794      =5  
2795      =5  /* Meter Tbl Monitor command class commands */
2796      =5  #define METER_TBL_MONITOR_VERSION_V2                                                     0x02
2797      =5  #define METER_TBL_STATUS_REPORT_V2                                                       0x0B
2798      =5  #define METER_TBL_STATUS_DATE_GET_V2                                                     0x0A
2799      =5  #define METER_TBL_STATUS_DEPTH_GET_V2                                                    0x09
2800      =5  #define METER_TBL_STATUS_SUPPORTED_GET_V2                                                0x07
2801      =5  #define METER_TBL_STATUS_SUPPORTED_REPORT_V2                                             0x08
2802      =5  #define METER_TBL_CURRENT_DATA_GET_V2                                                    0x0C
2803      =5  #define METER_TBL_CURRENT_DATA_REPORT_V2                                                 0x0D
2804      =5  #define METER_TBL_HISTORICAL_DATA_GET_V2                                                 0x0E
2805      =5  #define METER_TBL_HISTORICAL_DATA_REPORT_V2                                              0x0F
2806      =5  #define METER_TBL_REPORT_V2                                                              0x06
2807      =5  #define METER_TBL_TABLE_CAPABILITY_GET_V2                                                0x05
2808      =5  #define METER_TBL_TABLE_ID_GET_V2                                                        0x03
2809      =5  #define METER_TBL_TABLE_ID_REPORT_V2                                                     0x04
2810      =5  #define METER_TBL_TABLE_POINT_ADM_NO_GET_V2                                              0x01
2811      =5  #define METER_TBL_TABLE_POINT_ADM_NO_REPORT_V2                                           0x02
2812      =5  /* Values used for Meter Tbl Current Data Report command */
2813      =5  #define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK_V2                      0x03
2814      =5  #define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_MASK_V2                       0x7C
2815      =5  #define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                      0x02
2816      =5  #define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_OPERATING_STATUS_INDICATION_BIT_MASK_V2 0x80
2817      =5  /* Values used for Meter Tbl Historical Data Report command */
2818      =5  #define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK_V2                   0x03
2819      =5  #define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_MASK_V2                    0x7C
2820      =5  #define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                   0x02
2821      =5  #define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_OPERATING_STATUS_INDICATION_BIT_MASK_V2 0x80
2822      =5  /* Values used for Meter Tbl Report command */
2823      =5  #define METER_TBL_REPORT_PROPERTIES1_METER_TYPE_MASK_V2                                  0x3F
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 74  

2824      =5  #define METER_TBL_REPORT_PROPERTIES1_RATE_TYPE_MASK_V2                                   0xC0
2825      =5  #define METER_TBL_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V2                                  0x06
2826      =5  #define METER_TBL_REPORT_PROPERTIES2_PAY_METER_MASK_V2                                   0x0F
2827      =5  #define METER_TBL_REPORT_PAY_METER_RESERVED_V2                                           0x00
2828      =5  #define METER_TBL_REPORT_PAY_METER_CREDITMETER_V2                                        0x01
2829      =5  #define METER_TBL_REPORT_PAY_METER_PREPAYMENT_METER_V2                                   0x02
2830      =5  #define METER_TBL_REPORT_PAY_METER_PREPAYMENT_METER_DEBT_V2                              0x03
2831      =5  #define METER_TBL_REPORT_PROPERTIES2_RESERVED_MASK_V2                                    0xF0
2832      =5  #define METER_TBL_REPORT_PROPERTIES2_RESERVED_SHIFT_V2                                   0x04
2833      =5  /* Values used for Meter Tbl Table Id Report command */
2834      =5  #define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK_V2               0x1F
2835      =5  #define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_MASK_V2                           0xE0
2836      =5  #define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                          0x05
2837      =5  /* Values used for Meter Tbl Table Point Adm No Report command */
2838      =5  #define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK_V2     0x1F
2839      =5  #define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_MASK_V2                 0xE0
2840      =5  #define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                0x05
2841      =5  
2842      =5  /* Meter Tbl Push command class commands */
2843      =5  #define METER_TBL_PUSH_VERSION                                                           0x01
2844      =5  #define METER_TBL_PUSH_CONFIGURATION_GET                                                 0x02
2845      =5  #define METER_TBL_PUSH_CONFIGURATION_REPORT                                              0x03
2846      =5  #define METER_TBL_PUSH_CONFIGURATION_SET                                                 0x01
2847      =5  /* Values used for Meter Tbl Push Configuration Report command */
2848      =5  #define METER_TBL_PUSH_CONFIGURATION_REPORT_PROPERTIES1_OPERATING_STATUS_PUSH_MODE_MASK  0x0F
2849      =5  #define METER_TBL_PUSH_CONFIGURATION_REPORT_PROPERTIES1_PS_BIT_MASK                      0x10
2850      =5  #define METER_TBL_PUSH_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_MASK                    0xE0
2851      =5  #define METER_TBL_PUSH_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_SHIFT                   0x05
2852      =5  /* Values used for Meter Tbl Push Configuration Set command */
2853      =5  #define METER_TBL_PUSH_CONFIGURATION_SET_PROPERTIES1_OPERATING_STATUS_PUSH_MODE_MASK     0x0F
2854      =5  #define METER_TBL_PUSH_CONFIGURATION_SET_PROPERTIES1_PS_BIT_MASK                         0x10
2855      =5  #define METER_TBL_PUSH_CONFIGURATION_SET_PROPERTIES1_RESERVED_MASK                       0xE0
2856      =5  #define METER_TBL_PUSH_CONFIGURATION_SET_PROPERTIES1_RESERVED_SHIFT                      0x05
2857      =5  
2858      =5  /* Meter command class commands */
2859      =5  #define METER_VERSION                                                                    0x01
2860      =5  #define METER_GET                                                                        0x01
2861      =5  #define METER_REPORT                                                                     0x02
2862      =5  /* Values used for Meter Report command */
2863      =5  #define METER_REPORT_ELECTRIC_METER                                                      0x01
2864      =5  #define METER_REPORT_GAS_METER                                                           0x02
2865      =5  #define METER_REPORT_WATER_METER                                                         0x03
2866      =5  #define METER_REPORT_PROPERTIES1_SIZE_MASK                                               0x07
2867      =5  #define METER_REPORT_PROPERTIES1_SCALE_MASK                                              0x18
2868      =5  #define METER_REPORT_PROPERTIES1_SCALE_SHIFT                                             0x03
2869      =5  #define METER_REPORT_PROPERTIES1_PRECISION_MASK                                          0xE0
2870      =5  #define METER_REPORT_PROPERTIES1_PRECISION_SHIFT                                         0x05
2871      =5  
2872      =5  /* Meter command class commands */
2873      =5  #define METER_VERSION_V2                                                                 0x02
2874      =5  #define METER_GET_V2                                                                     0x01
2875      =5  #define METER_REPORT_V2                                                                  0x02
2876      =5  #define METER_RESET_V2                                                                   0x05
2877      =5  #define METER_SUPPORTED_GET_V2                                                           0x03
2878      =5  #define METER_SUPPORTED_REPORT_V2                                                        0x04
2879      =5  /* Values used for Meter Get command */
2880      =5  #define METER_GET_PROPERTIES1_RESERVED_MASK_V2                                           0x07
2881      =5  #define METER_GET_PROPERTIES1_SCALE_MASK_V2                                              0x18
2882      =5  #define METER_GET_PROPERTIES1_SCALE_SHIFT_V2                                             0x03
2883      =5  #define METER_GET_PROPERTIES1_RESERVED2_MASK_V2                                          0xE0
2884      =5  #define METER_GET_PROPERTIES1_RESERVED2_SHIFT_V2                                         0x05
2885      =5  /* Values used for Meter Report command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 75  

2886      =5  #define METER_REPORT_PROPERTIES1_METER_TYPE_MASK_V2                                      0x1F
2887      =5  #define METER_REPORT_PROPERTIES1_RATE_TYPE_MASK_V2                                       0x60
2888      =5  #define METER_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V2                                      0x05
2889      =5  #define METER_REPORT_PROPERTIES1_RESERVED_BIT_MASK_V2                                    0x80
2890      =5  #define METER_REPORT_PROPERTIES2_SIZE_MASK_V2                                            0x07
2891      =5  #define METER_REPORT_PROPERTIES2_SCALE_MASK_V2                                           0x18
2892      =5  #define METER_REPORT_PROPERTIES2_SCALE_SHIFT_V2                                          0x03
2893      =5  #define METER_REPORT_PROPERTIES2_PRECISION_MASK_V2                                       0xE0
2894      =5  #define METER_REPORT_PROPERTIES2_PRECISION_SHIFT_V2                                      0x05
2895      =5  /* Values used for Meter Supported Report command */
2896      =5  #define METER_SUPPORTED_REPORT_PROPERTIES1_METER_TYPE_MASK_V2                            0x1F
2897      =5  #define METER_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V2                              0x60
2898      =5  #define METER_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                             0x05
2899      =5  #define METER_SUPPORTED_REPORT_PROPERTIES1_METER_RESET_BIT_MASK_V2                       0x80
2900      =5  #define METER_SUPPORTED_REPORT_PROPERTIES2_SCALE_SUPPORTED_MASK_V2                       0x0F
2901      =5  #define METER_SUPPORTED_REPORT_PROPERTIES2_RESERVED_MASK_V2                              0xF0
2902      =5  #define METER_SUPPORTED_REPORT_PROPERTIES2_RESERVED_SHIFT_V2                             0x04
2903      =5  
2904      =5  /* Meter command class commands */
2905      =5  #define METER_VERSION_V3                                                                 0x03
2906      =5  #define METER_GET_V3                                                                     0x01
2907      =5  #define METER_REPORT_V3                                                                  0x02
2908      =5  #define METER_RESET_V3                                                                   0x05
2909      =5  #define METER_SUPPORTED_GET_V3                                                           0x03
2910      =5  #define METER_SUPPORTED_REPORT_V3                                                        0x04
2911      =5  /* Values used for Meter Get command */
2912      =5  #define METER_GET_PROPERTIES1_RESERVED_MASK_V3                                           0x07
2913      =5  #define METER_GET_PROPERTIES1_SCALE_MASK_V3                                              0x38
2914      =5  #define METER_GET_PROPERTIES1_SCALE_SHIFT_V3                                             0x03
2915      =5  #define METER_GET_PROPERTIES1_RESERVED2_MASK_V3                                          0xC0
2916      =5  #define METER_GET_PROPERTIES1_RESERVED2_SHIFT_V3                                         0x06
2917      =5  /* Values used for Meter Report command */
2918      =5  #define METER_REPORT_PROPERTIES1_METER_TYPE_MASK_V3                                      0x1F
2919      =5  #define METER_REPORT_PROPERTIES1_RATE_TYPE_MASK_V3                                       0x60
2920      =5  #define METER_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V3                                      0x05
2921      =5  #define METER_REPORT_PROPERTIES1_SCALE2_BIT_MASK_V3                                      0x80
2922      =5  #define METER_REPORT_PROPERTIES2_SIZE_MASK_V3                                            0x07
2923      =5  #define METER_REPORT_PROPERTIES2_SCALE_MASK_V3                                           0x18
2924      =5  #define METER_REPORT_PROPERTIES2_SCALE_SHIFT_V3                                          0x03
2925      =5  #define METER_REPORT_PROPERTIES2_PRECISION_MASK_V3                                       0xE0
2926      =5  #define METER_REPORT_PROPERTIES2_PRECISION_SHIFT_V3                                      0x05
2927      =5  /* Values used for Meter Supported Report command */
2928      =5  #define METER_SUPPORTED_REPORT_PROPERTIES1_METER_TYPE_MASK_V3                            0x1F
2929      =5  #define METER_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V3                              0x60
2930      =5  #define METER_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                             0x05
2931      =5  #define METER_SUPPORTED_REPORT_PROPERTIES1_METER_RESET_BIT_MASK_V3                       0x80
2932      =5  
2933      =5  /* Mtp Window Covering command class commands */
2934      =5  #define MTP_WINDOW_COVERING_VERSION                                                      0x01
2935      =5  #define MOVE_TO_POSITION_GET                                                             0x02
2936      =5  #define MOVE_TO_POSITION_REPORT                                                          0x03
2937      =5  #define MOVE_TO_POSITION_SET                                                             0x01
2938      =5  
2939      =5  /* Multi Channel Association command class commands */
2940      =5  #define MULTI_CHANNEL_ASSOCIATION_VERSION_V2                                             0x02
2941      =5  #define MULTI_CHANNEL_ASSOCIATION_GET_V2                                                 0x02
2942      =5  #define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V2                                       0x05
2943      =5  #define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V2                                    0x06
2944      =5  #define MULTI_CHANNEL_ASSOCIATION_REMOVE_V2                                              0x04
2945      =5  #define MULTI_CHANNEL_ASSOCIATION_REPORT_V2                                              0x03
2946      =5  #define MULTI_CHANNEL_ASSOCIATION_SET_V2                                                 0x01
2947      =5  /* Values used for Multi Channel Association Remove command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 76  

2948      =5  #define MULTI_CHANNEL_ASSOCIATION_REMOVE_MARKER_V2                                       0x00 /*This marke
             -r identifier is used to separate between nodes without and with end points attached. This field can be omitted in case n
             -o Multi Channel node follows.*/
2949      =5  /* Values used for Multi Channel Association Report command */
2950      =5  #define MULTI_CHANNEL_ASSOCIATION_REPORT_MARKER_V2                                       0x00 /*This marke
             -r identifier is used to separate between nodes without and with end points attached. This field can be omitted in case n
             -o Multi Channel node follows.*/
2951      =5  /* Values used for Multi Channel Association Set command */
2952      =5  #define MULTI_CHANNEL_ASSOCIATION_SET_MARKER_V2                                          0x00 /*This marke
             -r identifier is used to separate between nodes without and with end points attached. This field can be omitted in case n
             -o Multi Channel node follows.*/
2953      =5  
2954      =5  /* Multi Channel command class commands */
2955      =5  #define MULTI_CHANNEL_VERSION_V2                                                         0x02
2956      =5  #define MULTI_CHANNEL_CAPABILITY_GET_V2                                                  0x09
2957      =5  #define MULTI_CHANNEL_CAPABILITY_REPORT_V2                                               0x0A
2958      =5  #define MULTI_CHANNEL_CMD_ENCAP_V2                                                       0x0D
2959      =5  #define MULTI_CHANNEL_END_POINT_FIND_V2                                                  0x0B
2960      =5  #define MULTI_CHANNEL_END_POINT_FIND_REPORT_V2                                           0x0C
2961      =5  #define MULTI_CHANNEL_END_POINT_GET_V2                                                   0x07
2962      =5  #define MULTI_CHANNEL_END_POINT_REPORT_V2                                                0x08
2963      =5  #define MULTI_INSTANCE_CMD_ENCAP_V2                                                      0x06
2964      =5  #define MULTI_INSTANCE_GET_V2                                                            0x04
2965      =5  #define MULTI_INSTANCE_REPORT_V2                                                         0x05
2966      =5  /* Values used for Multi Channel Capability Get command */
2967      =5  #define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_END_POINT_MASK_V2                       0x7F
2968      =5  #define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_RES_BIT_MASK_V2                         0x80
2969      =5  /* Values used for Multi Channel Capability Report command */
2970      =5  #define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_END_POINT_MASK_V2                    0x7F
2971      =5  #define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V2                  0x80
2972      =5  /* Values used for Multi Channel Cmd Encap command */
2973      =5  #define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_SOURCE_END_POINT_MASK_V2                     0x7F
2974      =5  #define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V2                              0x80
2975      =5  #define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_DESTINATION_END_POINT_MASK_V2                0x7F
2976      =5  #define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_BIT_ADDRESS_BIT_MASK_V2                      0x80
2977      =5  /* Values used for Multi Channel End Point Report command */
2978      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_RES_MASK_V2                           0x3F
2979      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_IDENTICAL_BIT_MASK_V2                 0x40
2980      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V2                   0x80
2981      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_END_POINTS_MASK_V2                    0x7F
2982      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_RES_BIT_MASK_V2                       0x80
2983      =5  /* Values used for Multi Instance Cmd Encap command */
2984      =5  #define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_INSTANCE_MASK_V2                            0x7F
2985      =5  #define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V2                             0x80
2986      =5  /* Values used for Multi Instance Report command */
2987      =5  #define MULTI_INSTANCE_REPORT_PROPERTIES1_INSTANCES_MASK_V2                              0x7F
2988      =5  #define MULTI_INSTANCE_REPORT_PROPERTIES1_RES_BIT_MASK_V2                                0x80
2989      =5  
2990      =5  /* Multi Channel command class commands */
2991      =5  #define MULTI_CHANNEL_VERSION_V3                                                         0x03
2992      =5  #define MULTI_CHANNEL_CAPABILITY_GET_V3                                                  0x09
2993      =5  #define MULTI_CHANNEL_CAPABILITY_REPORT_V3                                               0x0A
2994      =5  #define MULTI_CHANNEL_CMD_ENCAP_V3                                                       0x0D
2995      =5  #define MULTI_CHANNEL_END_POINT_FIND_V3                                                  0x0B
2996      =5  #define MULTI_CHANNEL_END_POINT_FIND_REPORT_V3                                           0x0C
2997      =5  #define MULTI_CHANNEL_END_POINT_GET_V3                                                   0x07
2998      =5  #define MULTI_CHANNEL_END_POINT_REPORT_V3                                                0x08
2999      =5  #define MULTI_INSTANCE_CMD_ENCAP_V3                                                      0x06
3000      =5  #define MULTI_INSTANCE_GET_V3                                                            0x04
3001      =5  #define MULTI_INSTANCE_REPORT_V3                                                         0x05
3002      =5  /* Values used for Multi Channel Capability Get command */
3003      =5  #define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_END_POINT_MASK_V3                       0x7F
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 77  

3004      =5  #define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_RES_BIT_MASK_V3                         0x80
3005      =5  /* Values used for Multi Channel Capability Report command */
3006      =5  #define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_END_POINT_MASK_V3                    0x7F
3007      =5  #define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V3                  0x80
3008      =5  /* Values used for Multi Channel Cmd Encap command */
3009      =5  #define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_SOURCE_END_POINT_MASK_V3                     0x7F
3010      =5  #define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V3                              0x80
3011      =5  #define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_DESTINATION_END_POINT_MASK_V3                0x7F
3012      =5  #define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_BIT_ADDRESS_BIT_MASK_V3                      0x80
3013      =5  /* Values used for Multi Channel End Point Report command */
3014      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_RES_MASK_V3                           0x3F
3015      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_IDENTICAL_BIT_MASK_V3                 0x40
3016      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V3                   0x80
3017      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_END_POINTS_MASK_V3                    0x7F
3018      =5  #define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_RES_BIT_MASK_V3                       0x80
3019      =5  /* Values used for Multi Instance Cmd Encap command */
3020      =5  #define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_INSTANCE_MASK_V3                            0x7F
3021      =5  #define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V3                             0x80
3022      =5  /* Values used for Multi Instance Report command */
3023      =5  #define MULTI_INSTANCE_REPORT_PROPERTIES1_INSTANCES_MASK_V3                              0x7F
3024      =5  #define MULTI_INSTANCE_REPORT_PROPERTIES1_RES_BIT_MASK_V3                                0x80
3025      =5  
3026      =5  /* Multi Cmd command class commands */
3027      =5  #define MULTI_CMD_VERSION                                                                0x01
3028      =5  #define MULTI_CMD_ENCAP                                                                  0x01
3029      =5  
3030      =5  /* Multi Instance Association command class commands */
3031      =5  #define MULTI_INSTANCE_ASSOCIATION_VERSION                                               0x01
3032      =5  #define MULTI_INSTANCE_ASSOCIATION_GET                                                   0x02
3033      =5  #define MULTI_INSTANCE_ASSOCIATION_GROUPINGS_GET                                         0x05
3034      =5  #define MULTI_INSTANCE_ASSOCIATION_GROUPINGS_REPORT                                      0x06
3035      =5  #define MULTI_INSTANCE_ASSOCIATION_REMOVE                                                0x04
3036      =5  #define MULTI_INSTANCE_ASSOCIATION_REPORT                                                0x03
3037      =5  #define MULTI_INSTANCE_ASSOCIATION_SET                                                   0x01
3038      =5  /* Values used for Multi Instance Association Remove command */
3039      =5  #define MULTI_INSTANCE_ASSOCIATION_REMOVE_MARKER                                         0x00 /*This marke
             -r identifier is used to separate between nodes without and with end points attached. This field can be omitted in case n
             -o Multi Channel node follows.*/
3040      =5  /* Values used for Multi Instance Association Report command */
3041      =5  #define MULTI_INSTANCE_ASSOCIATION_REPORT_MARKER                                         0x00 /*This marke
             -r identifier is used to separate between nodes without and with end points attached. This field can be omitted in case n
             -o Multi Channel node follows.*/
3042      =5  /* Values used for Multi Instance Association Set command */
3043      =5  #define MULTI_INSTANCE_ASSOCIATION_SET_MARKER                                            0x00 /*This marke
             -r identifier is used to separate between nodes without and with end points attached. This field can be omitted in case n
             -o Multi Channel node follows.*/
3044      =5  
3045      =5  /* Multi Instance command class commands */
3046      =5  #define MULTI_INSTANCE_VERSION                                                           0x01
3047      =5  #define MULTI_INSTANCE_CMD_ENCAP                                                         0x06
3048      =5  #define MULTI_INSTANCE_GET                                                               0x04
3049      =5  #define MULTI_INSTANCE_REPORT                                                            0x05
3050      =5  
3051      =5  /* Network Management Proxy command class commands */
3052      =5  #define NETWORK_MANAGEMENT_PROXY_VERSION                                                 0x01
3053      =5  #define NODE_INFO_CACHED_GET                                                             0x03
3054      =5  #define NODE_INFO_CACHED_REPORT                                                          0x04
3055      =5  #define NODE_LIST_GET                                                                    0x01
3056      =5  #define NODE_LIST_REPORT                                                                 0x02
3057      =5  /* Values used for Node Info Cached Get command */
3058      =5  #define NODE_INFO_CACHED_GET_PROPERTIES1_MAX_AGE_MASK                                    0x0F
3059      =5  #define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_MASK                                   0xF0
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 78  

3060      =5  #define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_SHIFT                                  0x04
3061      =5  /* Values used for Node Info Cached Report command */
3062      =5  #define NODE_INFO_CACHED_REPORT_PROPERTIES1_AGE_MASK                                     0x0F
3063      =5  #define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_MASK                                  0xF0
3064      =5  #define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_SHIFT                                 0x04
3065      =5  #define NODE_INFO_CACHED_REPORT_STATUS_STATUS_OK                                         0x00
3066      =5  #define NODE_INFO_CACHED_REPORT_STATUS_STATUS_NOT_RESPONDING                             0x01
3067      =5  #define NODE_INFO_CACHED_REPORT_STATUS_STATUS_UNKNOWN                                    0x02
3068      =5  #define NODE_INFO_CACHED_REPORT_PROPERTIES2_CAPABILITY_MASK                              0x7F
3069      =5  #define NODE_INFO_CACHED_REPORT_PROPERTIES2_LISTENING_BIT_MASK                           0x80
3070      =5  #define NODE_INFO_CACHED_REPORT_PROPERTIES3_SECURITY_MASK                                0x0F
3071      =5  #define NODE_INFO_CACHED_REPORT_PROPERTIES3_SENSOR_MASK                                  0x70
3072      =5  #define NODE_INFO_CACHED_REPORT_PROPERTIES3_SENSOR_SHIFT                                 0x04
3073      =5  #define NODE_INFO_CACHED_REPORT_PROPERTIES3_OPT_BIT_MASK                                 0x80
3074      =5  #define NODE_INFO_CACHED_REPORT_SECURITY_SCHEME_0_MARK                                   0xF100
3075      =5  
3076      =5  /* Network Management Basic command class commands */
3077      =5  #define NETWORK_MANAGEMENT_BASIC_VERSION                                                 0x01
3078      =5  #define LEARN_MODE_SET                                                                   0x01
3079      =5  #define LEARN_MODE_SET_STATUS                                                            0x02
3080      =5  #define NODE_INFORMATION_SEND                                                            0x05
3081      =5  #define NETWORK_UPDATE_REQUEST                                                           0x03
3082      =5  #define NETWORK_UPDATE_REQUEST_STATUS                                                    0x04
3083      =5  #define DEFAULT_SET                                                                      0x06
3084      =5  #define DEFAULT_SET_COMPLETE                                                             0x07
3085      =5  
3086      =5  /* Network Management Inclusion command class commands */
3087      =5  #define NETWORK_MANAGEMENT_INCLUSION_VERSION                                             0x01
3088      =5  #define FAILED_NODE_REMOVE                                                               0x07
3089      =5  #define FAILED_NODE_REMOVE_STATUS                                                        0x08
3090      =5  #define NODE_ADD                                                                         0x01
3091      =5  #define NODE_ADD_STATUS                                                                  0x02
3092      =5  #define NODE_REMOVE                                                                      0x03
3093      =5  #define NODE_REMOVE_STATUS                                                               0x04
3094      =5  #define FAILED_NODE_REPLACE                                                              0x09
3095      =5  #define FAILED_NODE_REPLACE_STATUS                                                       0x0A
3096      =5  #define NODE_NEIGHBOR_UPDATE_REQUEST                                                     0x0B
3097      =5  #define NODE_NEIGHBOR_UPDATE_STATUS                                                      0x0C
3098      =5  #define RETURN_ROUTE_ASSIGN                                                              0x0D
3099      =5  #define RETURN_ROUTE_ASSIGN_COMPLETE                                                     0x0E
3100      =5  #define RETURN_ROUTE_DELETE                                                              0x0F
3101      =5  #define RETURN_ROUTE_DELETE_COMPLETE                                                     0x10
3102      =5  /* Values used for Node Add Status command */
3103      =5  #define NODE_ADD_STATUS_PROPERTIES1_CAPABILITY_MASK                                      0x7F
3104      =5  #define NODE_ADD_STATUS_PROPERTIES1_LISTENING_BIT_MASK                                   0x80
3105      =5  #define NODE_ADD_STATUS_PROPERTIES2_SECURITY_MASK                                        0x7F
3106      =5  #define NODE_ADD_STATUS_PROPERTIES2_OPT_BIT_MASK                                         0x80
3107      =5  
3108      =5  /* No Operation command class commands */
3109      =5  #define NO_OPERATION_VERSION                                                             0x01
3110      =5  
3111      =5  /* Node Naming command class commands */
3112      =5  #define NODE_NAMING_VERSION                                                              0x01
3113      =5  #define NODE_NAMING_NODE_LOCATION_REPORT                                                 0x06
3114      =5  #define NODE_NAMING_NODE_LOCATION_SET                                                    0x04
3115      =5  #define NODE_NAMING_NODE_LOCATION_GET                                                    0x05
3116      =5  #define NODE_NAMING_NODE_NAME_GET                                                        0x02
3117      =5  #define NODE_NAMING_NODE_NAME_REPORT                                                     0x03
3118      =5  #define NODE_NAMING_NODE_NAME_SET                                                        0x01
3119      =5  /* Values used for Node Naming Node Location Report command */
3120      =5  #define NODE_NAMING_NODE_LOCATION_REPORT_LEVEL_CHAR_PRESENTATION_MASK                    0x07
3121      =5  #define NODE_NAMING_NODE_LOCATION_REPORT_LEVEL_RESERVED_MASK                             0xF8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 79  

3122      =5  #define NODE_NAMING_NODE_LOCATION_REPORT_LEVEL_RESERVED_SHIFT                            0x03
3123      =5  /* Values used for Node Naming Node Location Set command */
3124      =5  #define NODE_NAMING_NODE_LOCATION_SET_LEVEL_CHAR_PRESENTATION_MASK                       0x07
3125      =5  #define NODE_NAMING_NODE_LOCATION_SET_LEVEL_RESERVED_MASK                                0xF8
3126      =5  #define NODE_NAMING_NODE_LOCATION_SET_LEVEL_RESERVED_SHIFT                               0x03
3127      =5  /* Values used for Node Naming Node Name Report command */
3128      =5  #define NODE_NAMING_NODE_NAME_REPORT_LEVEL_CHAR_PRESENTATION_MASK                        0x07
3129      =5  #define NODE_NAMING_NODE_NAME_REPORT_LEVEL_RESERVED_MASK                                 0xF8
3130      =5  #define NODE_NAMING_NODE_NAME_REPORT_LEVEL_RESERVED_SHIFT                                0x03
3131      =5  /* Values used for Node Naming Node Name Set command */
3132      =5  #define NODE_NAMING_NODE_NAME_SET_LEVEL_CHAR_PRESENTATION_MASK                           0x07
3133      =5  #define NODE_NAMING_NODE_NAME_SET_LEVEL_RESERVED_MASK                                    0xF8
3134      =5  #define NODE_NAMING_NODE_NAME_SET_LEVEL_RESERVED_SHIFT                                   0x03
3135      =5  
3136      =5  /* Non Interoperable command class commands */
3137      =5  #define NON_INTEROPERABLE_VERSION                                                        0x01
3138      =5  
3139      =5  /* Powerlevel command class commands */
3140      =5  #define POWERLEVEL_VERSION                                                               0x01
3141      =5  #define POWERLEVEL_GET                                                                   0x02
3142      =5  #define POWERLEVEL_REPORT                                                                0x03
3143      =5  #define POWERLEVEL_SET                                                                   0x01
3144      =5  #define POWERLEVEL_TEST_NODE_GET                                                         0x05
3145      =5  #define POWERLEVEL_TEST_NODE_REPORT                                                      0x06
3146      =5  #define POWERLEVEL_TEST_NODE_SET                                                         0x04
3147      =5  /* Values used for Powerlevel Report command */
3148      =5  #define POWERLEVEL_REPORT_NORMALPOWER                                                    0x00
3149      =5  #define POWERLEVEL_REPORT_MINUS1DBM                                                      0x01
3150      =5  #define POWERLEVEL_REPORT_MINUS2DBM                                                      0x02
3151      =5  #define POWERLEVEL_REPORT_MINUS3DBM                                                      0x03
3152      =5  #define POWERLEVEL_REPORT_MINUS4DBM                                                      0x04
3153      =5  #define POWERLEVEL_REPORT_MINUS5DBM                                                      0x05
3154      =5  #define POWERLEVEL_REPORT_MINUS6DBM                                                      0x06
3155      =5  #define POWERLEVEL_REPORT_MINUS7DBM                                                      0x07
3156      =5  #define POWERLEVEL_REPORT_MINUS8DBM                                                      0x08
3157      =5  #define POWERLEVEL_REPORT_MINUS9DBM                                                      0x09
3158      =5  /* Values used for Powerlevel Set command */
3159      =5  #define POWERLEVEL_SET_NORMALPOWER                                                       0x00
3160      =5  #define POWERLEVEL_SET_MINUS1DBM                                                         0x01
3161      =5  #define POWERLEVEL_SET_MINUS2DBM                                                         0x02
3162      =5  #define POWERLEVEL_SET_MINUS3DBM                                                         0x03
3163      =5  #define POWERLEVEL_SET_MINUS4DBM                                                         0x04
3164      =5  #define POWERLEVEL_SET_MINUS5DBM                                                         0x05
3165      =5  #define POWERLEVEL_SET_MINUS6DBM                                                         0x06
3166      =5  #define POWERLEVEL_SET_MINUS7DBM                                                         0x07
3167      =5  #define POWERLEVEL_SET_MINUS8DBM                                                         0x08
3168      =5  #define POWERLEVEL_SET_MINUS9DBM                                                         0x09
3169      =5  /* Values used for Powerlevel Test Node Report command */
3170      =5  #define POWERLEVEL_TEST_NODE_REPORT_ZW_TEST_FAILED                                       0x00
3171      =5  #define POWERLEVEL_TEST_NODE_REPORT_ZW_TEST_SUCCES                                       0x01
3172      =5  #define POWERLEVEL_TEST_NODE_REPORT_ZW_TEST_INPROGRESS                                   0x02
3173      =5  /* Values used for Powerlevel Test Node Set command */
3174      =5  #define POWERLEVEL_TEST_NODE_SET_NORMALPOWER                                             0x00
3175      =5  #define POWERLEVEL_TEST_NODE_SET_MINUS1DBM                                               0x01
3176      =5  #define POWERLEVEL_TEST_NODE_SET_MINUS2DBM                                               0x02
3177      =5  #define POWERLEVEL_TEST_NODE_SET_MINUS3DBM                                               0x03
3178      =5  #define POWERLEVEL_TEST_NODE_SET_MINUS4DBM                                               0x04
3179      =5  #define POWERLEVEL_TEST_NODE_SET_MINUS5DBM                                               0x05
3180      =5  #define POWERLEVEL_TEST_NODE_SET_MINUS6DBM                                               0x06
3181      =5  #define POWERLEVEL_TEST_NODE_SET_MINUS7DBM                                               0x07
3182      =5  #define POWERLEVEL_TEST_NODE_SET_MINUS8DBM                                               0x08
3183      =5  #define POWERLEVEL_TEST_NODE_SET_MINUS9DBM                                               0x09
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 80  

3184      =5  
3185      =5  /* Prepayment Encapsulation command class commands */
3186      =5  #define PREPAYMENT_ENCAPSULATION_VERSION                                                 0x01
3187      =5  #define CMD_ENCAPSULATION                                                                0x01
3188      =5  
3189      =5  /* Prepayment command class commands */
3190      =5  #define PREPAYMENT_VERSION                                                               0x01
3191      =5  #define PREPAYMENT_BALANCE_GET                                                           0x01
3192      =5  #define PREPAYMENT_BALANCE_REPORT                                                        0x02
3193      =5  #define PREPAYMENT_SUPPORTED_GET                                                         0x03
3194      =5  #define PREPAYMENT_SUPPORTED_REPORT                                                      0x04
3195      =5  /* Values used for Prepayment Balance Get command */
3196      =5  #define PREPAYMENT_BALANCE_GET_PROPERTIES1_RESERVED_MASK                                 0x3F
3197      =5  #define PREPAYMENT_BALANCE_GET_PROPERTIES1_BALANCE_TYPE_MASK                             0xC0
3198      =5  #define PREPAYMENT_BALANCE_GET_PROPERTIES1_BALANCE_TYPE_SHIFT                            0x06
3199      =5  #define PREPAYMENT_BALANCE_GET_BALANCE_TYPE_UTILITY                                      0x00
3200      =5  #define PREPAYMENT_BALANCE_GET_BALANCE_TYPE_MONETARY                                     0x01
3201      =5  /* Values used for Prepayment Balance Report command */
3202      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES1_METER_TYPE_MASK                            0x3F
3203      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES1_BALANCE_TYPE_MASK                          0xC0
3204      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES1_BALANCE_TYPE_SHIFT                         0x06
3205      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES2_SCALE_MASK                                 0x1F
3206      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES2_BALANCE_PRECISION_MASK                     0xE0
3207      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES2_BALANCE_PRECISION_SHIFT                    0x05
3208      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES3_RESERVED_MASK                              0x1F
3209      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES3_DEBT_PRECISION_MASK                        0xE0
3210      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES3_DEBT_PRECISION_SHIFT                       0x05
3211      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES4_RESERVED_MASK                              0x1F
3212      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES4_EMER_CREDIT_PRECISION_MASK                 0xE0
3213      =5  #define PREPAYMENT_BALANCE_REPORT_PROPERTIES4_EMER_CREDIT_PRECISION_SHIFT                0x05
3214      =5  /* Values used for Prepayment Supported Report command */
3215      =5  #define PREPAYMENT_SUPPORTED_REPORT_PROPERTIES1_TYPES_SUPPORTED_MASK                     0x0F
3216      =5  #define PREPAYMENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK                            0xF0
3217      =5  #define PREPAYMENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT                           0x04
3218      =5  
3219      =5  /* Proprietary command class commands */
3220      =5  #define PROPRIETARY_VERSION                                                              0x01
3221      =5  #define PROPRIETARY_GET                                                                  0x02
3222      =5  #define PROPRIETARY_REPORT                                                               0x03
3223      =5  #define PROPRIETARY_SET                                                                  0x01
3224      =5  
3225      =5  /* Protection command class commands */
3226      =5  #define PROTECTION_VERSION                                                               0x01
3227      =5  #define PROTECTION_GET                                                                   0x02
3228      =5  #define PROTECTION_REPORT                                                                0x03
3229      =5  #define PROTECTION_SET                                                                   0x01
3230      =5  /* Values used for Protection Report command */
3231      =5  #define PROTECTION_REPORT_UNPROTECTED                                                    0x00
3232      =5  #define PROTECTION_REPORT_PROTECTION_BY_SEQUENCE                                         0x01
3233      =5  #define PROTECTION_REPORT_NO_OPERATION_POSSIBLE                                          0x02
3234      =5  /* Values used for Protection Set command */
3235      =5  #define PROTECTION_SET_UNPROTECTED                                                       0x00
3236      =5  #define PROTECTION_SET_PROTECTION_BY_SEQUENCE                                            0x01
3237      =5  #define PROTECTION_SET_NO_OPERATION_POSSIBLE                                             0x02
3238      =5  
3239      =5  /* Protection command class commands */
3240      =5  #define PROTECTION_VERSION_V2                                                            0x02
3241      =5  #define PROTECTION_EC_GET_V2                                                             0x07
3242      =5  #define PROTECTION_EC_REPORT_V2                                                          0x08
3243      =5  #define PROTECTION_EC_SET_V2                                                             0x06
3244      =5  #define PROTECTION_GET_V2                                                                0x02
3245      =5  #define PROTECTION_REPORT_V2                                                             0x03
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 81  

3246      =5  #define PROTECTION_SET_V2                                                                0x01
3247      =5  #define PROTECTION_SUPPORTED_GET_V2                                                      0x04
3248      =5  #define PROTECTION_SUPPORTED_REPORT_V2                                                   0x05
3249      =5  #define PROTECTION_TIMEOUT_GET_V2                                                        0x0A
3250      =5  #define PROTECTION_TIMEOUT_REPORT_V2                                                     0x0B
3251      =5  #define PROTECTION_TIMEOUT_SET_V2                                                        0x09
3252      =5  /* Values used for Protection Report command */
3253      =5  #define PROTECTION_REPORT_LEVEL_LOCAL_PROTECTION_STATE_MASK_V2                           0x0F
3254      =5  #define PROTECTION_REPORT_LEVEL_RESERVED_MASK_V2                                         0xF0
3255      =5  #define PROTECTION_REPORT_LEVEL_RESERVED_SHIFT_V2                                        0x04
3256      =5  #define PROTECTION_REPORT_LEVEL2_RF_PROTECTION_STATE_MASK_V2                             0x0F
3257      =5  #define PROTECTION_REPORT_LEVEL2_RESERVED_MASK_V2                                        0xF0
3258      =5  #define PROTECTION_REPORT_LEVEL2_RESERVED_SHIFT_V2                                       0x04
3259      =5  /* Values used for Protection Set command */
3260      =5  #define PROTECTION_SET_LEVEL_LOCAL_PROTECTION_STATE_MASK_V2                              0x0F
3261      =5  #define PROTECTION_SET_LEVEL_RESERVED_MASK_V2                                            0xF0
3262      =5  #define PROTECTION_SET_LEVEL_RESERVED_SHIFT_V2                                           0x04
3263      =5  #define PROTECTION_SET_LEVEL2_RF_PROTECTION_STATE_MASK_V2                                0x0F
3264      =5  #define PROTECTION_SET_LEVEL2_RESERVED_MASK_V2                                           0xF0
3265      =5  #define PROTECTION_SET_LEVEL2_RESERVED_SHIFT_V2                                          0x04
3266      =5  /* Values used for Protection Supported Report command */
3267      =5  #define PROTECTION_SUPPORTED_REPORT_LEVEL_TIMEOUT_BIT_MASK_V2                            0x01
3268      =5  #define PROTECTION_SUPPORTED_REPORT_LEVEL_EXCLUSIVE_CONTROL_BIT_MASK_V2                  0x02
3269      =5  #define PROTECTION_SUPPORTED_REPORT_LEVEL_RESERVED_MASK_V2                               0xFC
3270      =5  #define PROTECTION_SUPPORTED_REPORT_LEVEL_RESERVED_SHIFT_V2                              0x02
3271      =5  
3272      =5  /* Rate Tbl Config command class commands */
3273      =5  #define RATE_TBL_CONFIG_VERSION                                                          0x01
3274      =5  #define RATE_TBL_REMOVE                                                                  0x02
3275      =5  #define RATE_TBL_SET                                                                     0x01
3276      =5  /* Values used for Rate Tbl Remove command */
3277      =5  #define RATE_TBL_REMOVE_PROPERTIES1_RATE_PARAMETER_SET_IDS_MASK                          0x3F
3278      =5  #define RATE_TBL_REMOVE_PROPERTIES1_RESERVED_MASK                                        0xC0
3279      =5  #define RATE_TBL_REMOVE_PROPERTIES1_RESERVED_SHIFT                                       0x06
3280      =5  /* Values used for Rate Tbl Set command */
3281      =5  #define RATE_TBL_SET_PROPERTIES1_NUMBER_OF_RATE_CHAR_MASK                                0x1F
3282      =5  #define RATE_TBL_SET_PROPERTIES1_RATE_TYPE_MASK                                          0x60
3283      =5  #define RATE_TBL_SET_PROPERTIES1_RATE_TYPE_SHIFT                                         0x05
3284      =5  #define RATE_TBL_SET_PROPERTIES1_RESERVED_BIT_MASK                                       0x80
3285      =5  #define RATE_TBL_SET_PROPERTIES2_CONSUMPTION_SCALE_MASK                                  0x1F
3286      =5  #define RATE_TBL_SET_PROPERTIES2_CONSUMPTION_PRECISION_MASK                              0xE0
3287      =5  #define RATE_TBL_SET_PROPERTIES2_CONSUMPTION_PRECISION_SHIFT                             0x05
3288      =5  #define RATE_TBL_SET_PROPERTIES3_MAX_DEMAND_SCALE_MASK                                   0x1F
3289      =5  #define RATE_TBL_SET_PROPERTIES3_MAX_DEMAND_PRECISION_MASK                               0xE0
3290      =5  #define RATE_TBL_SET_PROPERTIES3_MAX_DEMAND_PRECISION_SHIFT                              0x05
3291      =5  
3292      =5  /* Rate Tbl Monitor command class commands */
3293      =5  #define RATE_TBL_MONITOR_VERSION                                                         0x01
3294      =5  #define RATE_TBL_ACTIVE_RATE_GET                                                         0x05
3295      =5  #define RATE_TBL_ACTIVE_RATE_REPORT                                                      0x06
3296      =5  #define RATE_TBL_CURRENT_DATA_GET                                                        0x07
3297      =5  #define RATE_TBL_CURRENT_DATA_REPORT                                                     0x08
3298      =5  #define RATE_TBL_GET                                                                     0x03
3299      =5  #define RATE_TBL_HISTORICAL_DATA_GET                                                     0x09
3300      =5  #define RATE_TBL_HISTORICAL_DATA_REPORT                                                  0x0A
3301      =5  #define RATE_TBL_REPORT                                                                  0x04
3302      =5  #define RATE_TBL_SUPPORTED_GET                                                           0x01
3303      =5  #define RATE_TBL_SUPPORTED_REPORT                                                        0x02
3304      =5  /* Values used for Rate Tbl Report command */
3305      =5  #define RATE_TBL_REPORT_PROPERTIES1_NUMBER_OF_RATE_CHAR_MASK                             0x1F
3306      =5  #define RATE_TBL_REPORT_PROPERTIES1_RATE_TYPE_MASK                                       0x60
3307      =5  #define RATE_TBL_REPORT_PROPERTIES1_RATE_TYPE_SHIFT                                      0x05
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 82  

3308      =5  #define RATE_TBL_REPORT_PROPERTIES1_RESERVED_BIT_MASK                                    0x80
3309      =5  #define RATE_TBL_REPORT_PROPERTIES2_CONSUMPTION_SCALE_MASK                               0x1F
3310      =5  #define RATE_TBL_REPORT_PROPERTIES2_CONSUMPTION_PRECISION_MASK                           0xE0
3311      =5  #define RATE_TBL_REPORT_PROPERTIES2_CONSUMPTION_PRECISION_SHIFT                          0x05
3312      =5  #define RATE_TBL_REPORT_PROPERTIES3_MAX_DEMAND_SCALE_MASK                                0x1F
3313      =5  #define RATE_TBL_REPORT_PROPERTIES3_MAX_DEMAND_PRECISION_MASK                            0xE0
3314      =5  #define RATE_TBL_REPORT_PROPERTIES3_MAX_DEMAND_PRECISION_SHIFT                           0x05
3315      =5  
3316      =5  /* Remote Association Activate command class commands */
3317      =5  #define REMOTE_ASSOCIATION_ACTIVATE_VERSION                                              0x01
3318      =5  #define REMOTE_ASSOCIATION_ACTIVATE                                                      0x01
3319      =5  
3320      =5  /* Remote Association command class commands */
3321      =5  #define REMOTE_ASSOCIATION_VERSION                                                       0x01
3322      =5  #define REMOTE_ASSOCIATION_CONFIGURATION_GET                                             0x02
3323      =5  #define REMOTE_ASSOCIATION_CONFIGURATION_REPORT                                          0x03
3324      =5  #define REMOTE_ASSOCIATION_CONFIGURATION_SET                                             0x01
3325      =5  
3326      =5  /* Scene Activation command class commands */
3327      =5  #define SCENE_ACTIVATION_VERSION                                                         0x01
3328      =5  #define SCENE_ACTIVATION_SET                                                             0x01
3329      =5  
3330      =5  /* Scene Actuator Conf command class commands */
3331      =5  #define SCENE_ACTUATOR_CONF_VERSION                                                      0x01
3332      =5  #define SCENE_ACTUATOR_CONF_GET                                                          0x02
3333      =5  #define SCENE_ACTUATOR_CONF_REPORT                                                       0x03
3334      =5  #define SCENE_ACTUATOR_CONF_SET                                                          0x01
3335      =5  /* Values used for Scene Actuator Conf Set command */
3336      =5  #define SCENE_ACTUATOR_CONF_SET_LEVEL2_RESERVED_MASK                                     0x7F
3337      =5  #define SCENE_ACTUATOR_CONF_SET_LEVEL2_OVERRIDE_BIT_MASK                                 0x80
3338      =5  
3339      =5  /* Scene Controller Conf command class commands */
3340      =5  #define SCENE_CONTROLLER_CONF_VERSION                                                    0x01
3341      =5  #define SCENE_CONTROLLER_CONF_GET                                                        0x02
3342      =5  #define SCENE_CONTROLLER_CONF_REPORT                                                     0x03
3343      =5  #define SCENE_CONTROLLER_CONF_SET                                                        0x01
3344      =5  
3345      =5  /* Schedule Entry Lock command class commands */
3346      =5  #define SCHEDULE_ENTRY_LOCK_VERSION                                                      0x01
3347      =5  #define SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET                                               0x02
3348      =5  #define SCHEDULE_ENTRY_LOCK_ENABLE_SET                                                   0x01
3349      =5  #define SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET                                                 0x04
3350      =5  #define SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT                                              0x05
3351      =5  #define SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET                                                 0x03
3352      =5  #define SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET                                                 0x07
3353      =5  #define SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT                                              0x08
3354      =5  #define SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET                                                 0x06
3355      =5  #define SCHEDULE_ENTRY_TYPE_SUPPORTED_GET                                                0x09
3356      =5  #define SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT                                             0x0A
3357      =5  
3358      =5  /* Schedule Entry Lock command class commands */
3359      =5  #define SCHEDULE_ENTRY_LOCK_VERSION_V2                                                   0x02
3360      =5  #define SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V2                                            0x02
3361      =5  #define SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2                                                0x01
3362      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V2                                           0x0B
3363      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V2                                        0x0C
3364      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V2                                           0x0D
3365      =5  #define SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V2                                              0x04
3366      =5  #define SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V2                                           0x05
3367      =5  #define SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V2                                              0x03
3368      =5  #define SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V2                                              0x07
3369      =5  #define SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V2                                           0x08
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 83  

3370      =5  #define SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V2                                              0x06
3371      =5  #define SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V2                                             0x09
3372      =5  #define SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V2                                          0x0A
3373      =5  /* Values used for Schedule Entry Lock Time Offset Report command */
3374      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_HOUR_TZO_MASK_V2                    0x7F
3375      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_SIGN_TZO_BIT_MASK_V2                0x80
3376      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_MINUTE_OFFSET_DST_MASK_V2          0x7F
3377      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V2        0x80
3378      =5  /* Values used for Schedule Entry Lock Time Offset Set command */
3379      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_HOUR_TZO_MASK_V2                       0x7F
3380      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_SIGN_TZO_BIT_MASK_V2                   0x80
3381      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_MINUTE_OFFSET_DST_MASK_V2             0x7F
3382      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V2           0x80
3383      =5  
3384      =5  /* Schedule Entry Lock command class commands */
3385      =5  #define SCHEDULE_ENTRY_LOCK_VERSION_V3                                                   0x03
3386      =5  #define SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V3                                            0x02
3387      =5  #define SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3                                                0x01
3388      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V3                                           0x0B
3389      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V3                                        0x0C
3390      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V3                                           0x0D
3391      =5  #define SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V3                                              0x04
3392      =5  #define SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V3                                           0x05
3393      =5  #define SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V3                                              0x03
3394      =5  #define SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V3                                              0x07
3395      =5  #define SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V3                                           0x08
3396      =5  #define SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V3                                              0x06
3397      =5  #define SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V3                                             0x09
3398      =5  #define SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V3                                          0x0A
3399      =5  #define SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V3                                       0x0E
3400      =5  #define SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V3                                    0x0F
3401      =5  #define SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V3                                       0x10
3402      =5  /* Values used for Schedule Entry Lock Time Offset Report command */
3403      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_HOUR_TZO_MASK_V3                    0x7F
3404      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_SIGN_TZO_BIT_MASK_V3                0x80
3405      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_MINUTE_OFFSET_DST_MASK_V3          0x7F
3406      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V3        0x80
3407      =5  /* Values used for Schedule Entry Lock Time Offset Set command */
3408      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_HOUR_TZO_MASK_V3                       0x7F
3409      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_SIGN_TZO_BIT_MASK_V3                   0x80
3410      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_MINUTE_OFFSET_DST_MASK_V3             0x7F
3411      =5  #define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V3           0x80
3412      =5  
3413      =5  /* Screen Attributes command class commands */
3414      =5  #define SCREEN_ATTRIBUTES_VERSION                                                        0x01
3415      =5  #define SCREEN_ATTRIBUTES_GET                                                            0x01
3416      =5  #define SCREEN_ATTRIBUTES_REPORT                                                         0x02
3417      =5  /* Values used for Screen Attributes Report command */
3418      =5  #define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_NUMBER_OF_LINES_MASK                        0x1F
3419      =5  #define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_RESERVED_MASK                               0xE0
3420      =5  #define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_RESERVED_SHIFT                              0x05
3421      =5  
3422      =5  /* Screen Attributes command class commands */
3423      =5  #define SCREEN_ATTRIBUTES_VERSION_V2                                                     0x02
3424      =5  #define SCREEN_ATTRIBUTES_GET_V2                                                         0x01
3425      =5  #define SCREEN_ATTRIBUTES_REPORT_V2                                                      0x03
3426      =5  /* Values used for Screen Attributes Report command */
3427      =5  #define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_NUMBER_OF_LINES_MASK_V2                     0x1F
3428      =5  #define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_ESCAPE_SEQUENCE_BIT_MASK_V2                 0x20
3429      =5  #define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_RESERVED_MASK_V2                            0xC0
3430      =5  #define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                           0x06
3431      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 84  

3432      =5  /* Screen Md command class commands */
3433      =5  #define SCREEN_MD_VERSION                                                                0x01
3434      =5  #define SCREEN_MD_GET                                                                    0x01
3435      =5  #define SCREEN_MD_REPORT                                                                 0x02
3436      =5  /* Values used for Screen Md Report command */
3437      =5  #define SCREEN_MD_REPORT_PROPERTIES1_CHAR_PRESENTATION_MASK                              0x07
3438      =5  #define SCREEN_MD_REPORT_PROPERTIES1_SCREEN_SETTINGS_MASK                                0x38
3439      =5  #define SCREEN_MD_REPORT_PROPERTIES1_SCREEN_SETTINGS_SHIFT                               0x03
3440      =5  #define SCREEN_MD_REPORT_PROPERTIES1_RESERVED_BIT_MASK                                   0x40
3441      =5  #define SCREEN_MD_REPORT_PROPERTIES1_MORE_DATA_BIT_MASK                                  0x80
3442      =5  
3443      =5  /* Screen Md command class commands */
3444      =5  #define SCREEN_MD_VERSION_V2                                                             0x02
3445      =5  #define SCREEN_MD_GET_V2                                                                 0x01
3446      =5  #define SCREEN_MD_REPORT_V2                                                              0x03
3447      =5  /* Values used for Screen Md Report command */
3448      =5  #define SCREEN_MD_REPORT_PROPERTIES1_CHAR_PRESENTATION_MASK_V2                           0x07
3449      =5  #define SCREEN_MD_REPORT_PROPERTIES1_SCREEN_SETTINGS_MASK_V2                             0x38
3450      =5  #define SCREEN_MD_REPORT_PROPERTIES1_SCREEN_SETTINGS_SHIFT_V2                            0x03
3451      =5  #define SCREEN_MD_REPORT_PROPERTIES1_RESERVED_BIT_MASK_V2                                0x40
3452      =5  #define SCREEN_MD_REPORT_PROPERTIES1_MORE_DATA_BIT_MASK_V2                               0x80
3453      =5  #define SCREEN_MD_REPORT_PROPERTIES2_SCREEN_TIMEOUT_BIT_MASK_V2                          0x01
3454      =5  #define SCREEN_MD_REPORT_PROPERTIES2_RESERVED_MASK_V2                                    0xFE
3455      =5  #define SCREEN_MD_REPORT_PROPERTIES2_RESERVED_SHIFT_V2                                   0x01
3456      =5  
3457      =5  /* Security Panel Mode command class commands */
3458      =5  #define SECURITY_PANEL_MODE_VERSION                                                      0x01
3459      =5  #define SECURITY_PANEL_MODE_GET                                                          0x03
3460      =5  #define SECURITY_PANEL_MODE_REPORT                                                       0x04
3461      =5  #define SECURITY_PANEL_MODE_SET                                                          0x05
3462      =5  #define SECURITY_PANEL_MODE_SUPPORTED_GET                                                0x01
3463      =5  #define SECURITY_PANEL_MODE_SUPPORTED_REPORT                                             0x02
3464      =5  
3465      =5  /* Security Panel Zone Sensor command class commands */
3466      =5  #define SECURITY_PANEL_ZONE_SENSOR_VERSION                                               0x01
3467      =5  #define COMMAND_CLASS_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_REPORT                        0x02
3468      =5  #define SECURITY_PANEL_ZONE_SENSOR_TYPE_GET                                              0x03
3469      =5  #define SECURITY_PANEL_ZONE_SENSOR_TYPE_REPORT                                           0x04
3470      =5  #define SECURITY_PANEL_ZONE_SENSOR_INSTALLED_GET                                         0x01
3471      =5  #define SECURITY_PANEL_ZONE_SENSOR_STATE_GET                                             0x05
3472      =5  #define SECURITY_PANEL_ZONE_SENSOR_STATE_REPORT                                          0x06
3473      =5  
3474      =5  /* Security Panel Zone command class commands */
3475      =5  #define SECURITY_PANEL_ZONE_VERSION                                                      0x01
3476      =5  #define SECURITY_PANEL_ZONE_NUMBER_SUPPORTED_GET                                         0x01
3477      =5  #define SECURITY_PANEL_ZONE_STATE_GET                                                    0x05
3478      =5  #define SECURITY_PANEL_ZONE_STATE_REPORT                                                 0x06
3479      =5  #define SECURITY_PANEL_ZONE_SUPPORTED_REPORT                                             0x02
3480      =5  #define SECURITY_PANEL_ZONE_TYPE_GET                                                     0x03
3481      =5  #define SECURITY_PANEL_ZONE_TYPE_REPORT                                                  0x04
3482      =5  /* Values used for Security Panel Zone Supported Report command */
3483      =5  #define SECURITY_PANEL_ZONE_SUPPORTED_REPORT_PARAMETERS1_ZONES_SUPPORTED_MASK            0x7F
3484      =5  #define SECURITY_PANEL_ZONE_SUPPORTED_REPORT_PARAMETERS1_ZM_BIT_MASK                     0x80
3485      =5  
3486      =5  /* Security command class commands */
3487      =5  #define SECURITY_VERSION                                                                 0x01
3488      =5  #define NETWORK_KEY_SET                                                                  0x06
3489      =5  #define NETWORK_KEY_VERIFY                                                               0x07
3490      =5  #define SECURITY_COMMANDS_SUPPORTED_GET                                                  0x02
3491      =5  #define SECURITY_COMMANDS_SUPPORTED_REPORT                                               0x03
3492      =5  #define SECURITY_MESSAGE_ENCAPSULATION                                                   0x81
3493      =5  #define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET                                         0xC1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 85  

3494      =5  #define SECURITY_NONCE_GET                                                               0x40
3495      =5  #define SECURITY_NONCE_REPORT                                                            0x80
3496      =5  #define SECURITY_SCHEME_GET                                                              0x04
3497      =5  #define SECURITY_SCHEME_INHERIT                                                          0x08
3498      =5  #define SECURITY_SCHEME_REPORT                                                           0x05
3499      =5  /* Values used for Security Commands Supported Report command */
3500      =5  #define SECURITY_COMMANDS_SUPPORTED_REPORT_COMMAND_CLASS_MARK                            0xEF /*The COMMAN
             -D_CLASS_MARK is used to indicate that all preceding command classes are supported and all following command classes are 
             -controlled.*/
3501      =5  /* Values used for Security Message Encapsulation command */
3502      =5  #define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_SEQUENCE_COUNTER_MASK                 0x0F
3503      =5  #define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_SEQUENCED_BIT_MASK                    0x10
3504      =5  #define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_SECOND_FRAME_BIT_MASK                 0x20
3505      =5  #define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_RESERVED_MASK                         0xC0
3506      =5  #define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_RESERVED_SHIFT                        0x06
3507      =5  /* Values used for Security Message Encapsulation Nonce Get command */
3508      =5  #define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_SEQUENCE_COUNTER_MASK       0x0F
3509      =5  #define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_SEQUENCED_BIT_MASK          0x10
3510      =5  #define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_SECOND_FRAME_BIT_MASK       0x20
3511      =5  #define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_RESERVED_MASK               0xC0
3512      =5  #define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_RESERVED_SHIFT              0x06
3513      =5  
3514      =5  /* Sensor Alarm command class commands */
3515      =5  #define SENSOR_ALARM_VERSION                                                             0x01
3516      =5  #define SENSOR_ALARM_GET                                                                 0x01
3517      =5  #define SENSOR_ALARM_REPORT                                                              0x02
3518      =5  #define SENSOR_ALARM_SUPPORTED_GET                                                       0x03
3519      =5  #define SENSOR_ALARM_SUPPORTED_REPORT                                                    0x04
3520      =5  
3521      =5  /* Sensor Binary command class commands */
3522      =5  #define SENSOR_BINARY_VERSION                                                            0x01
3523      =5  #define SENSOR_BINARY_GET                                                                0x02
3524      =5  #define SENSOR_BINARY_REPORT                                                             0x03
3525      =5  /* Values used for Sensor Binary Report command */
3526      =5  #define SENSOR_BINARY_REPORT_IDLE                                                        0x00
3527      =5  #define SENSOR_BINARY_REPORT_DETECTED_AN_EVENT                                           0xFF
3528      =5  
3529      =5  /* Sensor Binary command class commands */
3530      =5  #define SENSOR_BINARY_VERSION_V2                                                         0x02
3531      =5  #define SENSOR_BINARY_GET_V2                                                             0x02
3532      =5  #define SENSOR_BINARY_REPORT_V2                                                          0x03
3533      =5  #define SENSOR_BINARY_SUPPORTED_GET_SENSOR_V2                                            0x01
3534      =5  #define SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_V2                                         0x04
3535      =5  /* Values used for Sensor Binary Report command */
3536      =5  #define SENSOR_BINARY_REPORT_IDLE_V2                                                     0x00
3537      =5  #define SENSOR_BINARY_REPORT_DETECTED_AN_EVENT_V2                                        0xFF
3538      =5  
3539      =5  /* Sensor Configuration command class commands */
3540      =5  #define SENSOR_CONFIGURATION_VERSION                                                     0x01
3541      =5  #define SENSOR_TRIGGER_LEVEL_GET                                                         0x02
3542      =5  #define SENSOR_TRIGGER_LEVEL_REPORT                                                      0x03
3543      =5  #define SENSOR_TRIGGER_LEVEL_SET                                                         0x01
3544      =5  /* Values used for Sensor Trigger Level Report command */
3545      =5  #define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_SIZE_MASK                                0x07
3546      =5  #define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_SCALE_MASK                               0x18
3547      =5  #define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_SCALE_SHIFT                              0x03
3548      =5  #define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_PRECISION_MASK                           0xE0
3549      =5  #define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_PRECISION_SHIFT                          0x05
3550      =5  /* Values used for Sensor Trigger Level Set command */
3551      =5  #define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES1_RESERVED_MASK                               0x3F
3552      =5  #define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES1_CURRENT_BIT_MASK                            0x40
3553      =5  #define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES1_DEFAULT_BIT_MASK                            0x80
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 86  

3554      =5  #define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_SIZE_MASK                                   0x07
3555      =5  #define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_SCALE_MASK                                  0x18
3556      =5  #define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_SCALE_SHIFT                                 0x03
3557      =5  #define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_PRECISION_MASK                              0xE0
3558      =5  #define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_PRECISION_SHIFT                             0x05
3559      =5  
3560      =5  /* Sensor Multilevel command class commands */
3561      =5  #define SENSOR_MULTILEVEL_VERSION                                                        0x01
3562      =5  #define SENSOR_MULTILEVEL_GET                                                            0x04
3563      =5  #define SENSOR_MULTILEVEL_REPORT                                                         0x05
3564      =5  /* Values used for Sensor Multilevel Report command */
3565      =5  #define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1                                   0x01
3566      =5  #define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1                         0x02
3567      =5  #define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1                                     0x03
3568      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK                                         0x07
3569      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK                                        0x18
3570      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT                                       0x03
3571      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK                                    0xE0
3572      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT                                   0x05
3573      =5  
3574      =5  /* Sensor Multilevel command class commands */
3575      =5  #define SENSOR_MULTILEVEL_VERSION_V2                                                     0x02
3576      =5  #define SENSOR_MULTILEVEL_GET_V2                                                         0x04
3577      =5  #define SENSOR_MULTILEVEL_REPORT_V2                                                      0x05
3578      =5  /* Values used for Sensor Multilevel Report command */
3579      =5  #define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V2                                0x01
3580      =5  #define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V2                      0x02
3581      =5  #define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V2                                  0x03
3582      =5  #define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V2                                      0x04
3583      =5  #define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V2                          0x05
3584      =5  #define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V2                                   0x06
3585      =5  #define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V2                                  0x07
3586      =5  #define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V2                       0x08
3587      =5  #define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V2                        0x09
3588      =5  #define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V2                            0x0A
3589      =5  #define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V2                                  0x0B
3590      =5  #define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V2                                  0x0C
3591      =5  #define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V2                                 0x0D
3592      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V2                                      0x07
3593      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V2                                     0x18
3594      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V2                                    0x03
3595      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V2                                 0xE0
3596      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V2                                0x05
3597      =5  
3598      =5  /* Sensor Multilevel command class commands */
3599      =5  #define SENSOR_MULTILEVEL_VERSION_V3                                                     0x03
3600      =5  #define SENSOR_MULTILEVEL_GET_V3                                                         0x04
3601      =5  #define SENSOR_MULTILEVEL_REPORT_V3                                                      0x05
3602      =5  /* Values used for Sensor Multilevel Report command */
3603      =5  #define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V3                                0x01
3604      =5  #define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V3                      0x02
3605      =5  #define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V3                                  0x03
3606      =5  #define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V3                                      0x04
3607      =5  #define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V3                          0x05
3608      =5  #define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V3                                   0x06
3609      =5  #define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V3                                  0x07
3610      =5  #define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V3                       0x08
3611      =5  #define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V3                        0x09
3612      =5  #define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V3                            0x0A
3613      =5  #define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V3                                  0x0B
3614      =5  #define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V3                                  0x0C
3615      =5  #define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V3                                 0x0D
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 87  

3616      =5  #define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V3                                     0x0E
3617      =5  #define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V3                                    0x0F
3618      =5  #define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V3                                    0x10
3619      =5  #define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V3                                  0x11
3620      =5  #define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V3                                   0x12
3621      =5  #define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V3                              0x13
3622      =5  #define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V3                                   0x14
3623      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V3                                      0x07
3624      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V3                                     0x18
3625      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V3                                    0x03
3626      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V3                                 0xE0
3627      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V3                                0x05
3628      =5  
3629      =5  /* Sensor Multilevel command class commands */
3630      =5  #define SENSOR_MULTILEVEL_VERSION_V4                                                     0x04
3631      =5  #define SENSOR_MULTILEVEL_GET_V4                                                         0x04
3632      =5  #define SENSOR_MULTILEVEL_REPORT_V4                                                      0x05
3633      =5  /* Values used for Sensor Multilevel Report command */
3634      =5  #define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V4                                0x01
3635      =5  #define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V4                      0x02
3636      =5  #define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V4                                  0x03
3637      =5  #define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V4                                      0x04
3638      =5  #define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V4                          0x05
3639      =5  #define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V4                                   0x06
3640      =5  #define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V4                                  0x07
3641      =5  #define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V4                       0x08
3642      =5  #define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V4                        0x09
3643      =5  #define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V4                            0x0A
3644      =5  #define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V4                                  0x0B
3645      =5  #define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V4                                  0x0C
3646      =5  #define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V4                                 0x0D
3647      =5  #define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V4                                     0x0E
3648      =5  #define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V4                                    0x0F
3649      =5  #define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V4                                    0x10
3650      =5  #define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V4                                  0x11
3651      =5  #define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V4                                   0x12
3652      =5  #define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V4                              0x13
3653      =5  #define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V4                                   0x14
3654      =5  #define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V4                             0x15
3655      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V4                                      0x07
3656      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V4                                     0x18
3657      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V4                                    0x03
3658      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V4                                 0xE0
3659      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V4                                0x05
3660      =5  
3661      =5  /* Sensor Multilevel command class commands */
3662      =5  #define SENSOR_MULTILEVEL_VERSION_V5                                                     0x05
3663      =5  #define SENSOR_MULTILEVEL_GET_V5                                                         0x04
3664      =5  #define SENSOR_MULTILEVEL_REPORT_V5                                                      0x05
3665      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V5                                        0x01
3666      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_V5                                     0x02
3667      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V5                                         0x03
3668      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V5                                      0x06
3669      =5  /* Values used for Sensor Multilevel Get command */
3670      =5  #define SENSOR_MULTILEVEL_GET_TEMPERATURE_VERSION_1_V5                                   0x01
3671      =5  #define SENSOR_MULTILEVEL_GET_GENERAL_PURPOSE_VALUE_VERSION_1_V5                         0x02
3672      =5  #define SENSOR_MULTILEVEL_GET_LUMINANCE_VERSION_1_V5                                     0x03
3673      =5  #define SENSOR_MULTILEVEL_GET_POWER_VERSION_2_V5                                         0x04
3674      =5  #define SENSOR_MULTILEVEL_GET_RELATIVE_HUMIDITY_VERSION_2_V5                             0x05
3675      =5  #define SENSOR_MULTILEVEL_GET_VELOCITY_VERSION_2_V5                                      0x06
3676      =5  #define SENSOR_MULTILEVEL_GET_DIRECTION_VERSION_2_V5                                     0x07
3677      =5  #define SENSOR_MULTILEVEL_GET_ATMOSPHERIC_PRESSURE_VERSION_2_V5                          0x08
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 88  

3678      =5  #define SENSOR_MULTILEVEL_GET_BAROMETRIC_PRESSURE_VERSION_2_V5                           0x09
3679      =5  #define SENSOR_MULTILEVEL_GET_SOLAR_RADIATION_VERSION_2_V5                               0x0A
3680      =5  #define SENSOR_MULTILEVEL_GET_DEW_POINT_VERSION_2_V5                                     0x0B
3681      =5  #define SENSOR_MULTILEVEL_GET_RAIN_RATE_VERSION_2_V5                                     0x0C
3682      =5  #define SENSOR_MULTILEVEL_GET_TIDE_LEVEL_VERSION_2_V5                                    0x0D
3683      =5  #define SENSOR_MULTILEVEL_GET_WEIGHT_VERSION_3_V5                                        0x0E
3684      =5  #define SENSOR_MULTILEVEL_GET_VOLTAGE_VERSION_3_V5                                       0x0F
3685      =5  #define SENSOR_MULTILEVEL_GET_CURRENT_VERSION_3_V5                                       0x10
3686      =5  #define SENSOR_MULTILEVEL_GET_CO2_LEVEL_VERSION_3_V5                                     0x11
3687      =5  #define SENSOR_MULTILEVEL_GET_AIR_FLOW_VERSION_3_V5                                      0x12
3688      =5  #define SENSOR_MULTILEVEL_GET_TANK_CAPACITY_VERSION_3_V5                                 0x13
3689      =5  #define SENSOR_MULTILEVEL_GET_DISTANCE_VERSION_3_V5                                      0x14
3690      =5  #define SENSOR_MULTILEVEL_GET_ANGLE_POSITION_VERSION_4_V5                                0x15
3691      =5  #define SENSOR_MULTILEVEL_GET_ROTATION_V5_V5                                             0x16
3692      =5  #define SENSOR_MULTILEVEL_GET_WATER_TEMPERATURE_V5_V5                                    0x17
3693      =5  #define SENSOR_MULTILEVEL_GET_SOIL_TEMPERATURE_V5_V5                                     0x18
3694      =5  #define SENSOR_MULTILEVEL_GET_SEISMIC_INTENSITY_V5_V5                                    0x19
3695      =5  #define SENSOR_MULTILEVEL_GET_SEISMIC_MAGNITUDE_V5_V5                                    0x1A
3696      =5  #define SENSOR_MULTILEVEL_GET_ULTRAVIOLET_V5_V5                                          0x1B
3697      =5  #define SENSOR_MULTILEVEL_GET_ELECTRICAL_RESISTIVITY_V5_V5                               0x1C
3698      =5  #define SENSOR_MULTILEVEL_GET_ELECTRICAL_CONDUCTIVITY_V5_V5                              0x1D
3699      =5  #define SENSOR_MULTILEVEL_GET_LOUDNESS_V5_V5                                             0x1E
3700      =5  #define SENSOR_MULTILEVEL_GET_MOISTURE_V5_V5                                             0x1F
3701      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED1_MASK_V5                              0x07
3702      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_MASK_V5                                  0x18
3703      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_SHIFT_V5                                 0x03
3704      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_MASK_V5                              0xE0
3705      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_SHIFT_V5                             0x05
3706      =5  /* Values used for Sensor Multilevel Report command */
3707      =5  #define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V5                                0x01
3708      =5  #define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V5                      0x02
3709      =5  #define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V5                                  0x03
3710      =5  #define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V5                                      0x04
3711      =5  #define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V5                          0x05
3712      =5  #define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V5                                   0x06
3713      =5  #define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V5                                  0x07
3714      =5  #define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V5                       0x08
3715      =5  #define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V5                        0x09
3716      =5  #define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V5                            0x0A
3717      =5  #define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V5                                  0x0B
3718      =5  #define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V5                                  0x0C
3719      =5  #define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V5                                 0x0D
3720      =5  #define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V5                                     0x0E
3721      =5  #define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V5                                    0x0F
3722      =5  #define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V5                                    0x10
3723      =5  #define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V5                                  0x11
3724      =5  #define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V5                                   0x12
3725      =5  #define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V5                              0x13
3726      =5  #define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V5                                   0x14
3727      =5  #define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V5                             0x15
3728      =5  #define SENSOR_MULTILEVEL_REPORT_ROTATION_V5_V5                                          0x16
3729      =5  #define SENSOR_MULTILEVEL_REPORT_WATER_TEMPERATURE_V5_V5                                 0x17
3730      =5  #define SENSOR_MULTILEVEL_REPORT_SOIL_TEMPERATURE_V5_V5                                  0x18
3731      =5  #define SENSOR_MULTILEVEL_REPORT_SEISMIC_INTENSITY_V5_V5                                 0x19
3732      =5  #define SENSOR_MULTILEVEL_REPORT_SEISMIC_MAGNITUDE_V5_V5                                 0x1A
3733      =5  #define SENSOR_MULTILEVEL_REPORT_ULTRAVIOLET_V5_V5                                       0x1B
3734      =5  #define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_RESISTIVITY_V5_V5                            0x1C
3735      =5  #define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V5                           0x1D
3736      =5  #define SENSOR_MULTILEVEL_REPORT_LOUDNESS_V5_V5                                          0x1E
3737      =5  #define SENSOR_MULTILEVEL_REPORT_MOISTURE_V5_V5                                          0x1F
3738      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V5                                      0x07
3739      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V5                                     0x18
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 89  

3740      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V5                                    0x03
3741      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V5                                 0xE0
3742      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V5                                0x05
3743      =5  /* Values used for Sensor Multilevel Supported Get Scale command */
3744      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TEMPERATURE_VERSION_1_V5                   0x01
3745      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_GENERAL_PURPOSE_VALUE_VERSION_1_V5         0x02
3746      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LUMINANCE_VERSION_1_V5                     0x03
3747      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_POWER_VERSION_2_V5                         0x04
3748      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_HUMIDITY_VERSION_2_V5             0x05
3749      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VELOCITY_VERSION_2_V5                      0x06
3750      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DIRECTION_VERSION_2_V5                     0x07
3751      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ATMOSPHERIC_PRESSURE_VERSION_2_V5          0x08
3752      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BAROMETRIC_PRESSURE_VERSION_2_V5           0x09
3753      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOLAR_RADIATION_VERSION_2_V5               0x0A
3754      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEW_POINT_VERSION_2_V5                     0x0B
3755      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RAIN_RATE_VERSION_2_V5                     0x0C
3756      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIDE_LEVEL_VERSION_2_V5                    0x0D
3757      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WEIGHT_VERSION_3_V5                        0x0E
3758      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLTAGE_VERSION_3_V5                       0x0F
3759      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CURRENT_VERSION_3_V5                       0x10
3760      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CO2_LEVEL_VERSION_3_V5                     0x11
3761      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_AIR_FLOW_VERSION_3_V5                      0x12
3762      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TANK_CAPACITY_VERSION_3_V5                 0x13
3763      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISTANCE_VERSION_3_V5                      0x14
3764      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ANGLE_POSITION_VERSION_4_V5                0x15
3765      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ROTATION_V5_V5                             0x16
3766      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_TEMPERATURE_V5_V5                    0x17
3767      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_TEMPERATURE_V5_V5                     0x18
3768      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_INTENSITY_V5_V5                    0x19
3769      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_MAGNITUDE_V5_V5                    0x1A
3770      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ULTRAVIOLET_V5_V5                          0x1B
3771      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_RESISTIVITY_V5_V5               0x1C
3772      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_CONDUCTIVITY_V5_V5              0x1D
3773      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LOUDNESS_V5_V5                             0x1E
3774      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOISTURE_V5_V5                             0x1F
3775      =5  /* Values used for Sensor Multilevel Supported Scale Report command */
3776      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TEMPERATURE_VERSION_1_V5                0x01
3777      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V5      0x02
3778      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LUMINANCE_VERSION_1_V5                  0x03
3779      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_POWER_VERSION_2_V5                      0x04
3780      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_HUMIDITY_VERSION_2_V5          0x05
3781      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VELOCITY_VERSION_2_V5                   0x06
3782      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DIRECTION_VERSION_2_V5                  0x07
3783      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V5       0x08
3784      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V5        0x09
3785      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOLAR_RADIATION_VERSION_2_V5            0x0A
3786      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEW_POINT_VERSION_2_V5                  0x0B
3787      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RAIN_RATE_VERSION_2_V5                  0x0C
3788      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIDE_LEVEL_VERSION_2_V5                 0x0D
3789      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WEIGHT_VERSION_3_V5                     0x0E
3790      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLTAGE_VERSION_3_V5                    0x0F
3791      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CURRENT_VERSION_3_V5                    0x10
3792      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CO2_LEVEL_VERSION_3_V5                  0x11
3793      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_AIR_FLOW_VERSION_3_V5                   0x12
3794      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TANK_CAPACITY_VERSION_3_V5              0x13
3795      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISTANCE_VERSION_3_V5                   0x14
3796      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ANGLE_POSITION_VERSION_4_V5             0x15
3797      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ROTATION_V5_V5                          0x16
3798      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_TEMPERATURE_V5_V5                 0x17
3799      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_TEMPERATURE_V5_V5                  0x18
3800      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_INTENSITY_V5_V5                 0x19
3801      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_MAGNITUDE_V5_V5                 0x1A
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 90  

3802      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ULTRAVIOLET_V5_V5                       0x1B
3803      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_RESISTIVITY_V5_V5            0x1C
3804      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V5           0x1D
3805      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LOUDNESS_V5_V5                          0x1E
3806      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOISTURE_V5_V5                          0x1F
3807      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V5      0x0F
3808      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_MASK_V5            0xF0
3809      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_SHIFT_V5           0x04
3810      =5  
3811      =5  /* Sensor Multilevel command class commands */
3812      =5  #define SENSOR_MULTILEVEL_VERSION_V6                                                     0x06
3813      =5  #define SENSOR_MULTILEVEL_GET_V6                                                         0x04
3814      =5  #define SENSOR_MULTILEVEL_REPORT_V6                                                      0x05
3815      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V6                                        0x01
3816      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_V6                                     0x02
3817      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V6                                         0x03
3818      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V6                                      0x06
3819      =5  /* Values used for Sensor Multilevel Get command */
3820      =5  #define SENSOR_MULTILEVEL_GET_TEMPERATURE_VERSION_1_V6                                   0x01
3821      =5  #define SENSOR_MULTILEVEL_GET_GENERAL_PURPOSE_VALUE_VERSION_1_V6                         0x02
3822      =5  #define SENSOR_MULTILEVEL_GET_LUMINANCE_VERSION_1_V6                                     0x03
3823      =5  #define SENSOR_MULTILEVEL_GET_POWER_VERSION_2_V6                                         0x04
3824      =5  #define SENSOR_MULTILEVEL_GET_RELATIVE_HUMIDITY_VERSION_2_V6                             0x05
3825      =5  #define SENSOR_MULTILEVEL_GET_VELOCITY_VERSION_2_V6                                      0x06
3826      =5  #define SENSOR_MULTILEVEL_GET_DIRECTION_VERSION_2_V6                                     0x07
3827      =5  #define SENSOR_MULTILEVEL_GET_ATMOSPHERIC_PRESSURE_VERSION_2_V6                          0x08
3828      =5  #define SENSOR_MULTILEVEL_GET_BAROMETRIC_PRESSURE_VERSION_2_V6                           0x09
3829      =5  #define SENSOR_MULTILEVEL_GET_SOLAR_RADIATION_VERSION_2_V6                               0x0A
3830      =5  #define SENSOR_MULTILEVEL_GET_DEW_POINT_VERSION_2_V6                                     0x0B
3831      =5  #define SENSOR_MULTILEVEL_GET_RAIN_RATE_VERSION_2_V6                                     0x0C
3832      =5  #define SENSOR_MULTILEVEL_GET_TIDE_LEVEL_VERSION_2_V6                                    0x0D
3833      =5  #define SENSOR_MULTILEVEL_GET_WEIGHT_VERSION_3_V6                                        0x0E
3834      =5  #define SENSOR_MULTILEVEL_GET_VOLTAGE_VERSION_3_V6                                       0x0F
3835      =5  #define SENSOR_MULTILEVEL_GET_CURRENT_VERSION_3_V6                                       0x10
3836      =5  #define SENSOR_MULTILEVEL_GET_CO2_LEVEL_VERSION_3_V6                                     0x11
3837      =5  #define SENSOR_MULTILEVEL_GET_AIR_FLOW_VERSION_3_V6                                      0x12
3838      =5  #define SENSOR_MULTILEVEL_GET_TANK_CAPACITY_VERSION_3_V6                                 0x13
3839      =5  #define SENSOR_MULTILEVEL_GET_DISTANCE_VERSION_3_V6                                      0x14
3840      =5  #define SENSOR_MULTILEVEL_GET_ANGLE_POSITION_VERSION_4_V6                                0x15
3841      =5  #define SENSOR_MULTILEVEL_GET_ROTATION_V5_V6                                             0x16
3842      =5  #define SENSOR_MULTILEVEL_GET_WATER_TEMPERATURE_V5_V6                                    0x17
3843      =5  #define SENSOR_MULTILEVEL_GET_SOIL_TEMPERATURE_V5_V6                                     0x18
3844      =5  #define SENSOR_MULTILEVEL_GET_SEISMIC_INTENSITY_V5_V6                                    0x19
3845      =5  #define SENSOR_MULTILEVEL_GET_SEISMIC_MAGNITUDE_V5_V6                                    0x1A
3846      =5  #define SENSOR_MULTILEVEL_GET_ULTRAVIOLET_V5_V6                                          0x1B
3847      =5  #define SENSOR_MULTILEVEL_GET_ELECTRICAL_RESISTIVITY_V5_V6                               0x1C
3848      =5  #define SENSOR_MULTILEVEL_GET_ELECTRICAL_CONDUCTIVITY_V5_V6                              0x1D
3849      =5  #define SENSOR_MULTILEVEL_GET_LOUDNESS_V5_V6                                             0x1E
3850      =5  #define SENSOR_MULTILEVEL_GET_MOISTURE_V5_V6                                             0x1F
3851      =5  #define SENSOR_MULTILEVEL_GET_FREQUENCY_V6_V6                                            0x20
3852      =5  #define SENSOR_MULTILEVEL_GET_TIME_V6_V6                                                 0x21
3853      =5  #define SENSOR_MULTILEVEL_GET_TARGET_TEMPERATURE_V6_V6                                   0x22
3854      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED1_MASK_V6                              0x07
3855      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_MASK_V6                                  0x18
3856      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_SHIFT_V6                                 0x03
3857      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_MASK_V6                              0xE0
3858      =5  #define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_SHIFT_V6                             0x05
3859      =5  /* Values used for Sensor Multilevel Report command */
3860      =5  #define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V6                                0x01
3861      =5  #define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V6                      0x02
3862      =5  #define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V6                                  0x03
3863      =5  #define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V6                                      0x04
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 91  

3864      =5  #define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V6                          0x05
3865      =5  #define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V6                                   0x06
3866      =5  #define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V6                                  0x07
3867      =5  #define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V6                       0x08
3868      =5  #define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V6                        0x09
3869      =5  #define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V6                            0x0A
3870      =5  #define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V6                                  0x0B
3871      =5  #define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V6                                  0x0C
3872      =5  #define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V6                                 0x0D
3873      =5  #define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V6                                     0x0E
3874      =5  #define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V6                                    0x0F
3875      =5  #define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V6                                    0x10
3876      =5  #define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V6                                  0x11
3877      =5  #define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V6                                   0x12
3878      =5  #define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V6                              0x13
3879      =5  #define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V6                                   0x14
3880      =5  #define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V6                             0x15
3881      =5  #define SENSOR_MULTILEVEL_REPORT_ROTATION_V5_V6                                          0x16
3882      =5  #define SENSOR_MULTILEVEL_REPORT_WATER_TEMPERATURE_V5_V6                                 0x17
3883      =5  #define SENSOR_MULTILEVEL_REPORT_SOIL_TEMPERATURE_V5_V6                                  0x18
3884      =5  #define SENSOR_MULTILEVEL_REPORT_SEISMIC_INTENSITY_V5_V6                                 0x19
3885      =5  #define SENSOR_MULTILEVEL_REPORT_SEISMIC_MAGNITUDE_V5_V6                                 0x1A
3886      =5  #define SENSOR_MULTILEVEL_REPORT_ULTRAVIOLET_V5_V6                                       0x1B
3887      =5  #define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_RESISTIVITY_V5_V6                            0x1C
3888      =5  #define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V6                           0x1D
3889      =5  #define SENSOR_MULTILEVEL_REPORT_LOUDNESS_V5_V6                                          0x1E
3890      =5  #define SENSOR_MULTILEVEL_REPORT_MOISTURE_V5_V6                                          0x1F
3891      =5  #define SENSOR_MULTILEVEL_REPORT_FREQUENCY_V6_V6                                         0x20
3892      =5  #define SENSOR_MULTILEVEL_REPORT_TIME_V6_V6                                              0x21
3893      =5  #define SENSOR_MULTILEVEL_REPORT_TARGET_TEMPERATURE_V6_V6                                0x22
3894      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V6                                      0x07
3895      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V6                                     0x18
3896      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V6                                    0x03
3897      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V6                                 0xE0
3898      =5  #define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V6                                0x05
3899      =5  /* Values used for Sensor Multilevel Supported Get Scale command */
3900      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TEMPERATURE_VERSION_1_V6                   0x01
3901      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_GENERAL_PURPOSE_VALUE_VERSION_1_V6         0x02
3902      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LUMINANCE_VERSION_1_V6                     0x03
3903      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_POWER_VERSION_2_V6                         0x04
3904      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_HUMIDITY_VERSION_2_V6             0x05
3905      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VELOCITY_VERSION_2_V6                      0x06
3906      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DIRECTION_VERSION_2_V6                     0x07
3907      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ATMOSPHERIC_PRESSURE_VERSION_2_V6          0x08
3908      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BAROMETRIC_PRESSURE_VERSION_2_V6           0x09
3909      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOLAR_RADIATION_VERSION_2_V6               0x0A
3910      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEW_POINT_VERSION_2_V6                     0x0B
3911      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RAIN_RATE_VERSION_2_V6                     0x0C
3912      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIDE_LEVEL_VERSION_2_V6                    0x0D
3913      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WEIGHT_VERSION_3_V6                        0x0E
3914      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLTAGE_VERSION_3_V6                       0x0F
3915      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CURRENT_VERSION_3_V6                       0x10
3916      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CO2_LEVEL_VERSION_3_V6                     0x11
3917      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_AIR_FLOW_VERSION_3_V6                      0x12
3918      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TANK_CAPACITY_VERSION_3_V6                 0x13
3919      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISTANCE_VERSION_3_V6                      0x14
3920      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ANGLE_POSITION_VERSION_4_V6                0x15
3921      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ROTATION_V5_V6                             0x16
3922      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_TEMPERATURE_V5_V6                    0x17
3923      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_TEMPERATURE_V5_V6                     0x18
3924      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_INTENSITY_V5_V6                    0x19
3925      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_MAGNITUDE_V5_V6                    0x1A
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 92  

3926      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ULTRAVIOLET_V5_V6                          0x1B
3927      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_RESISTIVITY_V5_V6               0x1C
3928      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_CONDUCTIVITY_V5_V6              0x1D
3929      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LOUDNESS_V5_V6                             0x1E
3930      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOISTURE_V5_V6                             0x1F
3931      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FREQUENCY_V6_V6                            0x20
3932      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIME_V6_V6                                 0x21
3933      =5  #define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TARGET_TEMPERATURE_V6_V6                   0x22
3934      =5  /* Values used for Sensor Multilevel Supported Scale Report command */
3935      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TEMPERATURE_VERSION_1_V6                0x01
3936      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V6      0x02
3937      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LUMINANCE_VERSION_1_V6                  0x03
3938      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_POWER_VERSION_2_V6                      0x04
3939      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_HUMIDITY_VERSION_2_V6          0x05
3940      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VELOCITY_VERSION_2_V6                   0x06
3941      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DIRECTION_VERSION_2_V6                  0x07
3942      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V6       0x08
3943      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V6        0x09
3944      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOLAR_RADIATION_VERSION_2_V6            0x0A
3945      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEW_POINT_VERSION_2_V6                  0x0B
3946      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RAIN_RATE_VERSION_2_V6                  0x0C
3947      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIDE_LEVEL_VERSION_2_V6                 0x0D
3948      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WEIGHT_VERSION_3_V6                     0x0E
3949      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLTAGE_VERSION_3_V6                    0x0F
3950      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CURRENT_VERSION_3_V6                    0x10
3951      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CO2_LEVEL_VERSION_3_V6                  0x11
3952      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_AIR_FLOW_VERSION_3_V6                   0x12
3953      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TANK_CAPACITY_VERSION_3_V6              0x13
3954      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISTANCE_VERSION_3_V6                   0x14
3955      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ANGLE_POSITION_VERSION_4_V6             0x15
3956      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ROTATION_V5_V6                          0x16
3957      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_TEMPERATURE_V5_V6                 0x17
3958      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_TEMPERATURE_V5_V6                  0x18
3959      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_INTENSITY_V5_V6                 0x19
3960      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_MAGNITUDE_V5_V6                 0x1A
3961      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ULTRAVIOLET_V5_V6                       0x1B
3962      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_RESISTIVITY_V5_V6            0x1C
3963      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V6           0x1D
3964      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LOUDNESS_V5_V6                          0x1E
3965      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOISTURE_V5_V6                          0x1F
3966      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FREQUENCY_V6_V6                         0x20
3967      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIME_V6_V6                              0x21
3968      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TARGET_TEMPERATURE_V6_V6                0x22
3969      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V6      0x0F
3970      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_MASK_V6            0xF0
3971      =5  #define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_SHIFT_V6           0x04
3972      =5  
3973      =5  /* Silence Alarm command class commands */
3974      =5  #define SILENCE_ALARM_VERSION                                                            0x01
3975      =5  #define SENSOR_ALARM_SET                                                                 0x01
3976      =5  
3977      =5  /* Simple Av Control command class commands */
3978      =5  #define SIMPLE_AV_CONTROL_VERSION                                                        0x01
3979      =5  #define SIMPLE_AV_CONTROL_GET                                                            0x02
3980      =5  #define SIMPLE_AV_CONTROL_REPORT                                                         0x03
3981      =5  #define SIMPLE_AV_CONTROL_SET                                                            0x01
3982      =5  #define SIMPLE_AV_CONTROL_SUPPORTED_GET                                                  0x04
3983      =5  #define SIMPLE_AV_CONTROL_SUPPORTED_REPORT                                               0x05
3984      =5  /* Values used for Simple Av Control Set command */
3985      =5  #define SIMPLE_AV_CONTROL_SET_PROPERTIES1_KEY_ATTRIBUTES_MASK                            0x07
3986      =5  #define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_MASK                                  0xF8
3987      =5  #define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_SHIFT                                 0x03
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 93  

3988      =5  
3989      =5  /* Switch All command class commands */
3990      =5  #define SWITCH_ALL_VERSION                                                               0x01
3991      =5  #define SWITCH_ALL_GET                                                                   0x02
3992      =5  #define SWITCH_ALL_OFF                                                                   0x05
3993      =5  #define SWITCH_ALL_ON                                                                    0x04
3994      =5  #define SWITCH_ALL_REPORT                                                                0x03
3995      =5  #define SWITCH_ALL_SET                                                                   0x01
3996      =5  /* Values used for Switch All Report command */
3997      =5  #define SWITCH_ALL_REPORT_EXCLUDED_FROM_THE_ALL_ON_ALL_OFF_FUNCTIONALITY                 0x00
3998      =5  #define SWITCH_ALL_REPORT_EXCLUDED_FROM_THE_ALL_ON_FUNCTIONALITY_BUT_NOT_ALL_OFF         0x01
3999      =5  #define SWITCH_ALL_REPORT_EXCLUDED_FROM_THE_ALL_OFF_FUNCTIONALITY_BUT_NOT_ALL_ON         0x02
4000      =5  #define SWITCH_ALL_REPORT_INCLUDED_IN_THE_ALL_ON_ALL_OFF_FUNCTIONALITY                   0xFF
4001      =5  /* Values used for Switch All Set command */
4002      =5  #define SWITCH_ALL_SET_EXCLUDED_FROM_THE_ALL_ON_ALL_OFF_FUNCTIONALITY                    0x00
4003      =5  #define SWITCH_ALL_SET_EXCLUDED_FROM_THE_ALL_ON_FUNCTIONALITY_BUT_NOT_ALL_OFF            0x01
4004      =5  #define SWITCH_ALL_SET_EXCLUDED_FROM_THE_ALL_OFF_FUNCTIONALITY_BUT_NOT_ALL_ON            0x02
4005      =5  #define SWITCH_ALL_SET_INCLUDED_IN_THE_ALL_ON_ALL_OFF_FUNCTIONALITY                      0xFF
4006      =5  
4007      =5  /* Switch Binary command class commands */
4008      =5  #define SWITCH_BINARY_VERSION                                                            0x01
4009      =5  #define SWITCH_BINARY_GET                                                                0x02
4010      =5  #define SWITCH_BINARY_REPORT                                                             0x03
4011      =5  #define SWITCH_BINARY_SET                                                                0x01
4012      =5  
4013      =5  /* Switch Multilevel command class commands */
4014      =5  #define SWITCH_MULTILEVEL_VERSION                                                        0x01
4015      =5  #define SWITCH_MULTILEVEL_GET                                                            0x02
4016      =5  #define SWITCH_MULTILEVEL_REPORT                                                         0x03
4017      =5  #define SWITCH_MULTILEVEL_SET                                                            0x01
4018      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE                                             0x04
4019      =5  #define SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE                                              0x05
4020      =5  /* Values used for Switch Multilevel Start Level Change command */
4021      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_RESERVED1_MASK                        0x1F
4022      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_IGNORE_START_LEVEL_BIT_MASK           0x20
4023      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_UP_DOWN_BIT_MASK                      0x40
4024      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_RESERVED2_BIT_MASK                    0x80
4025      =5  
4026      =5  /* Switch Multilevel command class commands */
4027      =5  #define SWITCH_MULTILEVEL_VERSION_V2                                                     0x02
4028      =5  #define SWITCH_MULTILEVEL_GET_V2                                                         0x02
4029      =5  #define SWITCH_MULTILEVEL_REPORT_V2                                                      0x03
4030      =5  #define SWITCH_MULTILEVEL_SET_V2                                                         0x01
4031      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V2                                          0x04
4032      =5  #define SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V2                                           0x05
4033      =5  /* Values used for Switch Multilevel Start Level Change command */
4034      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_RESERVED1_MASK_V2               0x1F
4035      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_IGNORE_START_LEVEL_BIT_MASK_V2  0x20
4036      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_BIT_MASK_V2             0x40
4037      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_RESERVED2_BIT_MASK_V2           0x80
4038      =5  
4039      =5  /* Switch Multilevel command class commands */
4040      =5  #define SWITCH_MULTILEVEL_VERSION_V3                                                     0x03
4041      =5  #define SWITCH_MULTILEVEL_GET_V3                                                         0x02
4042      =5  #define SWITCH_MULTILEVEL_REPORT_V3                                                      0x03
4043      =5  #define SWITCH_MULTILEVEL_SET_V3                                                         0x01
4044      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V3                                          0x04
4045      =5  #define SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V3                                           0x05
4046      =5  #define SWITCH_MULTILEVEL_SUPPORTED_GET_V3                                               0x06
4047      =5  #define SWITCH_MULTILEVEL_SUPPORTED_REPORT_V3                                            0x07
4048      =5  /* Values used for Switch Multilevel Start Level Change command */
4049      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_RESERVED_MASK_V3                0x07
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 94  

4050      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_INC_DEC_MASK_V3                 0x18
4051      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_INC_DEC_SHIFT_V3                0x03
4052      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_INCREMENT_V3                        0x00
4053      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_DECREMENT_V3                        0x01
4054      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_RESERVED_V3                         0x02
4055      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_NONE_V3                             0x03
4056      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_IGNORE_START_LEVEL_BIT_MASK_V3  0x20
4057      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_MASK_V3                 0xC0
4058      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_SHIFT_V3                0x06
4059      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_UP_V3                               0x00
4060      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_DOWN_V3                             0x01
4061      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_RESERVED_V3                         0x02
4062      =5  #define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_NONE_V3                             0x03
4063      =5  /* Values used for Switch Multilevel Supported Report command */
4064      =5  #define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES1_PRIMARY_SWITCH_TYPE_MASK_V3       0x1F
4065      =5  #define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V3                  0xE0
4066      =5  #define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                 0x05
4067      =5  #define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES2_SECONDARY_SWITCH_TYPE_MASK_V3     0x1F
4068      =5  #define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES2_RESERVED_MASK_V3                  0xE0
4069      =5  #define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES2_RESERVED_SHIFT_V3                 0x05
4070      =5  
4071      =5  /* Switch Toggle Binary command class commands */
4072      =5  #define SWITCH_TOGGLE_BINARY_VERSION                                                     0x01
4073      =5  #define SWITCH_TOGGLE_BINARY_SET                                                         0x01 /*SWITCH_TOG
             -GLE_BINARY_SET*/
4074      =5  #define SWITCH_TOGGLE_BINARY_GET                                                         0x02
4075      =5  #define SWITCH_TOGGLE_BINARY_REPORT                                                      0x03
4076      =5  
4077      =5  /* Switch Toggle Multilevel command class commands */
4078      =5  #define SWITCH_TOGGLE_MULTILEVEL_VERSION                                                 0x01
4079      =5  #define SWITCH_TOGGLE_MULTILEVEL_SET                                                     0x01 /*SWITCH_TOG
             -GLE_MULTILEVEL_SET*/
4080      =5  #define SWITCH_TOGGLE_MULTILEVEL_GET                                                     0x02
4081      =5  #define SWITCH_TOGGLE_MULTILEVEL_REPORT                                                  0x03
4082      =5  #define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE                                      0x04
4083      =5  #define SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL_CHANGE                                       0x05
4084      =5  /* Values used for Switch Toggle Multilevel Start Level Change command */
4085      =5  #define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_RESERVED1_MASK                 0x1F
4086      =5  #define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_IGNORE_START_LEVEL_BIT_MASK    0x20
4087      =5  #define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_RESERVED2_BIT_MASK             0x40
4088      =5  #define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_ROLL_OVER_BIT_MASK             0x80
4089      =5  
4090      =5  /* Tariff Config command class commands */
4091      =5  #define TARIFF_CONFIG_VERSION                                                            0x01
4092      =5  #define TARIFF_TBL_REMOVE                                                                0x03
4093      =5  #define TARIFF_TBL_SET                                                                   0x02
4094      =5  #define TARIFF_TBL_SUPPLIER_SET                                                          0x01
4095      =5  /* Values used for Tariff Tbl Remove command */
4096      =5  #define TARIFF_TBL_REMOVE_PROPERTIES1_RATE_PARAMETER_SET_IDS_MASK                        0x3F
4097      =5  #define TARIFF_TBL_REMOVE_PROPERTIES1_RESERVED_MASK                                      0xC0
4098      =5  #define TARIFF_TBL_REMOVE_PROPERTIES1_RESERVED_SHIFT                                     0x06
4099      =5  /* Values used for Tariff Tbl Set command */
4100      =5  #define TARIFF_TBL_SET_PROPERTIES1_RESERVED_MASK                                         0x1F
4101      =5  #define TARIFF_TBL_SET_PROPERTIES1_TARIFF_PRECISION_MASK                                 0xE0
4102      =5  #define TARIFF_TBL_SET_PROPERTIES1_TARIFF_PRECISION_SHIFT                                0x05
4103      =5  /* Values used for Tariff Tbl Supplier Set command */
4104      =5  #define TARIFF_TBL_SUPPLIER_SET_PROPERTIES1_STANDING_CHARGE_PERIOD_MASK                  0x1F
4105      =5  #define TARIFF_TBL_SUPPLIER_SET_PROPERTIES1_STANDING_CHARGE_PRECISION_MASK               0xE0
4106      =5  #define TARIFF_TBL_SUPPLIER_SET_PROPERTIES1_STANDING_CHARGE_PRECISION_SHIFT              0x05
4107      =5  #define TARIFF_TBL_SUPPLIER_SET_PROPERTIES2_NUMBER_OF_SUPPLIER_CHARACTERS_MASK           0x1F
4108      =5  #define TARIFF_TBL_SUPPLIER_SET_PROPERTIES2_RESERVED_MASK                                0xE0
4109      =5  #define TARIFF_TBL_SUPPLIER_SET_PROPERTIES2_RESERVED_SHIFT                               0x05
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 95  

4110      =5  
4111      =5  /* Tariff Tbl Monitor command class commands */
4112      =5  #define TARIFF_TBL_MONITOR_VERSION                                                       0x01
4113      =5  #define TARIFF_TBL_COST_GET                                                              0x05
4114      =5  #define TARIFF_TBL_COST_REPORT                                                           0x06
4115      =5  #define TARIFF_TBL_GET                                                                   0x03
4116      =5  #define TARIFF_TBL_REPORT                                                                0x04
4117      =5  #define TARIFF_TBL_SUPPLIER_GET                                                          0x01
4118      =5  #define TARIFF_TBL_SUPPLIER_REPORT                                                       0x02
4119      =5  /* Values used for Tariff Tbl Cost Report command */
4120      =5  #define TARIFF_TBL_COST_REPORT_PROPERTIES1_RATE_TYPE_MASK                                0x03
4121      =5  #define TARIFF_TBL_COST_REPORT_PROPERTIES1_RESERVED_MASK                                 0xFC
4122      =5  #define TARIFF_TBL_COST_REPORT_PROPERTIES1_RESERVED_SHIFT                                0x02
4123      =5  #define TARIFF_TBL_COST_REPORT_PROPERTIES2_RESERVED_MASK                                 0x1F
4124      =5  #define TARIFF_TBL_COST_REPORT_PROPERTIES2_COST_PRECISION_MASK                           0xE0
4125      =5  #define TARIFF_TBL_COST_REPORT_PROPERTIES2_COST_PRECISION_SHIFT                          0x05
4126      =5  /* Values used for Tariff Tbl Report command */
4127      =5  #define TARIFF_TBL_REPORT_PROPERTIES1_RESERVED_MASK                                      0x1F
4128      =5  #define TARIFF_TBL_REPORT_PROPERTIES1_TARIFF_PRECISION_MASK                              0xE0
4129      =5  #define TARIFF_TBL_REPORT_PROPERTIES1_TARIFF_PRECISION_SHIFT                             0x05
4130      =5  /* Values used for Tariff Tbl Supplier Report command */
4131      =5  #define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES1_STANDING_CHARGE_PERIOD_MASK               0x1F
4132      =5  #define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES1_STANDING_CHARGE_PRECISION_MASK            0xE0
4133      =5  #define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES1_STANDING_CHARGE_PRECISION_SHIFT           0x05
4134      =5  #define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES2_NUMBER_OF_SUPPLIER_CHARACTERS_MASK        0x1F
4135      =5  #define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES2_RESERVED_MASK                             0xE0
4136      =5  #define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES2_RESERVED_SHIFT                            0x05
4137      =5  
4138      =5  /* Thermostat Fan Mode command class commands */
4139      =5  #define THERMOSTAT_FAN_MODE_VERSION                                                      0x01
4140      =5  #define THERMOSTAT_FAN_MODE_GET                                                          0x02
4141      =5  #define THERMOSTAT_FAN_MODE_REPORT                                                       0x03
4142      =5  #define THERMOSTAT_FAN_MODE_SET                                                          0x01
4143      =5  #define THERMOSTAT_FAN_MODE_SUPPORTED_GET                                                0x04
4144      =5  #define THERMOSTAT_FAN_MODE_SUPPORTED_REPORT                                             0x05
4145      =5  /* Values used for Thermostat Fan Mode Report command */
4146      =5  #define THERMOSTAT_FAN_MODE_REPORT_LEVEL_FAN_MODE_MASK                                   0x0F
4147      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_LOW                                     0x00
4148      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LOW                                          0x01
4149      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_HIGH                                    0x02
4150      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HIGH                                         0x03
4151      =5  #define THERMOSTAT_FAN_MODE_REPORT_LEVEL_RESERVED_MASK                                   0xF0
4152      =5  #define THERMOSTAT_FAN_MODE_REPORT_LEVEL_RESERVED_SHIFT                                  0x04
4153      =5  /* Values used for Thermostat Fan Mode Set command */
4154      =5  #define THERMOSTAT_FAN_MODE_SET_LEVEL_FAN_MODE_MASK                                      0x0F
4155      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_LOW                                        0x00
4156      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LOW                                             0x01
4157      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_HIGH                                       0x02
4158      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HIGH                                            0x03
4159      =5  #define THERMOSTAT_FAN_MODE_SET_LEVEL_RESERVED_MASK                                      0xF0
4160      =5  #define THERMOSTAT_FAN_MODE_SET_LEVEL_RESERVED_SHIFT                                     0x04
4161      =5  
4162      =5  /* Thermostat Fan Mode command class commands */
4163      =5  #define THERMOSTAT_FAN_MODE_VERSION_V2                                                   0x02
4164      =5  #define THERMOSTAT_FAN_MODE_GET_V2                                                       0x02
4165      =5  #define THERMOSTAT_FAN_MODE_REPORT_V2                                                    0x03
4166      =5  #define THERMOSTAT_FAN_MODE_SET_V2                                                       0x01
4167      =5  #define THERMOSTAT_FAN_MODE_SUPPORTED_GET_V2                                             0x04
4168      =5  #define THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_V2                                          0x05
4169      =5  /* Values used for Thermostat Fan Mode Report command */
4170      =5  #define THERMOSTAT_FAN_MODE_REPORT_LEVEL_FAN_MODE_MASK_V2                                0x0F
4171      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_LOW_V2                                  0x00
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 96  

4172      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LOW_V2                                       0x01
4173      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_HIGH_V2                                 0x02
4174      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HIGH_V2                                      0x03
4175      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_MEDIUM_V2                               0x04
4176      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_MEDIUM_V2                                    0x05
4177      =5  #define THERMOSTAT_FAN_MODE_REPORT_LEVEL_RESERVED_MASK_V2                                0xF0
4178      =5  #define THERMOSTAT_FAN_MODE_REPORT_LEVEL_RESERVED_SHIFT_V2                               0x04
4179      =5  /* Values used for Thermostat Fan Mode Set command */
4180      =5  #define THERMOSTAT_FAN_MODE_SET_LEVEL_FAN_MODE_MASK_V2                                   0x0F
4181      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_LOW_V2                                     0x00
4182      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LOW_V2                                          0x01
4183      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_HIGH_V2                                    0x02
4184      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HIGH_V2                                         0x03
4185      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_MEDIUM_V2                                  0x04
4186      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_MEDIUM_V2                                       0x05
4187      =5  #define THERMOSTAT_FAN_MODE_SET_LEVEL_RESERVED_MASK_V2                                   0x70
4188      =5  #define THERMOSTAT_FAN_MODE_SET_LEVEL_RESERVED_SHIFT_V2                                  0x04
4189      =5  #define THERMOSTAT_FAN_MODE_SET_LEVEL_OFF_BIT_MASK_V2                                    0x80
4190      =5  
4191      =5  /* Thermostat Fan Mode command class commands */
4192      =5  #define THERMOSTAT_FAN_MODE_VERSION_V3                                                   0x03
4193      =5  #define THERMOSTAT_FAN_MODE_GET_V3                                                       0x02
4194      =5  #define THERMOSTAT_FAN_MODE_REPORT_V3                                                    0x03
4195      =5  #define THERMOSTAT_FAN_MODE_SET_V3                                                       0x01
4196      =5  #define THERMOSTAT_FAN_MODE_SUPPORTED_GET_V3                                             0x04
4197      =5  #define THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_V3                                          0x05
4198      =5  /* Values used for Thermostat Fan Mode Report command */
4199      =5  #define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_FAN_MODE_MASK_V3                          0x0F
4200      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_LOW_V3                                  0x00
4201      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LOW_V3                                       0x01
4202      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_HIGH_V3                                 0x02
4203      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HIGH_V3                                      0x03
4204      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_MEDIUM_V3                               0x04
4205      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_MEDIUM_V3                                    0x05
4206      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_CIRCULATION_V3                               0x06
4207      =5  #define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HUMIDITY_V3                                  0x07
4208      =5  #define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_RESERVED_MASK_V3                          0x70
4209      =5  #define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                         0x04
4210      =5  #define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_OFF_BIT_MASK_V3                           0x80
4211      =5  /* Values used for Thermostat Fan Mode Set command */
4212      =5  #define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_FAN_MODE_MASK_V3                             0x0F
4213      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_LOW_V3                                     0x00
4214      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LOW_V3                                          0x01
4215      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_HIGH_V3                                    0x02
4216      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HIGH_V3                                         0x03
4217      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_MEDIUM_V3                                  0x04
4218      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_MEDIUM_V3                                       0x05
4219      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_CIRCULATION_V3                                  0x06
4220      =5  #define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HUMIDITY_V3                                     0x07
4221      =5  #define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_RESERVED_MASK_V3                             0x70
4222      =5  #define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_RESERVED_SHIFT_V3                            0x04
4223      =5  #define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_OFF_BIT_MASK_V3                              0x80
4224      =5  
4225      =5  /* Thermostat Fan State command class commands */
4226      =5  #define THERMOSTAT_FAN_STATE_VERSION                                                     0x01
4227      =5  #define THERMOSTAT_FAN_STATE_GET                                                         0x02
4228      =5  #define THERMOSTAT_FAN_STATE_REPORT                                                      0x03
4229      =5  /* Values used for Thermostat Fan State Report command */
4230      =5  #define THERMOSTAT_FAN_STATE_REPORT_LEVEL_FAN_OPERATING_STATE_MASK                       0x0F
4231      =5  #define THERMOSTAT_FAN_STATE_REPORT_LEVEL_RESERVED_MASK                                  0xF0
4232      =5  #define THERMOSTAT_FAN_STATE_REPORT_LEVEL_RESERVED_SHIFT                                 0x04
4233      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 97  

4234      =5  /* Thermostat Heating command class commands */
4235      =5  #define THERMOSTAT_HEATING_VERSION                                                       0x01
4236      =5  #define THERMOSTAT_HEATING_STATUS_REPORT                                                 0x0D
4237      =5  #define THERMOSTAT_HEATING_MODE_GET                                                      0x02
4238      =5  #define THERMOSTAT_HEATING_MODE_REPORT                                                   0x03
4239      =5  #define THERMOSTAT_HEATING_MODE_SET                                                      0x01
4240      =5  #define THERMOSTAT_HEATING_RELAY_STATUS_GET                                              0x09
4241      =5  #define THERMOSTAT_HEATING_RELAY_STATUS_REPORT                                           0x0A
4242      =5  #define THERMOSTAT_HEATING_SETPOINT_GET                                                  0x05
4243      =5  #define THERMOSTAT_HEATING_SETPOINT_REPORT                                               0x06
4244      =5  #define THERMOSTAT_HEATING_SETPOINT_SET                                                  0x04
4245      =5  #define THERMOSTAT_HEATING_STATUS_GET                                                    0x0C
4246      =5  #define THERMOSTAT_HEATING_STATUS_SET                                                    0x0B
4247      =5  #define THERMOSTAT_HEATING_TIMED_OFF_SET                                                 0x11
4248      =5  /* Values used for Thermostat Heating Status Report command */
4249      =5  #define THERMOSTAT_HEATING_STATUS_REPORT_HEATING                                         0x00
4250      =5  #define THERMOSTAT_HEATING_STATUS_REPORT_COOLING                                         0x01
4251      =5  /* Values used for Thermostat Heating Mode Report command */
4252      =5  #define THERMOSTAT_HEATING_MODE_REPORT_OFF                                               0x00
4253      =5  #define THERMOSTAT_HEATING_MODE_REPORT_OFF_TIMED                                         0x01
4254      =5  #define THERMOSTAT_HEATING_MODE_REPORT_OFF_3_HOURS                                       0x02
4255      =5  #define THERMOSTAT_HEATING_MODE_REPORT_ANTI_FREEZE                                       0x03
4256      =5  #define THERMOSTAT_HEATING_MODE_REPORT_MANUAL                                            0x04
4257      =5  #define THERMOSTAT_HEATING_MODE_REPORT_TEMPORARY_MANUAL                                  0x05
4258      =5  #define THERMOSTAT_HEATING_MODE_REPORT_AUTOMATIC                                         0x06
4259      =5  #define THERMOSTAT_HEATING_MODE_REPORT_MANUAL_TIMED                                      0x07
4260      =5  /* Values used for Thermostat Heating Mode Set command */
4261      =5  #define THERMOSTAT_HEATING_MODE_SET_OFF                                                  0x00
4262      =5  #define THERMOSTAT_HEATING_MODE_SET_OFF_TIMED                                            0x01
4263      =5  #define THERMOSTAT_HEATING_MODE_SET_OFF_3_HOURS                                          0x02
4264      =5  #define THERMOSTAT_HEATING_MODE_SET_ANTI_FREEZE                                          0x03
4265      =5  #define THERMOSTAT_HEATING_MODE_SET_MANUAL                                               0x04
4266      =5  #define THERMOSTAT_HEATING_MODE_SET_TEMPORARY_MANUAL                                     0x05
4267      =5  #define THERMOSTAT_HEATING_MODE_SET_AUTOMATIC                                            0x06
4268      =5  #define THERMOSTAT_HEATING_MODE_SET_MANUAL_TIMED                                         0x07
4269      =5  /* Values used for Thermostat Heating Relay Status Report command */
4270      =5  #define THERMOSTAT_HEATING_RELAY_STATUS_REPORT_OFF                                       0x00
4271      =5  #define THERMOSTAT_HEATING_RELAY_STATUS_REPORT_ON                                        0x01
4272      =5  /* Values used for Thermostat Heating Setpoint Report command */
4273      =5  #define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_SIZE_MASK                         0x07
4274      =5  #define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_SCALE_MASK                        0x18
4275      =5  #define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_SCALE_SHIFT                       0x03
4276      =5  #define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_PRECISION_MASK                    0xE0
4277      =5  #define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_PRECISION_SHIFT                   0x05
4278      =5  /* Values used for Thermostat Heating Setpoint Set command */
4279      =5  #define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_SIZE_MASK                            0x07
4280      =5  #define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_SCALE_MASK                           0x18
4281      =5  #define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_SCALE_SHIFT                          0x03
4282      =5  #define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_PRECISION_MASK                       0xE0
4283      =5  #define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_PRECISION_SHIFT                      0x05
4284      =5  /* Values used for Thermostat Heating Status Set command */
4285      =5  #define THERMOSTAT_HEATING_STATUS_SET_HEATING                                            0x00
4286      =5  #define THERMOSTAT_HEATING_STATUS_SET_COOLING                                            0x01
4287      =5  
4288      =5  /* Thermostat Mode command class commands */
4289      =5  #define THERMOSTAT_MODE_VERSION                                                          0x01
4290      =5  #define THERMOSTAT_MODE_GET                                                              0x02
4291      =5  #define THERMOSTAT_MODE_REPORT                                                           0x03
4292      =5  #define THERMOSTAT_MODE_SET                                                              0x01
4293      =5  #define THERMOSTAT_MODE_SUPPORTED_GET                                                    0x04
4294      =5  #define THERMOSTAT_MODE_SUPPORTED_REPORT                                                 0x05
4295      =5  /* Values used for Thermostat Mode Report command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 98  

4296      =5  #define THERMOSTAT_MODE_REPORT_LEVEL_MODE_MASK                                           0x1F
4297      =5  #define THERMOSTAT_MODE_REPORT_MODE_OFF                                                  0x00
4298      =5  #define THERMOSTAT_MODE_REPORT_MODE_HEAT                                                 0x01
4299      =5  #define THERMOSTAT_MODE_REPORT_MODE_COOL                                                 0x02
4300      =5  #define THERMOSTAT_MODE_REPORT_MODE_AUTO                                                 0x03
4301      =5  #define THERMOSTAT_MODE_REPORT_MODE_AUXILIARY_HEAT                                       0x04
4302      =5  #define THERMOSTAT_MODE_REPORT_MODE_RESUME                                               0x05
4303      =5  #define THERMOSTAT_MODE_REPORT_MODE_FAN_ONLY                                             0x06
4304      =5  #define THERMOSTAT_MODE_REPORT_MODE_FURNACE                                              0x07
4305      =5  #define THERMOSTAT_MODE_REPORT_MODE_DRY_AIR                                              0x08
4306      =5  #define THERMOSTAT_MODE_REPORT_MODE_MOIST_AIR                                            0x09
4307      =5  #define THERMOSTAT_MODE_REPORT_MODE_AUTO_CHANGEOVER                                      0x0A
4308      =5  #define THERMOSTAT_MODE_REPORT_LEVEL_RESERVED_MASK                                       0xE0
4309      =5  #define THERMOSTAT_MODE_REPORT_LEVEL_RESERVED_SHIFT                                      0x05
4310      =5  /* Values used for Thermostat Mode Set command */
4311      =5  #define THERMOSTAT_MODE_SET_LEVEL_MODE_MASK                                              0x1F
4312      =5  #define THERMOSTAT_MODE_SET_MODE_OFF                                                     0x00
4313      =5  #define THERMOSTAT_MODE_SET_MODE_HEAT                                                    0x01
4314      =5  #define THERMOSTAT_MODE_SET_MODE_COOL                                                    0x02
4315      =5  #define THERMOSTAT_MODE_SET_MODE_AUTO                                                    0x03
4316      =5  #define THERMOSTAT_MODE_SET_MODE_AUXILIARY_HEAT                                          0x04
4317      =5  #define THERMOSTAT_MODE_SET_MODE_RESUME                                                  0x05
4318      =5  #define THERMOSTAT_MODE_SET_MODE_FAN_ONLY                                                0x06
4319      =5  #define THERMOSTAT_MODE_SET_MODE_FURNACE                                                 0x07
4320      =5  #define THERMOSTAT_MODE_SET_MODE_DRY_AIR                                                 0x08
4321      =5  #define THERMOSTAT_MODE_SET_MODE_MOIST_AIR                                               0x09
4322      =5  #define THERMOSTAT_MODE_SET_MODE_AUTO_CHANGEOVER                                         0x0A
4323      =5  #define THERMOSTAT_MODE_SET_LEVEL_RESERVED_MASK                                          0xE0
4324      =5  #define THERMOSTAT_MODE_SET_LEVEL_RESERVED_SHIFT                                         0x05
4325      =5  
4326      =5  /* Thermostat Mode command class commands */
4327      =5  #define THERMOSTAT_MODE_VERSION_V2                                                       0x02
4328      =5  #define THERMOSTAT_MODE_GET_V2                                                           0x02
4329      =5  #define THERMOSTAT_MODE_REPORT_V2                                                        0x03
4330      =5  #define THERMOSTAT_MODE_SET_V2                                                           0x01
4331      =5  #define THERMOSTAT_MODE_SUPPORTED_GET_V2                                                 0x04
4332      =5  #define THERMOSTAT_MODE_SUPPORTED_REPORT_V2                                              0x05
4333      =5  /* Values used for Thermostat Mode Report command */
4334      =5  #define THERMOSTAT_MODE_REPORT_LEVEL_MODE_MASK_V2                                        0x1F
4335      =5  #define THERMOSTAT_MODE_REPORT_MODE_OFF_V2                                               0x00
4336      =5  #define THERMOSTAT_MODE_REPORT_MODE_HEAT_V2                                              0x01
4337      =5  #define THERMOSTAT_MODE_REPORT_MODE_COOL_V2                                              0x02
4338      =5  #define THERMOSTAT_MODE_REPORT_MODE_AUTO_V2                                              0x03
4339      =5  #define THERMOSTAT_MODE_REPORT_MODE_AUXILIARY_HEAT_V2                                    0x04
4340      =5  #define THERMOSTAT_MODE_REPORT_MODE_RESUME_V2                                            0x05
4341      =5  #define THERMOSTAT_MODE_REPORT_MODE_FAN_ONLY_V2                                          0x06
4342      =5  #define THERMOSTAT_MODE_REPORT_MODE_FURNACE_V2                                           0x07
4343      =5  #define THERMOSTAT_MODE_REPORT_MODE_DRY_AIR_V2                                           0x08
4344      =5  #define THERMOSTAT_MODE_REPORT_MODE_MOIST_AIR_V2                                         0x09
4345      =5  #define THERMOSTAT_MODE_REPORT_MODE_AUTO_CHANGEOVER_V2                                   0x0A
4346      =5  #define THERMOSTAT_MODE_REPORT_MODE_ENERGY_SAVE_HEAT_V2                                  0x0B
4347      =5  #define THERMOSTAT_MODE_REPORT_MODE_ENERGY_SAVE_COOL_V2                                  0x0C
4348      =5  #define THERMOSTAT_MODE_REPORT_MODE_AWAY_V2                                              0x0D
4349      =5  #define THERMOSTAT_MODE_REPORT_LEVEL_RESERVED_MASK_V2                                    0xE0
4350      =5  #define THERMOSTAT_MODE_REPORT_LEVEL_RESERVED_SHIFT_V2                                   0x05
4351      =5  /* Values used for Thermostat Mode Set command */
4352      =5  #define THERMOSTAT_MODE_SET_LEVEL_MODE_MASK_V2                                           0x1F
4353      =5  #define THERMOSTAT_MODE_SET_MODE_OFF_V2                                                  0x00
4354      =5  #define THERMOSTAT_MODE_SET_MODE_HEAT_V2                                                 0x01
4355      =5  #define THERMOSTAT_MODE_SET_MODE_COOL_V2                                                 0x02
4356      =5  #define THERMOSTAT_MODE_SET_MODE_AUTO_V2                                                 0x03
4357      =5  #define THERMOSTAT_MODE_SET_MODE_AUXILIARY_HEAT_V2                                       0x04
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 99  

4358      =5  #define THERMOSTAT_MODE_SET_MODE_RESUME_V2                                               0x05
4359      =5  #define THERMOSTAT_MODE_SET_MODE_FAN_ONLY_V2                                             0x06
4360      =5  #define THERMOSTAT_MODE_SET_MODE_FURNACE_V2                                              0x07
4361      =5  #define THERMOSTAT_MODE_SET_MODE_DRY_AIR_V2                                              0x08
4362      =5  #define THERMOSTAT_MODE_SET_MODE_MOIST_AIR_V2                                            0x09
4363      =5  #define THERMOSTAT_MODE_SET_MODE_AUTO_CHANGEOVER_V2                                      0x0A
4364      =5  #define THERMOSTAT_MODE_SET_MODE_ENERGY_SAVE_HEAT_V2                                     0x0B
4365      =5  #define THERMOSTAT_MODE_SET_MODE_ENERGY_SAVE_COOL_V2                                     0x0C
4366      =5  #define THERMOSTAT_MODE_SET_MODE_AWAY_V2                                                 0x0D
4367      =5  #define THERMOSTAT_MODE_SET_LEVEL_RESERVED_MASK_V2                                       0xE0
4368      =5  #define THERMOSTAT_MODE_SET_LEVEL_RESERVED_SHIFT_V2                                      0x05
4369      =5  
4370      =5  /* Thermostat Operating State command class commands */
4371      =5  #define THERMOSTAT_OPERATING_STATE_VERSION                                               0x01
4372      =5  #define THERMOSTAT_OPERATING_STATE_GET                                                   0x02
4373      =5  #define THERMOSTAT_OPERATING_STATE_REPORT                                                0x03
4374      =5  /* Values used for Thermostat Operating State Report command */
4375      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_LEVEL_OPERATING_STATE_MASK                     0x0F
4376      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_IDLE                           0x00
4377      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_HEATING                        0x01
4378      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_COOLING                        0x02
4379      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_FAN_ONLY                       0x03
4380      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_PENDING_HEAT                   0x04
4381      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_PENDING_COOL                   0x05
4382      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_VENT_ECONOMIZER                0x06
4383      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_LEVEL_RESERVED_MASK                            0xF0
4384      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_LEVEL_RESERVED_SHIFT                           0x04
4385      =5  
4386      =5  /* Thermostat Operating State command class commands */
4387      =5  #define THERMOSTAT_OPERATING_STATE_VERSION_V2                                            0x02
4388      =5  #define THERMOSTAT_OPERATING_STATE_GET_V2                                                0x02
4389      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_V2                                             0x03
4390      =5  #define THERMOSTAT_OPERATING_STATE_LOGGING_SUPPORTED_GET_V2                              0x01
4391      =5  #define THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_V2                                 0x04
4392      =5  #define THERMOSTAT_OPERATING_STATE_LOGGING_GET_V2                                        0x05
4393      =5  #define THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2                                     0x06
4394      =5  /* Values used for Thermostat Operating State Report command */
4395      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_PROPERTIES1_OPERATING_STATE_MASK_V2            0x0F
4396      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_IDLE_V2                        0x00
4397      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_HEATING_V2                     0x01
4398      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_COOLING_V2                     0x02
4399      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_FAN_ONLY_V2                    0x03
4400      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_PENDING_HEAT_V2                0x04
4401      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_PENDING_COOL_V2                0x05
4402      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_VENT_ECONOMIZER_V2             0x06
4403      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_AUX_HEATING_V2                 0x07
4404      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_2ND_STAGE_HEATING_V2           0x08
4405      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_2ND_STAGE_COOLING_V2           0x09
4406      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_PROPERTIES1_RESERVED_MASK_V2                   0xF0
4407      =5  #define THERMOSTAT_OPERATING_STATE_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                  0x04
4408      =5  
4409      =5  /* Thermostat Setback command class commands */
4410      =5  #define THERMOSTAT_SETBACK_VERSION                                                       0x01
4411      =5  #define THERMOSTAT_SETBACK_GET                                                           0x02
4412      =5  #define THERMOSTAT_SETBACK_REPORT                                                        0x03
4413      =5  #define THERMOSTAT_SETBACK_SET                                                           0x01
4414      =5  /* Values used for Thermostat Setback Report command */
4415      =5  #define THERMOSTAT_SETBACK_REPORT_PROPERTIES1_SETBACK_TYPE_MASK                          0x03
4416      =5  #define THERMOSTAT_SETBACK_REPORT_SETBACK_TYPE_NO_OVERRIDE                               0x00
4417      =5  #define THERMOSTAT_SETBACK_REPORT_SETBACK_TYPE_TEMPORARY_OVERRIDE                        0x01
4418      =5  #define THERMOSTAT_SETBACK_REPORT_SETBACK_TYPE_PERMANENT_OVERRIDE                        0x02
4419      =5  #define THERMOSTAT_SETBACK_REPORT_SETBACK_TYPE_RESERVED                                  0x03
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 100 

4420      =5  #define THERMOSTAT_SETBACK_REPORT_PROPERTIES1_RESERVED_MASK                              0xFC
4421      =5  #define THERMOSTAT_SETBACK_REPORT_PROPERTIES1_RESERVED_SHIFT                             0x02
4422      =5  /* Values used for Thermostat Setback Set command */
4423      =5  #define THERMOSTAT_SETBACK_SET_PROPERTIES1_SETBACK_TYPE_MASK                             0x03
4424      =5  #define THERMOSTAT_SETBACK_SET_SETBACK_TYPE_NO_OVERRIDE                                  0x00
4425      =5  #define THERMOSTAT_SETBACK_SET_SETBACK_TYPE_TEMPORARY_OVERRIDE                           0x01
4426      =5  #define THERMOSTAT_SETBACK_SET_SETBACK_TYPE_PERMANENT_OVERRIDE                           0x02
4427      =5  #define THERMOSTAT_SETBACK_SET_SETBACK_TYPE_RESERVED                                     0x03
4428      =5  #define THERMOSTAT_SETBACK_SET_PROPERTIES1_RESERVED_MASK                                 0xFC
4429      =5  #define THERMOSTAT_SETBACK_SET_PROPERTIES1_RESERVED_SHIFT                                0x02
4430      =5  
4431      =5  /* Thermostat Setpoint command class commands */
4432      =5  #define THERMOSTAT_SETPOINT_VERSION                                                      0x01
4433      =5  #define THERMOSTAT_SETPOINT_GET                                                          0x02
4434      =5  #define THERMOSTAT_SETPOINT_REPORT                                                       0x03
4435      =5  #define THERMOSTAT_SETPOINT_SET                                                          0x01
4436      =5  #define THERMOSTAT_SETPOINT_SUPPORTED_GET                                                0x04
4437      =5  #define THERMOSTAT_SETPOINT_SUPPORTED_REPORT                                             0x05
4438      =5  /* Values used for Thermostat Setpoint Get command */
4439      =5  #define THERMOSTAT_SETPOINT_GET_LEVEL_SETPOINT_TYPE_MASK                                 0x0F
4440      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED                              0x00
4441      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_HEATING_1                                  0x01
4442      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_COOLING_1                                  0x02
4443      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED1                             0x03
4444      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED2                             0x04
4445      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED3                             0x05
4446      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED4                             0x06
4447      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_FURNACE                                    0x07
4448      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_DRY_AIR                                    0x08
4449      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_MOIST_AIR                                  0x09
4450      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_AUTO_CHANGEOVER                            0x0A
4451      =5  #define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_MASK                                      0xF0
4452      =5  #define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_SHIFT                                     0x04
4453      =5  /* Values used for Thermostat Setpoint Report command */
4454      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL_SETPOINT_TYPE_MASK                              0x0F
4455      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED                           0x00
4456      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_HEATING_1                               0x01
4457      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_COOLING_1                               0x02
4458      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED1                          0x03
4459      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED2                          0x04
4460      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED3                          0x05
4461      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED4                          0x06
4462      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_FURNACE                                 0x07
4463      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_DRY_AIR                                 0x08
4464      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_MOIST_AIR                               0x09
4465      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_AUTO_CHANGEOVER                         0x0A
4466      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_MASK                                   0xF0
4467      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_SHIFT                                  0x04
4468      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SIZE_MASK                                      0x07
4469      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_MASK                                     0x18
4470      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_SHIFT                                    0x03
4471      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_MASK                                 0xE0
4472      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_SHIFT                                0x05
4473      =5  /* Values used for Thermostat Setpoint Set command */
4474      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL_SETPOINT_TYPE_MASK                                 0x0F
4475      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED                              0x00
4476      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_HEATING_1                                  0x01
4477      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_COOLING_1                                  0x02
4478      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED1                             0x03
4479      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED2                             0x04
4480      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED3                             0x05
4481      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED4                             0x06
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 101 

4482      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_FURNACE                                    0x07
4483      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_DRY_AIR                                    0x08
4484      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_MOIST_AIR                                  0x09
4485      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_AUTO_CHANGEOVER                            0x0A
4486      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_MASK                                      0xF0
4487      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_SHIFT                                     0x04
4488      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_SIZE_MASK                                         0x07
4489      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_MASK                                        0x18
4490      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_SHIFT                                       0x03
4491      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_MASK                                    0xE0
4492      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_SHIFT                                   0x05
4493      =5  
4494      =5  /* Thermostat Setpoint command class commands */
4495      =5  #define THERMOSTAT_SETPOINT_VERSION_V2                                                   0x02
4496      =5  #define THERMOSTAT_SETPOINT_GET_V2                                                       0x02
4497      =5  #define THERMOSTAT_SETPOINT_REPORT_V2                                                    0x03
4498      =5  #define THERMOSTAT_SETPOINT_SET_V2                                                       0x01
4499      =5  #define THERMOSTAT_SETPOINT_SUPPORTED_GET_V2                                             0x04
4500      =5  #define THERMOSTAT_SETPOINT_SUPPORTED_REPORT_V2                                          0x05
4501      =5  /* Values used for Thermostat Setpoint Get command */
4502      =5  #define THERMOSTAT_SETPOINT_GET_LEVEL_SETPOINT_TYPE_MASK_V2                              0x0F
4503      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED_V2                           0x00
4504      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_HEATING_1_V2                               0x01
4505      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_COOLING_1_V2                               0x02
4506      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED1_V2                          0x03
4507      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED2_V2                          0x04
4508      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED3_V2                          0x05
4509      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED4_V2                          0x06
4510      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_FURNACE_V2                                 0x07
4511      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_DRY_AIR_V2                                 0x08
4512      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_MOIST_AIR_V2                               0x09
4513      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_AUTO_CHANGEOVER_V2                         0x0A
4514      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V2                     0x0B
4515      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V2                     0x0C
4516      =5  #define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_AWAY_HEATING_V2                            0x0D
4517      =5  #define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_MASK_V2                                   0xF0
4518      =5  #define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_SHIFT_V2                                  0x04
4519      =5  /* Values used for Thermostat Setpoint Report command */
4520      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL_SETPOINT_TYPE_MASK_V2                           0x0F
4521      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED_V2                        0x00
4522      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_HEATING_1_V2                            0x01
4523      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_COOLING_1_V2                            0x02
4524      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED1_V2                       0x03
4525      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED2_V2                       0x04
4526      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED3_V2                       0x05
4527      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED4_V2                       0x06
4528      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_FURNACE_V2                              0x07
4529      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_DRY_AIR_V2                              0x08
4530      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_MOIST_AIR_V2                            0x09
4531      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_AUTO_CHANGEOVER_V2                      0x0A
4532      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V2                  0x0B
4533      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V2                  0x0C
4534      =5  #define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_AWAY_HEATING_V2                         0x0D
4535      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_MASK_V2                                0xF0
4536      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_SHIFT_V2                               0x04
4537      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SIZE_MASK_V2                                   0x07
4538      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_MASK_V2                                  0x18
4539      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_SHIFT_V2                                 0x03
4540      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_MASK_V2                              0xE0
4541      =5  #define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_SHIFT_V2                             0x05
4542      =5  /* Values used for Thermostat Setpoint Set command */
4543      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL_SETPOINT_TYPE_MASK_V2                              0x0F
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 102 

4544      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED_V2                           0x00
4545      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_HEATING_1_V2                               0x01
4546      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_COOLING_1_V2                               0x02
4547      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED1_V2                          0x03
4548      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED2_V2                          0x04
4549      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED3_V2                          0x05
4550      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED4_V2                          0x06
4551      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_FURNACE_V2                                 0x07
4552      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_DRY_AIR_V2                                 0x08
4553      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_MOIST_AIR_V2                               0x09
4554      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_AUTO_CHANGEOVER_V2                         0x0A
4555      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V2                     0x0B
4556      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V2                     0x0C
4557      =5  #define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_AWAY_HEATING_V2                            0x0D
4558      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_MASK_V2                                   0xF0
4559      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_SHIFT_V2                                  0x04
4560      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_SIZE_MASK_V2                                      0x07
4561      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_MASK_V2                                     0x18
4562      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_SHIFT_V2                                    0x03
4563      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_MASK_V2                                 0xE0
4564      =5  #define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_SHIFT_V2                                0x05
4565      =5  
4566      =5  /* Time Parameters command class commands */
4567      =5  #define TIME_PARAMETERS_VERSION                                                          0x01
4568      =5  #define TIME_PARAMETERS_GET                                                              0x02
4569      =5  #define TIME_PARAMETERS_REPORT                                                           0x03
4570      =5  #define TIME_PARAMETERS_SET                                                              0x01
4571      =5  
4572      =5  /* Time command class commands */
4573      =5  #define TIME_VERSION                                                                     0x01
4574      =5  #define DATE_GET                                                                         0x03
4575      =5  #define DATE_REPORT                                                                      0x04
4576      =5  #define TIME_GET                                                                         0x01
4577      =5  #define TIME_REPORT                                                                      0x02
4578      =5  /* Values used for Time Report command */
4579      =5  #define TIME_REPORT_HOUR_LOCAL_TIME_HOUR_LOCAL_TIME_MASK                                 0x1F
4580      =5  #define TIME_REPORT_HOUR_LOCAL_TIME_RESERVED_MASK                                        0x60
4581      =5  #define TIME_REPORT_HOUR_LOCAL_TIME_RESERVED_SHIFT                                       0x05
4582      =5  #define TIME_REPORT_HOUR_LOCAL_TIME_RTC_FAILURE_BIT_MASK                                 0x80
4583      =5  
4584      =5  /* Time command class commands */
4585      =5  #define TIME_VERSION_V2                                                                  0x02
4586      =5  #define DATE_GET_V2                                                                      0x03
4587      =5  #define DATE_REPORT_V2                                                                   0x04
4588      =5  #define TIME_GET_V2                                                                      0x01
4589      =5  #define TIME_OFFSET_GET_V2                                                               0x06
4590      =5  #define TIME_OFFSET_REPORT_V2                                                            0x07
4591      =5  #define TIME_OFFSET_SET_V2                                                               0x05
4592      =5  #define TIME_REPORT_V2                                                                   0x02
4593      =5  /* Values used for Time Offset Report command */
4594      =5  #define TIME_OFFSET_REPORT_LEVEL_HOUR_TZO_MASK_V2                                        0x7F
4595      =5  #define TIME_OFFSET_REPORT_LEVEL_SIGN_TZO_BIT_MASK_V2                                    0x80
4596      =5  #define TIME_OFFSET_REPORT_LEVEL2_MINUTE_OFFSET_DST_MASK_V2                              0x7F
4597      =5  #define TIME_OFFSET_REPORT_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V2                            0x80
4598      =5  /* Values used for Time Offset Set command */
4599      =5  #define TIME_OFFSET_SET_LEVEL_HOUR_TZO_MASK_V2                                           0x7F
4600      =5  #define TIME_OFFSET_SET_LEVEL_SIGN_TZO_BIT_MASK_V2                                       0x80
4601      =5  #define TIME_OFFSET_SET_LEVEL2_MINUTE_OFFSET_DST_MASK_V2                                 0x7F
4602      =5  #define TIME_OFFSET_SET_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V2                               0x80
4603      =5  /* Values used for Time Report command */
4604      =5  #define TIME_REPORT_HOUR_LOCAL_TIME_HOUR_LOCAL_TIME_MASK_V2                              0x1F
4605      =5  #define TIME_REPORT_HOUR_LOCAL_TIME_RESERVED_MASK_V2                                     0x60
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 103 

4606      =5  #define TIME_REPORT_HOUR_LOCAL_TIME_RESERVED_SHIFT_V2                                    0x05
4607      =5  #define TIME_REPORT_HOUR_LOCAL_TIME_RTC_FAILURE_BIT_MASK_V2                              0x80
4608      =5  
4609      =5  /* Transport Service command class commands */
4610      =5  #define TRANSPORT_SERVICE_VERSION                                                        0x01
4611      =5  #define COMMAND_FIRST_FRAGMENT                                                           0xC0
4612      =5  #define COMMAND_FRAGMENT_COMPLETE                                                        0xE8
4613      =5  #define COMMAND_FRAGMENT_REQUEST                                                         0xC8
4614      =5  #define COMMAND_FRAGMENT_WAIT                                                            0xF0
4615      =5  #define COMMAND_SUBSEQUENT_FRAGMENT                                                      0xE0
4616      =5  /* Values used for Command First Fragment command */
4617      =5  #define COMMAND_FIRST_FRAGMENT_MASK                                                      0xF8
4618      =5  #define COMMAND_FIRST_FRAGMENT_DATAGRAM_SIZE_1_MASK                                      0x07
4619      =5  #define COMMAND_FIRST_FRAGMENT_PROPERTIES2_SEQUENCE_NO_MASK                              0x0F
4620      =5  #define COMMAND_FIRST_FRAGMENT_PROPERTIES2_RESERVED_MASK                                 0xF0
4621      =5  #define COMMAND_FIRST_FRAGMENT_PROPERTIES2_RESERVED_SHIFT                                0x04
4622      =5  /* Values used for Command Fragment Complete command */
4623      =5  #define COMMAND_FRAGMENT_COMPLETE_MASK                                                   0xF8
4624      =5  #define COMMAND_FRAGMENT_COMPLETE_RESERVED_MASK                                          0x07
4625      =5  #define COMMAND_FRAGMENT_COMPLETE_PROPERTIES2_SEQUENCE_NO_MASK                           0x0F
4626      =5  #define COMMAND_FRAGMENT_COMPLETE_PROPERTIES2_RESERVED_MASK                              0xF0
4627      =5  #define COMMAND_FRAGMENT_COMPLETE_PROPERTIES2_RESERVED_SHIFT                             0x04
4628      =5  /* Values used for Command Fragment Request command */
4629      =5  #define COMMAND_FRAGMENT_REQUEST_MASK                                                    0xF8
4630      =5  #define COMMAND_FRAGMENT_REQUEST_RESERVED_MASK                                           0x07
4631      =5  #define COMMAND_FRAGMENT_REQUEST_PROPERTIES2_SEQUENCE_NO_MASK                            0x0F
4632      =5  #define COMMAND_FRAGMENT_REQUEST_PROPERTIES2_RESERVED_MASK                               0xF0
4633      =5  #define COMMAND_FRAGMENT_REQUEST_PROPERTIES2_RESERVED_SHIFT                              0x04
4634      =5  /* Values used for Command Fragment Wait command */
4635      =5  #define COMMAND_FRAGMENT_WAIT_MASK                                                       0xF8
4636      =5  #define COMMAND_FRAGMENT_WAIT_RESERVED_MASK                                              0x07
4637      =5  /* Values used for Command Subsequent Fragment command */
4638      =5  #define COMMAND_SUBSEQUENT_FRAGMENT_MASK                                                 0xF8
4639      =5  #define COMMAND_SUBSEQUENT_FRAGMENT_DATAGRAM_SIZE_1_MASK                                 0x07
4640      =5  #define COMMAND_SUBSEQUENT_FRAGMENT_PROPERTIES2_DATAGRAM_OFFSET_1_MASK                   0x07
4641      =5  #define COMMAND_SUBSEQUENT_FRAGMENT_PROPERTIES2_SEQUENCE_NO_MASK                         0x78
4642      =5  #define COMMAND_SUBSEQUENT_FRAGMENT_PROPERTIES2_SEQUENCE_NO_SHIFT                        0x03
4643      =5  #define COMMAND_SUBSEQUENT_FRAGMENT_PROPERTIES2_RESERVED_BIT_MASK                        0x80
4644      =5  
4645      =5  /* User Code command class commands */
4646      =5  #define USER_CODE_VERSION                                                                0x01
4647      =5  #define USER_CODE_GET                                                                    0x02
4648      =5  #define USER_CODE_REPORT                                                                 0x03
4649      =5  #define USER_CODE_SET                                                                    0x01
4650      =5  #define USERS_NUMBER_GET                                                                 0x04
4651      =5  #define USERS_NUMBER_REPORT                                                              0x05
4652      =5  /* Values used for User Code Report command */
4653      =5  #define USER_CODE_REPORT_AVAILABLE_NOT_SET                                               0x00
4654      =5  #define USER_CODE_REPORT_OCCUPIED                                                        0x01
4655      =5  #define USER_CODE_REPORT_RESERVED_BY_ADMINISTRATOR                                       0x02
4656      =5  #define USER_CODE_REPORT_STATUS_NOT_AVAILABLE                                            0xFF
4657      =5  /* Values used for User Code Set command */
4658      =5  #define USER_CODE_SET_AVAILABLE_NOT_SET                                                  0x00
4659      =5  #define USER_CODE_SET_OCCUPIED                                                           0x01
4660      =5  #define USER_CODE_SET_RESERVED_BY_ADMINISTRATOR                                          0x02
4661      =5  #define USER_CODE_SET_STATUS_NOT_AVAILABLE                                               0xFF
4662      =5  
4663      =5  /* Version command class commands */
4664      =5  #define VERSION_VERSION                                                                  0x01
4665      =5  #define VERSION_COMMAND_CLASS_GET                                                        0x13
4666      =5  #define VERSION_COMMAND_CLASS_REPORT                                                     0x14
4667      =5  #define VERSION_GET                                                                      0x11
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 104 

4668      =5  #define VERSION_REPORT                                                                   0x12
4669      =5  
4670      =5  /* Wake Up command class commands */
4671      =5  #define WAKE_UP_VERSION                                                                  0x01
4672      =5  #define WAKE_UP_INTERVAL_GET                                                             0x05
4673      =5  #define WAKE_UP_INTERVAL_REPORT                                                          0x06
4674      =5  #define WAKE_UP_INTERVAL_SET                                                             0x04
4675      =5  #define WAKE_UP_NO_MORE_INFORMATION                                                      0x08
4676      =5  #define WAKE_UP_NOTIFICATION                                                             0x07
4677      =5  
4678      =5  /* Wake Up command class commands */
4679      =5  #define WAKE_UP_VERSION_V2                                                               0x02
4680      =5  #define WAKE_UP_INTERVAL_CAPABILITIES_GET_V2                                             0x09
4681      =5  #define WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V2                                          0x0A
4682      =5  #define WAKE_UP_INTERVAL_GET_V2                                                          0x05
4683      =5  #define WAKE_UP_INTERVAL_REPORT_V2                                                       0x06
4684      =5  #define WAKE_UP_INTERVAL_SET_V2                                                          0x04
4685      =5  #define WAKE_UP_NO_MORE_INFORMATION_V2                                                   0x08
4686      =5  #define WAKE_UP_NOTIFICATION_V2                                                          0x07
4687      =5  
4688      =5  /* Zip 6lowpan command class commands */
4689      =5  #define ZIP_6LOWPAN_VERSION                                                              0x01
4690      =5  #define LOWPAN_FIRST_FRAGMENT                                                            0xC0
4691      =5  #define LOWPAN_SUBSEQUENT_FRAGMENT                                                       0xE0
4692      =5  /* Values used for Lowpan First Fragment command */
4693      =5  #define LOWPAN_FIRST_FRAGMENT_MASK                                                       0xF8
4694      =5  #define LOWPAN_FIRST_FRAGMENT_DATAGRAM_SIZE_1_MASK                                       0x07
4695      =5  /* Values used for Lowpan Subsequent Fragment command */
4696      =5  #define LOWPAN_SUBSEQUENT_FRAGMENT_MASK                                                  0xF8
4697      =5  #define LOWPAN_SUBSEQUENT_FRAGMENT_DATAGRAM_SIZE_1_MASK                                  0x07
4698      =5  
4699      =5  /* Zip command class commands */
4700      =5  #define ZIP_VERSION                                                                      0x01
4701      =5  #define COMMAND_ZIP_PACKET                                                               0x02
4702      =5  /* Values used for Command Zip Packet command */
4703      =5  #define COMMAND_ZIP_PACKET_PROPERTIES1_RESERVED_MASK                                     0x03
4704      =5  #define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_OPTION_ERROR_BIT_MASK                        0x04
4705      =5  #define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_QUEUE_FULL_BIT_MASK                          0x08
4706      =5  #define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_WAITING_BIT_MASK                             0x10
4707      =5  #define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_RESPONSE_BIT_MASK                            0x20
4708      =5  #define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_RESPONSE_BIT_MASK                             0x40
4709      =5  #define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_REQUEST_BIT_MASK                              0x80
4710      =5  #define COMMAND_ZIP_PACKET_PROPERTIES2_RESERVED_MASK                                     0x1F
4711      =5  #define COMMAND_ZIP_PACKET_PROPERTIES2_MORE_INFORMATION_BIT_MASK                         0x20
4712      =5  #define COMMAND_ZIP_PACKET_PROPERTIES2_Z_WAVE_CMD_INCLUDED_BIT_MASK                      0x40
4713      =5  #define COMMAND_ZIP_PACKET_PROPERTIES2_HEADER_EXT_INCLUDED_BIT_MASK                      0x80
4714      =5  #define COMMAND_ZIP_PACKET_PROPERTIES3_SOURCE_END_POINT_MASK                             0x7F
4715      =5  #define COMMAND_ZIP_PACKET_PROPERTIES3_RES_BIT_MASK                                      0x80
4716      =5  #define COMMAND_ZIP_PACKET_PROPERTIES4_DESTINATION_END_POINT_MASK                        0x7F
4717      =5  #define COMMAND_ZIP_PACKET_PROPERTIES4_BIT_ADDRESS_BIT_MASK                              0x80
4718      =5  
4719      =5  /* Application Capability command class commands */
4720      =5  #define APPLICATION_CAPABILITY_VERSION                                                   0x01
4721      =5  #define COMMAND_COMMAND_CLASS_NOT_SUPPORTED                                              0x01
4722      =5  /* Values used for Command Command Class Not Supported command */
4723      =5  #define COMMAND_COMMAND_CLASS_NOT_SUPPORTED_PROPERTIES1_RESERVED_MASK                    0x7F
4724      =5  #define COMMAND_COMMAND_CLASS_NOT_SUPPORTED_PROPERTIES1_DYNAMIC_BIT_MASK                 0x80
4725      =5  
4726      =5  /* Color Control command class commands */
4727      =5  #define COLOR_CONTROL_VERSION                                                            0x01
4728      =5  #define CAPABILITY_GET                                                                   0x01
4729      =5  #define CAPABILITY_REPORT                                                                0x02
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 105 

4730      =5  #define STATE_GET                                                                        0x03
4731      =5  #define STATE_REPORT                                                                     0x04
4732      =5  #define STATE_SET                                                                        0x05
4733      =5  #define START_CAPABILITY_LEVEL_CHANGE                                                    0x06
4734      =5  #define STOP_STATE_CHANGE                                                                0x07
4735      =5  /* Values used for State Set command */
4736      =5  #define STATE_SET_PROPERTIES1_STATE_DATA_LENGTH_MASK                                     0x1F
4737      =5  #define STATE_SET_PROPERTIES1_RESERVED_MASK                                              0xE0
4738      =5  #define STATE_SET_PROPERTIES1_RESERVED_SHIFT                                             0x05
4739      =5  /* Values used for Start Capability Level Change command */
4740      =5  #define START_CAPABILITY_LEVEL_CHANGE_PROPERTIES1_RES1_MASK                              0x1F
4741      =5  #define START_CAPABILITY_LEVEL_CHANGE_PROPERTIES1_IGNORE_START_STATE_BIT_MASK            0x20
4742      =5  #define START_CAPABILITY_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_BIT_MASK                       0x40
4743      =5  #define START_CAPABILITY_LEVEL_CHANGE_PROPERTIES1_RES2_BIT_MASK                          0x80
4744      =5  
4745      =5  /* Schedule command class commands */
4746      =5  #define SCHEDULE_VERSION                                                                 0x01
4747      =5  #define SCHEDULE_SUPPORTED_GET                                                           0x01
4748      =5  #define SCHEDULE_SUPPORTED_REPORT                                                        0x02
4749      =5  #define COMMAND_SCHEDULE_SET                                                             0x03
4750      =5  #define COMMAND_SCHEDULE_GET                                                             0x04
4751      =5  #define COMMAND_SCHEDULE_REPORT                                                          0x05
4752      =5  #define SCHEDULE_REMOVE                                                                  0x06
4753      =5  #define SCHEDULE_STATE_SET                                                               0x07
4754      =5  #define SCHEDULE_STATE_GET                                                               0x08
4755      =5  #define SCHEDULE_STATE_REPORT                                                            0x09
4756      =5  /* Values used for Schedule Supported Report command */
4757      =5  #define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_START_TIME_SUPPORT_MASK                    0x3F
4758      =5  #define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_FALLBACK_SUPPORT_BIT_MASK                  0x40
4759      =5  #define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_SUPPORT_ENABLE_DISABLE_BIT_MASK            0x80
4760      =5  #define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_SUPPORTED_OVERRIDE_TYPES_MASK              0x7F
4761      =5  #define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_OVERRIDE_SUPPORT_BIT_MASK                  0x80
4762      =5  /* Values used for Command Schedule Set command */
4763      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES1_START_MONTH_MASK                                0x0F
4764      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES1_RESERVED1_MASK                                  0xF0
4765      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES1_RESERVED1_SHIFT                                 0x04
4766      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES2_START_DAY_OF_MONTH_MASK                         0x1F
4767      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES2_RESERVED2_MASK                                  0xE0
4768      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES2_RESERVED2_SHIFT                                 0x05
4769      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES3_START_WEEKDAY_MASK                              0x7F
4770      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES3_RES_BIT_MASK                                    0x80
4771      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES4_START_HOUR_MASK                                 0x1F
4772      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_MASK                              0xE0
4773      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_SHIFT                             0x05
4774      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES5_START_MINUTE_MASK                               0x3F
4775      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES5_RESERVED3_MASK                                  0xC0
4776      =5  #define COMMAND_SCHEDULE_SET_PROPERTIES5_RESERVED3_SHIFT                                 0x06
4777      =5  /* Values used for Command Schedule Report command */
4778      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES1_START_MONTH_MASK                             0x0F
4779      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES1_ACTIVE_ID_MASK                               0xF0
4780      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES1_ACTIVE_ID_SHIFT                              0x04
4781      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES2_START_DAY_OF_MONTH_MASK                      0x1F
4782      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RESERVED2_MASK                               0xE0
4783      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RESERVED2_SHIFT                              0x05
4784      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES3_START_WEEKDAY_MASK                           0x7F
4785      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES3_RES_BIT_MASK                                 0x80
4786      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES4_START_HOUR_MASK                              0x1F
4787      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_MASK                           0xE0
4788      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_SHIFT                          0x05
4789      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES5_START_MINUTE_MASK                            0x3F
4790      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RESERVED3_MASK                               0xC0
4791      =5  #define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RESERVED3_SHIFT                              0x06
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 106 

4792      =5  /* Values used for Schedule State Report command */
4793      =5  #define SCHEDULE_STATE_REPORT_PROPERTIES1_OVERRIDE_BIT_MASK                              0x01
4794      =5  #define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_MASK                         0xFE
4795      =5  #define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_SHIFT                        0x01
4796      =5  #define SCHEDULE_STATE_REPORT_PROPERTIES2_ACTIVE_ID_1_MASK                               0x0F
4797      =5  #define SCHEDULE_STATE_REPORT_PROPERTIES2_ACTIVE_ID_2_MASK                               0xF0
4798      =5  #define SCHEDULE_STATE_REPORT_PROPERTIES2_ACTIVE_ID_2_SHIFT                              0x04
4799      =5  #define SCHEDULE_STATE_REPORT_PROPERTIES3_ACTIVE_ID_3_MASK                               0x0F
4800      =5  #define SCHEDULE_STATE_REPORT_PROPERTIES3_ACTIVE_ID_N_MASK                               0xF0
4801      =5  #define SCHEDULE_STATE_REPORT_PROPERTIES3_ACTIVE_ID_N_SHIFT                              0x04
4802      =5  
4803      =5  /* Network Management Primary command class commands */
4804      =5  #define NETWORK_MANAGEMENT_PRIMARY_VERSION                                               0x01
4805      =5  #define CONTROLLER_CHANGE                                                                0x01
4806      =5  #define CONTROLLER_CHANGE_STATUS                                                         0x02
4807      =5  /* Values used for Controller Change Status command */
4808      =5  #define CONTROLLER_CHANGE_STATUS_PROPERTIES1_CAPABILITY_MASK                             0x7F
4809      =5  #define CONTROLLER_CHANGE_STATUS_PROPERTIES1_LISTENING_BIT_MASK                          0x80
4810      =5  #define CONTROLLER_CHANGE_STATUS_PROPERTIES2_SECURITY_MASK                               0x7F
4811      =5  #define CONTROLLER_CHANGE_STATUS_PROPERTIES2_OPT_BIT_MASK                                0x80
4812      =5  
4813      =5  /* Zip Nd command class commands */
4814      =5  #define ZIP_ND_VERSION                                                                   0x01
4815      =5  #define ZIP_NODE_SOLICITATION                                                            0x03
4816      =5  #define ZIP_INV_NODE_SOLICITATION                                                        0x04
4817      =5  #define ZIP_NODE_ADVERTISEMENT                                                           0x01
4818      =5  /* Values used for Zip Inv Node Solicitation command */
4819      =5  #define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_RESERVED1_MASK                             0x03
4820      =5  #define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_LOCAL_BIT_MASK                             0x04
4821      =5  #define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_RESERVED2_MASK                             0xF8
4822      =5  #define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_RESERVED2_SHIFT                            0x03
4823      =5  /* Values used for Zip Node Advertisement command */
4824      =5  #define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_VALIDITY_MASK                                 0x03
4825      =5  #define ZIP_NODE_ADVERTISEMENT_VALIDITY_INFORMATION_OK                                   0x00
4826      =5  #define ZIP_NODE_ADVERTISEMENT_VALIDITY_INFORMATION_OBSOLETE                             0x01
4827      =5  #define ZIP_NODE_ADVERTISEMENT_VALIDITY_INFORMATION_NOT_FOUND                            0x02
4828      =5  #define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_LOCAL_BIT_MASK                                0x04
4829      =5  #define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_RESERVED_MASK                                 0xF8
4830      =5  #define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_RESERVED_SHIFT                                0x03
4831      =5  
4832      =5  /* Association Grp Info command class commands */
4833      =5  #define ASSOCIATION_GRP_INFO_VERSION                                                     0x01
4834      =5  #define ASSOCIATION_GROUP_NAME_GET                                                       0x01
4835      =5  #define ASSOCIATION_GROUP_NAME_REPORT                                                    0x02
4836      =5  #define ASSOCIATION_GROUP_INFO_GET                                                       0x03
4837      =5  #define ASSOCIATION_GROUP_INFO_REPORT                                                    0x04
4838      =5  #define ASSOCIATION_GROUP_COMMAND_LIST_GET                                               0x05
4839      =5  #define ASSOCIATION_GROUP_COMMAND_LIST_REPORT                                            0x06
4840      =5  /* Values used for Association Group Info Get command */
4841      =5  #define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_RESERVED_MASK                             0x3F
4842      =5  #define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_LIST_MODE_BIT_MASK                        0x40
4843      =5  #define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_REFRESH_CACHE_BIT_MASK                    0x80
4844      =5  /* Values used for Association Group Info Report command */
4845      =5  #define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_GROUP_COUNT_MASK                       0x3F
4846      =5  #define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_DYNAMIC_INFO_BIT_MASK                  0x40
4847      =5  #define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_LIST_MODE_BIT_MASK                     0x80
4848      =5  /* Values used for Association Group Command List Get command */
4849      =5  #define ASSOCIATION_GROUP_COMMAND_LIST_GET_PROPERTIES1_RESERVED_MASK                     0x7F
4850      =5  #define ASSOCIATION_GROUP_COMMAND_LIST_GET_PROPERTIES1_ALLOW_CACHE_BIT_MASK              0x80
4851      =5  
4852      =5  /* Device Reset Locally command class commands */
4853      =5  #define DEVICE_RESET_LOCALLY_VERSION                                                     0x01
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 107 

4854      =5  #define DEVICE_RESET_LOCALLY_NOTIFICATION                                                0x01
4855      =5  
4856      =5  /* Central Scene command class commands */
4857      =5  #define CENTRAL_SCENE_VERSION                                                            0x01
4858      =5  #define CENTRAL_SCENE_SUPPORTED_GET                                                      0x01
4859      =5  #define CENTRAL_SCENE_SUPPORTED_REPORT                                                   0x02
4860      =5  #define CENTRAL_SCENE_NOTIFICATION                                                       0x03
4861      =5  /* Values used for Central Scene Notification command */
4862      =5  #define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_KEY_ATTRIBUTES_MASK                       0x07
4863      =5  #define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_RESERVED_MASK                             0xF8
4864      =5  #define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_RESERVED_SHIFT                            0x03
4865      =5  
4866      =5  /* Ip Association command class commands */
4867      =5  #define IP_ASSOCIATION_VERSION                                                           0x01
4868      =5  #define IP_ASSOCIATION_SET                                                               0x01
4869      =5  #define IP_ASSOCIATION_GET                                                               0x02
4870      =5  #define IP_ASSOCIATION_REPORT                                                            0x03
4871      =5  #define IP_ASSOCIATION_REMOVE                                                            0x04
4872      =5  /* Values used for Ip Association Set command */
4873      =5  #define IP_ASSOCIATION_SET_PROPERTIES1_RESOURCE_NAME_LENGTH_MASK                         0x3F
4874      =5  #define IP_ASSOCIATION_SET_PROPERTIES1_RESERVED_MASK                                     0xC0
4875      =5  #define IP_ASSOCIATION_SET_PROPERTIES1_RESERVED_SHIFT                                    0x06
4876      =5  /* Values used for Ip Association Report command */
4877      =5  #define IP_ASSOCIATION_REPORT_PROPERTIES1_RESOURCE_NAME_LENGTH_MASK                      0x3F
4878      =5  #define IP_ASSOCIATION_REPORT_PROPERTIES1_RESERVED_MASK                                  0xC0
4879      =5  #define IP_ASSOCIATION_REPORT_PROPERTIES1_RESERVED_SHIFT                                 0x06
4880      =5  /* Values used for Ip Association Remove command */
4881      =5  #define IP_ASSOCIATION_REMOVE_PROPERTIES1_RESOURCE_NAME_LENGTH_MASK                      0x3F
4882      =5  #define IP_ASSOCIATION_REMOVE_PROPERTIES1_RESERVED_MASK                                  0xC0
4883      =5  #define IP_ASSOCIATION_REMOVE_PROPERTIES1_RESERVED_SHIFT                                 0x06
4884      =5  
4885      =5  /* Antitheft command class commands */
4886      =5  #define ANTITHEFT_VERSION                                                                0x01
4887      =5  #define ANTITHEFT_SET                                                                    0x01
4888      =5  #define ANTITHEFT_GET                                                                    0x02
4889      =5  #define ANTITHEFT_REPORT                                                                 0x03
4890      =5  /* Values used for Antitheft Set command */
4891      =5  #define ANTITHEFT_SET_PROPERTIES1_NUMBER_OF_MAGIC_CODE_BYTES_MASK                        0x7F
4892      =5  #define ANTITHEFT_SET_PROPERTIES1_ENABLE_BIT_MASK                                        0x80
4893      =5  
4894      =5  /* Antitheft command class commands */
4895      =5  #define ANTITHEFT_VERSION_V2                                                             0x02
4896      =5  #define ANTITHEFT_SET_V2                                                                 0x01
4897      =5  #define ANTITHEFT_GET_V2                                                                 0x02
4898      =5  #define ANTITHEFT_REPORT_V2                                                              0x03
4899      =5  /* Values used for Antitheft Set command */
4900      =5  #define ANTITHEFT_SET_PROPERTIES1_NUMBER_OF_MAGIC_CODE_BYTES_MASK_V2                     0x7F
4901      =5  #define ANTITHEFT_SET_PROPERTIES1_ENABLE_BIT_MASK_V2                                     0x80
4902      =5  
4903      =5  
4904      =5  
4905      =5  /* Max. frame size to allow routing over 4 hops */
4906      =5  #define META_DATA_MAX_DATA_SIZE                      48
4907      =5  
4908      =5  /************************************************************/
4909      =5  /* Structs and unions that can be used by the application   */
4910      =5  /* to construct the frames to be sent                       */
4911      =5  /************************************************************/
4912      =5  
4913      =5  /************************************************************/
4914      =5  /* Common for all command classes                           */
4915      =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 108 

4916      =5  typedef struct _ZW_COMMON_FRAME_
4917      =5  {
4918      =5    BYTE        cmdClass;  /* The command class */
4919      =5    BYTE        cmd;       /* The command */
4920      =5  } ZW_COMMON_FRAME;
4921      =5  
4922      =5  /************************************************************/
4923      =5  /* Alarm Get command class structs */                       
4924      =5  /************************************************************/
4925      =5  typedef struct _ZW_ALARM_GET_FRAME_
4926      =5  {
4927      =5      BYTE      cmdClass;                     /* The command class */
4928      =5      BYTE      cmd;                          /* The command */
4929      =5      BYTE      alarmType;                    /**/
4930      =5  } ZW_ALARM_GET_FRAME;
4931      =5  
4932      =5  /************************************************************/
4933      =5  /* Alarm Report command class structs */                    
4934      =5  /************************************************************/
4935      =5  typedef struct _ZW_ALARM_REPORT_FRAME_
4936      =5  {
4937      =5      BYTE      cmdClass;                     /* The command class */
4938      =5      BYTE      cmd;                          /* The command */
4939      =5      BYTE      alarmType;                    /**/
4940      =5      BYTE      alarmLevel;                   /**/
4941      =5  } ZW_ALARM_REPORT_FRAME;
4942      =5  
4943      =5  /************************************************************/
4944      =5  /* Alarm Get V2 command class structs */                    
4945      =5  /************************************************************/
4946      =5  typedef struct _ZW_ALARM_GET_V2_FRAME_
4947      =5  {
4948      =5      BYTE      cmdClass;                     /* The command class */
4949      =5      BYTE      cmd;                          /* The command */
4950      =5      BYTE      alarmType;                    /**/
4951      =5      BYTE      zwaveAlarmType;               /**/
4952      =5  } ZW_ALARM_GET_V2_FRAME;
4953      =5  
4954      =5  /************************************************************/
4955      =5  /* Alarm Report 1byte V2 command class structs */           
4956      =5  /************************************************************/
4957      =5  typedef struct _ZW_ALARM_REPORT_1BYTE_V2_FRAME_
4958      =5  {
4959      =5      BYTE      cmdClass;                     /* The command class */
4960      =5      BYTE      cmd;                          /* The command */
4961      =5      BYTE      alarmType;                    /**/
4962      =5      BYTE      alarmLevel;                   /**/
4963      =5      BYTE      zensorNetSourceNodeId;        /**/
4964      =5      BYTE      zwaveAlarmStatus;             /**/
4965      =5      BYTE      zwaveAlarmType;               /**/
4966      =5      BYTE      zwaveAlarmEvent;              /**/
4967      =5      BYTE      numberOfEventParameters;      /**/
4968      =5      BYTE      eventParameter1;              
4969      =5  } ZW_ALARM_REPORT_1BYTE_V2_FRAME;
4970      =5  
4971      =5  /************************************************************/
4972      =5  /* Alarm Report 2byte V2 command class structs */           
4973      =5  /************************************************************/
4974      =5  typedef struct _ZW_ALARM_REPORT_2BYTE_V2_FRAME_
4975      =5  {
4976      =5      BYTE      cmdClass;                     /* The command class */
4977      =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 109 

4978      =5      BYTE      alarmType;                    /**/
4979      =5      BYTE      alarmLevel;                   /**/
4980      =5      BYTE      zensorNetSourceNodeId;        /**/
4981      =5      BYTE      zwaveAlarmStatus;             /**/
4982      =5      BYTE      zwaveAlarmType;               /**/
4983      =5      BYTE      zwaveAlarmEvent;              /**/
4984      =5      BYTE      numberOfEventParameters;      /**/
4985      =5      BYTE      eventParameter1;              /* MSB */
4986      =5      BYTE      eventParameter2;              /* LSB */
4987      =5  } ZW_ALARM_REPORT_2BYTE_V2_FRAME;
4988      =5  
4989      =5  /************************************************************/
4990      =5  /* Alarm Report 3byte V2 command class structs */           
4991      =5  /************************************************************/
4992      =5  typedef struct _ZW_ALARM_REPORT_3BYTE_V2_FRAME_
4993      =5  {
4994      =5      BYTE      cmdClass;                     /* The command class */
4995      =5      BYTE      cmd;                          /* The command */
4996      =5      BYTE      alarmType;                    /**/
4997      =5      BYTE      alarmLevel;                   /**/
4998      =5      BYTE      zensorNetSourceNodeId;        /**/
4999      =5      BYTE      zwaveAlarmStatus;             /**/
5000      =5      BYTE      zwaveAlarmType;               /**/
5001      =5      BYTE      zwaveAlarmEvent;              /**/
5002      =5      BYTE      numberOfEventParameters;      /**/
5003      =5      BYTE      eventParameter1;              /* MSB */
5004      =5      BYTE      eventParameter2;              
5005      =5      BYTE      eventParameter3;              /* LSB */
5006      =5  } ZW_ALARM_REPORT_3BYTE_V2_FRAME;
5007      =5  
5008      =5  /************************************************************/
5009      =5  /* Alarm Report 4byte V2 command class structs */           
5010      =5  /************************************************************/
5011      =5  typedef struct _ZW_ALARM_REPORT_4BYTE_V2_FRAME_
5012      =5  {
5013      =5      BYTE      cmdClass;                     /* The command class */
5014      =5      BYTE      cmd;                          /* The command */
5015      =5      BYTE      alarmType;                    /**/
5016      =5      BYTE      alarmLevel;                   /**/
5017      =5      BYTE      zensorNetSourceNodeId;        /**/
5018      =5      BYTE      zwaveAlarmStatus;             /**/
5019      =5      BYTE      zwaveAlarmType;               /**/
5020      =5      BYTE      zwaveAlarmEvent;              /**/
5021      =5      BYTE      numberOfEventParameters;      /**/
5022      =5      BYTE      eventParameter1;              /* MSB */
5023      =5      BYTE      eventParameter2;              
5024      =5      BYTE      eventParameter3;              
5025      =5      BYTE      eventParameter4;              /* LSB */
5026      =5  } ZW_ALARM_REPORT_4BYTE_V2_FRAME;
5027      =5  
5028      =5  /************************************************************/
5029      =5  /* Alarm Set V2 command class structs */                    
5030      =5  /************************************************************/
5031      =5  typedef struct _ZW_ALARM_SET_V2_FRAME_
5032      =5  {
5033      =5      BYTE      cmdClass;                     /* The command class */
5034      =5      BYTE      cmd;                          /* The command */
5035      =5      BYTE      zwaveAlarmType;               /**/
5036      =5      BYTE      zwaveAlarmStatus;             /**/
5037      =5  } ZW_ALARM_SET_V2_FRAME;
5038      =5  
5039      =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 110 

5040      =5  /* Alarm Type Supported Get V2 command class structs */     
5041      =5  /************************************************************/
5042      =5  typedef struct _ZW_ALARM_TYPE_SUPPORTED_GET_V2_FRAME_
5043      =5  {
5044      =5      BYTE      cmdClass;                     /* The command class */
5045      =5      BYTE      cmd;                          /* The command */
5046      =5  } ZW_ALARM_TYPE_SUPPORTED_GET_V2_FRAME;
5047      =5  
5048      =5  /************************************************************/
5049      =5  /* Alarm Type Supported Report 1byte V2 command class structs */
5050      =5  /************************************************************/
5051      =5  typedef struct _ZW_ALARM_TYPE_SUPPORTED_REPORT_1BYTE_V2_FRAME_
5052      =5  {
5053      =5      BYTE      cmdClass;                     /* The command class */
5054      =5      BYTE      cmd;                          /* The command */
5055      =5      BYTE      properties1;                  /* masked byte */
5056      =5      BYTE      bitMask1;                     
5057      =5  } ZW_ALARM_TYPE_SUPPORTED_REPORT_1BYTE_V2_FRAME;
5058      =5  
5059      =5  /************************************************************/
5060      =5  /* Alarm Type Supported Report 2byte V2 command class structs */
5061      =5  /************************************************************/
5062      =5  typedef struct _ZW_ALARM_TYPE_SUPPORTED_REPORT_2BYTE_V2_FRAME_
5063      =5  {
5064      =5      BYTE      cmdClass;                     /* The command class */
5065      =5      BYTE      cmd;                          /* The command */
5066      =5      BYTE      properties1;                  /* masked byte */
5067      =5      BYTE      bitMask1;                     /* MSB */
5068      =5      BYTE      bitMask2;                     /* LSB */
5069      =5  } ZW_ALARM_TYPE_SUPPORTED_REPORT_2BYTE_V2_FRAME;
5070      =5  
5071      =5  /************************************************************/
5072      =5  /* Alarm Type Supported Report 3byte V2 command class structs */
5073      =5  /************************************************************/
5074      =5  typedef struct _ZW_ALARM_TYPE_SUPPORTED_REPORT_3BYTE_V2_FRAME_
5075      =5  {
5076      =5      BYTE      cmdClass;                     /* The command class */
5077      =5      BYTE      cmd;                          /* The command */
5078      =5      BYTE      properties1;                  /* masked byte */
5079      =5      BYTE      bitMask1;                     /* MSB */
5080      =5      BYTE      bitMask2;                     
5081      =5      BYTE      bitMask3;                     /* LSB */
5082      =5  } ZW_ALARM_TYPE_SUPPORTED_REPORT_3BYTE_V2_FRAME;
5083      =5  
5084      =5  /************************************************************/
5085      =5  /* Alarm Type Supported Report 4byte V2 command class structs */
5086      =5  /************************************************************/
5087      =5  typedef struct _ZW_ALARM_TYPE_SUPPORTED_REPORT_4BYTE_V2_FRAME_
5088      =5  {
5089      =5      BYTE      cmdClass;                     /* The command class */
5090      =5      BYTE      cmd;                          /* The command */
5091      =5      BYTE      properties1;                  /* masked byte */
5092      =5      BYTE      bitMask1;                     /* MSB */
5093      =5      BYTE      bitMask2;                     
5094      =5      BYTE      bitMask3;                     
5095      =5      BYTE      bitMask4;                     /* LSB */
5096      =5  } ZW_ALARM_TYPE_SUPPORTED_REPORT_4BYTE_V2_FRAME;
5097      =5  
5098      =5  /************************************************************/
5099      =5  /* Notification Get V3 command class structs */             
5100      =5  /************************************************************/
5101      =5  typedef struct _ZW_NOTIFICATION_GET_V3_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 111 

5102      =5  {
5103      =5      BYTE      cmdClass;                     /* The command class */
5104      =5      BYTE      cmd;                          /* The command */
5105      =5      BYTE      v1AlarmType;                  /**/
5106      =5      BYTE      notificationType;             /**/
5107      =5      BYTE      mevent;                       /**/
5108      =5  } ZW_NOTIFICATION_GET_V3_FRAME;
5109      =5  
5110      =5  /************************************************************/
5111      =5  /* Notification Report 1byte V3 command class structs */    
5112      =5  /************************************************************/
5113      =5  typedef struct _ZW_NOTIFICATION_REPORT_1BYTE_V3_FRAME_
5114      =5  {
5115      =5      BYTE      cmdClass;                     /* The command class */
5116      =5      BYTE      cmd;                          /* The command */
5117      =5      BYTE      v1AlarmType;                  /**/
5118      =5      BYTE      v1AlarmLevel;                 /**/
5119      =5      BYTE      zensorNetSourceNodeId;        /**/
5120      =5      BYTE      notificationStatus;           /**/
5121      =5      BYTE      notificationType;             /**/
5122      =5      BYTE      mevent;                       /**/
5123      =5      BYTE      properties1;                  /* masked byte */
5124      =5      BYTE      eventParameter1;              
5125      =5  } ZW_NOTIFICATION_REPORT_1BYTE_V3_FRAME;
5126      =5  
5127      =5  /************************************************************/
5128      =5  /* Notification Report 2byte V3 command class structs */    
5129      =5  /************************************************************/
5130      =5  typedef struct _ZW_NOTIFICATION_REPORT_2BYTE_V3_FRAME_
5131      =5  {
5132      =5      BYTE      cmdClass;                     /* The command class */
5133      =5      BYTE      cmd;                          /* The command */
5134      =5      BYTE      v1AlarmType;                  /**/
5135      =5      BYTE      v1AlarmLevel;                 /**/
5136      =5      BYTE      zensorNetSourceNodeId;        /**/
5137      =5      BYTE      notificationStatus;           /**/
5138      =5      BYTE      notificationType;             /**/
5139      =5      BYTE      mevent;                       /**/
5140      =5      BYTE      properties1;                  /* masked byte */
5141      =5      BYTE      eventParameter1;              /* MSB */
5142      =5      BYTE      eventParameter2;              /* LSB */
5143      =5  } ZW_NOTIFICATION_REPORT_2BYTE_V3_FRAME;
5144      =5  
5145      =5  /************************************************************/
5146      =5  /* Notification Report 3byte V3 command class structs */    
5147      =5  /************************************************************/
5148      =5  typedef struct _ZW_NOTIFICATION_REPORT_3BYTE_V3_FRAME_
5149      =5  {
5150      =5      BYTE      cmdClass;                     /* The command class */
5151      =5      BYTE      cmd;                          /* The command */
5152      =5      BYTE      v1AlarmType;                  /**/
5153      =5      BYTE      v1AlarmLevel;                 /**/
5154      =5      BYTE      zensorNetSourceNodeId;        /**/
5155      =5      BYTE      notificationStatus;           /**/
5156      =5      BYTE      notificationType;             /**/
5157      =5      BYTE      mevent;                       /**/
5158      =5      BYTE      properties1;                  /* masked byte */
5159      =5      BYTE      eventParameter1;              /* MSB */
5160      =5      BYTE      eventParameter2;              
5161      =5      BYTE      eventParameter3;              /* LSB */
5162      =5  } ZW_NOTIFICATION_REPORT_3BYTE_V3_FRAME;
5163      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 112 

5164      =5  /************************************************************/
5165      =5  /* Notification Report 4byte V3 command class structs */    
5166      =5  /************************************************************/
5167      =5  typedef struct _ZW_NOTIFICATION_REPORT_4BYTE_V3_FRAME_
5168      =5  {
5169      =5      BYTE      cmdClass;                     /* The command class */
5170      =5      BYTE      cmd;                          /* The command */
5171      =5      BYTE      v1AlarmType;                  /**/
5172      =5      BYTE      v1AlarmLevel;                 /**/
5173      =5      BYTE      zensorNetSourceNodeId;        /**/
5174      =5      BYTE      notificationStatus;           /**/
5175      =5      BYTE      notificationType;             /**/
5176      =5      BYTE      mevent;                       /**/
5177      =5      BYTE      properties1;                  /* masked byte */
5178      =5      BYTE      eventParameter1;              /* MSB */
5179      =5      BYTE      eventParameter2;              
5180      =5      BYTE      eventParameter3;              
5181      =5      BYTE      eventParameter4;              /* LSB */
5182      =5  } ZW_NOTIFICATION_REPORT_4BYTE_V3_FRAME;
5183      =5  
5184      =5  /************************************************************/
5185      =5  /* Notification Set V3 command class structs */             
5186      =5  /************************************************************/
5187      =5  typedef struct _ZW_NOTIFICATION_SET_V3_FRAME_
5188      =5  {
5189      =5      BYTE      cmdClass;                     /* The command class */
5190      =5      BYTE      cmd;                          /* The command */
5191      =5      BYTE      notificationType;             /**/
5192      =5      BYTE      notificationStatus;           /**/
5193      =5  } ZW_NOTIFICATION_SET_V3_FRAME;
5194      =5  
5195      =5  /************************************************************/
5196      =5  /* Notification Supported Get V3 command class structs */   
5197      =5  /************************************************************/
5198      =5  typedef struct _ZW_NOTIFICATION_SUPPORTED_GET_V3_FRAME_
5199      =5  {
5200      =5      BYTE      cmdClass;                     /* The command class */
5201      =5      BYTE      cmd;                          /* The command */
5202      =5  } ZW_NOTIFICATION_SUPPORTED_GET_V3_FRAME;
5203      =5  
5204      =5  /************************************************************/
5205      =5  /* Notification Supported Report 1byte V3 command class structs */
5206      =5  /************************************************************/
5207      =5  typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V3_FRAME_
5208      =5  {
5209      =5      BYTE      cmdClass;                     /* The command class */
5210      =5      BYTE      cmd;                          /* The command */
5211      =5      BYTE      properties1;                  /* masked byte */
5212      =5      BYTE      bitMask1;                     
5213      =5  } ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V3_FRAME;
5214      =5  
5215      =5  /************************************************************/
5216      =5  /* Notification Supported Report 2byte V3 command class structs */
5217      =5  /************************************************************/
5218      =5  typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V3_FRAME_
5219      =5  {
5220      =5      BYTE      cmdClass;                     /* The command class */
5221      =5      BYTE      cmd;                          /* The command */
5222      =5      BYTE      properties1;                  /* masked byte */
5223      =5      BYTE      bitMask1;                     /* MSB */
5224      =5      BYTE      bitMask2;                     /* LSB */
5225      =5  } ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V3_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 113 

5226      =5  
5227      =5  /************************************************************/
5228      =5  /* Notification Supported Report 3byte V3 command class structs */
5229      =5  /************************************************************/
5230      =5  typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V3_FRAME_
5231      =5  {
5232      =5      BYTE      cmdClass;                     /* The command class */
5233      =5      BYTE      cmd;                          /* The command */
5234      =5      BYTE      properties1;                  /* masked byte */
5235      =5      BYTE      bitMask1;                     /* MSB */
5236      =5      BYTE      bitMask2;                     
5237      =5      BYTE      bitMask3;                     /* LSB */
5238      =5  } ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V3_FRAME;
5239      =5  
5240      =5  /************************************************************/
5241      =5  /* Notification Supported Report 4byte V3 command class structs */
5242      =5  /************************************************************/
5243      =5  typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V3_FRAME_
5244      =5  {
5245      =5      BYTE      cmdClass;                     /* The command class */
5246      =5      BYTE      cmd;                          /* The command */
5247      =5      BYTE      properties1;                  /* masked byte */
5248      =5      BYTE      bitMask1;                     /* MSB */
5249      =5      BYTE      bitMask2;                     
5250      =5      BYTE      bitMask3;                     
5251      =5      BYTE      bitMask4;                     /* LSB */
5252      =5  } ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V3_FRAME;
5253      =5  
5254      =5  /************************************************************/
5255      =5  /* Event Supported Get V3 command class structs */          
5256      =5  /************************************************************/
5257      =5  typedef struct _ZW_EVENT_SUPPORTED_GET_V3_FRAME_
5258      =5  {
5259      =5      BYTE      cmdClass;                     /* The command class */
5260      =5      BYTE      cmd;                          /* The command */
5261      =5      BYTE      notificationType;             /**/
5262      =5  } ZW_EVENT_SUPPORTED_GET_V3_FRAME;
5263      =5  
5264      =5  /************************************************************/
5265      =5  /* Event Supported Report 1byte V3 command class structs */ 
5266      =5  /************************************************************/
5267      =5  typedef struct _ZW_EVENT_SUPPORTED_REPORT_1BYTE_V3_FRAME_
5268      =5  {
5269      =5      BYTE      cmdClass;                     /* The command class */
5270      =5      BYTE      cmd;                          /* The command */
5271      =5      BYTE      notificationType;             /**/
5272      =5      BYTE      properties1;                  /* masked byte */
5273      =5      BYTE      bitMask1;                     
5274      =5  } ZW_EVENT_SUPPORTED_REPORT_1BYTE_V3_FRAME;
5275      =5  
5276      =5  /************************************************************/
5277      =5  /* Event Supported Report 2byte V3 command class structs */ 
5278      =5  /************************************************************/
5279      =5  typedef struct _ZW_EVENT_SUPPORTED_REPORT_2BYTE_V3_FRAME_
5280      =5  {
5281      =5      BYTE      cmdClass;                     /* The command class */
5282      =5      BYTE      cmd;                          /* The command */
5283      =5      BYTE      notificationType;             /**/
5284      =5      BYTE      properties1;                  /* masked byte */
5285      =5      BYTE      bitMask1;                     /* MSB */
5286      =5      BYTE      bitMask2;                     /* LSB */
5287      =5  } ZW_EVENT_SUPPORTED_REPORT_2BYTE_V3_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 114 

5288      =5  
5289      =5  /************************************************************/
5290      =5  /* Event Supported Report 3byte V3 command class structs */ 
5291      =5  /************************************************************/
5292      =5  typedef struct _ZW_EVENT_SUPPORTED_REPORT_3BYTE_V3_FRAME_
5293      =5  {
5294      =5      BYTE      cmdClass;                     /* The command class */
5295      =5      BYTE      cmd;                          /* The command */
5296      =5      BYTE      notificationType;             /**/
5297      =5      BYTE      properties1;                  /* masked byte */
5298      =5      BYTE      bitMask1;                     /* MSB */
5299      =5      BYTE      bitMask2;                     
5300      =5      BYTE      bitMask3;                     /* LSB */
5301      =5  } ZW_EVENT_SUPPORTED_REPORT_3BYTE_V3_FRAME;
5302      =5  
5303      =5  /************************************************************/
5304      =5  /* Event Supported Report 4byte V3 command class structs */ 
5305      =5  /************************************************************/
5306      =5  typedef struct _ZW_EVENT_SUPPORTED_REPORT_4BYTE_V3_FRAME_
5307      =5  {
5308      =5      BYTE      cmdClass;                     /* The command class */
5309      =5      BYTE      cmd;                          /* The command */
5310      =5      BYTE      notificationType;             /**/
5311      =5      BYTE      properties1;                  /* masked byte */
5312      =5      BYTE      bitMask1;                     /* MSB */
5313      =5      BYTE      bitMask2;                     
5314      =5      BYTE      bitMask3;                     
5315      =5      BYTE      bitMask4;                     /* LSB */
5316      =5  } ZW_EVENT_SUPPORTED_REPORT_4BYTE_V3_FRAME;
5317      =5  
5318      =5  /************************************************************/
5319      =5  /* Application Busy command class structs */                
5320      =5  /************************************************************/
5321      =5  typedef struct _ZW_APPLICATION_BUSY_FRAME_
5322      =5  {
5323      =5      BYTE      cmdClass;                     /* The command class */
5324      =5      BYTE      cmd;                          /* The command */
5325      =5      BYTE      status;                       /*The status field*/
5326      =5      BYTE      waitTime;                     /**/
5327      =5  } ZW_APPLICATION_BUSY_FRAME;
5328      =5  
5329      =5  /************************************************************/
5330      =5  /* Application Rejected Request command class structs */    
5331      =5  /************************************************************/
5332      =5  typedef struct _ZW_APPLICATION_REJECTED_REQUEST_FRAME_
5333      =5  {
5334      =5      BYTE      cmdClass;                     /* The command class */
5335      =5      BYTE      cmd;                          /* The command */
5336      =5      BYTE      status;                       /**/
5337      =5  } ZW_APPLICATION_REJECTED_REQUEST_FRAME;
5338      =5  
5339      =5  /************************************************************/
5340      =5  /* Command Configuration Get command class structs */       
5341      =5  /************************************************************/
5342      =5  typedef struct _ZW_COMMAND_CONFIGURATION_GET_FRAME_
5343      =5  {
5344      =5      BYTE      cmdClass;                     /* The command class */
5345      =5      BYTE      cmd;                          /* The command */
5346      =5      BYTE      groupingIdentifier;           /**/
5347      =5      BYTE      nodeId;                       /**/
5348      =5  } ZW_COMMAND_CONFIGURATION_GET_FRAME;
5349      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 115 

5350      =5  /************************************************************/
5351      =5  /* Command Configuration Report 1byte command class structs */
5352      =5  /************************************************************/
5353      =5  typedef struct _ZW_COMMAND_CONFIGURATION_REPORT_1BYTE_FRAME_
5354      =5  {
5355      =5      BYTE      cmdClass;                     /* The command class */
5356      =5      BYTE      cmd;                          /* The command */
5357      =5      BYTE      groupingIdentifier;           /**/
5358      =5      BYTE      nodeId;                       /**/
5359      =5      BYTE      properties1;                  /* masked byte */
5360      =5      BYTE      commandLength;                /**/
5361      =5      BYTE      commandClassIdentifier;       /**/
5362      =5      BYTE      commandIdentifier;            /**/
5363      =5      BYTE      commandByte1;                 
5364      =5  } ZW_COMMAND_CONFIGURATION_REPORT_1BYTE_FRAME;
5365      =5  
5366      =5  /************************************************************/
5367      =5  /* Command Configuration Report 2byte command class structs */
5368      =5  /************************************************************/
5369      =5  typedef struct _ZW_COMMAND_CONFIGURATION_REPORT_2BYTE_FRAME_
5370      =5  {
5371      =5      BYTE      cmdClass;                     /* The command class */
5372      =5      BYTE      cmd;                          /* The command */
5373      =5      BYTE      groupingIdentifier;           /**/
5374      =5      BYTE      nodeId;                       /**/
5375      =5      BYTE      properties1;                  /* masked byte */
5376      =5      BYTE      commandLength;                /**/
5377      =5      BYTE      commandClassIdentifier;       /**/
5378      =5      BYTE      commandIdentifier;            /**/
5379      =5      BYTE      commandByte1;                 /* MSB */
5380      =5      BYTE      commandByte2;                 /* LSB */
5381      =5  } ZW_COMMAND_CONFIGURATION_REPORT_2BYTE_FRAME;
5382      =5  
5383      =5  /************************************************************/
5384      =5  /* Command Configuration Report 3byte command class structs */
5385      =5  /************************************************************/
5386      =5  typedef struct _ZW_COMMAND_CONFIGURATION_REPORT_3BYTE_FRAME_
5387      =5  {
5388      =5      BYTE      cmdClass;                     /* The command class */
5389      =5      BYTE      cmd;                          /* The command */
5390      =5      BYTE      groupingIdentifier;           /**/
5391      =5      BYTE      nodeId;                       /**/
5392      =5      BYTE      properties1;                  /* masked byte */
5393      =5      BYTE      commandLength;                /**/
5394      =5      BYTE      commandClassIdentifier;       /**/
5395      =5      BYTE      commandIdentifier;            /**/
5396      =5      BYTE      commandByte1;                 /* MSB */
5397      =5      BYTE      commandByte2;                 
5398      =5      BYTE      commandByte3;                 /* LSB */
5399      =5  } ZW_COMMAND_CONFIGURATION_REPORT_3BYTE_FRAME;
5400      =5  
5401      =5  /************************************************************/
5402      =5  /* Command Configuration Report 4byte command class structs */
5403      =5  /************************************************************/
5404      =5  typedef struct _ZW_COMMAND_CONFIGURATION_REPORT_4BYTE_FRAME_
5405      =5  {
5406      =5      BYTE      cmdClass;                     /* The command class */
5407      =5      BYTE      cmd;                          /* The command */
5408      =5      BYTE      groupingIdentifier;           /**/
5409      =5      BYTE      nodeId;                       /**/
5410      =5      BYTE      properties1;                  /* masked byte */
5411      =5      BYTE      commandLength;                /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 116 

5412      =5      BYTE      commandClassIdentifier;       /**/
5413      =5      BYTE      commandIdentifier;            /**/
5414      =5      BYTE      commandByte1;                 /* MSB */
5415      =5      BYTE      commandByte2;                 
5416      =5      BYTE      commandByte3;                 
5417      =5      BYTE      commandByte4;                 /* LSB */
5418      =5  } ZW_COMMAND_CONFIGURATION_REPORT_4BYTE_FRAME;
5419      =5  
5420      =5  /************************************************************/
5421      =5  /* Command Configuration Set 1byte command class structs */ 
5422      =5  /************************************************************/
5423      =5  typedef struct _ZW_COMMAND_CONFIGURATION_SET_1BYTE_FRAME_
5424      =5  {
5425      =5      BYTE      cmdClass;                     /* The command class */
5426      =5      BYTE      cmd;                          /* The command */
5427      =5      BYTE      groupingIdentifier;           /**/
5428      =5      BYTE      nodeId;                       /**/
5429      =5      BYTE      commandLength;                /**/
5430      =5      BYTE      commandClassIdentifier;       /**/
5431      =5      BYTE      commandIdentifier;            /**/
5432      =5      BYTE      commandByte1;                 
5433      =5  } ZW_COMMAND_CONFIGURATION_SET_1BYTE_FRAME;
5434      =5  
5435      =5  /************************************************************/
5436      =5  /* Command Configuration Set 2byte command class structs */ 
5437      =5  /************************************************************/
5438      =5  typedef struct _ZW_COMMAND_CONFIGURATION_SET_2BYTE_FRAME_
5439      =5  {
5440      =5      BYTE      cmdClass;                     /* The command class */
5441      =5      BYTE      cmd;                          /* The command */
5442      =5      BYTE      groupingIdentifier;           /**/
5443      =5      BYTE      nodeId;                       /**/
5444      =5      BYTE      commandLength;                /**/
5445      =5      BYTE      commandClassIdentifier;       /**/
5446      =5      BYTE      commandIdentifier;            /**/
5447      =5      BYTE      commandByte1;                 /* MSB */
5448      =5      BYTE      commandByte2;                 /* LSB */
5449      =5  } ZW_COMMAND_CONFIGURATION_SET_2BYTE_FRAME;
5450      =5  
5451      =5  /************************************************************/
5452      =5  /* Command Configuration Set 3byte command class structs */ 
5453      =5  /************************************************************/
5454      =5  typedef struct _ZW_COMMAND_CONFIGURATION_SET_3BYTE_FRAME_
5455      =5  {
5456      =5      BYTE      cmdClass;                     /* The command class */
5457      =5      BYTE      cmd;                          /* The command */
5458      =5      BYTE      groupingIdentifier;           /**/
5459      =5      BYTE      nodeId;                       /**/
5460      =5      BYTE      commandLength;                /**/
5461      =5      BYTE      commandClassIdentifier;       /**/
5462      =5      BYTE      commandIdentifier;            /**/
5463      =5      BYTE      commandByte1;                 /* MSB */
5464      =5      BYTE      commandByte2;                 
5465      =5      BYTE      commandByte3;                 /* LSB */
5466      =5  } ZW_COMMAND_CONFIGURATION_SET_3BYTE_FRAME;
5467      =5  
5468      =5  /************************************************************/
5469      =5  /* Command Configuration Set 4byte command class structs */ 
5470      =5  /************************************************************/
5471      =5  typedef struct _ZW_COMMAND_CONFIGURATION_SET_4BYTE_FRAME_
5472      =5  {
5473      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 117 

5474      =5      BYTE      cmd;                          /* The command */
5475      =5      BYTE      groupingIdentifier;           /**/
5476      =5      BYTE      nodeId;                       /**/
5477      =5      BYTE      commandLength;                /**/
5478      =5      BYTE      commandClassIdentifier;       /**/
5479      =5      BYTE      commandIdentifier;            /**/
5480      =5      BYTE      commandByte1;                 /* MSB */
5481      =5      BYTE      commandByte2;                 
5482      =5      BYTE      commandByte3;                 
5483      =5      BYTE      commandByte4;                 /* LSB */
5484      =5  } ZW_COMMAND_CONFIGURATION_SET_4BYTE_FRAME;
5485      =5  
5486      =5  /************************************************************/
5487      =5  /* Command Records Supported Get command class structs */   
5488      =5  /************************************************************/
5489      =5  typedef struct _ZW_COMMAND_RECORDS_SUPPORTED_GET_FRAME_
5490      =5  {
5491      =5      BYTE      cmdClass;                     /* The command class */
5492      =5      BYTE      cmd;                          /* The command */
5493      =5  } ZW_COMMAND_RECORDS_SUPPORTED_GET_FRAME;
5494      =5  
5495      =5  /************************************************************/
5496      =5  /* Command Records Supported Report command class structs */
5497      =5  /************************************************************/
5498      =5  typedef struct _ZW_COMMAND_RECORDS_SUPPORTED_REPORT_FRAME_
5499      =5  {
5500      =5      BYTE      cmdClass;                     /* The command class */
5501      =5      BYTE      cmd;                          /* The command */
5502      =5      BYTE      properties1;                  /* masked byte */
5503      =5      BYTE      freeCommandRecords1;          /* MSB */
5504      =5      BYTE      freeCommandRecords2;          /* LSB */
5505      =5      BYTE      maxCommandRecords1;           /* MSB */
5506      =5      BYTE      maxCommandRecords2;           /* LSB */
5507      =5  } ZW_COMMAND_RECORDS_SUPPORTED_REPORT_FRAME;
5508      =5  
5509      =5  /************************************************************/
5510      =5  /* Association Get command class structs */                 
5511      =5  /************************************************************/
5512      =5  typedef struct _ZW_ASSOCIATION_GET_FRAME_
5513      =5  {
5514      =5      BYTE      cmdClass;                     /* The command class */
5515      =5      BYTE      cmd;                          /* The command */
5516      =5      BYTE      groupingIdentifier;           /**/
5517      =5  } ZW_ASSOCIATION_GET_FRAME;
5518      =5  
5519      =5  /************************************************************/
5520      =5  /* Association Groupings Get command class structs */       
5521      =5  /************************************************************/
5522      =5  typedef struct _ZW_ASSOCIATION_GROUPINGS_GET_FRAME_
5523      =5  {
5524      =5      BYTE      cmdClass;                     /* The command class */
5525      =5      BYTE      cmd;                          /* The command */
5526      =5  } ZW_ASSOCIATION_GROUPINGS_GET_FRAME;
5527      =5  
5528      =5  /************************************************************/
5529      =5  /* Association Groupings Report command class structs */    
5530      =5  /************************************************************/
5531      =5  typedef struct _ZW_ASSOCIATION_GROUPINGS_REPORT_FRAME_
5532      =5  {
5533      =5      BYTE      cmdClass;                     /* The command class */
5534      =5      BYTE      cmd;                          /* The command */
5535      =5      BYTE      supportedGroupings;           /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 118 

5536      =5  } ZW_ASSOCIATION_GROUPINGS_REPORT_FRAME;
5537      =5  
5538      =5  /************************************************************/
5539      =5  /* Association Remove 1byte command class structs */        
5540      =5  /************************************************************/
5541      =5  typedef struct _ZW_ASSOCIATION_REMOVE_1BYTE_FRAME_
5542      =5  {
5543      =5      BYTE      cmdClass;                     /* The command class */
5544      =5      BYTE      cmd;                          /* The command */
5545      =5      BYTE      groupingIdentifier;           /**/
5546      =5      BYTE      nodeId1;                      
5547      =5  } ZW_ASSOCIATION_REMOVE_1BYTE_FRAME;
5548      =5  
5549      =5  /************************************************************/
5550      =5  /* Association Remove 2byte command class structs */        
5551      =5  /************************************************************/
5552      =5  typedef struct _ZW_ASSOCIATION_REMOVE_2BYTE_FRAME_
5553      =5  {
5554      =5      BYTE      cmdClass;                     /* The command class */
5555      =5      BYTE      cmd;                          /* The command */
5556      =5      BYTE      groupingIdentifier;           /**/
5557      =5      BYTE      nodeId1;                      /* MSB */
5558      =5      BYTE      nodeId2;                      /* LSB */
5559      =5  } ZW_ASSOCIATION_REMOVE_2BYTE_FRAME;
5560      =5  
5561      =5  /************************************************************/
5562      =5  /* Association Remove 3byte command class structs */        
5563      =5  /************************************************************/
5564      =5  typedef struct _ZW_ASSOCIATION_REMOVE_3BYTE_FRAME_
5565      =5  {
5566      =5      BYTE      cmdClass;                     /* The command class */
5567      =5      BYTE      cmd;                          /* The command */
5568      =5      BYTE      groupingIdentifier;           /**/
5569      =5      BYTE      nodeId1;                      /* MSB */
5570      =5      BYTE      nodeId2;                      
5571      =5      BYTE      nodeId3;                      /* LSB */
5572      =5  } ZW_ASSOCIATION_REMOVE_3BYTE_FRAME;
5573      =5  
5574      =5  /************************************************************/
5575      =5  /* Association Remove 4byte command class structs */        
5576      =5  /************************************************************/
5577      =5  typedef struct _ZW_ASSOCIATION_REMOVE_4BYTE_FRAME_
5578      =5  {
5579      =5      BYTE      cmdClass;                     /* The command class */
5580      =5      BYTE      cmd;                          /* The command */
5581      =5      BYTE      groupingIdentifier;           /**/
5582      =5      BYTE      nodeId1;                      /* MSB */
5583      =5      BYTE      nodeId2;                      
5584      =5      BYTE      nodeId3;                      
5585      =5      BYTE      nodeId4;                      /* LSB */
5586      =5  } ZW_ASSOCIATION_REMOVE_4BYTE_FRAME;
5587      =5  
5588      =5  /************************************************************/
5589      =5  /* Association Report 1byte command class structs */        
5590      =5  /************************************************************/
5591      =5  typedef struct _ZW_ASSOCIATION_REPORT_1BYTE_FRAME_
5592      =5  {
5593      =5      BYTE      cmdClass;                     /* The command class */
5594      =5      BYTE      cmd;                          /* The command */
5595      =5      BYTE      groupingIdentifier;           /**/
5596      =5      BYTE      maxNodesSupported;            /**/
5597      =5      BYTE      reportsToFollow;              /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 119 

5598      =5      BYTE      nodeid1;                      
5599      =5  } ZW_ASSOCIATION_REPORT_1BYTE_FRAME;
5600      =5  
5601      =5  /************************************************************/
5602      =5  /* Association Report 2byte command class structs */        
5603      =5  /************************************************************/
5604      =5  typedef struct _ZW_ASSOCIATION_REPORT_2BYTE_FRAME_
5605      =5  {
5606      =5      BYTE      cmdClass;                     /* The command class */
5607      =5      BYTE      cmd;                          /* The command */
5608      =5      BYTE      groupingIdentifier;           /**/
5609      =5      BYTE      maxNodesSupported;            /**/
5610      =5      BYTE      reportsToFollow;              /**/
5611      =5      BYTE      nodeid1;                      /* MSB */
5612      =5      BYTE      nodeid2;                      /* LSB */
5613      =5  } ZW_ASSOCIATION_REPORT_2BYTE_FRAME;
5614      =5  
5615      =5  /************************************************************/
5616      =5  /* Association Report 3byte command class structs */        
5617      =5  /************************************************************/
5618      =5  typedef struct _ZW_ASSOCIATION_REPORT_3BYTE_FRAME_
5619      =5  {
5620      =5      BYTE      cmdClass;                     /* The command class */
5621      =5      BYTE      cmd;                          /* The command */
5622      =5      BYTE      groupingIdentifier;           /**/
5623      =5      BYTE      maxNodesSupported;            /**/
5624      =5      BYTE      reportsToFollow;              /**/
5625      =5      BYTE      nodeid1;                      /* MSB */
5626      =5      BYTE      nodeid2;                      
5627      =5      BYTE      nodeid3;                      /* LSB */
5628      =5  } ZW_ASSOCIATION_REPORT_3BYTE_FRAME;
5629      =5  
5630      =5  /************************************************************/
5631      =5  /* Association Report 4byte command class structs */        
5632      =5  /************************************************************/
5633      =5  typedef struct _ZW_ASSOCIATION_REPORT_4BYTE_FRAME_
5634      =5  {
5635      =5      BYTE      cmdClass;                     /* The command class */
5636      =5      BYTE      cmd;                          /* The command */
5637      =5      BYTE      groupingIdentifier;           /**/
5638      =5      BYTE      maxNodesSupported;            /**/
5639      =5      BYTE      reportsToFollow;              /**/
5640      =5      BYTE      nodeid1;                      /* MSB */
5641      =5      BYTE      nodeid2;                      
5642      =5      BYTE      nodeid3;                      
5643      =5      BYTE      nodeid4;                      /* LSB */
5644      =5  } ZW_ASSOCIATION_REPORT_4BYTE_FRAME;
5645      =5  
5646      =5  /************************************************************/
5647      =5  /* Association Set 1byte command class structs */           
5648      =5  /************************************************************/
5649      =5  typedef struct _ZW_ASSOCIATION_SET_1BYTE_FRAME_
5650      =5  {
5651      =5      BYTE      cmdClass;                     /* The command class */
5652      =5      BYTE      cmd;                          /* The command */
5653      =5      BYTE      groupingIdentifier;           /**/
5654      =5      BYTE      nodeId1;                      
5655      =5  } ZW_ASSOCIATION_SET_1BYTE_FRAME;
5656      =5  
5657      =5  /************************************************************/
5658      =5  /* Association Set 2byte command class structs */           
5659      =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 120 

5660      =5  typedef struct _ZW_ASSOCIATION_SET_2BYTE_FRAME_
5661      =5  {
5662      =5      BYTE      cmdClass;                     /* The command class */
5663      =5      BYTE      cmd;                          /* The command */
5664      =5      BYTE      groupingIdentifier;           /**/
5665      =5      BYTE      nodeId1;                      /* MSB */
5666      =5      BYTE      nodeId2;                      /* LSB */
5667      =5  } ZW_ASSOCIATION_SET_2BYTE_FRAME;
5668      =5  
5669      =5  /************************************************************/
5670      =5  /* Association Set 3byte command class structs */           
5671      =5  /************************************************************/
5672      =5  typedef struct _ZW_ASSOCIATION_SET_3BYTE_FRAME_
5673      =5  {
5674      =5      BYTE      cmdClass;                     /* The command class */
5675      =5      BYTE      cmd;                          /* The command */
5676      =5      BYTE      groupingIdentifier;           /**/
5677      =5      BYTE      nodeId1;                      /* MSB */
5678      =5      BYTE      nodeId2;                      
5679      =5      BYTE      nodeId3;                      /* LSB */
5680      =5  } ZW_ASSOCIATION_SET_3BYTE_FRAME;
5681      =5  
5682      =5  /************************************************************/
5683      =5  /* Association Set 4byte command class structs */           
5684      =5  /************************************************************/
5685      =5  typedef struct _ZW_ASSOCIATION_SET_4BYTE_FRAME_
5686      =5  {
5687      =5      BYTE      cmdClass;                     /* The command class */
5688      =5      BYTE      cmd;                          /* The command */
5689      =5      BYTE      groupingIdentifier;           /**/
5690      =5      BYTE      nodeId1;                      /* MSB */
5691      =5      BYTE      nodeId2;                      
5692      =5      BYTE      nodeId3;                      
5693      =5      BYTE      nodeId4;                      /* LSB */
5694      =5  } ZW_ASSOCIATION_SET_4BYTE_FRAME;
5695      =5  
5696      =5  /************************************************************/
5697      =5  /* Association Get V2 command class structs */              
5698      =5  /************************************************************/
5699      =5  typedef struct _ZW_ASSOCIATION_GET_V2_FRAME_
5700      =5  {
5701      =5      BYTE      cmdClass;                     /* The command class */
5702      =5      BYTE      cmd;                          /* The command */
5703      =5      BYTE      groupingIdentifier;           /**/
5704      =5  } ZW_ASSOCIATION_GET_V2_FRAME;
5705      =5  
5706      =5  /************************************************************/
5707      =5  /* Association Groupings Get V2 command class structs */    
5708      =5  /************************************************************/
5709      =5  typedef struct _ZW_ASSOCIATION_GROUPINGS_GET_V2_FRAME_
5710      =5  {
5711      =5      BYTE      cmdClass;                     /* The command class */
5712      =5      BYTE      cmd;                          /* The command */
5713      =5  } ZW_ASSOCIATION_GROUPINGS_GET_V2_FRAME;
5714      =5  
5715      =5  /************************************************************/
5716      =5  /* Association Groupings Report V2 command class structs */ 
5717      =5  /************************************************************/
5718      =5  typedef struct _ZW_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME_
5719      =5  {
5720      =5      BYTE      cmdClass;                     /* The command class */
5721      =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 121 

5722      =5      BYTE      supportedGroupings;           /**/
5723      =5  } ZW_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME;
5724      =5  
5725      =5  /************************************************************/
5726      =5  /* Association Remove 1byte V2 command class structs */     
5727      =5  /************************************************************/
5728      =5  typedef struct _ZW_ASSOCIATION_REMOVE_1BYTE_V2_FRAME_
5729      =5  {
5730      =5      BYTE      cmdClass;                     /* The command class */
5731      =5      BYTE      cmd;                          /* The command */
5732      =5      BYTE      groupingIdentifier;           /**/
5733      =5      BYTE      nodeId1;                      
5734      =5  } ZW_ASSOCIATION_REMOVE_1BYTE_V2_FRAME;
5735      =5  
5736      =5  /************************************************************/
5737      =5  /* Association Remove 2byte V2 command class structs */     
5738      =5  /************************************************************/
5739      =5  typedef struct _ZW_ASSOCIATION_REMOVE_2BYTE_V2_FRAME_
5740      =5  {
5741      =5      BYTE      cmdClass;                     /* The command class */
5742      =5      BYTE      cmd;                          /* The command */
5743      =5      BYTE      groupingIdentifier;           /**/
5744      =5      BYTE      nodeId1;                      /* MSB */
5745      =5      BYTE      nodeId2;                      /* LSB */
5746      =5  } ZW_ASSOCIATION_REMOVE_2BYTE_V2_FRAME;
5747      =5  
5748      =5  /************************************************************/
5749      =5  /* Association Remove 3byte V2 command class structs */     
5750      =5  /************************************************************/
5751      =5  typedef struct _ZW_ASSOCIATION_REMOVE_3BYTE_V2_FRAME_
5752      =5  {
5753      =5      BYTE      cmdClass;                     /* The command class */
5754      =5      BYTE      cmd;                          /* The command */
5755      =5      BYTE      groupingIdentifier;           /**/
5756      =5      BYTE      nodeId1;                      /* MSB */
5757      =5      BYTE      nodeId2;                      
5758      =5      BYTE      nodeId3;                      /* LSB */
5759      =5  } ZW_ASSOCIATION_REMOVE_3BYTE_V2_FRAME;
5760      =5  
5761      =5  /************************************************************/
5762      =5  /* Association Remove 4byte V2 command class structs */     
5763      =5  /************************************************************/
5764      =5  typedef struct _ZW_ASSOCIATION_REMOVE_4BYTE_V2_FRAME_
5765      =5  {
5766      =5      BYTE      cmdClass;                     /* The command class */
5767      =5      BYTE      cmd;                          /* The command */
5768      =5      BYTE      groupingIdentifier;           /**/
5769      =5      BYTE      nodeId1;                      /* MSB */
5770      =5      BYTE      nodeId2;                      
5771      =5      BYTE      nodeId3;                      
5772      =5      BYTE      nodeId4;                      /* LSB */
5773      =5  } ZW_ASSOCIATION_REMOVE_4BYTE_V2_FRAME;
5774      =5  
5775      =5  /************************************************************/
5776      =5  /* Association Report 1byte V2 command class structs */     
5777      =5  /************************************************************/
5778      =5  typedef struct _ZW_ASSOCIATION_REPORT_1BYTE_V2_FRAME_
5779      =5  {
5780      =5      BYTE      cmdClass;                     /* The command class */
5781      =5      BYTE      cmd;                          /* The command */
5782      =5      BYTE      groupingIdentifier;           /**/
5783      =5      BYTE      maxNodesSupported;            /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 122 

5784      =5      BYTE      reportsToFollow;              /**/
5785      =5      BYTE      nodeid1;                      
5786      =5  } ZW_ASSOCIATION_REPORT_1BYTE_V2_FRAME;
5787      =5  
5788      =5  /************************************************************/
5789      =5  /* Association Report 2byte V2 command class structs */     
5790      =5  /************************************************************/
5791      =5  typedef struct _ZW_ASSOCIATION_REPORT_2BYTE_V2_FRAME_
5792      =5  {
5793      =5      BYTE      cmdClass;                     /* The command class */
5794      =5      BYTE      cmd;                          /* The command */
5795      =5      BYTE      groupingIdentifier;           /**/
5796      =5      BYTE      maxNodesSupported;            /**/
5797      =5      BYTE      reportsToFollow;              /**/
5798      =5      BYTE      nodeid1;                      /* MSB */
5799      =5      BYTE      nodeid2;                      /* LSB */
5800      =5  } ZW_ASSOCIATION_REPORT_2BYTE_V2_FRAME;
5801      =5  
5802      =5  /************************************************************/
5803      =5  /* Association Report 3byte V2 command class structs */     
5804      =5  /************************************************************/
5805      =5  typedef struct _ZW_ASSOCIATION_REPORT_3BYTE_V2_FRAME_
5806      =5  {
5807      =5      BYTE      cmdClass;                     /* The command class */
5808      =5      BYTE      cmd;                          /* The command */
5809      =5      BYTE      groupingIdentifier;           /**/
5810      =5      BYTE      maxNodesSupported;            /**/
5811      =5      BYTE      reportsToFollow;              /**/
5812      =5      BYTE      nodeid1;                      /* MSB */
5813      =5      BYTE      nodeid2;                      
5814      =5      BYTE      nodeid3;                      /* LSB */
5815      =5  } ZW_ASSOCIATION_REPORT_3BYTE_V2_FRAME;
5816      =5  
5817      =5  /************************************************************/
5818      =5  /* Association Report 4byte V2 command class structs */     
5819      =5  /************************************************************/
5820      =5  typedef struct _ZW_ASSOCIATION_REPORT_4BYTE_V2_FRAME_
5821      =5  {
5822      =5      BYTE      cmdClass;                     /* The command class */
5823      =5      BYTE      cmd;                          /* The command */
5824      =5      BYTE      groupingIdentifier;           /**/
5825      =5      BYTE      maxNodesSupported;            /**/
5826      =5      BYTE      reportsToFollow;              /**/
5827      =5      BYTE      nodeid1;                      /* MSB */
5828      =5      BYTE      nodeid2;                      
5829      =5      BYTE      nodeid3;                      
5830      =5      BYTE      nodeid4;                      /* LSB */
5831      =5  } ZW_ASSOCIATION_REPORT_4BYTE_V2_FRAME;
5832      =5  
5833      =5  /************************************************************/
5834      =5  /* Association Set 1byte V2 command class structs */        
5835      =5  /************************************************************/
5836      =5  typedef struct _ZW_ASSOCIATION_SET_1BYTE_V2_FRAME_
5837      =5  {
5838      =5      BYTE      cmdClass;                     /* The command class */
5839      =5      BYTE      cmd;                          /* The command */
5840      =5      BYTE      groupingIdentifier;           /**/
5841      =5      BYTE      nodeId1;                      
5842      =5  } ZW_ASSOCIATION_SET_1BYTE_V2_FRAME;
5843      =5  
5844      =5  /************************************************************/
5845      =5  /* Association Set 2byte V2 command class structs */        
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 123 

5846      =5  /************************************************************/
5847      =5  typedef struct _ZW_ASSOCIATION_SET_2BYTE_V2_FRAME_
5848      =5  {
5849      =5      BYTE      cmdClass;                     /* The command class */
5850      =5      BYTE      cmd;                          /* The command */
5851      =5      BYTE      groupingIdentifier;           /**/
5852      =5      BYTE      nodeId1;                      /* MSB */
5853      =5      BYTE      nodeId2;                      /* LSB */
5854      =5  } ZW_ASSOCIATION_SET_2BYTE_V2_FRAME;
5855      =5  
5856      =5  /************************************************************/
5857      =5  /* Association Set 3byte V2 command class structs */        
5858      =5  /************************************************************/
5859      =5  typedef struct _ZW_ASSOCIATION_SET_3BYTE_V2_FRAME_
5860      =5  {
5861      =5      BYTE      cmdClass;                     /* The command class */
5862      =5      BYTE      cmd;                          /* The command */
5863      =5      BYTE      groupingIdentifier;           /**/
5864      =5      BYTE      nodeId1;                      /* MSB */
5865      =5      BYTE      nodeId2;                      
5866      =5      BYTE      nodeId3;                      /* LSB */
5867      =5  } ZW_ASSOCIATION_SET_3BYTE_V2_FRAME;
5868      =5  
5869      =5  /************************************************************/
5870      =5  /* Association Set 4byte V2 command class structs */        
5871      =5  /************************************************************/
5872      =5  typedef struct _ZW_ASSOCIATION_SET_4BYTE_V2_FRAME_
5873      =5  {
5874      =5      BYTE      cmdClass;                     /* The command class */
5875      =5      BYTE      cmd;                          /* The command */
5876      =5      BYTE      groupingIdentifier;           /**/
5877      =5      BYTE      nodeId1;                      /* MSB */
5878      =5      BYTE      nodeId2;                      
5879      =5      BYTE      nodeId3;                      
5880      =5      BYTE      nodeId4;                      /* LSB */
5881      =5  } ZW_ASSOCIATION_SET_4BYTE_V2_FRAME;
5882      =5  
5883      =5  /************************************************************/
5884      =5  /* Association Specific Group Get V2 command class structs */
5885      =5  /************************************************************/
5886      =5  typedef struct _ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V2_FRAME_
5887      =5  {
5888      =5      BYTE      cmdClass;                     /* The command class */
5889      =5      BYTE      cmd;                          /* The command */
5890      =5  } ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V2_FRAME;
5891      =5  
5892      =5  /************************************************************/
5893      =5  /* Association Specific Group Report V2 command class structs */
5894      =5  /************************************************************/
5895      =5  typedef struct _ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V2_FRAME_
5896      =5  {
5897      =5      BYTE      cmdClass;                     /* The command class */
5898      =5      BYTE      cmd;                          /* The command */
5899      =5      BYTE      group;                        /**/
5900      =5  } ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V2_FRAME;
5901      =5  
5902      =5  /************************************************************/
5903      =5  /* Av Content Browse Md By Letter Get command class structs */
5904      =5  /************************************************************/
5905      =5  typedef struct _ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_GET_FRAME_
5906      =5  {
5907      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 124 

5908      =5      BYTE      cmd;                          /* The command */
5909      =5  } ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_GET_FRAME;
5910      =5  
5911      =5  /************************************************************/
5912      =5  /* Av Content Browse Md By Letter Report command class structs */
5913      =5  /************************************************************/
5914      =5  typedef struct _ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT_FRAME_
5915      =5  {
5916      =5      BYTE      cmdClass;                     /* The command class */
5917      =5      BYTE      cmd;                          /* The command */
5918      =5  } ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT_FRAME;
5919      =5  
5920      =5  /************************************************************/
5921      =5  /* Av Content Browse Md Child Count Get command class structs */
5922      =5  /************************************************************/
5923      =5  typedef struct _ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET_FRAME_
5924      =5  {
5925      =5      BYTE      cmdClass;                     /* The command class */
5926      =5      BYTE      cmd;                          /* The command */
5927      =5  } ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET_FRAME;
5928      =5  
5929      =5  /************************************************************/
5930      =5  /* Av Content Browse Md Child Count Report command class structs */
5931      =5  /************************************************************/
5932      =5  typedef struct _ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT_FRAME_
5933      =5  {
5934      =5      BYTE      cmdClass;                     /* The command class */
5935      =5      BYTE      cmd;                          /* The command */
5936      =5  } ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT_FRAME;
5937      =5  
5938      =5  /************************************************************/
5939      =5  /* Av Content Browse Md Get command class structs */        
5940      =5  /************************************************************/
5941      =5  typedef struct _ZW_AV_CONTENT_BROWSE_MD_GET_FRAME_
5942      =5  {
5943      =5      BYTE      cmdClass;                     /* The command class */
5944      =5      BYTE      cmd;                          /* The command */
5945      =5  } ZW_AV_CONTENT_BROWSE_MD_GET_FRAME;
5946      =5  
5947      =5  /************************************************************/
5948      =5  /* Av Content Browse Md Report command class structs */     
5949      =5  /************************************************************/
5950      =5  typedef struct _ZW_AV_CONTENT_BROWSE_MD_REPORT_FRAME_
5951      =5  {
5952      =5      BYTE      cmdClass;                     /* The command class */
5953      =5      BYTE      cmd;                          /* The command */
5954      =5  } ZW_AV_CONTENT_BROWSE_MD_REPORT_FRAME;
5955      =5  
5956      =5  /************************************************************/
5957      =5  /* Av Match Item To Renderer Md Get command class structs */
5958      =5  /************************************************************/
5959      =5  typedef struct _ZW_AV_MATCH_ITEM_TO_RENDERER_MD_GET_FRAME_
5960      =5  {
5961      =5      BYTE      cmdClass;                     /* The command class */
5962      =5      BYTE      cmd;                          /* The command */
5963      =5  } ZW_AV_MATCH_ITEM_TO_RENDERER_MD_GET_FRAME;
5964      =5  
5965      =5  /************************************************************/
5966      =5  /* Av Match Item To Renderer Md Report command class structs */
5967      =5  /************************************************************/
5968      =5  typedef struct _ZW_AV_MATCH_ITEM_TO_RENDERER_MD_REPORT_FRAME_
5969      =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 125 

5970      =5      BYTE      cmdClass;                     /* The command class */
5971      =5      BYTE      cmd;                          /* The command */
5972      =5  } ZW_AV_MATCH_ITEM_TO_RENDERER_MD_REPORT_FRAME;
5973      =5  
5974      =5  /************************************************************/
5975      =5  /* Av Content Search Md Get command class structs */        
5976      =5  /************************************************************/
5977      =5  typedef struct _ZW_AV_CONTENT_SEARCH_MD_GET_FRAME_
5978      =5  {
5979      =5      BYTE      cmdClass;                     /* The command class */
5980      =5      BYTE      cmd;                          /* The command */
5981      =5  } ZW_AV_CONTENT_SEARCH_MD_GET_FRAME;
5982      =5  
5983      =5  /************************************************************/
5984      =5  /* Av Content Search Md Report command class structs */     
5985      =5  /************************************************************/
5986      =5  typedef struct _ZW_AV_CONTENT_SEARCH_MD_REPORT_FRAME_
5987      =5  {
5988      =5      BYTE      cmdClass;                     /* The command class */
5989      =5      BYTE      cmd;                          /* The command */
5990      =5  } ZW_AV_CONTENT_SEARCH_MD_REPORT_FRAME;
5991      =5  
5992      =5  /************************************************************/
5993      =5  /* Av Renderer Status Get command class structs */          
5994      =5  /************************************************************/
5995      =5  typedef struct _ZW_AV_RENDERER_STATUS_GET_FRAME_
5996      =5  {
5997      =5      BYTE      cmdClass;                     /* The command class */
5998      =5      BYTE      cmd;                          /* The command */
5999      =5  } ZW_AV_RENDERER_STATUS_GET_FRAME;
6000      =5  
6001      =5  /************************************************************/
6002      =5  /* Av Renderer Status Report command class structs */       
6003      =5  /************************************************************/
6004      =5  typedef struct _ZW_AV_RENDERER_STATUS_REPORT_FRAME_
6005      =5  {
6006      =5      BYTE      cmdClass;                     /* The command class */
6007      =5      BYTE      cmd;                          /* The command */
6008      =5  } ZW_AV_RENDERER_STATUS_REPORT_FRAME;
6009      =5  
6010      =5  /************************************************************/
6011      =5  /* Av Tagging Md Get command class structs */               
6012      =5  /************************************************************/
6013      =5  typedef struct _ZW_AV_TAGGING_MD_GET_FRAME_
6014      =5  {
6015      =5      BYTE      cmdClass;                     /* The command class */
6016      =5      BYTE      cmd;                          /* The command */
6017      =5  } ZW_AV_TAGGING_MD_GET_FRAME;
6018      =5  
6019      =5  /************************************************************/
6020      =5  /* Av Tagging Md Report command class structs */            
6021      =5  /************************************************************/
6022      =5  typedef struct _ZW_AV_TAGGING_MD_REPORT_FRAME_
6023      =5  {
6024      =5      BYTE      cmdClass;                     /* The command class */
6025      =5      BYTE      cmd;                          /* The command */
6026      =5  } ZW_AV_TAGGING_MD_REPORT_FRAME;
6027      =5  
6028      =5  /************************************************************/
6029      =5  /* Basic Tariff Info Get command class structs */           
6030      =5  /************************************************************/
6031      =5  typedef struct _ZW_BASIC_TARIFF_INFO_GET_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 126 

6032      =5  {
6033      =5      BYTE      cmdClass;                     /* The command class */
6034      =5      BYTE      cmd;                          /* The command */
6035      =5  } ZW_BASIC_TARIFF_INFO_GET_FRAME;
6036      =5  
6037      =5  /************************************************************/
6038      =5  /* Basic Tariff Info Report command class structs */        
6039      =5  /************************************************************/
6040      =5  typedef struct _ZW_BASIC_TARIFF_INFO_REPORT_FRAME_
6041      =5  {
6042      =5      BYTE      cmdClass;                     /* The command class */
6043      =5      BYTE      cmd;                          /* The command */
6044      =5      BYTE      properties1;                  /* masked byte */
6045      =5      BYTE      properties2;                  /* masked byte */
6046      =5      BYTE      e1RateConsumptionRegister1;   /* MSB */
6047      =5      BYTE      e1RateConsumptionRegister2;   
6048      =5      BYTE      e1RateConsumptionRegister3;   
6049      =5      BYTE      e1RateConsumptionRegister4;   /* LSB */
6050      =5      BYTE      e1TimeForNextRateHours;       /**/
6051      =5      BYTE      e1TimeForNextRateMinutes;     /**/
6052      =5      BYTE      e1TimeForNextRateSeconds;     /**/
6053      =5      BYTE      properties3;                  /* masked byte */
6054      =5      BYTE      e2RateConsumptionRegister1;   /* MSB */
6055      =5      BYTE      e2RateConsumptionRegister2;   
6056      =5      BYTE      e2RateConsumptionRegister3;   
6057      =5      BYTE      e2RateConsumptionRegister4;   /* LSB */
6058      =5  } ZW_BASIC_TARIFF_INFO_REPORT_FRAME;
6059      =5  
6060      =5  /************************************************************/
6061      =5  /* Basic Window Covering Start Level Change command class structs */
6062      =5  /************************************************************/
6063      =5  typedef struct _ZW_BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_FRAME_
6064      =5  {
6065      =5      BYTE      cmdClass;                     /* The command class */
6066      =5      BYTE      cmd;                          /* The command */
6067      =5      BYTE      level;                        /* masked byte */
6068      =5  } ZW_BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_FRAME;
6069      =5  
6070      =5  /************************************************************/
6071      =5  /* Basic Window Covering Stop Level Change command class structs */
6072      =5  /************************************************************/
6073      =5  typedef struct _ZW_BASIC_WINDOW_COVERING_STOP_LEVEL_CHANGE_FRAME_
6074      =5  {
6075      =5      BYTE      cmdClass;                     /* The command class */
6076      =5      BYTE      cmd;                          /* The command */
6077      =5  } ZW_BASIC_WINDOW_COVERING_STOP_LEVEL_CHANGE_FRAME;
6078      =5  
6079      =5  /************************************************************/
6080      =5  /* Basic Get command class structs */                       
6081      =5  /************************************************************/
6082      =5  typedef struct _ZW_BASIC_GET_FRAME_
6083      =5  {
6084      =5      BYTE      cmdClass;                     /* The command class */
6085      =5      BYTE      cmd;                          /* The command */
6086      =5  } ZW_BASIC_GET_FRAME;
6087      =5  
6088      =5  /************************************************************/
6089      =5  /* Basic Report command class structs */                    
6090      =5  /************************************************************/
6091      =5  typedef struct _ZW_BASIC_REPORT_FRAME_
6092      =5  {
6093      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 127 

6094      =5      BYTE      cmd;                          /* The command */
6095      =5      BYTE      value;                        /**/
6096      =5  } ZW_BASIC_REPORT_FRAME;
6097      =5  
6098      =5  /************************************************************/
6099      =5  /* Basic Set command class structs */                       
6100      =5  /************************************************************/
6101      =5  typedef struct _ZW_BASIC_SET_FRAME_
6102      =5  {
6103      =5      BYTE      cmdClass;                     /* The command class */
6104      =5      BYTE      cmd;                          /* The command */
6105      =5      BYTE      value;                        /**/
6106      =5  } ZW_BASIC_SET_FRAME;
6107      =5  
6108      =5  /************************************************************/
6109      =5  /* Battery Get command class structs */                     
6110      =5  /************************************************************/
6111      =5  typedef struct _ZW_BATTERY_GET_FRAME_
6112      =5  {
6113      =5      BYTE      cmdClass;                     /* The command class */
6114      =5      BYTE      cmd;                          /* The command */
6115      =5  } ZW_BATTERY_GET_FRAME;
6116      =5  
6117      =5  /************************************************************/
6118      =5  /* Battery Report command class structs */                  
6119      =5  /************************************************************/
6120      =5  typedef struct _ZW_BATTERY_REPORT_FRAME_
6121      =5  {
6122      =5      BYTE      cmdClass;                     /* The command class */
6123      =5      BYTE      cmd;                          /* The command */
6124      =5      BYTE      batteryLevel;                 /**/
6125      =5  } ZW_BATTERY_REPORT_FRAME;
6126      =5  
6127      =5  /************************************************************/
6128      =5  /* Chimney Fan Alarm Log Get command class structs */       
6129      =5  /************************************************************/
6130      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_LOG_GET_FRAME_
6131      =5  {
6132      =5      BYTE      cmdClass;                     /* The command class */
6133      =5      BYTE      cmd;                          /* The command */
6134      =5  } ZW_CHIMNEY_FAN_ALARM_LOG_GET_FRAME;
6135      =5  
6136      =5  /************************************************************/
6137      =5  /* Chimney Fan Alarm Log Report command class structs */    
6138      =5  /************************************************************/
6139      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_LOG_REPORT_FRAME_
6140      =5  {
6141      =5      BYTE      cmdClass;                     /* The command class */
6142      =5      BYTE      cmd;                          /* The command */
6143      =5      BYTE      alarmEvent1;                  /* masked byte */
6144      =5      BYTE      alarmEvent2;                  /* masked byte */
6145      =5      BYTE      alarmEvent3;                  /* masked byte */
6146      =5      BYTE      alarmEvent4;                  /* masked byte */
6147      =5      BYTE      alarmEvent5;                  /* masked byte */
6148      =5  } ZW_CHIMNEY_FAN_ALARM_LOG_REPORT_FRAME;
6149      =5  
6150      =5  /************************************************************/
6151      =5  /* Chimney Fan Alarm Log Set command class structs */       
6152      =5  /************************************************************/
6153      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_LOG_SET_FRAME_
6154      =5  {
6155      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 128 

6156      =5      BYTE      cmd;                          /* The command */
6157      =5      BYTE      message;                      /**/
6158      =5  } ZW_CHIMNEY_FAN_ALARM_LOG_SET_FRAME;
6159      =5  
6160      =5  /************************************************************/
6161      =5  /* Chimney Fan Alarm Status Get command class structs */    
6162      =5  /************************************************************/
6163      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_STATUS_GET_FRAME_
6164      =5  {
6165      =5      BYTE      cmdClass;                     /* The command class */
6166      =5      BYTE      cmd;                          /* The command */
6167      =5  } ZW_CHIMNEY_FAN_ALARM_STATUS_GET_FRAME;
6168      =5  
6169      =5  /************************************************************/
6170      =5  /* Chimney Fan Alarm Status Report command class structs */ 
6171      =5  /************************************************************/
6172      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_STATUS_REPORT_FRAME_
6173      =5  {
6174      =5      BYTE      cmdClass;                     /* The command class */
6175      =5      BYTE      cmd;                          /* The command */
6176      =5      BYTE      alarmStatus;                  /* masked byte */
6177      =5  } ZW_CHIMNEY_FAN_ALARM_STATUS_REPORT_FRAME;
6178      =5  
6179      =5  /************************************************************/
6180      =5  /* Chimney Fan Alarm Status Set command class structs */    
6181      =5  /************************************************************/
6182      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_STATUS_SET_FRAME_
6183      =5  {
6184      =5      BYTE      cmdClass;                     /* The command class */
6185      =5      BYTE      cmd;                          /* The command */
6186      =5      BYTE      message;                      /* masked byte */
6187      =5  } ZW_CHIMNEY_FAN_ALARM_STATUS_SET_FRAME;
6188      =5  
6189      =5  /************************************************************/
6190      =5  /* Chimney Fan Alarm Temp Get command class structs */      
6191      =5  /************************************************************/
6192      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_GET_FRAME_
6193      =5  {
6194      =5      BYTE      cmdClass;                     /* The command class */
6195      =5      BYTE      cmd;                          /* The command */
6196      =5  } ZW_CHIMNEY_FAN_ALARM_TEMP_GET_FRAME;
6197      =5  
6198      =5  /************************************************************/
6199      =5  /* Chimney Fan Alarm Temp Report 1byte command class structs */
6200      =5  /************************************************************/
6201      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_1BYTE_FRAME_
6202      =5  {
6203      =5      BYTE      cmdClass;                     /* The command class */
6204      =5      BYTE      cmd;                          /* The command */
6205      =5      BYTE      properties1;                  /* masked byte */
6206      =5      BYTE      value1;                       
6207      =5  } ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_1BYTE_FRAME;
6208      =5  
6209      =5  /************************************************************/
6210      =5  /* Chimney Fan Alarm Temp Report 2byte command class structs */
6211      =5  /************************************************************/
6212      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_2BYTE_FRAME_
6213      =5  {
6214      =5      BYTE      cmdClass;                     /* The command class */
6215      =5      BYTE      cmd;                          /* The command */
6216      =5      BYTE      properties1;                  /* masked byte */
6217      =5      BYTE      value1;                       /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 129 

6218      =5      BYTE      value2;                       /* LSB */
6219      =5  } ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_2BYTE_FRAME;
6220      =5  
6221      =5  /************************************************************/
6222      =5  /* Chimney Fan Alarm Temp Report 3byte command class structs */
6223      =5  /************************************************************/
6224      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_3BYTE_FRAME_
6225      =5  {
6226      =5      BYTE      cmdClass;                     /* The command class */
6227      =5      BYTE      cmd;                          /* The command */
6228      =5      BYTE      properties1;                  /* masked byte */
6229      =5      BYTE      value1;                       /* MSB */
6230      =5      BYTE      value2;                       
6231      =5      BYTE      value3;                       /* LSB */
6232      =5  } ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_3BYTE_FRAME;
6233      =5  
6234      =5  /************************************************************/
6235      =5  /* Chimney Fan Alarm Temp Report 4byte command class structs */
6236      =5  /************************************************************/
6237      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_4BYTE_FRAME_
6238      =5  {
6239      =5      BYTE      cmdClass;                     /* The command class */
6240      =5      BYTE      cmd;                          /* The command */
6241      =5      BYTE      properties1;                  /* masked byte */
6242      =5      BYTE      value1;                       /* MSB */
6243      =5      BYTE      value2;                       
6244      =5      BYTE      value3;                       
6245      =5      BYTE      value4;                       /* LSB */
6246      =5  } ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_4BYTE_FRAME;
6247      =5  
6248      =5  /************************************************************/
6249      =5  /* Chimney Fan Alarm Temp Set 1byte command class structs */
6250      =5  /************************************************************/
6251      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_SET_1BYTE_FRAME_
6252      =5  {
6253      =5      BYTE      cmdClass;                     /* The command class */
6254      =5      BYTE      cmd;                          /* The command */
6255      =5      BYTE      properties1;                  /* masked byte */
6256      =5      BYTE      value1;                       
6257      =5  } ZW_CHIMNEY_FAN_ALARM_TEMP_SET_1BYTE_FRAME;
6258      =5  
6259      =5  /************************************************************/
6260      =5  /* Chimney Fan Alarm Temp Set 2byte command class structs */
6261      =5  /************************************************************/
6262      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_SET_2BYTE_FRAME_
6263      =5  {
6264      =5      BYTE      cmdClass;                     /* The command class */
6265      =5      BYTE      cmd;                          /* The command */
6266      =5      BYTE      properties1;                  /* masked byte */
6267      =5      BYTE      value1;                       /* MSB */
6268      =5      BYTE      value2;                       /* LSB */
6269      =5  } ZW_CHIMNEY_FAN_ALARM_TEMP_SET_2BYTE_FRAME;
6270      =5  
6271      =5  /************************************************************/
6272      =5  /* Chimney Fan Alarm Temp Set 3byte command class structs */
6273      =5  /************************************************************/
6274      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_SET_3BYTE_FRAME_
6275      =5  {
6276      =5      BYTE      cmdClass;                     /* The command class */
6277      =5      BYTE      cmd;                          /* The command */
6278      =5      BYTE      properties1;                  /* masked byte */
6279      =5      BYTE      value1;                       /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 130 

6280      =5      BYTE      value2;                       
6281      =5      BYTE      value3;                       /* LSB */
6282      =5  } ZW_CHIMNEY_FAN_ALARM_TEMP_SET_3BYTE_FRAME;
6283      =5  
6284      =5  /************************************************************/
6285      =5  /* Chimney Fan Alarm Temp Set 4byte command class structs */
6286      =5  /************************************************************/
6287      =5  typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_SET_4BYTE_FRAME_
6288      =5  {
6289      =5      BYTE      cmdClass;                     /* The command class */
6290      =5      BYTE      cmd;                          /* The command */
6291      =5      BYTE      properties1;                  /* masked byte */
6292      =5      BYTE      value1;                       /* MSB */
6293      =5      BYTE      value2;                       
6294      =5      BYTE      value3;                       
6295      =5      BYTE      value4;                       /* LSB */
6296      =5  } ZW_CHIMNEY_FAN_ALARM_TEMP_SET_4BYTE_FRAME;
6297      =5  
6298      =5  /************************************************************/
6299      =5  /* Chimney Fan Boost Time Get command class structs */      
6300      =5  /************************************************************/
6301      =5  typedef struct _ZW_CHIMNEY_FAN_BOOST_TIME_GET_FRAME_
6302      =5  {
6303      =5      BYTE      cmdClass;                     /* The command class */
6304      =5      BYTE      cmd;                          /* The command */
6305      =5  } ZW_CHIMNEY_FAN_BOOST_TIME_GET_FRAME;
6306      =5  
6307      =5  /************************************************************/
6308      =5  /* Chimney Fan Boost Time Report command class structs */   
6309      =5  /************************************************************/
6310      =5  typedef struct _ZW_CHIMNEY_FAN_BOOST_TIME_REPORT_FRAME_
6311      =5  {
6312      =5      BYTE      cmdClass;                     /* The command class */
6313      =5      BYTE      cmd;                          /* The command */
6314      =5      BYTE      time;                         /**/
6315      =5  } ZW_CHIMNEY_FAN_BOOST_TIME_REPORT_FRAME;
6316      =5  
6317      =5  /************************************************************/
6318      =5  /* Chimney Fan Boost Time Set command class structs */      
6319      =5  /************************************************************/
6320      =5  typedef struct _ZW_CHIMNEY_FAN_BOOST_TIME_SET_FRAME_
6321      =5  {
6322      =5      BYTE      cmdClass;                     /* The command class */
6323      =5      BYTE      cmd;                          /* The command */
6324      =5      BYTE      time;                         /**/
6325      =5  } ZW_CHIMNEY_FAN_BOOST_TIME_SET_FRAME;
6326      =5  
6327      =5  /************************************************************/
6328      =5  /* Chimney Fan Default Set command class structs */         
6329      =5  /************************************************************/
6330      =5  typedef struct _ZW_CHIMNEY_FAN_DEFAULT_SET_FRAME_
6331      =5  {
6332      =5      BYTE      cmdClass;                     /* The command class */
6333      =5      BYTE      cmd;                          /* The command */
6334      =5  } ZW_CHIMNEY_FAN_DEFAULT_SET_FRAME;
6335      =5  
6336      =5  /************************************************************/
6337      =5  /* Chimney Fan Min Speed Get command class structs */       
6338      =5  /************************************************************/
6339      =5  typedef struct _ZW_CHIMNEY_FAN_MIN_SPEED_GET_FRAME_
6340      =5  {
6341      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 131 

6342      =5      BYTE      cmd;                          /* The command */
6343      =5  } ZW_CHIMNEY_FAN_MIN_SPEED_GET_FRAME;
6344      =5  
6345      =5  /************************************************************/
6346      =5  /* Chimney Fan Min Speed Report command class structs */    
6347      =5  /************************************************************/
6348      =5  typedef struct _ZW_CHIMNEY_FAN_MIN_SPEED_REPORT_FRAME_
6349      =5  {
6350      =5      BYTE      cmdClass;                     /* The command class */
6351      =5      BYTE      cmd;                          /* The command */
6352      =5      BYTE      minSpeed;                     /**/
6353      =5  } ZW_CHIMNEY_FAN_MIN_SPEED_REPORT_FRAME;
6354      =5  
6355      =5  /************************************************************/
6356      =5  /* Chimney Fan Min Speed Set command class structs */       
6357      =5  /************************************************************/
6358      =5  typedef struct _ZW_CHIMNEY_FAN_MIN_SPEED_SET_FRAME_
6359      =5  {
6360      =5      BYTE      cmdClass;                     /* The command class */
6361      =5      BYTE      cmd;                          /* The command */
6362      =5      BYTE      minSpeed;                     /**/
6363      =5  } ZW_CHIMNEY_FAN_MIN_SPEED_SET_FRAME;
6364      =5  
6365      =5  /************************************************************/
6366      =5  /* Chimney Fan Mode Get command class structs */            
6367      =5  /************************************************************/
6368      =5  typedef struct _ZW_CHIMNEY_FAN_MODE_GET_FRAME_
6369      =5  {
6370      =5      BYTE      cmdClass;                     /* The command class */
6371      =5      BYTE      cmd;                          /* The command */
6372      =5  } ZW_CHIMNEY_FAN_MODE_GET_FRAME;
6373      =5  
6374      =5  /************************************************************/
6375      =5  /* Chimney Fan Mode Report command class structs */         
6376      =5  /************************************************************/
6377      =5  typedef struct _ZW_CHIMNEY_FAN_MODE_REPORT_FRAME_
6378      =5  {
6379      =5      BYTE      cmdClass;                     /* The command class */
6380      =5      BYTE      cmd;                          /* The command */
6381      =5      BYTE      mode;                         /**/
6382      =5  } ZW_CHIMNEY_FAN_MODE_REPORT_FRAME;
6383      =5  
6384      =5  /************************************************************/
6385      =5  /* Chimney Fan Mode Set command class structs */            
6386      =5  /************************************************************/
6387      =5  typedef struct _ZW_CHIMNEY_FAN_MODE_SET_FRAME_
6388      =5  {
6389      =5      BYTE      cmdClass;                     /* The command class */
6390      =5      BYTE      cmd;                          /* The command */
6391      =5      BYTE      mode;                         /**/
6392      =5  } ZW_CHIMNEY_FAN_MODE_SET_FRAME;
6393      =5  
6394      =5  /************************************************************/
6395      =5  /* Chimney Fan Setup Get command class structs */           
6396      =5  /************************************************************/
6397      =5  typedef struct _ZW_CHIMNEY_FAN_SETUP_GET_FRAME_
6398      =5  {
6399      =5      BYTE      cmdClass;                     /* The command class */
6400      =5      BYTE      cmd;                          /* The command */
6401      =5  } ZW_CHIMNEY_FAN_SETUP_GET_FRAME;
6402      =5  
6403      =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 132 

6404      =5  /* Chimney Fan Setup Report 1byte command class structs */  
6405      =5  /************************************************************/
6406      =5  typedef struct _ZW_CHIMNEY_FAN_SETUP_REPORT_1BYTE_FRAME_
6407      =5  {
6408      =5      BYTE      cmdClass;                     /* The command class */
6409      =5      BYTE      cmd;                          /* The command */
6410      =5      BYTE      mode;                         /**/
6411      =5      BYTE      boostTime;                    /**/
6412      =5      BYTE      stopTime;                     /**/
6413      =5      BYTE      minSpeed;                     /**/
6414      =5      BYTE      properties1;                  /* masked byte */
6415      =5      BYTE      startTemperature1;            
6416      =5      BYTE      properties2;                  /* masked byte */
6417      =5      BYTE      stopTemperature1;             
6418      =5      BYTE      properties3;                  /* masked byte */
6419      =5      BYTE      alarmTemperatureValue1;       
6420      =5  } ZW_CHIMNEY_FAN_SETUP_REPORT_1BYTE_FRAME;
6421      =5  
6422      =5  /************************************************************/
6423      =5  /* Chimney Fan Setup Report 2byte command class structs */  
6424      =5  /************************************************************/
6425      =5  typedef struct _ZW_CHIMNEY_FAN_SETUP_REPORT_2BYTE_FRAME_
6426      =5  {
6427      =5      BYTE      cmdClass;                     /* The command class */
6428      =5      BYTE      cmd;                          /* The command */
6429      =5      BYTE      mode;                         /**/
6430      =5      BYTE      boostTime;                    /**/
6431      =5      BYTE      stopTime;                     /**/
6432      =5      BYTE      minSpeed;                     /**/
6433      =5      BYTE      properties1;                  /* masked byte */
6434      =5      BYTE      startTemperature1;            /* MSB */
6435      =5      BYTE      startTemperature2;            /* LSB */
6436      =5      BYTE      properties2;                  /* masked byte */
6437      =5      BYTE      stopTemperature1;             /* MSB */
6438      =5      BYTE      stopTemperature2;             /* LSB */
6439      =5      BYTE      properties3;                  /* masked byte */
6440      =5      BYTE      alarmTemperatureValue1;       /* MSB */
6441      =5      BYTE      alarmTemperatureValue2;       /* LSB */
6442      =5  } ZW_CHIMNEY_FAN_SETUP_REPORT_2BYTE_FRAME;
6443      =5  
6444      =5  /************************************************************/
6445      =5  /* Chimney Fan Setup Report 3byte command class structs */  
6446      =5  /************************************************************/
6447      =5  typedef struct _ZW_CHIMNEY_FAN_SETUP_REPORT_3BYTE_FRAME_
6448      =5  {
6449      =5      BYTE      cmdClass;                     /* The command class */
6450      =5      BYTE      cmd;                          /* The command */
6451      =5      BYTE      mode;                         /**/
6452      =5      BYTE      boostTime;                    /**/
6453      =5      BYTE      stopTime;                     /**/
6454      =5      BYTE      minSpeed;                     /**/
6455      =5      BYTE      properties1;                  /* masked byte */
6456      =5      BYTE      startTemperature1;            /* MSB */
6457      =5      BYTE      startTemperature2;            
6458      =5      BYTE      startTemperature3;            /* LSB */
6459      =5      BYTE      properties2;                  /* masked byte */
6460      =5      BYTE      stopTemperature1;             /* MSB */
6461      =5      BYTE      stopTemperature2;             
6462      =5      BYTE      stopTemperature3;             /* LSB */
6463      =5      BYTE      properties3;                  /* masked byte */
6464      =5      BYTE      alarmTemperatureValue1;       /* MSB */
6465      =5      BYTE      alarmTemperatureValue2;       
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 133 

6466      =5      BYTE      alarmTemperatureValue3;       /* LSB */
6467      =5  } ZW_CHIMNEY_FAN_SETUP_REPORT_3BYTE_FRAME;
6468      =5  
6469      =5  /************************************************************/
6470      =5  /* Chimney Fan Setup Report 4byte command class structs */  
6471      =5  /************************************************************/
6472      =5  typedef struct _ZW_CHIMNEY_FAN_SETUP_REPORT_4BYTE_FRAME_
6473      =5  {
6474      =5      BYTE      cmdClass;                     /* The command class */
6475      =5      BYTE      cmd;                          /* The command */
6476      =5      BYTE      mode;                         /**/
6477      =5      BYTE      boostTime;                    /**/
6478      =5      BYTE      stopTime;                     /**/
6479      =5      BYTE      minSpeed;                     /**/
6480      =5      BYTE      properties1;                  /* masked byte */
6481      =5      BYTE      startTemperature1;            /* MSB */
6482      =5      BYTE      startTemperature2;            
6483      =5      BYTE      startTemperature3;            
6484      =5      BYTE      startTemperature4;            /* LSB */
6485      =5      BYTE      properties2;                  /* masked byte */
6486      =5      BYTE      stopTemperature1;             /* MSB */
6487      =5      BYTE      stopTemperature2;             
6488      =5      BYTE      stopTemperature3;             
6489      =5      BYTE      stopTemperature4;             /* LSB */
6490      =5      BYTE      properties3;                  /* masked byte */
6491      =5      BYTE      alarmTemperatureValue1;       /* MSB */
6492      =5      BYTE      alarmTemperatureValue2;       
6493      =5      BYTE      alarmTemperatureValue3;       
6494      =5      BYTE      alarmTemperatureValue4;       /* LSB */
6495      =5  } ZW_CHIMNEY_FAN_SETUP_REPORT_4BYTE_FRAME;
6496      =5  
6497      =5  /************************************************************/
6498      =5  /* Chimney Fan Setup Set 1byte command class structs */     
6499      =5  /************************************************************/
6500      =5  typedef struct _ZW_CHIMNEY_FAN_SETUP_SET_1BYTE_FRAME_
6501      =5  {
6502      =5      BYTE      cmdClass;                     /* The command class */
6503      =5      BYTE      cmd;                          /* The command */
6504      =5      BYTE      mode;                         /**/
6505      =5      BYTE      boostTime;                    /**/
6506      =5      BYTE      stopTime;                     /**/
6507      =5      BYTE      minSpeed;                     /**/
6508      =5      BYTE      properties1;                  /* masked byte */
6509      =5      BYTE      startTemperature1;            
6510      =5      BYTE      properties2;                  /* masked byte */
6511      =5      BYTE      stopTemperature1;             
6512      =5      BYTE      properties3;                  /* masked byte */
6513      =5      BYTE      alarmTemperatureValue1;       
6514      =5  } ZW_CHIMNEY_FAN_SETUP_SET_1BYTE_FRAME;
6515      =5  
6516      =5  /************************************************************/
6517      =5  /* Chimney Fan Setup Set 2byte command class structs */     
6518      =5  /************************************************************/
6519      =5  typedef struct _ZW_CHIMNEY_FAN_SETUP_SET_2BYTE_FRAME_
6520      =5  {
6521      =5      BYTE      cmdClass;                     /* The command class */
6522      =5      BYTE      cmd;                          /* The command */
6523      =5      BYTE      mode;                         /**/
6524      =5      BYTE      boostTime;                    /**/
6525      =5      BYTE      stopTime;                     /**/
6526      =5      BYTE      minSpeed;                     /**/
6527      =5      BYTE      properties1;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 134 

6528      =5      BYTE      startTemperature1;            /* MSB */
6529      =5      BYTE      startTemperature2;            /* LSB */
6530      =5      BYTE      properties2;                  /* masked byte */
6531      =5      BYTE      stopTemperature1;             /* MSB */
6532      =5      BYTE      stopTemperature2;             /* LSB */
6533      =5      BYTE      properties3;                  /* masked byte */
6534      =5      BYTE      alarmTemperatureValue1;       /* MSB */
6535      =5      BYTE      alarmTemperatureValue2;       /* LSB */
6536      =5  } ZW_CHIMNEY_FAN_SETUP_SET_2BYTE_FRAME;
6537      =5  
6538      =5  /************************************************************/
6539      =5  /* Chimney Fan Setup Set 3byte command class structs */     
6540      =5  /************************************************************/
6541      =5  typedef struct _ZW_CHIMNEY_FAN_SETUP_SET_3BYTE_FRAME_
6542      =5  {
6543      =5      BYTE      cmdClass;                     /* The command class */
6544      =5      BYTE      cmd;                          /* The command */
6545      =5      BYTE      mode;                         /**/
6546      =5      BYTE      boostTime;                    /**/
6547      =5      BYTE      stopTime;                     /**/
6548      =5      BYTE      minSpeed;                     /**/
6549      =5      BYTE      properties1;                  /* masked byte */
6550      =5      BYTE      startTemperature1;            /* MSB */
6551      =5      BYTE      startTemperature2;            
6552      =5      BYTE      startTemperature3;            /* LSB */
6553      =5      BYTE      properties2;                  /* masked byte */
6554      =5      BYTE      stopTemperature1;             /* MSB */
6555      =5      BYTE      stopTemperature2;             
6556      =5      BYTE      stopTemperature3;             /* LSB */
6557      =5      BYTE      properties3;                  /* masked byte */
6558      =5      BYTE      alarmTemperatureValue1;       /* MSB */
6559      =5      BYTE      alarmTemperatureValue2;       
6560      =5      BYTE      alarmTemperatureValue3;       /* LSB */
6561      =5  } ZW_CHIMNEY_FAN_SETUP_SET_3BYTE_FRAME;
6562      =5  
6563      =5  /************************************************************/
6564      =5  /* Chimney Fan Setup Set 4byte command class structs */     
6565      =5  /************************************************************/
6566      =5  typedef struct _ZW_CHIMNEY_FAN_SETUP_SET_4BYTE_FRAME_
6567      =5  {
6568      =5      BYTE      cmdClass;                     /* The command class */
6569      =5      BYTE      cmd;                          /* The command */
6570      =5      BYTE      mode;                         /**/
6571      =5      BYTE      boostTime;                    /**/
6572      =5      BYTE      stopTime;                     /**/
6573      =5      BYTE      minSpeed;                     /**/
6574      =5      BYTE      properties1;                  /* masked byte */
6575      =5      BYTE      startTemperature1;            /* MSB */
6576      =5      BYTE      startTemperature2;            
6577      =5      BYTE      startTemperature3;            
6578      =5      BYTE      startTemperature4;            /* LSB */
6579      =5      BYTE      properties2;                  /* masked byte */
6580      =5      BYTE      stopTemperature1;             /* MSB */
6581      =5      BYTE      stopTemperature2;             
6582      =5      BYTE      stopTemperature3;             
6583      =5      BYTE      stopTemperature4;             /* LSB */
6584      =5      BYTE      properties3;                  /* masked byte */
6585      =5      BYTE      alarmTemperatureValue1;       /* MSB */
6586      =5      BYTE      alarmTemperatureValue2;       
6587      =5      BYTE      alarmTemperatureValue3;       
6588      =5      BYTE      alarmTemperatureValue4;       /* LSB */
6589      =5  } ZW_CHIMNEY_FAN_SETUP_SET_4BYTE_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 135 

6590      =5  
6591      =5  /************************************************************/
6592      =5  /* Chimney Fan Speed Get command class structs */           
6593      =5  /************************************************************/
6594      =5  typedef struct _ZW_CHIMNEY_FAN_SPEED_GET_FRAME_
6595      =5  {
6596      =5      BYTE      cmdClass;                     /* The command class */
6597      =5      BYTE      cmd;                          /* The command */
6598      =5  } ZW_CHIMNEY_FAN_SPEED_GET_FRAME;
6599      =5  
6600      =5  /************************************************************/
6601      =5  /* Chimney Fan Speed Report command class structs */        
6602      =5  /************************************************************/
6603      =5  typedef struct _ZW_CHIMNEY_FAN_SPEED_REPORT_FRAME_
6604      =5  {
6605      =5      BYTE      cmdClass;                     /* The command class */
6606      =5      BYTE      cmd;                          /* The command */
6607      =5      BYTE      speed;                        /**/
6608      =5  } ZW_CHIMNEY_FAN_SPEED_REPORT_FRAME;
6609      =5  
6610      =5  /************************************************************/
6611      =5  /* Chimney Fan Speed Set command class structs */           
6612      =5  /************************************************************/
6613      =5  typedef struct _ZW_CHIMNEY_FAN_SPEED_SET_FRAME_
6614      =5  {
6615      =5      BYTE      cmdClass;                     /* The command class */
6616      =5      BYTE      cmd;                          /* The command */
6617      =5      BYTE      speed;                        /**/
6618      =5  } ZW_CHIMNEY_FAN_SPEED_SET_FRAME;
6619      =5  
6620      =5  /************************************************************/
6621      =5  /* Chimney Fan Start Temp Get command class structs */      
6622      =5  /************************************************************/
6623      =5  typedef struct _ZW_CHIMNEY_FAN_START_TEMP_GET_FRAME_
6624      =5  {
6625      =5      BYTE      cmdClass;                     /* The command class */
6626      =5      BYTE      cmd;                          /* The command */
6627      =5  } ZW_CHIMNEY_FAN_START_TEMP_GET_FRAME;
6628      =5  
6629      =5  /************************************************************/
6630      =5  /* Chimney Fan Start Temp Report 1byte command class structs */
6631      =5  /************************************************************/
6632      =5  typedef struct _ZW_CHIMNEY_FAN_START_TEMP_REPORT_1BYTE_FRAME_
6633      =5  {
6634      =5      BYTE      cmdClass;                     /* The command class */
6635      =5      BYTE      cmd;                          /* The command */
6636      =5      BYTE      properties1;                  /* masked byte */
6637      =5      BYTE      value1;                       
6638      =5  } ZW_CHIMNEY_FAN_START_TEMP_REPORT_1BYTE_FRAME;
6639      =5  
6640      =5  /************************************************************/
6641      =5  /* Chimney Fan Start Temp Report 2byte command class structs */
6642      =5  /************************************************************/
6643      =5  typedef struct _ZW_CHIMNEY_FAN_START_TEMP_REPORT_2BYTE_FRAME_
6644      =5  {
6645      =5      BYTE      cmdClass;                     /* The command class */
6646      =5      BYTE      cmd;                          /* The command */
6647      =5      BYTE      properties1;                  /* masked byte */
6648      =5      BYTE      value1;                       /* MSB */
6649      =5      BYTE      value2;                       /* LSB */
6650      =5  } ZW_CHIMNEY_FAN_START_TEMP_REPORT_2BYTE_FRAME;
6651      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 136 

6652      =5  /************************************************************/
6653      =5  /* Chimney Fan Start Temp Report 3byte command class structs */
6654      =5  /************************************************************/
6655      =5  typedef struct _ZW_CHIMNEY_FAN_START_TEMP_REPORT_3BYTE_FRAME_
6656      =5  {
6657      =5      BYTE      cmdClass;                     /* The command class */
6658      =5      BYTE      cmd;                          /* The command */
6659      =5      BYTE      properties1;                  /* masked byte */
6660      =5      BYTE      value1;                       /* MSB */
6661      =5      BYTE      value2;                       
6662      =5      BYTE      value3;                       /* LSB */
6663      =5  } ZW_CHIMNEY_FAN_START_TEMP_REPORT_3BYTE_FRAME;
6664      =5  
6665      =5  /************************************************************/
6666      =5  /* Chimney Fan Start Temp Report 4byte command class structs */
6667      =5  /************************************************************/
6668      =5  typedef struct _ZW_CHIMNEY_FAN_START_TEMP_REPORT_4BYTE_FRAME_
6669      =5  {
6670      =5      BYTE      cmdClass;                     /* The command class */
6671      =5      BYTE      cmd;                          /* The command */
6672      =5      BYTE      properties1;                  /* masked byte */
6673      =5      BYTE      value1;                       /* MSB */
6674      =5      BYTE      value2;                       
6675      =5      BYTE      value3;                       
6676      =5      BYTE      value4;                       /* LSB */
6677      =5  } ZW_CHIMNEY_FAN_START_TEMP_REPORT_4BYTE_FRAME;
6678      =5  
6679      =5  /************************************************************/
6680      =5  /* Chimney Fan Start Temp Set 1byte command class structs */
6681      =5  /************************************************************/
6682      =5  typedef struct _ZW_CHIMNEY_FAN_START_TEMP_SET_1BYTE_FRAME_
6683      =5  {
6684      =5      BYTE      cmdClass;                     /* The command class */
6685      =5      BYTE      cmd;                          /* The command */
6686      =5      BYTE      properties1;                  /* masked byte */
6687      =5      BYTE      value1;                       
6688      =5  } ZW_CHIMNEY_FAN_START_TEMP_SET_1BYTE_FRAME;
6689      =5  
6690      =5  /************************************************************/
6691      =5  /* Chimney Fan Start Temp Set 2byte command class structs */
6692      =5  /************************************************************/
6693      =5  typedef struct _ZW_CHIMNEY_FAN_START_TEMP_SET_2BYTE_FRAME_
6694      =5  {
6695      =5      BYTE      cmdClass;                     /* The command class */
6696      =5      BYTE      cmd;                          /* The command */
6697      =5      BYTE      properties1;                  /* masked byte */
6698      =5      BYTE      value1;                       /* MSB */
6699      =5      BYTE      value2;                       /* LSB */
6700      =5  } ZW_CHIMNEY_FAN_START_TEMP_SET_2BYTE_FRAME;
6701      =5  
6702      =5  /************************************************************/
6703      =5  /* Chimney Fan Start Temp Set 3byte command class structs */
6704      =5  /************************************************************/
6705      =5  typedef struct _ZW_CHIMNEY_FAN_START_TEMP_SET_3BYTE_FRAME_
6706      =5  {
6707      =5      BYTE      cmdClass;                     /* The command class */
6708      =5      BYTE      cmd;                          /* The command */
6709      =5      BYTE      properties1;                  /* masked byte */
6710      =5      BYTE      value1;                       /* MSB */
6711      =5      BYTE      value2;                       
6712      =5      BYTE      value3;                       /* LSB */
6713      =5  } ZW_CHIMNEY_FAN_START_TEMP_SET_3BYTE_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 137 

6714      =5  
6715      =5  /************************************************************/
6716      =5  /* Chimney Fan Start Temp Set 4byte command class structs */
6717      =5  /************************************************************/
6718      =5  typedef struct _ZW_CHIMNEY_FAN_START_TEMP_SET_4BYTE_FRAME_
6719      =5  {
6720      =5      BYTE      cmdClass;                     /* The command class */
6721      =5      BYTE      cmd;                          /* The command */
6722      =5      BYTE      properties1;                  /* masked byte */
6723      =5      BYTE      value1;                       /* MSB */
6724      =5      BYTE      value2;                       
6725      =5      BYTE      value3;                       
6726      =5      BYTE      value4;                       /* LSB */
6727      =5  } ZW_CHIMNEY_FAN_START_TEMP_SET_4BYTE_FRAME;
6728      =5  
6729      =5  /************************************************************/
6730      =5  /* Chimney Fan State Get command class structs */           
6731      =5  /************************************************************/
6732      =5  typedef struct _ZW_CHIMNEY_FAN_STATE_GET_FRAME_
6733      =5  {
6734      =5      BYTE      cmdClass;                     /* The command class */
6735      =5      BYTE      cmd;                          /* The command */
6736      =5  } ZW_CHIMNEY_FAN_STATE_GET_FRAME;
6737      =5  
6738      =5  /************************************************************/
6739      =5  /* Chimney Fan State Report command class structs */        
6740      =5  /************************************************************/
6741      =5  typedef struct _ZW_CHIMNEY_FAN_STATE_REPORT_FRAME_
6742      =5  {
6743      =5      BYTE      cmdClass;                     /* The command class */
6744      =5      BYTE      cmd;                          /* The command */
6745      =5      BYTE      state;                        /**/
6746      =5  } ZW_CHIMNEY_FAN_STATE_REPORT_FRAME;
6747      =5  
6748      =5  /************************************************************/
6749      =5  /* Chimney Fan State Set command class structs */           
6750      =5  /************************************************************/
6751      =5  typedef struct _ZW_CHIMNEY_FAN_STATE_SET_FRAME_
6752      =5  {
6753      =5      BYTE      cmdClass;                     /* The command class */
6754      =5      BYTE      cmd;                          /* The command */
6755      =5      BYTE      state;                        /**/
6756      =5  } ZW_CHIMNEY_FAN_STATE_SET_FRAME;
6757      =5  
6758      =5  /************************************************************/
6759      =5  /* Chimney Fan Status Get command class structs */          
6760      =5  /************************************************************/
6761      =5  typedef struct _ZW_CHIMNEY_FAN_STATUS_GET_FRAME_
6762      =5  {
6763      =5      BYTE      cmdClass;                     /* The command class */
6764      =5      BYTE      cmd;                          /* The command */
6765      =5  } ZW_CHIMNEY_FAN_STATUS_GET_FRAME;
6766      =5  
6767      =5  /************************************************************/
6768      =5  /* Chimney Fan Status Report 1byte command class structs */ 
6769      =5  /************************************************************/
6770      =5  typedef struct _ZW_CHIMNEY_FAN_STATUS_REPORT_1BYTE_FRAME_
6771      =5  {
6772      =5      BYTE      cmdClass;                     /* The command class */
6773      =5      BYTE      cmd;                          /* The command */
6774      =5      BYTE      state;                        /**/
6775      =5      BYTE      speed;                        /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 138 

6776      =5      BYTE      alarmStatus;                  /* masked byte */
6777      =5      BYTE      properties1;                  /* masked byte */
6778      =5      BYTE      value1;                       
6779      =5  } ZW_CHIMNEY_FAN_STATUS_REPORT_1BYTE_FRAME;
6780      =5  
6781      =5  /************************************************************/
6782      =5  /* Chimney Fan Status Report 2byte command class structs */ 
6783      =5  /************************************************************/
6784      =5  typedef struct _ZW_CHIMNEY_FAN_STATUS_REPORT_2BYTE_FRAME_
6785      =5  {
6786      =5      BYTE      cmdClass;                     /* The command class */
6787      =5      BYTE      cmd;                          /* The command */
6788      =5      BYTE      state;                        /**/
6789      =5      BYTE      speed;                        /**/
6790      =5      BYTE      alarmStatus;                  /* masked byte */
6791      =5      BYTE      properties1;                  /* masked byte */
6792      =5      BYTE      value1;                       /* MSB */
6793      =5      BYTE      value2;                       /* LSB */
6794      =5  } ZW_CHIMNEY_FAN_STATUS_REPORT_2BYTE_FRAME;
6795      =5  
6796      =5  /************************************************************/
6797      =5  /* Chimney Fan Status Report 3byte command class structs */ 
6798      =5  /************************************************************/
6799      =5  typedef struct _ZW_CHIMNEY_FAN_STATUS_REPORT_3BYTE_FRAME_
6800      =5  {
6801      =5      BYTE      cmdClass;                     /* The command class */
6802      =5      BYTE      cmd;                          /* The command */
6803      =5      BYTE      state;                        /**/
6804      =5      BYTE      speed;                        /**/
6805      =5      BYTE      alarmStatus;                  /* masked byte */
6806      =5      BYTE      properties1;                  /* masked byte */
6807      =5      BYTE      value1;                       /* MSB */
6808      =5      BYTE      value2;                       
6809      =5      BYTE      value3;                       /* LSB */
6810      =5  } ZW_CHIMNEY_FAN_STATUS_REPORT_3BYTE_FRAME;
6811      =5  
6812      =5  /************************************************************/
6813      =5  /* Chimney Fan Status Report 4byte command class structs */ 
6814      =5  /************************************************************/
6815      =5  typedef struct _ZW_CHIMNEY_FAN_STATUS_REPORT_4BYTE_FRAME_
6816      =5  {
6817      =5      BYTE      cmdClass;                     /* The command class */
6818      =5      BYTE      cmd;                          /* The command */
6819      =5      BYTE      state;                        /**/
6820      =5      BYTE      speed;                        /**/
6821      =5      BYTE      alarmStatus;                  /* masked byte */
6822      =5      BYTE      properties1;                  /* masked byte */
6823      =5      BYTE      value1;                       /* MSB */
6824      =5      BYTE      value2;                       
6825      =5      BYTE      value3;                       
6826      =5      BYTE      value4;                       /* LSB */
6827      =5  } ZW_CHIMNEY_FAN_STATUS_REPORT_4BYTE_FRAME;
6828      =5  
6829      =5  /************************************************************/
6830      =5  /* Chimney Fan Stop Temp Get command class structs */       
6831      =5  /************************************************************/
6832      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_GET_FRAME_
6833      =5  {
6834      =5      BYTE      cmdClass;                     /* The command class */
6835      =5      BYTE      cmd;                          /* The command */
6836      =5  } ZW_CHIMNEY_FAN_STOP_TEMP_GET_FRAME;
6837      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 139 

6838      =5  /************************************************************/
6839      =5  /* Chimney Fan Stop Temp Report 1byte command class structs */
6840      =5  /************************************************************/
6841      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_1BYTE_FRAME_
6842      =5  {
6843      =5      BYTE      cmdClass;                     /* The command class */
6844      =5      BYTE      cmd;                          /* The command */
6845      =5      BYTE      properties1;                  /* masked byte */
6846      =5      BYTE      value1;                       
6847      =5  } ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_1BYTE_FRAME;
6848      =5  
6849      =5  /************************************************************/
6850      =5  /* Chimney Fan Stop Temp Report 2byte command class structs */
6851      =5  /************************************************************/
6852      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_2BYTE_FRAME_
6853      =5  {
6854      =5      BYTE      cmdClass;                     /* The command class */
6855      =5      BYTE      cmd;                          /* The command */
6856      =5      BYTE      properties1;                  /* masked byte */
6857      =5      BYTE      value1;                       /* MSB */
6858      =5      BYTE      value2;                       /* LSB */
6859      =5  } ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_2BYTE_FRAME;
6860      =5  
6861      =5  /************************************************************/
6862      =5  /* Chimney Fan Stop Temp Report 3byte command class structs */
6863      =5  /************************************************************/
6864      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_3BYTE_FRAME_
6865      =5  {
6866      =5      BYTE      cmdClass;                     /* The command class */
6867      =5      BYTE      cmd;                          /* The command */
6868      =5      BYTE      properties1;                  /* masked byte */
6869      =5      BYTE      value1;                       /* MSB */
6870      =5      BYTE      value2;                       
6871      =5      BYTE      value3;                       /* LSB */
6872      =5  } ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_3BYTE_FRAME;
6873      =5  
6874      =5  /************************************************************/
6875      =5  /* Chimney Fan Stop Temp Report 4byte command class structs */
6876      =5  /************************************************************/
6877      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_4BYTE_FRAME_
6878      =5  {
6879      =5      BYTE      cmdClass;                     /* The command class */
6880      =5      BYTE      cmd;                          /* The command */
6881      =5      BYTE      properties1;                  /* masked byte */
6882      =5      BYTE      value1;                       /* MSB */
6883      =5      BYTE      value2;                       
6884      =5      BYTE      value3;                       
6885      =5      BYTE      value4;                       /* LSB */
6886      =5  } ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_4BYTE_FRAME;
6887      =5  
6888      =5  /************************************************************/
6889      =5  /* Chimney Fan Stop Temp Set 1byte command class structs */ 
6890      =5  /************************************************************/
6891      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_SET_1BYTE_FRAME_
6892      =5  {
6893      =5      BYTE      cmdClass;                     /* The command class */
6894      =5      BYTE      cmd;                          /* The command */
6895      =5      BYTE      properties1;                  /* masked byte */
6896      =5      BYTE      value1;                       
6897      =5  } ZW_CHIMNEY_FAN_STOP_TEMP_SET_1BYTE_FRAME;
6898      =5  
6899      =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 140 

6900      =5  /* Chimney Fan Stop Temp Set 2byte command class structs */ 
6901      =5  /************************************************************/
6902      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_SET_2BYTE_FRAME_
6903      =5  {
6904      =5      BYTE      cmdClass;                     /* The command class */
6905      =5      BYTE      cmd;                          /* The command */
6906      =5      BYTE      properties1;                  /* masked byte */
6907      =5      BYTE      value1;                       /* MSB */
6908      =5      BYTE      value2;                       /* LSB */
6909      =5  } ZW_CHIMNEY_FAN_STOP_TEMP_SET_2BYTE_FRAME;
6910      =5  
6911      =5  /************************************************************/
6912      =5  /* Chimney Fan Stop Temp Set 3byte command class structs */ 
6913      =5  /************************************************************/
6914      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_SET_3BYTE_FRAME_
6915      =5  {
6916      =5      BYTE      cmdClass;                     /* The command class */
6917      =5      BYTE      cmd;                          /* The command */
6918      =5      BYTE      properties1;                  /* masked byte */
6919      =5      BYTE      value1;                       /* MSB */
6920      =5      BYTE      value2;                       
6921      =5      BYTE      value3;                       /* LSB */
6922      =5  } ZW_CHIMNEY_FAN_STOP_TEMP_SET_3BYTE_FRAME;
6923      =5  
6924      =5  /************************************************************/
6925      =5  /* Chimney Fan Stop Temp Set 4byte command class structs */ 
6926      =5  /************************************************************/
6927      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_SET_4BYTE_FRAME_
6928      =5  {
6929      =5      BYTE      cmdClass;                     /* The command class */
6930      =5      BYTE      cmd;                          /* The command */
6931      =5      BYTE      properties1;                  /* masked byte */
6932      =5      BYTE      value1;                       /* MSB */
6933      =5      BYTE      value2;                       
6934      =5      BYTE      value3;                       
6935      =5      BYTE      value4;                       /* LSB */
6936      =5  } ZW_CHIMNEY_FAN_STOP_TEMP_SET_4BYTE_FRAME;
6937      =5  
6938      =5  /************************************************************/
6939      =5  /* Chimney Fan Stop Time Get command class structs */       
6940      =5  /************************************************************/
6941      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TIME_GET_FRAME_
6942      =5  {
6943      =5      BYTE      cmdClass;                     /* The command class */
6944      =5      BYTE      cmd;                          /* The command */
6945      =5  } ZW_CHIMNEY_FAN_STOP_TIME_GET_FRAME;
6946      =5  
6947      =5  /************************************************************/
6948      =5  /* Chimney Fan Stop Time Report command class structs */    
6949      =5  /************************************************************/
6950      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TIME_REPORT_FRAME_
6951      =5  {
6952      =5      BYTE      cmdClass;                     /* The command class */
6953      =5      BYTE      cmd;                          /* The command */
6954      =5      BYTE      time;                         /**/
6955      =5  } ZW_CHIMNEY_FAN_STOP_TIME_REPORT_FRAME;
6956      =5  
6957      =5  /************************************************************/
6958      =5  /* Chimney Fan Stop Time Set command class structs */       
6959      =5  /************************************************************/
6960      =5  typedef struct _ZW_CHIMNEY_FAN_STOP_TIME_SET_FRAME_
6961      =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 141 

6962      =5      BYTE      cmdClass;                     /* The command class */
6963      =5      BYTE      cmd;                          /* The command */
6964      =5      BYTE      time;                         /**/
6965      =5  } ZW_CHIMNEY_FAN_STOP_TIME_SET_FRAME;
6966      =5  
6967      =5  /************************************************************/
6968      =5  /* Schedule Changed Get command class structs */            
6969      =5  /************************************************************/
6970      =5  typedef struct _ZW_SCHEDULE_CHANGED_GET_FRAME_
6971      =5  {
6972      =5      BYTE      cmdClass;                     /* The command class */
6973      =5      BYTE      cmd;                          /* The command */
6974      =5  } ZW_SCHEDULE_CHANGED_GET_FRAME;
6975      =5  
6976      =5  /************************************************************/
6977      =5  /* Schedule Changed Report command class structs */         
6978      =5  /************************************************************/
6979      =5  typedef struct _ZW_SCHEDULE_CHANGED_REPORT_FRAME_
6980      =5  {
6981      =5      BYTE      cmdClass;                     /* The command class */
6982      =5      BYTE      cmd;                          /* The command */
6983      =5      BYTE      changecounter;                /**/
6984      =5  } ZW_SCHEDULE_CHANGED_REPORT_FRAME;
6985      =5  
6986      =5  /************************************************************/
6987      =5  /* Schedule Get command class structs */                    
6988      =5  /************************************************************/
6989      =5  typedef struct _ZW_SCHEDULE_GET_FRAME_
6990      =5  {
6991      =5      BYTE      cmdClass;                     /* The command class */
6992      =5      BYTE      cmd;                          /* The command */
6993      =5      BYTE      properties1;                  /* masked byte */
6994      =5  } ZW_SCHEDULE_GET_FRAME;
6995      =5  
6996      =5  /************************************************************/
6997      =5  /* Schedule Override Get command class structs */           
6998      =5  /************************************************************/
6999      =5  typedef struct _ZW_SCHEDULE_OVERRIDE_GET_FRAME_
7000      =5  {
7001      =5      BYTE      cmdClass;                     /* The command class */
7002      =5      BYTE      cmd;                          /* The command */
7003      =5  } ZW_SCHEDULE_OVERRIDE_GET_FRAME;
7004      =5  
7005      =5  /************************************************************/
7006      =5  /* Schedule Override Report command class structs */        
7007      =5  /************************************************************/
7008      =5  typedef struct _ZW_SCHEDULE_OVERRIDE_REPORT_FRAME_
7009      =5  {
7010      =5      BYTE      cmdClass;                     /* The command class */
7011      =5      BYTE      cmd;                          /* The command */
7012      =5      BYTE      properties1;                  /* masked byte */
7013      =5      BYTE      overrideState;                /**/
7014      =5  } ZW_SCHEDULE_OVERRIDE_REPORT_FRAME;
7015      =5  
7016      =5  /************************************************************/
7017      =5  /* Schedule Override Set command class structs */           
7018      =5  /************************************************************/
7019      =5  typedef struct _ZW_SCHEDULE_OVERRIDE_SET_FRAME_
7020      =5  {
7021      =5      BYTE      cmdClass;                     /* The command class */
7022      =5      BYTE      cmd;                          /* The command */
7023      =5      BYTE      properties1;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 142 

7024      =5      BYTE      overrideState;                /**/
7025      =5  } ZW_SCHEDULE_OVERRIDE_SET_FRAME;
7026      =5  
7027      =5  /************************************************************/
7028      =5  /* Schedule Report command class structs */                 
7029      =5  /************************************************************/
7030      =5  typedef struct _ZW_SCHEDULE_REPORT_FRAME_
7031      =5  {
7032      =5      BYTE      cmdClass;                     /* The command class */
7033      =5      BYTE      cmd;                          /* The command */
7034      =5      BYTE      properties1;                  /* masked byte */
7035      =5      BYTE      switchpoint01;                /* MSB */
7036      =5      BYTE      switchpoint02;                
7037      =5      BYTE      switchpoint03;                /* LSB */
7038      =5      BYTE      switchpoint11;                /* MSB */
7039      =5      BYTE      switchpoint12;                
7040      =5      BYTE      switchpoint13;                /* LSB */
7041      =5      BYTE      switchpoint21;                /* MSB */
7042      =5      BYTE      switchpoint22;                
7043      =5      BYTE      switchpoint23;                /* LSB */
7044      =5      BYTE      switchpoint31;                /* MSB */
7045      =5      BYTE      switchpoint32;                
7046      =5      BYTE      switchpoint33;                /* LSB */
7047      =5      BYTE      switchpoint41;                /* MSB */
7048      =5      BYTE      switchpoint42;                
7049      =5      BYTE      switchpoint43;                /* LSB */
7050      =5      BYTE      switchpoint51;                /* MSB */
7051      =5      BYTE      switchpoint52;                
7052      =5      BYTE      switchpoint53;                /* LSB */
7053      =5      BYTE      switchpoint61;                /* MSB */
7054      =5      BYTE      switchpoint62;                
7055      =5      BYTE      switchpoint63;                /* LSB */
7056      =5      BYTE      switchpoint71;                /* MSB */
7057      =5      BYTE      switchpoint72;                
7058      =5      BYTE      switchpoint73;                /* LSB */
7059      =5      BYTE      switchpoint81;                /* MSB */
7060      =5      BYTE      switchpoint82;                
7061      =5      BYTE      switchpoint83;                /* LSB */
7062      =5  } ZW_SCHEDULE_REPORT_FRAME;
7063      =5  
7064      =5  /************************************************************/
7065      =5  /* Schedule Set command class structs */                    
7066      =5  /************************************************************/
7067      =5  typedef struct _ZW_SCHEDULE_SET_FRAME_
7068      =5  {
7069      =5      BYTE      cmdClass;                     /* The command class */
7070      =5      BYTE      cmd;                          /* The command */
7071      =5      BYTE      properties1;                  /* masked byte */
7072      =5      BYTE      switchpoint01;                /* MSB */
7073      =5      BYTE      switchpoint02;                
7074      =5      BYTE      switchpoint03;                /* LSB */
7075      =5      BYTE      switchpoint11;                /* MSB */
7076      =5      BYTE      switchpoint12;                
7077      =5      BYTE      switchpoint13;                /* LSB */
7078      =5      BYTE      switchpoint21;                /* MSB */
7079      =5      BYTE      switchpoint22;                
7080      =5      BYTE      switchpoint23;                /* LSB */
7081      =5      BYTE      switchpoint31;                /* MSB */
7082      =5      BYTE      switchpoint32;                
7083      =5      BYTE      switchpoint33;                /* LSB */
7084      =5      BYTE      switchpoint41;                /* MSB */
7085      =5      BYTE      switchpoint42;                
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 143 

7086      =5      BYTE      switchpoint43;                /* LSB */
7087      =5      BYTE      switchpoint51;                /* MSB */
7088      =5      BYTE      switchpoint52;                
7089      =5      BYTE      switchpoint53;                /* LSB */
7090      =5      BYTE      switchpoint61;                /* MSB */
7091      =5      BYTE      switchpoint62;                
7092      =5      BYTE      switchpoint63;                /* LSB */
7093      =5      BYTE      switchpoint71;                /* MSB */
7094      =5      BYTE      switchpoint72;                
7095      =5      BYTE      switchpoint73;                /* LSB */
7096      =5      BYTE      switchpoint81;                /* MSB */
7097      =5      BYTE      switchpoint82;                
7098      =5      BYTE      switchpoint83;                /* LSB */
7099      =5  } ZW_SCHEDULE_SET_FRAME;
7100      =5  
7101      =5  /************************************************************/
7102      =5  /* Clock Get command class structs */                       
7103      =5  /************************************************************/
7104      =5  typedef struct _ZW_CLOCK_GET_FRAME_
7105      =5  {
7106      =5      BYTE      cmdClass;                     /* The command class */
7107      =5      BYTE      cmd;                          /* The command */
7108      =5  } ZW_CLOCK_GET_FRAME;
7109      =5  
7110      =5  /************************************************************/
7111      =5  /* Clock Report command class structs */                    
7112      =5  /************************************************************/
7113      =5  typedef struct _ZW_CLOCK_REPORT_FRAME_
7114      =5  {
7115      =5      BYTE      cmdClass;                     /* The command class */
7116      =5      BYTE      cmd;                          /* The command */
7117      =5      BYTE      level;                        /* masked byte */
7118      =5      BYTE      minute;                       /**/
7119      =5  } ZW_CLOCK_REPORT_FRAME;
7120      =5  
7121      =5  /************************************************************/
7122      =5  /* Clock Set command class structs */                       
7123      =5  /************************************************************/
7124      =5  typedef struct _ZW_CLOCK_SET_FRAME_
7125      =5  {
7126      =5      BYTE      cmdClass;                     /* The command class */
7127      =5      BYTE      cmd;                          /* The command */
7128      =5      BYTE      level;                        /* masked byte */
7129      =5      BYTE      minute;                       /**/
7130      =5  } ZW_CLOCK_SET_FRAME;
7131      =5  
7132      =5  /************************************************************/
7133      =5  /* Configuration Get command class structs */               
7134      =5  /************************************************************/
7135      =5  typedef struct _ZW_CONFIGURATION_GET_FRAME_
7136      =5  {
7137      =5      BYTE      cmdClass;                     /* The command class */
7138      =5      BYTE      cmd;                          /* The command */
7139      =5      BYTE      parameterNumber;              /**/
7140      =5  } ZW_CONFIGURATION_GET_FRAME;
7141      =5  
7142      =5  /************************************************************/
7143      =5  /* Configuration Report 1byte command class structs */      
7144      =5  /************************************************************/
7145      =5  typedef struct _ZW_CONFIGURATION_REPORT_1BYTE_FRAME_
7146      =5  {
7147      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 144 

7148      =5      BYTE      cmd;                          /* The command */
7149      =5      BYTE      parameterNumber;              /**/
7150      =5      BYTE      level;                        /* masked byte */
7151      =5      BYTE      configurationValue1;          
7152      =5  } ZW_CONFIGURATION_REPORT_1BYTE_FRAME;
7153      =5  
7154      =5  /************************************************************/
7155      =5  /* Configuration Report 2byte command class structs */      
7156      =5  /************************************************************/
7157      =5  typedef struct _ZW_CONFIGURATION_REPORT_2BYTE_FRAME_
7158      =5  {
7159      =5      BYTE      cmdClass;                     /* The command class */
7160      =5      BYTE      cmd;                          /* The command */
7161      =5      BYTE      parameterNumber;              /**/
7162      =5      BYTE      level;                        /* masked byte */
7163      =5      BYTE      configurationValue1;          /* MSB */
7164      =5      BYTE      configurationValue2;          /* LSB */
7165      =5  } ZW_CONFIGURATION_REPORT_2BYTE_FRAME;
7166      =5  
7167      =5  /************************************************************/
7168      =5  /* Configuration Report 3byte command class structs */      
7169      =5  /************************************************************/
7170      =5  typedef struct _ZW_CONFIGURATION_REPORT_3BYTE_FRAME_
7171      =5  {
7172      =5      BYTE      cmdClass;                     /* The command class */
7173      =5      BYTE      cmd;                          /* The command */
7174      =5      BYTE      parameterNumber;              /**/
7175      =5      BYTE      level;                        /* masked byte */
7176      =5      BYTE      configurationValue1;          /* MSB */
7177      =5      BYTE      configurationValue2;          
7178      =5      BYTE      configurationValue3;          /* LSB */
7179      =5  } ZW_CONFIGURATION_REPORT_3BYTE_FRAME;
7180      =5  
7181      =5  /************************************************************/
7182      =5  /* Configuration Report 4byte command class structs */      
7183      =5  /************************************************************/
7184      =5  typedef struct _ZW_CONFIGURATION_REPORT_4BYTE_FRAME_
7185      =5  {
7186      =5      BYTE      cmdClass;                     /* The command class */
7187      =5      BYTE      cmd;                          /* The command */
7188      =5      BYTE      parameterNumber;              /**/
7189      =5      BYTE      level;                        /* masked byte */
7190      =5      BYTE      configurationValue1;          /* MSB */
7191      =5      BYTE      configurationValue2;          
7192      =5      BYTE      configurationValue3;          
7193      =5      BYTE      configurationValue4;          /* LSB */
7194      =5  } ZW_CONFIGURATION_REPORT_4BYTE_FRAME;
7195      =5  
7196      =5  /************************************************************/
7197      =5  /* Configuration Set 1byte command class structs */         
7198      =5  /************************************************************/
7199      =5  typedef struct _ZW_CONFIGURATION_SET_1BYTE_FRAME_
7200      =5  {
7201      =5      BYTE      cmdClass;                     /* The command class */
7202      =5      BYTE      cmd;                          /* The command */
7203      =5      BYTE      parameterNumber;              /**/
7204      =5      BYTE      level;                        /* masked byte */
7205      =5      BYTE      configurationValue1;          
7206      =5  } ZW_CONFIGURATION_SET_1BYTE_FRAME;
7207      =5  
7208      =5  /************************************************************/
7209      =5  /* Configuration Set 2byte command class structs */         
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 145 

7210      =5  /************************************************************/
7211      =5  typedef struct _ZW_CONFIGURATION_SET_2BYTE_FRAME_
7212      =5  {
7213      =5      BYTE      cmdClass;                     /* The command class */
7214      =5      BYTE      cmd;                          /* The command */
7215      =5      BYTE      parameterNumber;              /**/
7216      =5      BYTE      level;                        /* masked byte */
7217      =5      BYTE      configurationValue1;          /* MSB */
7218      =5      BYTE      configurationValue2;          /* LSB */
7219      =5  } ZW_CONFIGURATION_SET_2BYTE_FRAME;
7220      =5  
7221      =5  /************************************************************/
7222      =5  /* Configuration Set 3byte command class structs */         
7223      =5  /************************************************************/
7224      =5  typedef struct _ZW_CONFIGURATION_SET_3BYTE_FRAME_
7225      =5  {
7226      =5      BYTE      cmdClass;                     /* The command class */
7227      =5      BYTE      cmd;                          /* The command */
7228      =5      BYTE      parameterNumber;              /**/
7229      =5      BYTE      level;                        /* masked byte */
7230      =5      BYTE      configurationValue1;          /* MSB */
7231      =5      BYTE      configurationValue2;          
7232      =5      BYTE      configurationValue3;          /* LSB */
7233      =5  } ZW_CONFIGURATION_SET_3BYTE_FRAME;
7234      =5  
7235      =5  /************************************************************/
7236      =5  /* Configuration Set 4byte command class structs */         
7237      =5  /************************************************************/
7238      =5  typedef struct _ZW_CONFIGURATION_SET_4BYTE_FRAME_
7239      =5  {
7240      =5      BYTE      cmdClass;                     /* The command class */
7241      =5      BYTE      cmd;                          /* The command */
7242      =5      BYTE      parameterNumber;              /**/
7243      =5      BYTE      level;                        /* masked byte */
7244      =5      BYTE      configurationValue1;          /* MSB */
7245      =5      BYTE      configurationValue2;          
7246      =5      BYTE      configurationValue3;          
7247      =5      BYTE      configurationValue4;          /* LSB */
7248      =5  } ZW_CONFIGURATION_SET_4BYTE_FRAME;
7249      =5  
7250      =5  /************************************************************/
7251      =5  /* Configuration Bulk Get V2 command class structs */       
7252      =5  /************************************************************/
7253      =5  typedef struct _ZW_CONFIGURATION_BULK_GET_V2_FRAME_
7254      =5  {
7255      =5      BYTE      cmdClass;                     /* The command class */
7256      =5      BYTE      cmd;                          /* The command */
7257      =5      BYTE      parameterOffset1;             /* MSB */
7258      =5      BYTE      parameterOffset2;             /* LSB */
7259      =5      BYTE      numberOfParameters;           /**/
7260      =5  } ZW_CONFIGURATION_BULK_GET_V2_FRAME;
7261      =5  
7262      =5  /************************************************************/
7263      =5  /* Configuration Bulk Report V2 variant group structs */    
7264      =5  /************************************************************/
7265      =5  typedef struct _VG_CONFIGURATION_BULK_REPORT_1BYTE_V2_VG_
7266      =5  {
7267      =5      BYTE      parameter1;                   
7268      =5  } VG_CONFIGURATION_BULK_REPORT_1BYTE_V2_VG;
7269      =5  
7270      =5  /************************************************************/
7271      =5  /* Configuration Bulk Report V2 variant group structs */    
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 146 

7272      =5  /************************************************************/
7273      =5  typedef struct _VG_CONFIGURATION_BULK_REPORT_2BYTE_V2_VG_
7274      =5  {
7275      =5      BYTE      parameter1;                   /* MSB */
7276      =5      BYTE      parameter2;                   /* LSB */
7277      =5  } VG_CONFIGURATION_BULK_REPORT_2BYTE_V2_VG;
7278      =5  
7279      =5  /************************************************************/
7280      =5  /* Configuration Bulk Report V2 variant group structs */    
7281      =5  /************************************************************/
7282      =5  typedef struct _VG_CONFIGURATION_BULK_REPORT_3BYTE_V2_VG_
7283      =5  {
7284      =5      BYTE      parameter1;                   /* MSB */
7285      =5      BYTE      parameter2;                   
7286      =5      BYTE      parameter3;                   /* LSB */
7287      =5  } VG_CONFIGURATION_BULK_REPORT_3BYTE_V2_VG;
7288      =5  
7289      =5  /************************************************************/
7290      =5  /* Configuration Bulk Report V2 variant group structs */    
7291      =5  /************************************************************/
7292      =5  typedef struct _VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG_
7293      =5  {
7294      =5      BYTE      parameter1;                   /* MSB */
7295      =5      BYTE      parameter2;                   
7296      =5      BYTE      parameter3;                   
7297      =5      BYTE      parameter4;                   /* LSB */
7298      =5  } VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG;
7299      =5  
7300      =5  /************************************************************/
7301      =5  /* Configuration Bulk Report 1byte V2 command class structs */
7302      =5  /************************************************************/
7303      =5  typedef struct _ZW_CONFIGURATION_BULK_REPORT_1BYTE_V2_FRAME_
7304      =5  {
7305      =5      BYTE      cmdClass;                     /* The command class */
7306      =5      BYTE      cmd;                          /* The command */
7307      =5      BYTE      parameterOffset1;             /* MSB */
7308      =5      BYTE      parameterOffset2;             /* LSB */
7309      =5      BYTE      numberOfParameters;           /**/
7310      =5      BYTE      reportsToFollow;              /**/
7311      =5      BYTE      properties1;                  /* masked byte */
7312      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup1;                /**/
7313      =5  } ZW_CONFIGURATION_BULK_REPORT_1BYTE_V2_FRAME;
7314      =5  
7315      =5  /************************************************************/
7316      =5  /* Configuration Bulk Report 2byte V2 command class structs */
7317      =5  /************************************************************/
7318      =5  typedef struct _ZW_CONFIGURATION_BULK_REPORT_2BYTE_V2_FRAME_
7319      =5  {
7320      =5      BYTE      cmdClass;                     /* The command class */
7321      =5      BYTE      cmd;                          /* The command */
7322      =5      BYTE      parameterOffset1;             /* MSB */
7323      =5      BYTE      parameterOffset2;             /* LSB */
7324      =5      BYTE      numberOfParameters;           /**/
7325      =5      BYTE      reportsToFollow;              /**/
7326      =5      BYTE      properties1;                  /* masked byte */
7327      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup1;                /**/
7328      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup2;                /**/
7329      =5  } ZW_CONFIGURATION_BULK_REPORT_2BYTE_V2_FRAME;
7330      =5  
7331      =5  /************************************************************/
7332      =5  /* Configuration Bulk Report 3byte V2 command class structs */
7333      =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 147 

7334      =5  typedef struct _ZW_CONFIGURATION_BULK_REPORT_3BYTE_V2_FRAME_
7335      =5  {
7336      =5      BYTE      cmdClass;                     /* The command class */
7337      =5      BYTE      cmd;                          /* The command */
7338      =5      BYTE      parameterOffset1;             /* MSB */
7339      =5      BYTE      parameterOffset2;             /* LSB */
7340      =5      BYTE      numberOfParameters;           /**/
7341      =5      BYTE      reportsToFollow;              /**/
7342      =5      BYTE      properties1;                  /* masked byte */
7343      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup1;                /**/
7344      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup2;                /**/
7345      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup3;                /**/
7346      =5  } ZW_CONFIGURATION_BULK_REPORT_3BYTE_V2_FRAME;
7347      =5  
7348      =5  /************************************************************/
7349      =5  /* Configuration Bulk Report 4byte V2 command class structs */
7350      =5  /************************************************************/
7351      =5  typedef struct _ZW_CONFIGURATION_BULK_REPORT_4BYTE_V2_FRAME_
7352      =5  {
7353      =5      BYTE      cmdClass;                     /* The command class */
7354      =5      BYTE      cmd;                          /* The command */
7355      =5      BYTE      parameterOffset1;             /* MSB */
7356      =5      BYTE      parameterOffset2;             /* LSB */
7357      =5      BYTE      numberOfParameters;           /**/
7358      =5      BYTE      reportsToFollow;              /**/
7359      =5      BYTE      properties1;                  /* masked byte */
7360      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup1;                /**/
7361      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup2;                /**/
7362      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup3;                /**/
7363      =5      VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup4;                /**/
7364      =5  } ZW_CONFIGURATION_BULK_REPORT_4BYTE_V2_FRAME;
7365      =5  
7366      =5  /************************************************************/
7367      =5  /* Configuration Bulk Set V2 variant group structs */       
7368      =5  /************************************************************/
7369      =5  typedef struct _VG_CONFIGURATION_BULK_SET_1BYTE_V2_VG_
7370      =5  {
7371      =5      BYTE      parameter1;                   
7372      =5  } VG_CONFIGURATION_BULK_SET_1BYTE_V2_VG;
7373      =5  
7374      =5  /************************************************************/
7375      =5  /* Configuration Bulk Set V2 variant group structs */       
7376      =5  /************************************************************/
7377      =5  typedef struct _VG_CONFIGURATION_BULK_SET_2BYTE_V2_VG_
7378      =5  {
7379      =5      BYTE      parameter1;                   /* MSB */
7380      =5      BYTE      parameter2;                   /* LSB */
7381      =5  } VG_CONFIGURATION_BULK_SET_2BYTE_V2_VG;
7382      =5  
7383      =5  /************************************************************/
7384      =5  /* Configuration Bulk Set V2 variant group structs */       
7385      =5  /************************************************************/
7386      =5  typedef struct _VG_CONFIGURATION_BULK_SET_3BYTE_V2_VG_
7387      =5  {
7388      =5      BYTE      parameter1;                   /* MSB */
7389      =5      BYTE      parameter2;                   
7390      =5      BYTE      parameter3;                   /* LSB */
7391      =5  } VG_CONFIGURATION_BULK_SET_3BYTE_V2_VG;
7392      =5  
7393      =5  /************************************************************/
7394      =5  /* Configuration Bulk Set V2 variant group structs */       
7395      =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 148 

7396      =5  typedef struct _VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG_
7397      =5  {
7398      =5      BYTE      parameter1;                   /* MSB */
7399      =5      BYTE      parameter2;                   
7400      =5      BYTE      parameter3;                   
7401      =5      BYTE      parameter4;                   /* LSB */
7402      =5  } VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG;
7403      =5  
7404      =5  /************************************************************/
7405      =5  /* Configuration Bulk Set 1byte V2 command class structs */ 
7406      =5  /************************************************************/
7407      =5  typedef struct _ZW_CONFIGURATION_BULK_SET_1BYTE_V2_FRAME_
7408      =5  {
7409      =5      BYTE      cmdClass;                     /* The command class */
7410      =5      BYTE      cmd;                          /* The command */
7411      =5      BYTE      parameterOffset1;             /* MSB */
7412      =5      BYTE      parameterOffset2;             /* LSB */
7413      =5      BYTE      numberOfParameters;           /**/
7414      =5      BYTE      properties1;                  /* masked byte */
7415      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup1;                /**/
7416      =5  } ZW_CONFIGURATION_BULK_SET_1BYTE_V2_FRAME;
7417      =5  
7418      =5  /************************************************************/
7419      =5  /* Configuration Bulk Set 2byte V2 command class structs */ 
7420      =5  /************************************************************/
7421      =5  typedef struct _ZW_CONFIGURATION_BULK_SET_2BYTE_V2_FRAME_
7422      =5  {
7423      =5      BYTE      cmdClass;                     /* The command class */
7424      =5      BYTE      cmd;                          /* The command */
7425      =5      BYTE      parameterOffset1;             /* MSB */
7426      =5      BYTE      parameterOffset2;             /* LSB */
7427      =5      BYTE      numberOfParameters;           /**/
7428      =5      BYTE      properties1;                  /* masked byte */
7429      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup1;                /**/
7430      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup2;                /**/
7431      =5  } ZW_CONFIGURATION_BULK_SET_2BYTE_V2_FRAME;
7432      =5  
7433      =5  /************************************************************/
7434      =5  /* Configuration Bulk Set 3byte V2 command class structs */ 
7435      =5  /************************************************************/
7436      =5  typedef struct _ZW_CONFIGURATION_BULK_SET_3BYTE_V2_FRAME_
7437      =5  {
7438      =5      BYTE      cmdClass;                     /* The command class */
7439      =5      BYTE      cmd;                          /* The command */
7440      =5      BYTE      parameterOffset1;             /* MSB */
7441      =5      BYTE      parameterOffset2;             /* LSB */
7442      =5      BYTE      numberOfParameters;           /**/
7443      =5      BYTE      properties1;                  /* masked byte */
7444      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup1;                /**/
7445      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup2;                /**/
7446      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup3;                /**/
7447      =5  } ZW_CONFIGURATION_BULK_SET_3BYTE_V2_FRAME;
7448      =5  
7449      =5  /************************************************************/
7450      =5  /* Configuration Bulk Set 4byte V2 command class structs */ 
7451      =5  /************************************************************/
7452      =5  typedef struct _ZW_CONFIGURATION_BULK_SET_4BYTE_V2_FRAME_
7453      =5  {
7454      =5      BYTE      cmdClass;                     /* The command class */
7455      =5      BYTE      cmd;                          /* The command */
7456      =5      BYTE      parameterOffset1;             /* MSB */
7457      =5      BYTE      parameterOffset2;             /* LSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 149 

7458      =5      BYTE      numberOfParameters;           /**/
7459      =5      BYTE      properties1;                  /* masked byte */
7460      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup1;                /**/
7461      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup2;                /**/
7462      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup3;                /**/
7463      =5      VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup4;                /**/
7464      =5  } ZW_CONFIGURATION_BULK_SET_4BYTE_V2_FRAME;
7465      =5  
7466      =5  /************************************************************/
7467      =5  /* Configuration Get V2 command class structs */            
7468      =5  /************************************************************/
7469      =5  typedef struct _ZW_CONFIGURATION_GET_V2_FRAME_
7470      =5  {
7471      =5      BYTE      cmdClass;                     /* The command class */
7472      =5      BYTE      cmd;                          /* The command */
7473      =5      BYTE      parameterNumber;              /**/
7474      =5  } ZW_CONFIGURATION_GET_V2_FRAME;
7475      =5  
7476      =5  /************************************************************/
7477      =5  /* Configuration Report 1byte V2 command class structs */   
7478      =5  /************************************************************/
7479      =5  typedef struct _ZW_CONFIGURATION_REPORT_1BYTE_V2_FRAME_
7480      =5  {
7481      =5      BYTE      cmdClass;                     /* The command class */
7482      =5      BYTE      cmd;                          /* The command */
7483      =5      BYTE      parameterNumber;              /**/
7484      =5      BYTE      level;                        /* masked byte */
7485      =5      BYTE      configurationValue1;          
7486      =5  } ZW_CONFIGURATION_REPORT_1BYTE_V2_FRAME;
7487      =5  
7488      =5  /************************************************************/
7489      =5  /* Configuration Report 2byte V2 command class structs */   
7490      =5  /************************************************************/
7491      =5  typedef struct _ZW_CONFIGURATION_REPORT_2BYTE_V2_FRAME_
7492      =5  {
7493      =5      BYTE      cmdClass;                     /* The command class */
7494      =5      BYTE      cmd;                          /* The command */
7495      =5      BYTE      parameterNumber;              /**/
7496      =5      BYTE      level;                        /* masked byte */
7497      =5      BYTE      configurationValue1;          /* MSB */
7498      =5      BYTE      configurationValue2;          /* LSB */
7499      =5  } ZW_CONFIGURATION_REPORT_2BYTE_V2_FRAME;
7500      =5  
7501      =5  /************************************************************/
7502      =5  /* Configuration Report 3byte V2 command class structs */   
7503      =5  /************************************************************/
7504      =5  typedef struct _ZW_CONFIGURATION_REPORT_3BYTE_V2_FRAME_
7505      =5  {
7506      =5      BYTE      cmdClass;                     /* The command class */
7507      =5      BYTE      cmd;                          /* The command */
7508      =5      BYTE      parameterNumber;              /**/
7509      =5      BYTE      level;                        /* masked byte */
7510      =5      BYTE      configurationValue1;          /* MSB */
7511      =5      BYTE      configurationValue2;          
7512      =5      BYTE      configurationValue3;          /* LSB */
7513      =5  } ZW_CONFIGURATION_REPORT_3BYTE_V2_FRAME;
7514      =5  
7515      =5  /************************************************************/
7516      =5  /* Configuration Report 4byte V2 command class structs */   
7517      =5  /************************************************************/
7518      =5  typedef struct _ZW_CONFIGURATION_REPORT_4BYTE_V2_FRAME_
7519      =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 150 

7520      =5      BYTE      cmdClass;                     /* The command class */
7521      =5      BYTE      cmd;                          /* The command */
7522      =5      BYTE      parameterNumber;              /**/
7523      =5      BYTE      level;                        /* masked byte */
7524      =5      BYTE      configurationValue1;          /* MSB */
7525      =5      BYTE      configurationValue2;          
7526      =5      BYTE      configurationValue3;          
7527      =5      BYTE      configurationValue4;          /* LSB */
7528      =5  } ZW_CONFIGURATION_REPORT_4BYTE_V2_FRAME;
7529      =5  
7530      =5  /************************************************************/
7531      =5  /* Configuration Set 1byte V2 command class structs */      
7532      =5  /************************************************************/
7533      =5  typedef struct _ZW_CONFIGURATION_SET_1BYTE_V2_FRAME_
7534      =5  {
7535      =5      BYTE      cmdClass;                     /* The command class */
7536      =5      BYTE      cmd;                          /* The command */
7537      =5      BYTE      parameterNumber;              /**/
7538      =5      BYTE      level;                        /* masked byte */
7539      =5      BYTE      configurationValue1;          
7540      =5  } ZW_CONFIGURATION_SET_1BYTE_V2_FRAME;
7541      =5  
7542      =5  /************************************************************/
7543      =5  /* Configuration Set 2byte V2 command class structs */      
7544      =5  /************************************************************/
7545      =5  typedef struct _ZW_CONFIGURATION_SET_2BYTE_V2_FRAME_
7546      =5  {
7547      =5      BYTE      cmdClass;                     /* The command class */
7548      =5      BYTE      cmd;                          /* The command */
7549      =5      BYTE      parameterNumber;              /**/
7550      =5      BYTE      level;                        /* masked byte */
7551      =5      BYTE      configurationValue1;          /* MSB */
7552      =5      BYTE      configurationValue2;          /* LSB */
7553      =5  } ZW_CONFIGURATION_SET_2BYTE_V2_FRAME;
7554      =5  
7555      =5  /************************************************************/
7556      =5  /* Configuration Set 3byte V2 command class structs */      
7557      =5  /************************************************************/
7558      =5  typedef struct _ZW_CONFIGURATION_SET_3BYTE_V2_FRAME_
7559      =5  {
7560      =5      BYTE      cmdClass;                     /* The command class */
7561      =5      BYTE      cmd;                          /* The command */
7562      =5      BYTE      parameterNumber;              /**/
7563      =5      BYTE      level;                        /* masked byte */
7564      =5      BYTE      configurationValue1;          /* MSB */
7565      =5      BYTE      configurationValue2;          
7566      =5      BYTE      configurationValue3;          /* LSB */
7567      =5  } ZW_CONFIGURATION_SET_3BYTE_V2_FRAME;
7568      =5  
7569      =5  /************************************************************/
7570      =5  /* Configuration Set 4byte V2 command class structs */      
7571      =5  /************************************************************/
7572      =5  typedef struct _ZW_CONFIGURATION_SET_4BYTE_V2_FRAME_
7573      =5  {
7574      =5      BYTE      cmdClass;                     /* The command class */
7575      =5      BYTE      cmd;                          /* The command */
7576      =5      BYTE      parameterNumber;              /**/
7577      =5      BYTE      level;                        /* masked byte */
7578      =5      BYTE      configurationValue1;          /* MSB */
7579      =5      BYTE      configurationValue2;          
7580      =5      BYTE      configurationValue3;          
7581      =5      BYTE      configurationValue4;          /* LSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 151 

7582      =5  } ZW_CONFIGURATION_SET_4BYTE_V2_FRAME;
7583      =5  
7584      =5  /************************************************************/
7585      =5  /* Ctrl Replication Transfer Group command class structs */ 
7586      =5  /************************************************************/
7587      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_FRAME_
7588      =5  {
7589      =5      BYTE      cmdClass;                     /* The command class */
7590      =5      BYTE      cmd;                          /* The command */
7591      =5      BYTE      sequenceNumber;               /**/
7592      =5      BYTE      groupId;                      /**/
7593      =5      BYTE      nodeId;                       /**/
7594      =5  } ZW_CTRL_REPLICATION_TRANSFER_GROUP_FRAME;
7595      =5  
7596      =5  /************************************************************/
7597      =5  /* Ctrl Replication Transfer Group Name 1byte command class structs */
7598      =5  /************************************************************/
7599      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_1BYTE_FRAME_
7600      =5  {
7601      =5      BYTE      cmdClass;                     /* The command class */
7602      =5      BYTE      cmd;                          /* The command */
7603      =5      BYTE      sequenceNumber;               /**/
7604      =5      BYTE      groupId;                      /**/
7605      =5      BYTE      groupName1;                   
7606      =5  } ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_1BYTE_FRAME;
7607      =5  
7608      =5  /************************************************************/
7609      =5  /* Ctrl Replication Transfer Group Name 2byte command class structs */
7610      =5  /************************************************************/
7611      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_2BYTE_FRAME_
7612      =5  {
7613      =5      BYTE      cmdClass;                     /* The command class */
7614      =5      BYTE      cmd;                          /* The command */
7615      =5      BYTE      sequenceNumber;               /**/
7616      =5      BYTE      groupId;                      /**/
7617      =5      BYTE      groupName1;                   /* MSB */
7618      =5      BYTE      groupName2;                   /* LSB */
7619      =5  } ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_2BYTE_FRAME;
7620      =5  
7621      =5  /************************************************************/
7622      =5  /* Ctrl Replication Transfer Group Name 3byte command class structs */
7623      =5  /************************************************************/
7624      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_3BYTE_FRAME_
7625      =5  {
7626      =5      BYTE      cmdClass;                     /* The command class */
7627      =5      BYTE      cmd;                          /* The command */
7628      =5      BYTE      sequenceNumber;               /**/
7629      =5      BYTE      groupId;                      /**/
7630      =5      BYTE      groupName1;                   /* MSB */
7631      =5      BYTE      groupName2;                   
7632      =5      BYTE      groupName3;                   /* LSB */
7633      =5  } ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_3BYTE_FRAME;
7634      =5  
7635      =5  /************************************************************/
7636      =5  /* Ctrl Replication Transfer Group Name 4byte command class structs */
7637      =5  /************************************************************/
7638      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_4BYTE_FRAME_
7639      =5  {
7640      =5      BYTE      cmdClass;                     /* The command class */
7641      =5      BYTE      cmd;                          /* The command */
7642      =5      BYTE      sequenceNumber;               /**/
7643      =5      BYTE      groupId;                      /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 152 

7644      =5      BYTE      groupName1;                   /* MSB */
7645      =5      BYTE      groupName2;                   
7646      =5      BYTE      groupName3;                   
7647      =5      BYTE      groupName4;                   /* LSB */
7648      =5  } ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_4BYTE_FRAME;
7649      =5  
7650      =5  /************************************************************/
7651      =5  /* Ctrl Replication Transfer Scene command class structs */ 
7652      =5  /************************************************************/
7653      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_FRAME_
7654      =5  {
7655      =5      BYTE      cmdClass;                     /* The command class */
7656      =5      BYTE      cmd;                          /* The command */
7657      =5      BYTE      sequenceNumber;               /**/
7658      =5      BYTE      sceneId;                      /**/
7659      =5      BYTE      nodeId;                       /**/
7660      =5      BYTE      level;                        /**/
7661      =5  } ZW_CTRL_REPLICATION_TRANSFER_SCENE_FRAME;
7662      =5  
7663      =5  /************************************************************/
7664      =5  /* Ctrl Replication Transfer Scene Name 1byte command class structs */
7665      =5  /************************************************************/
7666      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_1BYTE_FRAME_
7667      =5  {
7668      =5      BYTE      cmdClass;                     /* The command class */
7669      =5      BYTE      cmd;                          /* The command */
7670      =5      BYTE      sequenceNumber;               /**/
7671      =5      BYTE      sceneId;                      /**/
7672      =5      BYTE      sceneName1;                   
7673      =5  } ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_1BYTE_FRAME;
7674      =5  
7675      =5  /************************************************************/
7676      =5  /* Ctrl Replication Transfer Scene Name 2byte command class structs */
7677      =5  /************************************************************/
7678      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_2BYTE_FRAME_
7679      =5  {
7680      =5      BYTE      cmdClass;                     /* The command class */
7681      =5      BYTE      cmd;                          /* The command */
7682      =5      BYTE      sequenceNumber;               /**/
7683      =5      BYTE      sceneId;                      /**/
7684      =5      BYTE      sceneName1;                   /* MSB */
7685      =5      BYTE      sceneName2;                   /* LSB */
7686      =5  } ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_2BYTE_FRAME;
7687      =5  
7688      =5  /************************************************************/
7689      =5  /* Ctrl Replication Transfer Scene Name 3byte command class structs */
7690      =5  /************************************************************/
7691      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_3BYTE_FRAME_
7692      =5  {
7693      =5      BYTE      cmdClass;                     /* The command class */
7694      =5      BYTE      cmd;                          /* The command */
7695      =5      BYTE      sequenceNumber;               /**/
7696      =5      BYTE      sceneId;                      /**/
7697      =5      BYTE      sceneName1;                   /* MSB */
7698      =5      BYTE      sceneName2;                   
7699      =5      BYTE      sceneName3;                   /* LSB */
7700      =5  } ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_3BYTE_FRAME;
7701      =5  
7702      =5  /************************************************************/
7703      =5  /* Ctrl Replication Transfer Scene Name 4byte command class structs */
7704      =5  /************************************************************/
7705      =5  typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_4BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 153 

7706      =5  {
7707      =5      BYTE      cmdClass;                     /* The command class */
7708      =5      BYTE      cmd;                          /* The command */
7709      =5      BYTE      sequenceNumber;               /**/
7710      =5      BYTE      sceneId;                      /**/
7711      =5      BYTE      sceneName1;                   /* MSB */
7712      =5      BYTE      sceneName2;                   
7713      =5      BYTE      sceneName3;                   
7714      =5      BYTE      sceneName4;                   /* LSB */
7715      =5  } ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_4BYTE_FRAME;
7716      =5  
7717      =5  /************************************************************/
7718      =5  /* Crc 16 Encap 1byte command class structs */              
7719      =5  /************************************************************/
7720      =5  typedef struct _ZW_CRC_16_ENCAP_1BYTE_FRAME_
7721      =5  {
7722      =5      BYTE      cmdClass;                     /* The command class */
7723      =5      BYTE      cmd;                          /* The command */
7724      =5      BYTE      commandClass;                 /**/
7725      =5      BYTE      command;                      /**/
7726      =5      BYTE      data1;                        
7727      =5      BYTE      checksum1;                    /* MSB */
7728      =5      BYTE      checksum2;                    /* LSB */
7729      =5  } ZW_CRC_16_ENCAP_1BYTE_FRAME;
7730      =5  
7731      =5  /************************************************************/
7732      =5  /* Crc 16 Encap 2byte command class structs */              
7733      =5  /************************************************************/
7734      =5  typedef struct _ZW_CRC_16_ENCAP_2BYTE_FRAME_
7735      =5  {
7736      =5      BYTE      cmdClass;                     /* The command class */
7737      =5      BYTE      cmd;                          /* The command */
7738      =5      BYTE      commandClass;                 /**/
7739      =5      BYTE      command;                      /**/
7740      =5      BYTE      data1;                        /* MSB */
7741      =5      BYTE      data2;                        /* LSB */
7742      =5      BYTE      checksum1;                    /* MSB */
7743      =5      BYTE      checksum2;                    /* LSB */
7744      =5  } ZW_CRC_16_ENCAP_2BYTE_FRAME;
7745      =5  
7746      =5  /************************************************************/
7747      =5  /* Crc 16 Encap 3byte command class structs */              
7748      =5  /************************************************************/
7749      =5  typedef struct _ZW_CRC_16_ENCAP_3BYTE_FRAME_
7750      =5  {
7751      =5      BYTE      cmdClass;                     /* The command class */
7752      =5      BYTE      cmd;                          /* The command */
7753      =5      BYTE      commandClass;                 /**/
7754      =5      BYTE      command;                      /**/
7755      =5      BYTE      data1;                        /* MSB */
7756      =5      BYTE      data2;                        
7757      =5      BYTE      data3;                        /* LSB */
7758      =5      BYTE      checksum1;                    /* MSB */
7759      =5      BYTE      checksum2;                    /* LSB */
7760      =5  } ZW_CRC_16_ENCAP_3BYTE_FRAME;
7761      =5  
7762      =5  /************************************************************/
7763      =5  /* Crc 16 Encap 4byte command class structs */              
7764      =5  /************************************************************/
7765      =5  typedef struct _ZW_CRC_16_ENCAP_4BYTE_FRAME_
7766      =5  {
7767      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 154 

7768      =5      BYTE      cmd;                          /* The command */
7769      =5      BYTE      commandClass;                 /**/
7770      =5      BYTE      command;                      /**/
7771      =5      BYTE      data1;                        /* MSB */
7772      =5      BYTE      data2;                        
7773      =5      BYTE      data3;                        
7774      =5      BYTE      data4;                        /* LSB */
7775      =5      BYTE      checksum1;                    /* MSB */
7776      =5      BYTE      checksum2;                    /* LSB */
7777      =5  } ZW_CRC_16_ENCAP_4BYTE_FRAME;
7778      =5  
7779      =5  /************************************************************/
7780      =5  /* Dcp List Remove command class structs */                 
7781      =5  /************************************************************/
7782      =5  typedef struct _ZW_DCP_LIST_REMOVE_FRAME_
7783      =5  {
7784      =5      BYTE      cmdClass;                     /* The command class */
7785      =5      BYTE      cmd;                          /* The command */
7786      =5      BYTE      year1;                        /* MSB */
7787      =5      BYTE      year2;                        /* LSB */
7788      =5      BYTE      month;                        /**/
7789      =5      BYTE      day;                          /**/
7790      =5      BYTE      hourLocalTime;                /**/
7791      =5      BYTE      minuteLocalTime;              /**/
7792      =5      BYTE      secondLocalTime;              /**/
7793      =5  } ZW_DCP_LIST_REMOVE_FRAME;
7794      =5  
7795      =5  /************************************************************/
7796      =5  /* Dcp List Set variant group structs */                    
7797      =5  /************************************************************/
7798      =5  typedef struct _VG_DCP_LIST_SET_VG_
7799      =5  {
7800      =5      BYTE      genericDeviceClass;           /**/
7801      =5      BYTE      specificDeviceClass;          /**/
7802      =5  } VG_DCP_LIST_SET_VG;
7803      =5  
7804      =5  /************************************************************/
7805      =5  /* Dcp List Set 1byte command class structs */              
7806      =5  /************************************************************/
7807      =5  typedef struct _ZW_DCP_LIST_SET_1BYTE_FRAME_
7808      =5  {
7809      =5      BYTE      cmdClass;                     /* The command class */
7810      =5      BYTE      cmd;                          /* The command */
7811      =5      BYTE      year1;                        /* MSB */
7812      =5      BYTE      year2;                        /* LSB */
7813      =5      BYTE      month;                        /**/
7814      =5      BYTE      day;                          /**/
7815      =5      BYTE      hourLocalTime;                /**/
7816      =5      BYTE      minuteLocalTime;              /**/
7817      =5      BYTE      secondLocalTime;              /**/
7818      =5      BYTE      dcpRateId;                    /**/
7819      =5      BYTE      properties1;                  /* masked byte */
7820      =5      VG_DCP_LIST_SET_VG variantgroup1;                /**/
7821      =5      BYTE      startYear1;                   /* MSB */
7822      =5      BYTE      startYear2;                   /* LSB */
7823      =5      BYTE      startMonth;                   /**/
7824      =5      BYTE      startDay;                     /**/
7825      =5      BYTE      startHourLocalTime;           /**/
7826      =5      BYTE      startMinuteLocalTime;         /**/
7827      =5      BYTE      startSecondLocalTime;         /**/
7828      =5      BYTE      durationHourTime;             /**/
7829      =5      BYTE      durationMinuteTime;           /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 155 

7830      =5      BYTE      durationSecondTime;           /**/
7831      =5      BYTE      eventPriority;                /**/
7832      =5      BYTE      loadShedding;                 /**/
7833      =5      BYTE      startAssociationGroup;        /**/
7834      =5      BYTE      stopAssociationGroup;         /**/
7835      =5      BYTE      randomizationInterval;        /**/
7836      =5  } ZW_DCP_LIST_SET_1BYTE_FRAME;
7837      =5  
7838      =5  /************************************************************/
7839      =5  /* Dcp List Set 2byte command class structs */              
7840      =5  /************************************************************/
7841      =5  typedef struct _ZW_DCP_LIST_SET_2BYTE_FRAME_
7842      =5  {
7843      =5      BYTE      cmdClass;                     /* The command class */
7844      =5      BYTE      cmd;                          /* The command */
7845      =5      BYTE      year1;                        /* MSB */
7846      =5      BYTE      year2;                        /* LSB */
7847      =5      BYTE      month;                        /**/
7848      =5      BYTE      day;                          /**/
7849      =5      BYTE      hourLocalTime;                /**/
7850      =5      BYTE      minuteLocalTime;              /**/
7851      =5      BYTE      secondLocalTime;              /**/
7852      =5      BYTE      dcpRateId;                    /**/
7853      =5      BYTE      properties1;                  /* masked byte */
7854      =5      VG_DCP_LIST_SET_VG variantgroup1;                /**/
7855      =5      VG_DCP_LIST_SET_VG variantgroup2;                /**/
7856      =5      BYTE      startYear1;                   /* MSB */
7857      =5      BYTE      startYear2;                   /* LSB */
7858      =5      BYTE      startMonth;                   /**/
7859      =5      BYTE      startDay;                     /**/
7860      =5      BYTE      startHourLocalTime;           /**/
7861      =5      BYTE      startMinuteLocalTime;         /**/
7862      =5      BYTE      startSecondLocalTime;         /**/
7863      =5      BYTE      durationHourTime;             /**/
7864      =5      BYTE      durationMinuteTime;           /**/
7865      =5      BYTE      durationSecondTime;           /**/
7866      =5      BYTE      eventPriority;                /**/
7867      =5      BYTE      loadShedding;                 /**/
7868      =5      BYTE      startAssociationGroup;        /**/
7869      =5      BYTE      stopAssociationGroup;         /**/
7870      =5      BYTE      randomizationInterval;        /**/
7871      =5  } ZW_DCP_LIST_SET_2BYTE_FRAME;
7872      =5  
7873      =5  /************************************************************/
7874      =5  /* Dcp List Set 3byte command class structs */              
7875      =5  /************************************************************/
7876      =5  typedef struct _ZW_DCP_LIST_SET_3BYTE_FRAME_
7877      =5  {
7878      =5      BYTE      cmdClass;                     /* The command class */
7879      =5      BYTE      cmd;                          /* The command */
7880      =5      BYTE      year1;                        /* MSB */
7881      =5      BYTE      year2;                        /* LSB */
7882      =5      BYTE      month;                        /**/
7883      =5      BYTE      day;                          /**/
7884      =5      BYTE      hourLocalTime;                /**/
7885      =5      BYTE      minuteLocalTime;              /**/
7886      =5      BYTE      secondLocalTime;              /**/
7887      =5      BYTE      dcpRateId;                    /**/
7888      =5      BYTE      properties1;                  /* masked byte */
7889      =5      VG_DCP_LIST_SET_VG variantgroup1;                /**/
7890      =5      VG_DCP_LIST_SET_VG variantgroup2;                /**/
7891      =5      VG_DCP_LIST_SET_VG variantgroup3;                /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 156 

7892      =5      BYTE      startYear1;                   /* MSB */
7893      =5      BYTE      startYear2;                   /* LSB */
7894      =5      BYTE      startMonth;                   /**/
7895      =5      BYTE      startDay;                     /**/
7896      =5      BYTE      startHourLocalTime;           /**/
7897      =5      BYTE      startMinuteLocalTime;         /**/
7898      =5      BYTE      startSecondLocalTime;         /**/
7899      =5      BYTE      durationHourTime;             /**/
7900      =5      BYTE      durationMinuteTime;           /**/
7901      =5      BYTE      durationSecondTime;           /**/
7902      =5      BYTE      eventPriority;                /**/
7903      =5      BYTE      loadShedding;                 /**/
7904      =5      BYTE      startAssociationGroup;        /**/
7905      =5      BYTE      stopAssociationGroup;         /**/
7906      =5      BYTE      randomizationInterval;        /**/
7907      =5  } ZW_DCP_LIST_SET_3BYTE_FRAME;
7908      =5  
7909      =5  /************************************************************/
7910      =5  /* Dcp List Set 4byte command class structs */              
7911      =5  /************************************************************/
7912      =5  typedef struct _ZW_DCP_LIST_SET_4BYTE_FRAME_
7913      =5  {
7914      =5      BYTE      cmdClass;                     /* The command class */
7915      =5      BYTE      cmd;                          /* The command */
7916      =5      BYTE      year1;                        /* MSB */
7917      =5      BYTE      year2;                        /* LSB */
7918      =5      BYTE      month;                        /**/
7919      =5      BYTE      day;                          /**/
7920      =5      BYTE      hourLocalTime;                /**/
7921      =5      BYTE      minuteLocalTime;              /**/
7922      =5      BYTE      secondLocalTime;              /**/
7923      =5      BYTE      dcpRateId;                    /**/
7924      =5      BYTE      properties1;                  /* masked byte */
7925      =5      VG_DCP_LIST_SET_VG variantgroup1;                /**/
7926      =5      VG_DCP_LIST_SET_VG variantgroup2;                /**/
7927      =5      VG_DCP_LIST_SET_VG variantgroup3;                /**/
7928      =5      VG_DCP_LIST_SET_VG variantgroup4;                /**/
7929      =5      BYTE      startYear1;                   /* MSB */
7930      =5      BYTE      startYear2;                   /* LSB */
7931      =5      BYTE      startMonth;                   /**/
7932      =5      BYTE      startDay;                     /**/
7933      =5      BYTE      startHourLocalTime;           /**/
7934      =5      BYTE      startMinuteLocalTime;         /**/
7935      =5      BYTE      startSecondLocalTime;         /**/
7936      =5      BYTE      durationHourTime;             /**/
7937      =5      BYTE      durationMinuteTime;           /**/
7938      =5      BYTE      durationSecondTime;           /**/
7939      =5      BYTE      eventPriority;                /**/
7940      =5      BYTE      loadShedding;                 /**/
7941      =5      BYTE      startAssociationGroup;        /**/
7942      =5      BYTE      stopAssociationGroup;         /**/
7943      =5      BYTE      randomizationInterval;        /**/
7944      =5  } ZW_DCP_LIST_SET_4BYTE_FRAME;
7945      =5  
7946      =5  /************************************************************/
7947      =5  /* Dcp List Supported Get command class structs */          
7948      =5  /************************************************************/
7949      =5  typedef struct _ZW_DCP_LIST_SUPPORTED_GET_FRAME_
7950      =5  {
7951      =5      BYTE      cmdClass;                     /* The command class */
7952      =5      BYTE      cmd;                          /* The command */
7953      =5  } ZW_DCP_LIST_SUPPORTED_GET_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 157 

7954      =5  
7955      =5  /************************************************************/
7956      =5  /* Dcp List Supported Report command class structs */       
7957      =5  /************************************************************/
7958      =5  typedef struct _ZW_DCP_LIST_SUPPORTED_REPORT_FRAME_
7959      =5  {
7960      =5      BYTE      cmdClass;                     /* The command class */
7961      =5      BYTE      cmd;                          /* The command */
7962      =5      BYTE      dcpListSize;                  /**/
7963      =5      BYTE      freeDcpListEntries;           /**/
7964      =5  } ZW_DCP_LIST_SUPPORTED_REPORT_FRAME;
7965      =5  
7966      =5  /************************************************************/
7967      =5  /* Dcp Event Status Get command class structs */            
7968      =5  /************************************************************/
7969      =5  typedef struct _ZW_DCP_EVENT_STATUS_GET_FRAME_
7970      =5  {
7971      =5      BYTE      cmdClass;                     /* The command class */
7972      =5      BYTE      cmd;                          /* The command */
7973      =5      BYTE      year1;                        /* MSB */
7974      =5      BYTE      year2;                        /* LSB */
7975      =5      BYTE      month;                        /**/
7976      =5      BYTE      day;                          /**/
7977      =5      BYTE      hourLocalTime;                /**/
7978      =5      BYTE      minuteLocalTime;              /**/
7979      =5      BYTE      secondLocalTime;              /**/
7980      =5  } ZW_DCP_EVENT_STATUS_GET_FRAME;
7981      =5  
7982      =5  /************************************************************/
7983      =5  /* Dcp Event Status Report command class structs */         
7984      =5  /************************************************************/
7985      =5  typedef struct _ZW_DCP_EVENT_STATUS_REPORT_FRAME_
7986      =5  {
7987      =5      BYTE      cmdClass;                     /* The command class */
7988      =5      BYTE      cmd;                          /* The command */
7989      =5      BYTE      year1;                        /* MSB */
7990      =5      BYTE      year2;                        /* LSB */
7991      =5      BYTE      month;                        /**/
7992      =5      BYTE      day;                          /**/
7993      =5      BYTE      hourLocalTime;                /**/
7994      =5      BYTE      minuteLocalTime;              /**/
7995      =5      BYTE      secondLocalTime;              /**/
7996      =5      BYTE      eventStatus;                  /**/
7997      =5  } ZW_DCP_EVENT_STATUS_REPORT_FRAME;
7998      =5  
7999      =5  /************************************************************/
8000      =5  /* Dcp List Get command class structs */                    
8001      =5  /************************************************************/
8002      =5  typedef struct _ZW_DCP_LIST_GET_FRAME_
8003      =5  {
8004      =5      BYTE      cmdClass;                     /* The command class */
8005      =5      BYTE      cmd;                          /* The command */
8006      =5  } ZW_DCP_LIST_GET_FRAME;
8007      =5  
8008      =5  /************************************************************/
8009      =5  /* Dcp List Report variant group structs */                 
8010      =5  /************************************************************/
8011      =5  typedef struct _VG_DCP_LIST_REPORT_VG_
8012      =5  {
8013      =5      BYTE      genericDeviceClass;           /**/
8014      =5      BYTE      specificDeviceClass;          /**/
8015      =5  } VG_DCP_LIST_REPORT_VG;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 158 

8016      =5  
8017      =5  /************************************************************/
8018      =5  /* Dcp List Report 1byte command class structs */           
8019      =5  /************************************************************/
8020      =5  typedef struct _ZW_DCP_LIST_REPORT_1BYTE_FRAME_
8021      =5  {
8022      =5      BYTE      cmdClass;                     /* The command class */
8023      =5      BYTE      cmd;                          /* The command */
8024      =5      BYTE      reportsToFollow;              /**/
8025      =5      BYTE      year1;                        /* MSB */
8026      =5      BYTE      year2;                        /* LSB */
8027      =5      BYTE      month;                        /**/
8028      =5      BYTE      day;                          /**/
8029      =5      BYTE      hourLocalTime;                /**/
8030      =5      BYTE      minuteLocalTime;              /**/
8031      =5      BYTE      secondLocalTime;              /**/
8032      =5      BYTE      dcpId;                        /**/
8033      =5      BYTE      properties1;                  /* masked byte */
8034      =5      VG_DCP_LIST_REPORT_VG variantgroup1;                /**/
8035      =5      BYTE      startYear1;                   /* MSB */
8036      =5      BYTE      startYear2;                   /* LSB */
8037      =5      BYTE      startMonth;                   /**/
8038      =5      BYTE      startDay;                     /**/
8039      =5      BYTE      startHourLocalTime;           /**/
8040      =5      BYTE      startMinuteLocalTime;         /**/
8041      =5      BYTE      startSecondLocalTime;         /**/
8042      =5      BYTE      durationHourTime;             /**/
8043      =5      BYTE      durationMinuteTime;           /**/
8044      =5      BYTE      durationSecondTime;           /**/
8045      =5      BYTE      eventPriority;                /**/
8046      =5      BYTE      loadShedding;                 /**/
8047      =5      BYTE      startAssociationGroup;        /**/
8048      =5      BYTE      stopAssociationGroup;         /**/
8049      =5      BYTE      randomizationInterval;        /**/
8050      =5  } ZW_DCP_LIST_REPORT_1BYTE_FRAME;
8051      =5  
8052      =5  /************************************************************/
8053      =5  /* Dcp List Report 2byte command class structs */           
8054      =5  /************************************************************/
8055      =5  typedef struct _ZW_DCP_LIST_REPORT_2BYTE_FRAME_
8056      =5  {
8057      =5      BYTE      cmdClass;                     /* The command class */
8058      =5      BYTE      cmd;                          /* The command */
8059      =5      BYTE      reportsToFollow;              /**/
8060      =5      BYTE      year1;                        /* MSB */
8061      =5      BYTE      year2;                        /* LSB */
8062      =5      BYTE      month;                        /**/
8063      =5      BYTE      day;                          /**/
8064      =5      BYTE      hourLocalTime;                /**/
8065      =5      BYTE      minuteLocalTime;              /**/
8066      =5      BYTE      secondLocalTime;              /**/
8067      =5      BYTE      dcpId;                        /**/
8068      =5      BYTE      properties1;                  /* masked byte */
8069      =5      VG_DCP_LIST_REPORT_VG variantgroup1;                /**/
8070      =5      VG_DCP_LIST_REPORT_VG variantgroup2;                /**/
8071      =5      BYTE      startYear1;                   /* MSB */
8072      =5      BYTE      startYear2;                   /* LSB */
8073      =5      BYTE      startMonth;                   /**/
8074      =5      BYTE      startDay;                     /**/
8075      =5      BYTE      startHourLocalTime;           /**/
8076      =5      BYTE      startMinuteLocalTime;         /**/
8077      =5      BYTE      startSecondLocalTime;         /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 159 

8078      =5      BYTE      durationHourTime;             /**/
8079      =5      BYTE      durationMinuteTime;           /**/
8080      =5      BYTE      durationSecondTime;           /**/
8081      =5      BYTE      eventPriority;                /**/
8082      =5      BYTE      loadShedding;                 /**/
8083      =5      BYTE      startAssociationGroup;        /**/
8084      =5      BYTE      stopAssociationGroup;         /**/
8085      =5      BYTE      randomizationInterval;        /**/
8086      =5  } ZW_DCP_LIST_REPORT_2BYTE_FRAME;
8087      =5  
8088      =5  /************************************************************/
8089      =5  /* Dcp List Report 3byte command class structs */           
8090      =5  /************************************************************/
8091      =5  typedef struct _ZW_DCP_LIST_REPORT_3BYTE_FRAME_
8092      =5  {
8093      =5      BYTE      cmdClass;                     /* The command class */
8094      =5      BYTE      cmd;                          /* The command */
8095      =5      BYTE      reportsToFollow;              /**/
8096      =5      BYTE      year1;                        /* MSB */
8097      =5      BYTE      year2;                        /* LSB */
8098      =5      BYTE      month;                        /**/
8099      =5      BYTE      day;                          /**/
8100      =5      BYTE      hourLocalTime;                /**/
8101      =5      BYTE      minuteLocalTime;              /**/
8102      =5      BYTE      secondLocalTime;              /**/
8103      =5      BYTE      dcpId;                        /**/
8104      =5      BYTE      properties1;                  /* masked byte */
8105      =5      VG_DCP_LIST_REPORT_VG variantgroup1;                /**/
8106      =5      VG_DCP_LIST_REPORT_VG variantgroup2;                /**/
8107      =5      VG_DCP_LIST_REPORT_VG variantgroup3;                /**/
8108      =5      BYTE      startYear1;                   /* MSB */
8109      =5      BYTE      startYear2;                   /* LSB */
8110      =5      BYTE      startMonth;                   /**/
8111      =5      BYTE      startDay;                     /**/
8112      =5      BYTE      startHourLocalTime;           /**/
8113      =5      BYTE      startMinuteLocalTime;         /**/
8114      =5      BYTE      startSecondLocalTime;         /**/
8115      =5      BYTE      durationHourTime;             /**/
8116      =5      BYTE      durationMinuteTime;           /**/
8117      =5      BYTE      durationSecondTime;           /**/
8118      =5      BYTE      eventPriority;                /**/
8119      =5      BYTE      loadShedding;                 /**/
8120      =5      BYTE      startAssociationGroup;        /**/
8121      =5      BYTE      stopAssociationGroup;         /**/
8122      =5      BYTE      randomizationInterval;        /**/
8123      =5  } ZW_DCP_LIST_REPORT_3BYTE_FRAME;
8124      =5  
8125      =5  /************************************************************/
8126      =5  /* Dcp List Report 4byte command class structs */           
8127      =5  /************************************************************/
8128      =5  typedef struct _ZW_DCP_LIST_REPORT_4BYTE_FRAME_
8129      =5  {
8130      =5      BYTE      cmdClass;                     /* The command class */
8131      =5      BYTE      cmd;                          /* The command */
8132      =5      BYTE      reportsToFollow;              /**/
8133      =5      BYTE      year1;                        /* MSB */
8134      =5      BYTE      year2;                        /* LSB */
8135      =5      BYTE      month;                        /**/
8136      =5      BYTE      day;                          /**/
8137      =5      BYTE      hourLocalTime;                /**/
8138      =5      BYTE      minuteLocalTime;              /**/
8139      =5      BYTE      secondLocalTime;              /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 160 

8140      =5      BYTE      dcpId;                        /**/
8141      =5      BYTE      properties1;                  /* masked byte */
8142      =5      VG_DCP_LIST_REPORT_VG variantgroup1;                /**/
8143      =5      VG_DCP_LIST_REPORT_VG variantgroup2;                /**/
8144      =5      VG_DCP_LIST_REPORT_VG variantgroup3;                /**/
8145      =5      VG_DCP_LIST_REPORT_VG variantgroup4;                /**/
8146      =5      BYTE      startYear1;                   /* MSB */
8147      =5      BYTE      startYear2;                   /* LSB */
8148      =5      BYTE      startMonth;                   /**/
8149      =5      BYTE      startDay;                     /**/
8150      =5      BYTE      startHourLocalTime;           /**/
8151      =5      BYTE      startMinuteLocalTime;         /**/
8152      =5      BYTE      startSecondLocalTime;         /**/
8153      =5      BYTE      durationHourTime;             /**/
8154      =5      BYTE      durationMinuteTime;           /**/
8155      =5      BYTE      durationSecondTime;           /**/
8156      =5      BYTE      eventPriority;                /**/
8157      =5      BYTE      loadShedding;                 /**/
8158      =5      BYTE      startAssociationGroup;        /**/
8159      =5      BYTE      stopAssociationGroup;         /**/
8160      =5      BYTE      randomizationInterval;        /**/
8161      =5  } ZW_DCP_LIST_REPORT_4BYTE_FRAME;
8162      =5  
8163      =5  /************************************************************/
8164      =5  /* Door Lock Logging Records Supported Get command class structs */
8165      =5  /************************************************************/
8166      =5  typedef struct _ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_GET_FRAME_
8167      =5  {
8168      =5      BYTE      cmdClass;                     /* The command class */
8169      =5      BYTE      cmd;                          /* The command */
8170      =5  } ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_GET_FRAME;
8171      =5  
8172      =5  /************************************************************/
8173      =5  /* Door Lock Logging Records Supported Report command class structs */
8174      =5  /************************************************************/
8175      =5  typedef struct _ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_REPORT_FRAME_
8176      =5  {
8177      =5      BYTE      cmdClass;                     /* The command class */
8178      =5      BYTE      cmd;                          /* The command */
8179      =5      BYTE      maxRecordsStored;             /**/
8180      =5  } ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_REPORT_FRAME;
8181      =5  
8182      =5  /************************************************************/
8183      =5  /* Record Get command class structs */                      
8184      =5  /************************************************************/
8185      =5  typedef struct _ZW_RECORD_GET_FRAME_
8186      =5  {
8187      =5      BYTE      cmdClass;                     /* The command class */
8188      =5      BYTE      cmd;                          /* The command */
8189      =5      BYTE      recordNumber;                 /**/
8190      =5  } ZW_RECORD_GET_FRAME;
8191      =5  
8192      =5  /************************************************************/
8193      =5  /* Record Report 1byte command class structs */             
8194      =5  /************************************************************/
8195      =5  typedef struct _ZW_RECORD_REPORT_1BYTE_FRAME_
8196      =5  {
8197      =5      BYTE      cmdClass;                     /* The command class */
8198      =5      BYTE      cmd;                          /* The command */
8199      =5      BYTE      recordNumber;                 /**/
8200      =5      BYTE      year1;                        /* MSB */
8201      =5      BYTE      year2;                        /* LSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 161 

8202      =5      BYTE      month;                        /**/
8203      =5      BYTE      day;                          /**/
8204      =5      BYTE      properties1;                  /* masked byte */
8205      =5      BYTE      minuteLocalTime;              /**/
8206      =5      BYTE      secondLocalTime;              /**/
8207      =5      BYTE      eventType;                    /**/
8208      =5      BYTE      userIdentifier;               /**/
8209      =5      BYTE      userCodeLength;               /**/
8210      =5      BYTE      userCode1;                    
8211      =5  } ZW_RECORD_REPORT_1BYTE_FRAME;
8212      =5  
8213      =5  /************************************************************/
8214      =5  /* Record Report 2byte command class structs */             
8215      =5  /************************************************************/
8216      =5  typedef struct _ZW_RECORD_REPORT_2BYTE_FRAME_
8217      =5  {
8218      =5      BYTE      cmdClass;                     /* The command class */
8219      =5      BYTE      cmd;                          /* The command */
8220      =5      BYTE      recordNumber;                 /**/
8221      =5      BYTE      year1;                        /* MSB */
8222      =5      BYTE      year2;                        /* LSB */
8223      =5      BYTE      month;                        /**/
8224      =5      BYTE      day;                          /**/
8225      =5      BYTE      properties1;                  /* masked byte */
8226      =5      BYTE      minuteLocalTime;              /**/
8227      =5      BYTE      secondLocalTime;              /**/
8228      =5      BYTE      eventType;                    /**/
8229      =5      BYTE      userIdentifier;               /**/
8230      =5      BYTE      userCodeLength;               /**/
8231      =5      BYTE      userCode1;                    /* MSB */
8232      =5      BYTE      userCode2;                    /* LSB */
8233      =5  } ZW_RECORD_REPORT_2BYTE_FRAME;
8234      =5  
8235      =5  /************************************************************/
8236      =5  /* Record Report 3byte command class structs */             
8237      =5  /************************************************************/
8238      =5  typedef struct _ZW_RECORD_REPORT_3BYTE_FRAME_
8239      =5  {
8240      =5      BYTE      cmdClass;                     /* The command class */
8241      =5      BYTE      cmd;                          /* The command */
8242      =5      BYTE      recordNumber;                 /**/
8243      =5      BYTE      year1;                        /* MSB */
8244      =5      BYTE      year2;                        /* LSB */
8245      =5      BYTE      month;                        /**/
8246      =5      BYTE      day;                          /**/
8247      =5      BYTE      properties1;                  /* masked byte */
8248      =5      BYTE      minuteLocalTime;              /**/
8249      =5      BYTE      secondLocalTime;              /**/
8250      =5      BYTE      eventType;                    /**/
8251      =5      BYTE      userIdentifier;               /**/
8252      =5      BYTE      userCodeLength;               /**/
8253      =5      BYTE      userCode1;                    /* MSB */
8254      =5      BYTE      userCode2;                    
8255      =5      BYTE      userCode3;                    /* LSB */
8256      =5  } ZW_RECORD_REPORT_3BYTE_FRAME;
8257      =5  
8258      =5  /************************************************************/
8259      =5  /* Record Report 4byte command class structs */             
8260      =5  /************************************************************/
8261      =5  typedef struct _ZW_RECORD_REPORT_4BYTE_FRAME_
8262      =5  {
8263      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 162 

8264      =5      BYTE      cmd;                          /* The command */
8265      =5      BYTE      recordNumber;                 /**/
8266      =5      BYTE      year1;                        /* MSB */
8267      =5      BYTE      year2;                        /* LSB */
8268      =5      BYTE      month;                        /**/
8269      =5      BYTE      day;                          /**/
8270      =5      BYTE      properties1;                  /* masked byte */
8271      =5      BYTE      minuteLocalTime;              /**/
8272      =5      BYTE      secondLocalTime;              /**/
8273      =5      BYTE      eventType;                    /**/
8274      =5      BYTE      userIdentifier;               /**/
8275      =5      BYTE      userCodeLength;               /**/
8276      =5      BYTE      userCode1;                    /* MSB */
8277      =5      BYTE      userCode2;                    
8278      =5      BYTE      userCode3;                    
8279      =5      BYTE      userCode4;                    /* LSB */
8280      =5  } ZW_RECORD_REPORT_4BYTE_FRAME;
8281      =5  
8282      =5  /************************************************************/
8283      =5  /* Door Lock Configuration Get command class structs */     
8284      =5  /************************************************************/
8285      =5  typedef struct _ZW_DOOR_LOCK_CONFIGURATION_GET_FRAME_
8286      =5  {
8287      =5      BYTE      cmdClass;                     /* The command class */
8288      =5      BYTE      cmd;                          /* The command */
8289      =5  } ZW_DOOR_LOCK_CONFIGURATION_GET_FRAME;
8290      =5  
8291      =5  /************************************************************/
8292      =5  /* Door Lock Configuration Report command class structs */  
8293      =5  /************************************************************/
8294      =5  typedef struct _ZW_DOOR_LOCK_CONFIGURATION_REPORT_FRAME_
8295      =5  {
8296      =5      BYTE      cmdClass;                     /* The command class */
8297      =5      BYTE      cmd;                          /* The command */
8298      =5      BYTE      operationType;                /**/
8299      =5      BYTE      properties1;                  /* masked byte */
8300      =5      BYTE      lockTimeoutMinutes;           /**/
8301      =5      BYTE      lockTimeoutSeconds;           /**/
8302      =5  } ZW_DOOR_LOCK_CONFIGURATION_REPORT_FRAME;
8303      =5  
8304      =5  /************************************************************/
8305      =5  /* Door Lock Configuration Set command class structs */     
8306      =5  /************************************************************/
8307      =5  typedef struct _ZW_DOOR_LOCK_CONFIGURATION_SET_FRAME_
8308      =5  {
8309      =5      BYTE      cmdClass;                     /* The command class */
8310      =5      BYTE      cmd;                          /* The command */
8311      =5      BYTE      operationType;                /**/
8312      =5      BYTE      properties1;                  /* masked byte */
8313      =5      BYTE      lockTimeoutMinutes;           /**/
8314      =5      BYTE      lockTimeoutSeconds;           /**/
8315      =5  } ZW_DOOR_LOCK_CONFIGURATION_SET_FRAME;
8316      =5  
8317      =5  /************************************************************/
8318      =5  /* Door Lock Operation Get command class structs */         
8319      =5  /************************************************************/
8320      =5  typedef struct _ZW_DOOR_LOCK_OPERATION_GET_FRAME_
8321      =5  {
8322      =5      BYTE      cmdClass;                     /* The command class */
8323      =5      BYTE      cmd;                          /* The command */
8324      =5  } ZW_DOOR_LOCK_OPERATION_GET_FRAME;
8325      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 163 

8326      =5  /************************************************************/
8327      =5  /* Door Lock Operation Report command class structs */      
8328      =5  /************************************************************/
8329      =5  typedef struct _ZW_DOOR_LOCK_OPERATION_REPORT_FRAME_
8330      =5  {
8331      =5      BYTE      cmdClass;                     /* The command class */
8332      =5      BYTE      cmd;                          /* The command */
8333      =5      BYTE      doorLockMode;                 /**/
8334      =5      BYTE      properties1;                  /* masked byte */
8335      =5      BYTE      doorCondition;                /**/
8336      =5      BYTE      lockTimeoutMinutes;           /**/
8337      =5      BYTE      lockTimeoutSeconds;           /**/
8338      =5  } ZW_DOOR_LOCK_OPERATION_REPORT_FRAME;
8339      =5  
8340      =5  /************************************************************/
8341      =5  /* Door Lock Operation Set command class structs */         
8342      =5  /************************************************************/
8343      =5  typedef struct _ZW_DOOR_LOCK_OPERATION_SET_FRAME_
8344      =5  {
8345      =5      BYTE      cmdClass;                     /* The command class */
8346      =5      BYTE      cmd;                          /* The command */
8347      =5      BYTE      doorLockMode;                 /**/
8348      =5  } ZW_DOOR_LOCK_OPERATION_SET_FRAME;
8349      =5  
8350      =5  /************************************************************/
8351      =5  /* Door Lock Configuration Get V2 command class structs */  
8352      =5  /************************************************************/
8353      =5  typedef struct _ZW_DOOR_LOCK_CONFIGURATION_GET_V2_FRAME_
8354      =5  {
8355      =5      BYTE      cmdClass;                     /* The command class */
8356      =5      BYTE      cmd;                          /* The command */
8357      =5  } ZW_DOOR_LOCK_CONFIGURATION_GET_V2_FRAME;
8358      =5  
8359      =5  /************************************************************/
8360      =5  /* Door Lock Configuration Report V2 command class structs */
8361      =5  /************************************************************/
8362      =5  typedef struct _ZW_DOOR_LOCK_CONFIGURATION_REPORT_V2_FRAME_
8363      =5  {
8364      =5      BYTE      cmdClass;                     /* The command class */
8365      =5      BYTE      cmd;                          /* The command */
8366      =5      BYTE      operationType;                /**/
8367      =5      BYTE      properties1;                  /* masked byte */
8368      =5      BYTE      lockTimeoutMinutes;           /**/
8369      =5      BYTE      lockTimeoutSeconds;           /**/
8370      =5  } ZW_DOOR_LOCK_CONFIGURATION_REPORT_V2_FRAME;
8371      =5  
8372      =5  /************************************************************/
8373      =5  /* Door Lock Configuration Set V2 command class structs */  
8374      =5  /************************************************************/
8375      =5  typedef struct _ZW_DOOR_LOCK_CONFIGURATION_SET_V2_FRAME_
8376      =5  {
8377      =5      BYTE      cmdClass;                     /* The command class */
8378      =5      BYTE      cmd;                          /* The command */
8379      =5      BYTE      operationType;                /**/
8380      =5      BYTE      properties1;                  /* masked byte */
8381      =5      BYTE      lockTimeoutMinutes;           /**/
8382      =5      BYTE      lockTimeoutSeconds;           /**/
8383      =5  } ZW_DOOR_LOCK_CONFIGURATION_SET_V2_FRAME;
8384      =5  
8385      =5  /************************************************************/
8386      =5  /* Door Lock Operation Get V2 command class structs */      
8387      =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 164 

8388      =5  typedef struct _ZW_DOOR_LOCK_OPERATION_GET_V2_FRAME_
8389      =5  {
8390      =5      BYTE      cmdClass;                     /* The command class */
8391      =5      BYTE      cmd;                          /* The command */
8392      =5  } ZW_DOOR_LOCK_OPERATION_GET_V2_FRAME;
8393      =5  
8394      =5  /************************************************************/
8395      =5  /* Door Lock Operation Report V2 command class structs */   
8396      =5  /************************************************************/
8397      =5  typedef struct _ZW_DOOR_LOCK_OPERATION_REPORT_V2_FRAME_
8398      =5  {
8399      =5      BYTE      cmdClass;                     /* The command class */
8400      =5      BYTE      cmd;                          /* The command */
8401      =5      BYTE      doorLockMode;                 /**/
8402      =5      BYTE      properties1;                  /* masked byte */
8403      =5      BYTE      doorCondition;                /**/
8404      =5      BYTE      lockTimeoutMinutes;           /**/
8405      =5      BYTE      lockTimeoutSeconds;           /**/
8406      =5  } ZW_DOOR_LOCK_OPERATION_REPORT_V2_FRAME;
8407      =5  
8408      =5  /************************************************************/
8409      =5  /* Door Lock Operation Set V2 command class structs */      
8410      =5  /************************************************************/
8411      =5  typedef struct _ZW_DOOR_LOCK_OPERATION_SET_V2_FRAME_
8412      =5  {
8413      =5      BYTE      cmdClass;                     /* The command class */
8414      =5      BYTE      cmd;                          /* The command */
8415      =5      BYTE      doorLockMode;                 /**/
8416      =5  } ZW_DOOR_LOCK_OPERATION_SET_V2_FRAME;
8417      =5  
8418      =5  /************************************************************/
8419      =5  /* Energy Production Get command class structs */           
8420      =5  /************************************************************/
8421      =5  typedef struct _ZW_ENERGY_PRODUCTION_GET_FRAME_
8422      =5  {
8423      =5      BYTE      cmdClass;                     /* The command class */
8424      =5      BYTE      cmd;                          /* The command */
8425      =5      BYTE      parameterNumber;              /**/
8426      =5  } ZW_ENERGY_PRODUCTION_GET_FRAME;
8427      =5  
8428      =5  /************************************************************/
8429      =5  /* Energy Production Report 1byte command class structs */  
8430      =5  /************************************************************/
8431      =5  typedef struct _ZW_ENERGY_PRODUCTION_REPORT_1BYTE_FRAME_
8432      =5  {
8433      =5      BYTE      cmdClass;                     /* The command class */
8434      =5      BYTE      cmd;                          /* The command */
8435      =5      BYTE      parameterNumber;              /**/
8436      =5      BYTE      level;                        /* masked byte */
8437      =5      BYTE      value1;                       
8438      =5  } ZW_ENERGY_PRODUCTION_REPORT_1BYTE_FRAME;
8439      =5  
8440      =5  /************************************************************/
8441      =5  /* Energy Production Report 2byte command class structs */  
8442      =5  /************************************************************/
8443      =5  typedef struct _ZW_ENERGY_PRODUCTION_REPORT_2BYTE_FRAME_
8444      =5  {
8445      =5      BYTE      cmdClass;                     /* The command class */
8446      =5      BYTE      cmd;                          /* The command */
8447      =5      BYTE      parameterNumber;              /**/
8448      =5      BYTE      level;                        /* masked byte */
8449      =5      BYTE      value1;                       /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 165 

8450      =5      BYTE      value2;                       /* LSB */
8451      =5  } ZW_ENERGY_PRODUCTION_REPORT_2BYTE_FRAME;
8452      =5  
8453      =5  /************************************************************/
8454      =5  /* Energy Production Report 3byte command class structs */  
8455      =5  /************************************************************/
8456      =5  typedef struct _ZW_ENERGY_PRODUCTION_REPORT_3BYTE_FRAME_
8457      =5  {
8458      =5      BYTE      cmdClass;                     /* The command class */
8459      =5      BYTE      cmd;                          /* The command */
8460      =5      BYTE      parameterNumber;              /**/
8461      =5      BYTE      level;                        /* masked byte */
8462      =5      BYTE      value1;                       /* MSB */
8463      =5      BYTE      value2;                       
8464      =5      BYTE      value3;                       /* LSB */
8465      =5  } ZW_ENERGY_PRODUCTION_REPORT_3BYTE_FRAME;
8466      =5  
8467      =5  /************************************************************/
8468      =5  /* Energy Production Report 4byte command class structs */  
8469      =5  /************************************************************/
8470      =5  typedef struct _ZW_ENERGY_PRODUCTION_REPORT_4BYTE_FRAME_
8471      =5  {
8472      =5      BYTE      cmdClass;                     /* The command class */
8473      =5      BYTE      cmd;                          /* The command */
8474      =5      BYTE      parameterNumber;              /**/
8475      =5      BYTE      level;                        /* masked byte */
8476      =5      BYTE      value1;                       /* MSB */
8477      =5      BYTE      value2;                       
8478      =5      BYTE      value3;                       
8479      =5      BYTE      value4;                       /* LSB */
8480      =5  } ZW_ENERGY_PRODUCTION_REPORT_4BYTE_FRAME;
8481      =5  
8482      =5  /************************************************************/
8483      =5  /* Firmware Md Get command class structs */                 
8484      =5  /************************************************************/
8485      =5  typedef struct _ZW_FIRMWARE_MD_GET_FRAME_
8486      =5  {
8487      =5      BYTE      cmdClass;                     /* The command class */
8488      =5      BYTE      cmd;                          /* The command */
8489      =5  } ZW_FIRMWARE_MD_GET_FRAME;
8490      =5  
8491      =5  /************************************************************/
8492      =5  /* Firmware Md Report command class structs */              
8493      =5  /************************************************************/
8494      =5  typedef struct _ZW_FIRMWARE_MD_REPORT_FRAME_
8495      =5  {
8496      =5      BYTE      cmdClass;                     /* The command class */
8497      =5      BYTE      cmd;                          /* The command */
8498      =5      BYTE      manufacturerId1;              /* MSB */
8499      =5      BYTE      manufacturerId2;              /* LSB */
8500      =5      BYTE      firmwareId1;                  /* MSB */
8501      =5      BYTE      firmwareId2;                  /* LSB */
8502      =5      BYTE      checksum1;                    /* MSB */
8503      =5      BYTE      checksum2;                    /* LSB */
8504      =5  } ZW_FIRMWARE_MD_REPORT_FRAME;
8505      =5  
8506      =5  /************************************************************/
8507      =5  /* Firmware Update Md Get command class structs */          
8508      =5  /************************************************************/
8509      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_FRAME_
8510      =5  {
8511      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 166 

8512      =5      BYTE      cmd;                          /* The command */
8513      =5      BYTE      numberOfReports;              /**/
8514      =5      BYTE      properties1;                  /* masked byte */
8515      =5      BYTE      reportNumber2;                /**/
8516      =5  } ZW_FIRMWARE_UPDATE_MD_GET_FRAME;
8517      =5  
8518      =5  /************************************************************/
8519      =5  /* Firmware Update Md Report 1byte command class structs */ 
8520      =5  /************************************************************/
8521      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_FRAME_
8522      =5  {
8523      =5      BYTE      cmdClass;                     /* The command class */
8524      =5      BYTE      cmd;                          /* The command */
8525      =5      BYTE      properties1;                  /* masked byte */
8526      =5      BYTE      reportNumber2;                /**/
8527      =5      BYTE      data1;                        
8528      =5  } ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_FRAME;
8529      =5  
8530      =5  /************************************************************/
8531      =5  /* Firmware Update Md Report 2byte command class structs */ 
8532      =5  /************************************************************/
8533      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_FRAME_
8534      =5  {
8535      =5      BYTE      cmdClass;                     /* The command class */
8536      =5      BYTE      cmd;                          /* The command */
8537      =5      BYTE      properties1;                  /* masked byte */
8538      =5      BYTE      reportNumber2;                /**/
8539      =5      BYTE      data1;                        /* MSB */
8540      =5      BYTE      data2;                        /* LSB */
8541      =5  } ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_FRAME;
8542      =5  
8543      =5  /************************************************************/
8544      =5  /* Firmware Update Md Report 3byte command class structs */ 
8545      =5  /************************************************************/
8546      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_FRAME_
8547      =5  {
8548      =5      BYTE      cmdClass;                     /* The command class */
8549      =5      BYTE      cmd;                          /* The command */
8550      =5      BYTE      properties1;                  /* masked byte */
8551      =5      BYTE      reportNumber2;                /**/
8552      =5      BYTE      data1;                        /* MSB */
8553      =5      BYTE      data2;                        
8554      =5      BYTE      data3;                        /* LSB */
8555      =5  } ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_FRAME;
8556      =5  
8557      =5  /************************************************************/
8558      =5  /* Firmware Update Md Report 4byte command class structs */ 
8559      =5  /************************************************************/
8560      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_FRAME_
8561      =5  {
8562      =5      BYTE      cmdClass;                     /* The command class */
8563      =5      BYTE      cmd;                          /* The command */
8564      =5      BYTE      properties1;                  /* masked byte */
8565      =5      BYTE      reportNumber2;                /**/
8566      =5      BYTE      data1;                        /* MSB */
8567      =5      BYTE      data2;                        
8568      =5      BYTE      data3;                        
8569      =5      BYTE      data4;                        /* LSB */
8570      =5  } ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_FRAME;
8571      =5  
8572      =5  /************************************************************/
8573      =5  /* Firmware Update Md Request Get command class structs */  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 167 

8574      =5  /************************************************************/
8575      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_FRAME_
8576      =5  {
8577      =5      BYTE      cmdClass;                     /* The command class */
8578      =5      BYTE      cmd;                          /* The command */
8579      =5      BYTE      manufacturerId1;              /* MSB */
8580      =5      BYTE      manufacturerId2;              /* LSB */
8581      =5      BYTE      firmwareId1;                  /* MSB */
8582      =5      BYTE      firmwareId2;                  /* LSB */
8583      =5      BYTE      checksum1;                    /* MSB */
8584      =5      BYTE      checksum2;                    /* LSB */
8585      =5  } ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_FRAME;
8586      =5  
8587      =5  /************************************************************/
8588      =5  /* Firmware Update Md Request Report command class structs */
8589      =5  /************************************************************/
8590      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_FRAME_
8591      =5  {
8592      =5      BYTE      cmdClass;                     /* The command class */
8593      =5      BYTE      cmd;                          /* The command */
8594      =5      BYTE      status;                       /**/
8595      =5  } ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_FRAME;
8596      =5  
8597      =5  /************************************************************/
8598      =5  /* Firmware Update Md Status Report command class structs */
8599      =5  /************************************************************/
8600      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_FRAME_
8601      =5  {
8602      =5      BYTE      cmdClass;                     /* The command class */
8603      =5      BYTE      cmd;                          /* The command */
8604      =5      BYTE      status;                       /**/
8605      =5  } ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_FRAME;
8606      =5  
8607      =5  /************************************************************/
8608      =5  /* Firmware Md Get V2 command class structs */              
8609      =5  /************************************************************/
8610      =5  typedef struct _ZW_FIRMWARE_MD_GET_V2_FRAME_
8611      =5  {
8612      =5      BYTE      cmdClass;                     /* The command class */
8613      =5      BYTE      cmd;                          /* The command */
8614      =5  } ZW_FIRMWARE_MD_GET_V2_FRAME;
8615      =5  
8616      =5  /************************************************************/
8617      =5  /* Firmware Md Report V2 command class structs */           
8618      =5  /************************************************************/
8619      =5  typedef struct _ZW_FIRMWARE_MD_REPORT_V2_FRAME_
8620      =5  {
8621      =5      BYTE      cmdClass;                     /* The command class */
8622      =5      BYTE      cmd;                          /* The command */
8623      =5      BYTE      manufacturerId1;              /* MSB */
8624      =5      BYTE      manufacturerId2;              /* LSB */
8625      =5      BYTE      firmwareId1;                  /* MSB */
8626      =5      BYTE      firmwareId2;                  /* LSB */
8627      =5      BYTE      checksum1;                    /* MSB */
8628      =5      BYTE      checksum2;                    /* LSB */
8629      =5  } ZW_FIRMWARE_MD_REPORT_V2_FRAME;
8630      =5  
8631      =5  /************************************************************/
8632      =5  /* Firmware Update Md Get V2 command class structs */       
8633      =5  /************************************************************/
8634      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_V2_FRAME_
8635      =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 168 

8636      =5      BYTE      cmdClass;                     /* The command class */
8637      =5      BYTE      cmd;                          /* The command */
8638      =5      BYTE      numberOfReports;              /**/
8639      =5      BYTE      properties1;                  /* masked byte */
8640      =5      BYTE      reportNumber2;                /**/
8641      =5  } ZW_FIRMWARE_UPDATE_MD_GET_V2_FRAME;
8642      =5  
8643      =5  /************************************************************/
8644      =5  /* Firmware Update Md Report 1byte V2 command class structs */
8645      =5  /************************************************************/
8646      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V2_FRAME_
8647      =5  {
8648      =5      BYTE      cmdClass;                     /* The command class */
8649      =5      BYTE      cmd;                          /* The command */
8650      =5      BYTE      properties1;                  /* masked byte */
8651      =5      BYTE      reportNumber2;                /**/
8652      =5      BYTE      data1;                        
8653      =5      BYTE      checksum1;                    /* MSB */
8654      =5      BYTE      checksum2;                    /* LSB */
8655      =5  } ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V2_FRAME;
8656      =5  
8657      =5  /************************************************************/
8658      =5  /* Firmware Update Md Report 2byte V2 command class structs */
8659      =5  /************************************************************/
8660      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V2_FRAME_
8661      =5  {
8662      =5      BYTE      cmdClass;                     /* The command class */
8663      =5      BYTE      cmd;                          /* The command */
8664      =5      BYTE      properties1;                  /* masked byte */
8665      =5      BYTE      reportNumber2;                /**/
8666      =5      BYTE      data1;                        /* MSB */
8667      =5      BYTE      data2;                        /* LSB */
8668      =5      BYTE      checksum1;                    /* MSB */
8669      =5      BYTE      checksum2;                    /* LSB */
8670      =5  } ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V2_FRAME;
8671      =5  
8672      =5  /************************************************************/
8673      =5  /* Firmware Update Md Report 3byte V2 command class structs */
8674      =5  /************************************************************/
8675      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V2_FRAME_
8676      =5  {
8677      =5      BYTE      cmdClass;                     /* The command class */
8678      =5      BYTE      cmd;                          /* The command */
8679      =5      BYTE      properties1;                  /* masked byte */
8680      =5      BYTE      reportNumber2;                /**/
8681      =5      BYTE      data1;                        /* MSB */
8682      =5      BYTE      data2;                        
8683      =5      BYTE      data3;                        /* LSB */
8684      =5      BYTE      checksum1;                    /* MSB */
8685      =5      BYTE      checksum2;                    /* LSB */
8686      =5  } ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V2_FRAME;
8687      =5  
8688      =5  /************************************************************/
8689      =5  /* Firmware Update Md Report 4byte V2 command class structs */
8690      =5  /************************************************************/
8691      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V2_FRAME_
8692      =5  {
8693      =5      BYTE      cmdClass;                     /* The command class */
8694      =5      BYTE      cmd;                          /* The command */
8695      =5      BYTE      properties1;                  /* masked byte */
8696      =5      BYTE      reportNumber2;                /**/
8697      =5      BYTE      data1;                        /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 169 

8698      =5      BYTE      data2;                        
8699      =5      BYTE      data3;                        
8700      =5      BYTE      data4;                        /* LSB */
8701      =5      BYTE      checksum1;                    /* MSB */
8702      =5      BYTE      checksum2;                    /* LSB */
8703      =5  } ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V2_FRAME;
8704      =5  
8705      =5  /************************************************************/
8706      =5  /* Firmware Update Md Request Get V2 command class structs */
8707      =5  /************************************************************/
8708      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V2_FRAME_
8709      =5  {
8710      =5      BYTE      cmdClass;                     /* The command class */
8711      =5      BYTE      cmd;                          /* The command */
8712      =5      BYTE      manufacturerId1;              /* MSB */
8713      =5      BYTE      manufacturerId2;              /* LSB */
8714      =5      BYTE      firmwareId1;                  /* MSB */
8715      =5      BYTE      firmwareId2;                  /* LSB */
8716      =5      BYTE      checksum1;                    /* MSB */
8717      =5      BYTE      checksum2;                    /* LSB */
8718      =5  } ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V2_FRAME;
8719      =5  
8720      =5  /************************************************************/
8721      =5  /* Firmware Update Md Request Report V2 command class structs */
8722      =5  /************************************************************/
8723      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V2_FRAME_
8724      =5  {
8725      =5      BYTE      cmdClass;                     /* The command class */
8726      =5      BYTE      cmd;                          /* The command */
8727      =5      BYTE      status;                       /**/
8728      =5  } ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V2_FRAME;
8729      =5  
8730      =5  /************************************************************/
8731      =5  /* Firmware Update Md Status Report V2 command class structs */
8732      =5  /************************************************************/
8733      =5  typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V2_FRAME_
8734      =5  {
8735      =5      BYTE      cmdClass;                     /* The command class */
8736      =5      BYTE      cmd;                          /* The command */
8737      =5      BYTE      status;                       /**/
8738      =5  } ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V2_FRAME;
8739      =5  
8740      =5  /************************************************************/
8741      =5  /* Geographic Location Get command class structs */         
8742      =5  /************************************************************/
8743      =5  typedef struct _ZW_GEOGRAPHIC_LOCATION_GET_FRAME_
8744      =5  {
8745      =5      BYTE      cmdClass;                     /* The command class */
8746      =5      BYTE      cmd;                          /* The command */
8747      =5  } ZW_GEOGRAPHIC_LOCATION_GET_FRAME;
8748      =5  
8749      =5  /************************************************************/
8750      =5  /* Geographic Location Report command class structs */      
8751      =5  /************************************************************/
8752      =5  typedef struct _ZW_GEOGRAPHIC_LOCATION_REPORT_FRAME_
8753      =5  {
8754      =5      BYTE      cmdClass;                     /* The command class */
8755      =5      BYTE      cmd;                          /* The command */
8756      =5      BYTE      longitudeDegrees;             /**/
8757      =5      BYTE      level;                        /* masked byte */
8758      =5      BYTE      latitudeDegrees;              /**/
8759      =5      BYTE      level2;                       /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 170 

8760      =5  } ZW_GEOGRAPHIC_LOCATION_REPORT_FRAME;
8761      =5  
8762      =5  /************************************************************/
8763      =5  /* Geographic Location Set command class structs */         
8764      =5  /************************************************************/
8765      =5  typedef struct _ZW_GEOGRAPHIC_LOCATION_SET_FRAME_
8766      =5  {
8767      =5      BYTE      cmdClass;                     /* The command class */
8768      =5      BYTE      cmd;                          /* The command */
8769      =5      BYTE      longitudeDegrees;             /**/
8770      =5      BYTE      level;                        /* masked byte */
8771      =5      BYTE      latitudeDegrees;              /**/
8772      =5      BYTE      level2;                       /* masked byte */
8773      =5  } ZW_GEOGRAPHIC_LOCATION_SET_FRAME;
8774      =5  
8775      =5  /************************************************************/
8776      =5  /* Grouping Name Get command class structs */               
8777      =5  /************************************************************/
8778      =5  typedef struct _ZW_GROUPING_NAME_GET_FRAME_
8779      =5  {
8780      =5      BYTE      cmdClass;                     /* The command class */
8781      =5      BYTE      cmd;                          /* The command */
8782      =5      BYTE      groupingIdentifier;           /**/
8783      =5  } ZW_GROUPING_NAME_GET_FRAME;
8784      =5  
8785      =5  /************************************************************/
8786      =5  /* Grouping Name Report command class structs */            
8787      =5  /************************************************************/
8788      =5  typedef struct _ZW_GROUPING_NAME_REPORT_FRAME_
8789      =5  {
8790      =5      BYTE      cmdClass;                     /* The command class */
8791      =5      BYTE      cmd;                          /* The command */
8792      =5      BYTE      groupingIdentifier;           /**/
8793      =5      BYTE      properties1;                  /* masked byte */
8794      =5      BYTE      groupingName1;                /* MSB */
8795      =5      BYTE      groupingName2;                
8796      =5      BYTE      groupingName3;                
8797      =5      BYTE      groupingName4;                
8798      =5      BYTE      groupingName5;                
8799      =5      BYTE      groupingName6;                
8800      =5      BYTE      groupingName7;                
8801      =5      BYTE      groupingName8;                
8802      =5      BYTE      groupingName9;                
8803      =5      BYTE      groupingName10;               
8804      =5      BYTE      groupingName11;               
8805      =5      BYTE      groupingName12;               
8806      =5      BYTE      groupingName13;               
8807      =5      BYTE      groupingName14;               
8808      =5      BYTE      groupingName15;               
8809      =5      BYTE      groupingName16;               /* LSB */
8810      =5  } ZW_GROUPING_NAME_REPORT_FRAME;
8811      =5  
8812      =5  /************************************************************/
8813      =5  /* Grouping Name Set command class structs */               
8814      =5  /************************************************************/
8815      =5  typedef struct _ZW_GROUPING_NAME_SET_FRAME_
8816      =5  {
8817      =5      BYTE      cmdClass;                     /* The command class */
8818      =5      BYTE      cmd;                          /* The command */
8819      =5      BYTE      groupingIdentifier;           /**/
8820      =5      BYTE      properties1;                  /* masked byte */
8821      =5      BYTE      groupingName1;                /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 171 

8822      =5      BYTE      groupingName2;                
8823      =5      BYTE      groupingName3;                
8824      =5      BYTE      groupingName4;                
8825      =5      BYTE      groupingName5;                
8826      =5      BYTE      groupingName6;                
8827      =5      BYTE      groupingName7;                
8828      =5      BYTE      groupingName8;                
8829      =5      BYTE      groupingName9;                
8830      =5      BYTE      groupingName10;               
8831      =5      BYTE      groupingName11;               
8832      =5      BYTE      groupingName12;               
8833      =5      BYTE      groupingName13;               
8834      =5      BYTE      groupingName14;               
8835      =5      BYTE      groupingName15;               
8836      =5      BYTE      groupingName16;               /* LSB */
8837      =5  } ZW_GROUPING_NAME_SET_FRAME;
8838      =5  
8839      =5  /************************************************************/
8840      =5  /* Hail command class structs */                            
8841      =5  /************************************************************/
8842      =5  typedef struct _ZW_HAIL_FRAME_
8843      =5  {
8844      =5      BYTE      cmdClass;                     /* The command class */
8845      =5      BYTE      cmd;                          /* The command */
8846      =5  } ZW_HAIL_FRAME;
8847      =5  
8848      =5  /************************************************************/
8849      =5  /* Hrv Control Bypass Get command class structs */          
8850      =5  /************************************************************/
8851      =5  typedef struct _ZW_HRV_CONTROL_BYPASS_GET_FRAME_
8852      =5  {
8853      =5      BYTE      cmdClass;                     /* The command class */
8854      =5      BYTE      cmd;                          /* The command */
8855      =5  } ZW_HRV_CONTROL_BYPASS_GET_FRAME;
8856      =5  
8857      =5  /************************************************************/
8858      =5  /* Hrv Control Bypass Report command class structs */       
8859      =5  /************************************************************/
8860      =5  typedef struct _ZW_HRV_CONTROL_BYPASS_REPORT_FRAME_
8861      =5  {
8862      =5      BYTE      cmdClass;                     /* The command class */
8863      =5      BYTE      cmd;                          /* The command */
8864      =5      BYTE      bypass;                       /**/
8865      =5  } ZW_HRV_CONTROL_BYPASS_REPORT_FRAME;
8866      =5  
8867      =5  /************************************************************/
8868      =5  /* Hrv Control Bypass Set command class structs */          
8869      =5  /************************************************************/
8870      =5  typedef struct _ZW_HRV_CONTROL_BYPASS_SET_FRAME_
8871      =5  {
8872      =5      BYTE      cmdClass;                     /* The command class */
8873      =5      BYTE      cmd;                          /* The command */
8874      =5      BYTE      bypass;                       /**/
8875      =5  } ZW_HRV_CONTROL_BYPASS_SET_FRAME;
8876      =5  
8877      =5  /************************************************************/
8878      =5  /* Hrv Control Mode Get command class structs */            
8879      =5  /************************************************************/
8880      =5  typedef struct _ZW_HRV_CONTROL_MODE_GET_FRAME_
8881      =5  {
8882      =5      BYTE      cmdClass;                     /* The command class */
8883      =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 172 

8884      =5  } ZW_HRV_CONTROL_MODE_GET_FRAME;
8885      =5  
8886      =5  /************************************************************/
8887      =5  /* Hrv Control Mode Report command class structs */         
8888      =5  /************************************************************/
8889      =5  typedef struct _ZW_HRV_CONTROL_MODE_REPORT_FRAME_
8890      =5  {
8891      =5      BYTE      cmdClass;                     /* The command class */
8892      =5      BYTE      cmd;                          /* The command */
8893      =5      BYTE      properties1;                  /* masked byte */
8894      =5  } ZW_HRV_CONTROL_MODE_REPORT_FRAME;
8895      =5  
8896      =5  /************************************************************/
8897      =5  /* Hrv Control Mode Set command class structs */            
8898      =5  /************************************************************/
8899      =5  typedef struct _ZW_HRV_CONTROL_MODE_SET_FRAME_
8900      =5  {
8901      =5      BYTE      cmdClass;                     /* The command class */
8902      =5      BYTE      cmd;                          /* The command */
8903      =5      BYTE      properties1;                  /* masked byte */
8904      =5  } ZW_HRV_CONTROL_MODE_SET_FRAME;
8905      =5  
8906      =5  /************************************************************/
8907      =5  /* Hrv Control Mode Supported Get command class structs */  
8908      =5  /************************************************************/
8909      =5  typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_GET_FRAME_
8910      =5  {
8911      =5      BYTE      cmdClass;                     /* The command class */
8912      =5      BYTE      cmd;                          /* The command */
8913      =5  } ZW_HRV_CONTROL_MODE_SUPPORTED_GET_FRAME;
8914      =5  
8915      =5  /************************************************************/
8916      =5  /* Hrv Control Mode Supported Report 1byte command class structs */
8917      =5  /************************************************************/
8918      =5  typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_1BYTE_FRAME_
8919      =5  {
8920      =5      BYTE      cmdClass;                     /* The command class */
8921      =5      BYTE      cmd;                          /* The command */
8922      =5      BYTE      properties1;                  /* masked byte */
8923      =5      BYTE      bitMask1;                     
8924      =5  } ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_1BYTE_FRAME;
8925      =5  
8926      =5  /************************************************************/
8927      =5  /* Hrv Control Mode Supported Report 2byte command class structs */
8928      =5  /************************************************************/
8929      =5  typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_2BYTE_FRAME_
8930      =5  {
8931      =5      BYTE      cmdClass;                     /* The command class */
8932      =5      BYTE      cmd;                          /* The command */
8933      =5      BYTE      properties1;                  /* masked byte */
8934      =5      BYTE      bitMask1;                     /* MSB */
8935      =5      BYTE      bitMask2;                     /* LSB */
8936      =5  } ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_2BYTE_FRAME;
8937      =5  
8938      =5  /************************************************************/
8939      =5  /* Hrv Control Mode Supported Report 3byte command class structs */
8940      =5  /************************************************************/
8941      =5  typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_3BYTE_FRAME_
8942      =5  {
8943      =5      BYTE      cmdClass;                     /* The command class */
8944      =5      BYTE      cmd;                          /* The command */
8945      =5      BYTE      properties1;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 173 

8946      =5      BYTE      bitMask1;                     /* MSB */
8947      =5      BYTE      bitMask2;                     
8948      =5      BYTE      bitMask3;                     /* LSB */
8949      =5  } ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_3BYTE_FRAME;
8950      =5  
8951      =5  /************************************************************/
8952      =5  /* Hrv Control Mode Supported Report 4byte command class structs */
8953      =5  /************************************************************/
8954      =5  typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_4BYTE_FRAME_
8955      =5  {
8956      =5      BYTE      cmdClass;                     /* The command class */
8957      =5      BYTE      cmd;                          /* The command */
8958      =5      BYTE      properties1;                  /* masked byte */
8959      =5      BYTE      bitMask1;                     /* MSB */
8960      =5      BYTE      bitMask2;                     
8961      =5      BYTE      bitMask3;                     
8962      =5      BYTE      bitMask4;                     /* LSB */
8963      =5  } ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_4BYTE_FRAME;
8964      =5  
8965      =5  /************************************************************/
8966      =5  /* Hrv Control Ventilation Rate Get command class structs */
8967      =5  /************************************************************/
8968      =5  typedef struct _ZW_HRV_CONTROL_VENTILATION_RATE_GET_FRAME_
8969      =5  {
8970      =5      BYTE      cmdClass;                     /* The command class */
8971      =5      BYTE      cmd;                          /* The command */
8972      =5  } ZW_HRV_CONTROL_VENTILATION_RATE_GET_FRAME;
8973      =5  
8974      =5  /************************************************************/
8975      =5  /* Hrv Control Ventilation Rate Report command class structs */
8976      =5  /************************************************************/
8977      =5  typedef struct _ZW_HRV_CONTROL_VENTILATION_RATE_REPORT_FRAME_
8978      =5  {
8979      =5      BYTE      cmdClass;                     /* The command class */
8980      =5      BYTE      cmd;                          /* The command */
8981      =5      BYTE      ventilationRate;              /**/
8982      =5  } ZW_HRV_CONTROL_VENTILATION_RATE_REPORT_FRAME;
8983      =5  
8984      =5  /************************************************************/
8985      =5  /* Hrv Control Ventilation Rate Set command class structs */
8986      =5  /************************************************************/
8987      =5  typedef struct _ZW_HRV_CONTROL_VENTILATION_RATE_SET_FRAME_
8988      =5  {
8989      =5      BYTE      cmdClass;                     /* The command class */
8990      =5      BYTE      cmd;                          /* The command */
8991      =5      BYTE      ventilationRate;              /**/
8992      =5  } ZW_HRV_CONTROL_VENTILATION_RATE_SET_FRAME;
8993      =5  
8994      =5  /************************************************************/
8995      =5  /* Hrv Status Get command class structs */                  
8996      =5  /************************************************************/
8997      =5  typedef struct _ZW_HRV_STATUS_GET_FRAME_
8998      =5  {
8999      =5      BYTE      cmdClass;                     /* The command class */
9000      =5      BYTE      cmd;                          /* The command */
9001      =5      BYTE      statusParameter;              /**/
9002      =5  } ZW_HRV_STATUS_GET_FRAME;
9003      =5  
9004      =5  /************************************************************/
9005      =5  /* Hrv Status Report 1byte command class structs */         
9006      =5  /************************************************************/
9007      =5  typedef struct _ZW_HRV_STATUS_REPORT_1BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 174 

9008      =5  {
9009      =5      BYTE      cmdClass;                     /* The command class */
9010      =5      BYTE      cmd;                          /* The command */
9011      =5      BYTE      statusParameter;              /**/
9012      =5      BYTE      properties1;                  /* masked byte */
9013      =5      BYTE      value1;                       
9014      =5  } ZW_HRV_STATUS_REPORT_1BYTE_FRAME;
9015      =5  
9016      =5  /************************************************************/
9017      =5  /* Hrv Status Report 2byte command class structs */         
9018      =5  /************************************************************/
9019      =5  typedef struct _ZW_HRV_STATUS_REPORT_2BYTE_FRAME_
9020      =5  {
9021      =5      BYTE      cmdClass;                     /* The command class */
9022      =5      BYTE      cmd;                          /* The command */
9023      =5      BYTE      statusParameter;              /**/
9024      =5      BYTE      properties1;                  /* masked byte */
9025      =5      BYTE      value1;                       /* MSB */
9026      =5      BYTE      value2;                       /* LSB */
9027      =5  } ZW_HRV_STATUS_REPORT_2BYTE_FRAME;
9028      =5  
9029      =5  /************************************************************/
9030      =5  /* Hrv Status Report 3byte command class structs */         
9031      =5  /************************************************************/
9032      =5  typedef struct _ZW_HRV_STATUS_REPORT_3BYTE_FRAME_
9033      =5  {
9034      =5      BYTE      cmdClass;                     /* The command class */
9035      =5      BYTE      cmd;                          /* The command */
9036      =5      BYTE      statusParameter;              /**/
9037      =5      BYTE      properties1;                  /* masked byte */
9038      =5      BYTE      value1;                       /* MSB */
9039      =5      BYTE      value2;                       
9040      =5      BYTE      value3;                       /* LSB */
9041      =5  } ZW_HRV_STATUS_REPORT_3BYTE_FRAME;
9042      =5  
9043      =5  /************************************************************/
9044      =5  /* Hrv Status Report 4byte command class structs */         
9045      =5  /************************************************************/
9046      =5  typedef struct _ZW_HRV_STATUS_REPORT_4BYTE_FRAME_
9047      =5  {
9048      =5      BYTE      cmdClass;                     /* The command class */
9049      =5      BYTE      cmd;                          /* The command */
9050      =5      BYTE      statusParameter;              /**/
9051      =5      BYTE      properties1;                  /* masked byte */
9052      =5      BYTE      value1;                       /* MSB */
9053      =5      BYTE      value2;                       
9054      =5      BYTE      value3;                       
9055      =5      BYTE      value4;                       /* LSB */
9056      =5  } ZW_HRV_STATUS_REPORT_4BYTE_FRAME;
9057      =5  
9058      =5  /************************************************************/
9059      =5  /* Hrv Status Supported Get command class structs */        
9060      =5  /************************************************************/
9061      =5  typedef struct _ZW_HRV_STATUS_SUPPORTED_GET_FRAME_
9062      =5  {
9063      =5      BYTE      cmdClass;                     /* The command class */
9064      =5      BYTE      cmd;                          /* The command */
9065      =5  } ZW_HRV_STATUS_SUPPORTED_GET_FRAME;
9066      =5  
9067      =5  /************************************************************/
9068      =5  /* Hrv Status Supported Report 1byte command class structs */
9069      =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 175 

9070      =5  typedef struct _ZW_HRV_STATUS_SUPPORTED_REPORT_1BYTE_FRAME_
9071      =5  {
9072      =5      BYTE      cmdClass;                     /* The command class */
9073      =5      BYTE      cmd;                          /* The command */
9074      =5      BYTE      bitMask1;                     
9075      =5  } ZW_HRV_STATUS_SUPPORTED_REPORT_1BYTE_FRAME;
9076      =5  
9077      =5  /************************************************************/
9078      =5  /* Hrv Status Supported Report 2byte command class structs */
9079      =5  /************************************************************/
9080      =5  typedef struct _ZW_HRV_STATUS_SUPPORTED_REPORT_2BYTE_FRAME_
9081      =5  {
9082      =5      BYTE      cmdClass;                     /* The command class */
9083      =5      BYTE      cmd;                          /* The command */
9084      =5      BYTE      bitMask1;                     /* MSB */
9085      =5      BYTE      bitMask2;                     /* LSB */
9086      =5  } ZW_HRV_STATUS_SUPPORTED_REPORT_2BYTE_FRAME;
9087      =5  
9088      =5  /************************************************************/
9089      =5  /* Hrv Status Supported Report 3byte command class structs */
9090      =5  /************************************************************/
9091      =5  typedef struct _ZW_HRV_STATUS_SUPPORTED_REPORT_3BYTE_FRAME_
9092      =5  {
9093      =5      BYTE      cmdClass;                     /* The command class */
9094      =5      BYTE      cmd;                          /* The command */
9095      =5      BYTE      bitMask1;                     /* MSB */
9096      =5      BYTE      bitMask2;                     
9097      =5      BYTE      bitMask3;                     /* LSB */
9098      =5  } ZW_HRV_STATUS_SUPPORTED_REPORT_3BYTE_FRAME;
9099      =5  
9100      =5  /************************************************************/
9101      =5  /* Hrv Status Supported Report 4byte command class structs */
9102      =5  /************************************************************/
9103      =5  typedef struct _ZW_HRV_STATUS_SUPPORTED_REPORT_4BYTE_FRAME_
9104      =5  {
9105      =5      BYTE      cmdClass;                     /* The command class */
9106      =5      BYTE      cmd;                          /* The command */
9107      =5      BYTE      bitMask1;                     /* MSB */
9108      =5      BYTE      bitMask2;                     
9109      =5      BYTE      bitMask3;                     
9110      =5      BYTE      bitMask4;                     /* LSB */
9111      =5  } ZW_HRV_STATUS_SUPPORTED_REPORT_4BYTE_FRAME;
9112      =5  
9113      =5  /************************************************************/
9114      =5  /* Indicator Get command class structs */                   
9115      =5  /************************************************************/
9116      =5  typedef struct _ZW_INDICATOR_GET_FRAME_
9117      =5  {
9118      =5      BYTE      cmdClass;                     /* The command class */
9119      =5      BYTE      cmd;                          /* The command */
9120      =5  } ZW_INDICATOR_GET_FRAME;
9121      =5  
9122      =5  /************************************************************/
9123      =5  /* Indicator Report command class structs */                
9124      =5  /************************************************************/
9125      =5  typedef struct _ZW_INDICATOR_REPORT_FRAME_
9126      =5  {
9127      =5      BYTE      cmdClass;                     /* The command class */
9128      =5      BYTE      cmd;                          /* The command */
9129      =5      BYTE      value;                        /**/
9130      =5  } ZW_INDICATOR_REPORT_FRAME;
9131      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 176 

9132      =5  /************************************************************/
9133      =5  /* Indicator Set command class structs */                   
9134      =5  /************************************************************/
9135      =5  typedef struct _ZW_INDICATOR_SET_FRAME_
9136      =5  {
9137      =5      BYTE      cmdClass;                     /* The command class */
9138      =5      BYTE      cmd;                          /* The command */
9139      =5      BYTE      value;                        /**/
9140      =5  } ZW_INDICATOR_SET_FRAME;
9141      =5  
9142      =5  /************************************************************/
9143      =5  /* Ip Configuration Get command class structs */            
9144      =5  /************************************************************/
9145      =5  typedef struct _ZW_IP_CONFIGURATION_GET_FRAME_
9146      =5  {
9147      =5      BYTE      cmdClass;                     /* The command class */
9148      =5      BYTE      cmd;                          /* The command */
9149      =5  } ZW_IP_CONFIGURATION_GET_FRAME;
9150      =5  
9151      =5  /************************************************************/
9152      =5  /* Ip Configuration Release command class structs */        
9153      =5  /************************************************************/
9154      =5  typedef struct _ZW_IP_CONFIGURATION_RELEASE_FRAME_
9155      =5  {
9156      =5      BYTE      cmdClass;                     /* The command class */
9157      =5      BYTE      cmd;                          /* The command */
9158      =5  } ZW_IP_CONFIGURATION_RELEASE_FRAME;
9159      =5  
9160      =5  /************************************************************/
9161      =5  /* Ip Configuration Renew command class structs */          
9162      =5  /************************************************************/
9163      =5  typedef struct _ZW_IP_CONFIGURATION_RENEW_FRAME_
9164      =5  {
9165      =5      BYTE      cmdClass;                     /* The command class */
9166      =5      BYTE      cmd;                          /* The command */
9167      =5  } ZW_IP_CONFIGURATION_RENEW_FRAME;
9168      =5  
9169      =5  /************************************************************/
9170      =5  /* Ip Configuration Report command class structs */         
9171      =5  /************************************************************/
9172      =5  typedef struct _ZW_IP_CONFIGURATION_REPORT_FRAME_
9173      =5  {
9174      =5      BYTE      cmdClass;                     /* The command class */
9175      =5      BYTE      cmd;                          /* The command */
9176      =5      BYTE      properties1;                  /* masked byte */
9177      =5      BYTE      ipAddress1;                   /* MSB */
9178      =5      BYTE      ipAddress2;                   
9179      =5      BYTE      ipAddress3;                   
9180      =5      BYTE      ipAddress4;                   /* LSB */
9181      =5      BYTE      subnetMask1;                  /* MSB */
9182      =5      BYTE      subnetMask2;                  
9183      =5      BYTE      subnetMask3;                  
9184      =5      BYTE      subnetMask4;                  /* LSB */
9185      =5      BYTE      gateway1;                     /* MSB */
9186      =5      BYTE      gateway2;                     
9187      =5      BYTE      gateway3;                     
9188      =5      BYTE      gateway4;                     /* LSB */
9189      =5      BYTE      dns11;                        /* MSB */
9190      =5      BYTE      dns12;                        
9191      =5      BYTE      dns13;                        
9192      =5      BYTE      dns14;                        /* LSB */
9193      =5      BYTE      dns21;                        /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 177 

9194      =5      BYTE      dns22;                        
9195      =5      BYTE      dns23;                        
9196      =5      BYTE      dns24;                        /* LSB */
9197      =5      BYTE      leasetime1;                   /* MSB */
9198      =5      BYTE      leasetime2;                   
9199      =5      BYTE      leasetime3;                   
9200      =5      BYTE      leasetime4;                   /* LSB */
9201      =5  } ZW_IP_CONFIGURATION_REPORT_FRAME;
9202      =5  
9203      =5  /************************************************************/
9204      =5  /* Ip Configuration Set command class structs */            
9205      =5  /************************************************************/
9206      =5  typedef struct _ZW_IP_CONFIGURATION_SET_FRAME_
9207      =5  {
9208      =5      BYTE      cmdClass;                     /* The command class */
9209      =5      BYTE      cmd;                          /* The command */
9210      =5      BYTE      properties1;                  /* masked byte */
9211      =5      BYTE      ipAddress1;                   /* MSB */
9212      =5      BYTE      ipAddress2;                   
9213      =5      BYTE      ipAddress3;                   
9214      =5      BYTE      ipAddress4;                   /* LSB */
9215      =5      BYTE      subnetMask1;                  /* MSB */
9216      =5      BYTE      subnetMask2;                  
9217      =5      BYTE      subnetMask3;                  
9218      =5      BYTE      subnetMask4;                  /* LSB */
9219      =5      BYTE      gateway1;                     /* MSB */
9220      =5      BYTE      gateway2;                     
9221      =5      BYTE      gateway3;                     
9222      =5      BYTE      gateway4;                     /* LSB */
9223      =5      BYTE      dns11;                        /* MSB */
9224      =5      BYTE      dns12;                        
9225      =5      BYTE      dns13;                        
9226      =5      BYTE      dns14;                        /* LSB */
9227      =5      BYTE      dns21;                        /* MSB */
9228      =5      BYTE      dns22;                        
9229      =5      BYTE      dns23;                        
9230      =5      BYTE      dns24;                        /* LSB */
9231      =5  } ZW_IP_CONFIGURATION_SET_FRAME;
9232      =5  
9233      =5  /************************************************************/
9234      =5  /* Language Get command class structs */                    
9235      =5  /************************************************************/
9236      =5  typedef struct _ZW_LANGUAGE_GET_FRAME_
9237      =5  {
9238      =5      BYTE      cmdClass;                     /* The command class */
9239      =5      BYTE      cmd;                          /* The command */
9240      =5  } ZW_LANGUAGE_GET_FRAME;
9241      =5  
9242      =5  /************************************************************/
9243      =5  /* Language Report command class structs */                 
9244      =5  /************************************************************/
9245      =5  typedef struct _ZW_LANGUAGE_REPORT_FRAME_
9246      =5  {
9247      =5      BYTE      cmdClass;                     /* The command class */
9248      =5      BYTE      cmd;                          /* The command */
9249      =5      BYTE      language1;                    /* MSB */
9250      =5      BYTE      language2;                    
9251      =5      BYTE      language3;                    /* LSB */
9252      =5      BYTE      country1;                     /* MSB */
9253      =5      BYTE      country2;                     /* LSB */
9254      =5  } ZW_LANGUAGE_REPORT_FRAME;
9255      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 178 

9256      =5  /************************************************************/
9257      =5  /* Language Set command class structs */                    
9258      =5  /************************************************************/
9259      =5  typedef struct _ZW_LANGUAGE_SET_FRAME_
9260      =5  {
9261      =5      BYTE      cmdClass;                     /* The command class */
9262      =5      BYTE      cmd;                          /* The command */
9263      =5      BYTE      language1;                    /* MSB */
9264      =5      BYTE      language2;                    
9265      =5      BYTE      language3;                    /* LSB */
9266      =5      BYTE      country1;                     /* MSB */
9267      =5      BYTE      country2;                     /* LSB */
9268      =5  } ZW_LANGUAGE_SET_FRAME;
9269      =5  
9270      =5  /************************************************************/
9271      =5  /* Lock Get command class structs */                        
9272      =5  /************************************************************/
9273      =5  typedef struct _ZW_LOCK_GET_FRAME_
9274      =5  {
9275      =5      BYTE      cmdClass;                     /* The command class */
9276      =5      BYTE      cmd;                          /* The command */
9277      =5  } ZW_LOCK_GET_FRAME;
9278      =5  
9279      =5  /************************************************************/
9280      =5  /* Lock Report command class structs */                     
9281      =5  /************************************************************/
9282      =5  typedef struct _ZW_LOCK_REPORT_FRAME_
9283      =5  {
9284      =5      BYTE      cmdClass;                     /* The command class */
9285      =5      BYTE      cmd;                          /* The command */
9286      =5      BYTE      lockState;                    /**/
9287      =5  } ZW_LOCK_REPORT_FRAME;
9288      =5  
9289      =5  /************************************************************/
9290      =5  /* Lock Set command class structs */                        
9291      =5  /************************************************************/
9292      =5  typedef struct _ZW_LOCK_SET_FRAME_
9293      =5  {
9294      =5      BYTE      cmdClass;                     /* The command class */
9295      =5      BYTE      cmd;                          /* The command */
9296      =5      BYTE      lockState;                    /**/
9297      =5  } ZW_LOCK_SET_FRAME;
9298      =5  
9299      =5  /************************************************************/
9300      =5  /* Manufacturer Specific Get command class structs */       
9301      =5  /************************************************************/
9302      =5  typedef struct _ZW_MANUFACTURER_SPECIFIC_GET_FRAME_
9303      =5  {
9304      =5      BYTE      cmdClass;                     /* The command class */
9305      =5      BYTE      cmd;                          /* The command */
9306      =5  } ZW_MANUFACTURER_SPECIFIC_GET_FRAME;
9307      =5  
9308      =5  /************************************************************/
9309      =5  /* Manufacturer Specific Report command class structs */    
9310      =5  /************************************************************/
9311      =5  typedef struct _ZW_MANUFACTURER_SPECIFIC_REPORT_FRAME_
9312      =5  {
9313      =5      BYTE      cmdClass;                     /* The command class */
9314      =5      BYTE      cmd;                          /* The command */
9315      =5      BYTE      manufacturerId1;              /* MSB */
9316      =5      BYTE      manufacturerId2;              /* LSB */
9317      =5      BYTE      productTypeId1;               /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 179 

9318      =5      BYTE      productTypeId2;               /* LSB */
9319      =5      BYTE      productId1;                   /* MSB */
9320      =5      BYTE      productId2;                   /* LSB */
9321      =5  } ZW_MANUFACTURER_SPECIFIC_REPORT_FRAME;
9322      =5  
9323      =5  /************************************************************/
9324      =5  /* Manufacturer Specific Get V2 command class structs */    
9325      =5  /************************************************************/
9326      =5  typedef struct _ZW_MANUFACTURER_SPECIFIC_GET_V2_FRAME_
9327      =5  {
9328      =5      BYTE      cmdClass;                     /* The command class */
9329      =5      BYTE      cmd;                          /* The command */
9330      =5  } ZW_MANUFACTURER_SPECIFIC_GET_V2_FRAME;
9331      =5  
9332      =5  /************************************************************/
9333      =5  /* Manufacturer Specific Report V2 command class structs */ 
9334      =5  /************************************************************/
9335      =5  typedef struct _ZW_MANUFACTURER_SPECIFIC_REPORT_V2_FRAME_
9336      =5  {
9337      =5      BYTE      cmdClass;                     /* The command class */
9338      =5      BYTE      cmd;                          /* The command */
9339      =5      BYTE      manufacturerId1;              /* MSB */
9340      =5      BYTE      manufacturerId2;              /* LSB */
9341      =5      BYTE      productTypeId1;               /* MSB */
9342      =5      BYTE      productTypeId2;               /* LSB */
9343      =5      BYTE      productId1;                   /* MSB */
9344      =5      BYTE      productId2;                   /* LSB */
9345      =5  } ZW_MANUFACTURER_SPECIFIC_REPORT_V2_FRAME;
9346      =5  
9347      =5  /************************************************************/
9348      =5  /* Device Specific Get V2 command class structs */          
9349      =5  /************************************************************/
9350      =5  typedef struct _ZW_DEVICE_SPECIFIC_GET_V2_FRAME_
9351      =5  {
9352      =5      BYTE      cmdClass;                     /* The command class */
9353      =5      BYTE      cmd;                          /* The command */
9354      =5      BYTE      properties1;                  /* masked byte */
9355      =5  } ZW_DEVICE_SPECIFIC_GET_V2_FRAME;
9356      =5  
9357      =5  /************************************************************/
9358      =5  /* Device Specific Report 1byte V2 command class structs */ 
9359      =5  /************************************************************/
9360      =5  typedef struct _ZW_DEVICE_SPECIFIC_REPORT_1BYTE_V2_FRAME_
9361      =5  {
9362      =5      BYTE      cmdClass;                     /* The command class */
9363      =5      BYTE      cmd;                          /* The command */
9364      =5      BYTE      properties1;                  /* masked byte */
9365      =5      BYTE      properties2;                  /* masked byte */
9366      =5      BYTE      deviceIdData1;                
9367      =5  } ZW_DEVICE_SPECIFIC_REPORT_1BYTE_V2_FRAME;
9368      =5  
9369      =5  /************************************************************/
9370      =5  /* Device Specific Report 2byte V2 command class structs */ 
9371      =5  /************************************************************/
9372      =5  typedef struct _ZW_DEVICE_SPECIFIC_REPORT_2BYTE_V2_FRAME_
9373      =5  {
9374      =5      BYTE      cmdClass;                     /* The command class */
9375      =5      BYTE      cmd;                          /* The command */
9376      =5      BYTE      properties1;                  /* masked byte */
9377      =5      BYTE      properties2;                  /* masked byte */
9378      =5      BYTE      deviceIdData1;                /* MSB */
9379      =5      BYTE      deviceIdData2;                /* LSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 180 

9380      =5  } ZW_DEVICE_SPECIFIC_REPORT_2BYTE_V2_FRAME;
9381      =5  
9382      =5  /************************************************************/
9383      =5  /* Device Specific Report 3byte V2 command class structs */ 
9384      =5  /************************************************************/
9385      =5  typedef struct _ZW_DEVICE_SPECIFIC_REPORT_3BYTE_V2_FRAME_
9386      =5  {
9387      =5      BYTE      cmdClass;                     /* The command class */
9388      =5      BYTE      cmd;                          /* The command */
9389      =5      BYTE      properties1;                  /* masked byte */
9390      =5      BYTE      properties2;                  /* masked byte */
9391      =5      BYTE      deviceIdData1;                /* MSB */
9392      =5      BYTE      deviceIdData2;                
9393      =5      BYTE      deviceIdData3;                /* LSB */
9394      =5  } ZW_DEVICE_SPECIFIC_REPORT_3BYTE_V2_FRAME;
9395      =5  
9396      =5  /************************************************************/
9397      =5  /* Device Specific Report 4byte V2 command class structs */ 
9398      =5  /************************************************************/
9399      =5  typedef struct _ZW_DEVICE_SPECIFIC_REPORT_4BYTE_V2_FRAME_
9400      =5  {
9401      =5      BYTE      cmdClass;                     /* The command class */
9402      =5      BYTE      cmd;                          /* The command */
9403      =5      BYTE      properties1;                  /* masked byte */
9404      =5      BYTE      properties2;                  /* masked byte */
9405      =5      BYTE      deviceIdData1;                /* MSB */
9406      =5      BYTE      deviceIdData2;                
9407      =5      BYTE      deviceIdData3;                
9408      =5      BYTE      deviceIdData4;                /* LSB */
9409      =5  } ZW_DEVICE_SPECIFIC_REPORT_4BYTE_V2_FRAME;
9410      =5  
9411      =5  /************************************************************/
9412      =5  /* Meter Pulse Get command class structs */                 
9413      =5  /************************************************************/
9414      =5  typedef struct _ZW_METER_PULSE_GET_FRAME_
9415      =5  {
9416      =5      BYTE      cmdClass;                     /* The command class */
9417      =5      BYTE      cmd;                          /* The command */
9418      =5  } ZW_METER_PULSE_GET_FRAME;
9419      =5  
9420      =5  /************************************************************/
9421      =5  /* Meter Pulse Report command class structs */              
9422      =5  /************************************************************/
9423      =5  typedef struct _ZW_METER_PULSE_REPORT_FRAME_
9424      =5  {
9425      =5      BYTE      cmdClass;                     /* The command class */
9426      =5      BYTE      cmd;                          /* The command */
9427      =5      BYTE      pulseCount1;                  /* MSB */
9428      =5      BYTE      pulseCount2;                  
9429      =5      BYTE      pulseCount3;                  
9430      =5      BYTE      pulseCount4;                  /* LSB */
9431      =5  } ZW_METER_PULSE_REPORT_FRAME;
9432      =5  
9433      =5  /************************************************************/
9434      =5  /* Meter Tbl Table Point Adm No Set 1byte command class structs */
9435      =5  /************************************************************/
9436      =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_1BYTE_FRAME_
9437      =5  {
9438      =5      BYTE      cmdClass;                     /* The command class */
9439      =5      BYTE      cmd;                          /* The command */
9440      =5      BYTE      properties1;                  /* masked byte */
9441      =5      BYTE      meterPointAdmNumberCharacter1;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 181 

9442      =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_1BYTE_FRAME;
9443      =5  
9444      =5  /************************************************************/
9445      =5  /* Meter Tbl Table Point Adm No Set 2byte command class structs */
9446      =5  /************************************************************/
9447      =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_2BYTE_FRAME_
9448      =5  {
9449      =5      BYTE      cmdClass;                     /* The command class */
9450      =5      BYTE      cmd;                          /* The command */
9451      =5      BYTE      properties1;                  /* masked byte */
9452      =5      BYTE      meterPointAdmNumberCharacter1;/* MSB */
9453      =5      BYTE      meterPointAdmNumberCharacter2;/* LSB */
9454      =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_2BYTE_FRAME;
9455      =5  
9456      =5  /************************************************************/
9457      =5  /* Meter Tbl Table Point Adm No Set 3byte command class structs */
9458      =5  /************************************************************/
9459      =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_3BYTE_FRAME_
9460      =5  {
9461      =5      BYTE      cmdClass;                     /* The command class */
9462      =5      BYTE      cmd;                          /* The command */
9463      =5      BYTE      properties1;                  /* masked byte */
9464      =5      BYTE      meterPointAdmNumberCharacter1;/* MSB */
9465      =5      BYTE      meterPointAdmNumberCharacter2;
9466      =5      BYTE      meterPointAdmNumberCharacter3;/* LSB */
9467      =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_3BYTE_FRAME;
9468      =5  
9469      =5  /************************************************************/
9470      =5  /* Meter Tbl Table Point Adm No Set 4byte command class structs */
9471      =5  /************************************************************/
9472      =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_4BYTE_FRAME_
9473      =5  {
9474      =5      BYTE      cmdClass;                     /* The command class */
9475      =5      BYTE      cmd;                          /* The command */
9476      =5      BYTE      properties1;                  /* masked byte */
9477      =5      BYTE      meterPointAdmNumberCharacter1;/* MSB */
9478      =5      BYTE      meterPointAdmNumberCharacter2;
9479      =5      BYTE      meterPointAdmNumberCharacter3;
9480      =5      BYTE      meterPointAdmNumberCharacter4;/* LSB */
9481      =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_4BYTE_FRAME;
9482      =5  
9483      =5  /************************************************************/
9484      =5  /* Meter Tbl Status Report variant group structs */         
9485      =5  /************************************************************/
9486      =5  typedef struct _VG_METER_TBL_STATUS_REPORT_VG_
9487      =5  {
9488      =5      BYTE      properties1;                  /* masked byte */
9489      =5      BYTE      year1;                        /* MSB */
9490      =5      BYTE      year2;                        /* LSB */
9491      =5      BYTE      month;                        /**/
9492      =5      BYTE      day;                          /**/
9493      =5      BYTE      hourLocalTime;                /**/
9494      =5      BYTE      minuteLocalTime;              /**/
9495      =5      BYTE      secondLocalTime;              /**/
9496      =5  } VG_METER_TBL_STATUS_REPORT_VG;
9497      =5  
9498      =5  /************************************************************/
9499      =5  /* Meter Tbl Status Report 1byte command class structs */   
9500      =5  /************************************************************/
9501      =5  typedef struct _ZW_METER_TBL_STATUS_REPORT_1BYTE_FRAME_
9502      =5  {
9503      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 182 

9504      =5      BYTE      cmd;                          /* The command */
9505      =5      BYTE      reportsToFollow;              /**/
9506      =5      BYTE      currentOperatingStatus1;      /* MSB */
9507      =5      BYTE      currentOperatingStatus2;      
9508      =5      BYTE      currentOperatingStatus3;      /* LSB */
9509      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup1;                /**/
9510      =5  } ZW_METER_TBL_STATUS_REPORT_1BYTE_FRAME;
9511      =5  
9512      =5  /************************************************************/
9513      =5  /* Meter Tbl Status Report 2byte command class structs */   
9514      =5  /************************************************************/
9515      =5  typedef struct _ZW_METER_TBL_STATUS_REPORT_2BYTE_FRAME_
9516      =5  {
9517      =5      BYTE      cmdClass;                     /* The command class */
9518      =5      BYTE      cmd;                          /* The command */
9519      =5      BYTE      reportsToFollow;              /**/
9520      =5      BYTE      currentOperatingStatus1;      /* MSB */
9521      =5      BYTE      currentOperatingStatus2;      
9522      =5      BYTE      currentOperatingStatus3;      /* LSB */
9523      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup1;                /**/
9524      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup2;                /**/
9525      =5  } ZW_METER_TBL_STATUS_REPORT_2BYTE_FRAME;
9526      =5  
9527      =5  /************************************************************/
9528      =5  /* Meter Tbl Status Report 3byte command class structs */   
9529      =5  /************************************************************/
9530      =5  typedef struct _ZW_METER_TBL_STATUS_REPORT_3BYTE_FRAME_
9531      =5  {
9532      =5      BYTE      cmdClass;                     /* The command class */
9533      =5      BYTE      cmd;                          /* The command */
9534      =5      BYTE      reportsToFollow;              /**/
9535      =5      BYTE      currentOperatingStatus1;      /* MSB */
9536      =5      BYTE      currentOperatingStatus2;      
9537      =5      BYTE      currentOperatingStatus3;      /* LSB */
9538      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup1;                /**/
9539      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup2;                /**/
9540      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup3;                /**/
9541      =5  } ZW_METER_TBL_STATUS_REPORT_3BYTE_FRAME;
9542      =5  
9543      =5  /************************************************************/
9544      =5  /* Meter Tbl Status Report 4byte command class structs */   
9545      =5  /************************************************************/
9546      =5  typedef struct _ZW_METER_TBL_STATUS_REPORT_4BYTE_FRAME_
9547      =5  {
9548      =5      BYTE      cmdClass;                     /* The command class */
9549      =5      BYTE      cmd;                          /* The command */
9550      =5      BYTE      reportsToFollow;              /**/
9551      =5      BYTE      currentOperatingStatus1;      /* MSB */
9552      =5      BYTE      currentOperatingStatus2;      
9553      =5      BYTE      currentOperatingStatus3;      /* LSB */
9554      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup1;                /**/
9555      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup2;                /**/
9556      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup3;                /**/
9557      =5      VG_METER_TBL_STATUS_REPORT_VG variantgroup4;                /**/
9558      =5  } ZW_METER_TBL_STATUS_REPORT_4BYTE_FRAME;
9559      =5  
9560      =5  /************************************************************/
9561      =5  /* Meter Tbl Status Date Get command class structs */       
9562      =5  /************************************************************/
9563      =5  typedef struct _ZW_METER_TBL_STATUS_DATE_GET_FRAME_
9564      =5  {
9565      =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 183 

9566      =5      BYTE      cmd;                          /* The command */
9567      =5      BYTE      maximumReports;               /**/
9568      =5      BYTE      startYear1;                   /* MSB */
9569      =5      BYTE      startYear2;                   /* LSB */
9570      =5      BYTE      startMonth;                   /**/
9571      =5      BYTE      startDay;                     /**/
9572      =5      BYTE      startHourLocalTime;           /**/
9573      =5      BYTE      startMinuteLocalTime;         /**/
9574      =5      BYTE      startSecondLocalTime;         /**/
9575      =5      BYTE      stopYear1;                    /* MSB */
9576      =5      BYTE      stopYear2;                    /* LSB */
9577      =5      BYTE      stopMonth;                    /**/
9578      =5      BYTE      stopDay;                      /**/
9579      =5      BYTE      stopHourLocalTime;            /**/
9580      =5      BYTE      stopMinuteLocalTime;          /**/
9581      =5      BYTE      stopSecondLocalTime;          /**/
9582      =5  } ZW_METER_TBL_STATUS_DATE_GET_FRAME;
9583      =5  
9584      =5  /************************************************************/
9585      =5  /* Meter Tbl Status Depth Get command class structs */      
9586      =5  /************************************************************/
9587      =5  typedef struct _ZW_METER_TBL_STATUS_DEPTH_GET_FRAME_
9588      =5  {
9589      =5      BYTE      cmdClass;                     /* The command class */
9590      =5      BYTE      cmd;                          /* The command */
9591      =5      BYTE      statusEventLogDepth;          /**/
9592      =5  } ZW_METER_TBL_STATUS_DEPTH_GET_FRAME;
9593      =5  
9594      =5  /************************************************************/
9595      =5  /* Meter Tbl Status Supported Get command class structs */  
9596      =5  /************************************************************/
9597      =5  typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_GET_FRAME_
9598      =5  {
9599      =5      BYTE      cmdClass;                     /* The command class */
9600      =5      BYTE      cmd;                          /* The command */
9601      =5  } ZW_METER_TBL_STATUS_SUPPORTED_GET_FRAME;
9602      =5  
9603      =5  /************************************************************/
9604      =5  /* Meter Tbl Status Supported Report command class structs */
9605      =5  /************************************************************/
9606      =5  typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_REPORT_FRAME_
9607      =5  {
9608      =5      BYTE      cmdClass;                     /* The command class */
9609      =5      BYTE      cmd;                          /* The command */
9610      =5      BYTE      supportedOperatingStatus1;    /* MSB */
9611      =5      BYTE      supportedOperatingStatus2;    
9612      =5      BYTE      supportedOperatingStatus3;    /* LSB */
9613      =5      BYTE      statusEventLogDepth;          /**/
9614      =5  } ZW_METER_TBL_STATUS_SUPPORTED_REPORT_FRAME;
9615      =5  
9616      =5  /************************************************************/
9617      =5  /* Meter Tbl Current Data Get command class structs */      
9618      =5  /************************************************************/
9619      =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_GET_FRAME_
9620      =5  {
9621      =5      BYTE      cmdClass;                     /* The command class */
9622      =5      BYTE      cmd;                          /* The command */
9623      =5      BYTE      datasetRequested1;            /* MSB */
9624      =5      BYTE      datasetRequested2;            
9625      =5      BYTE      datasetRequested3;            /* LSB */
9626      =5  } ZW_METER_TBL_CURRENT_DATA_GET_FRAME;
9627      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 184 

9628      =5  /************************************************************/
9629      =5  /* Meter Tbl Current Data Report variant group structs */   
9630      =5  /************************************************************/
9631      =5  typedef struct _VG_METER_TBL_CURRENT_DATA_REPORT_VG_
9632      =5  {
9633      =5      BYTE      properties1;                  /* masked byte */
9634      =5      BYTE      currentValue1;                /* MSB */
9635      =5      BYTE      currentValue2;                
9636      =5      BYTE      currentValue3;                
9637      =5      BYTE      currentValue4;                /* LSB */
9638      =5  } VG_METER_TBL_CURRENT_DATA_REPORT_VG;
9639      =5  
9640      =5  /************************************************************/
9641      =5  /* Meter Tbl Current Data Report 1byte command class structs */
9642      =5  /************************************************************/
9643      =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME_
9644      =5  {
9645      =5      BYTE      cmdClass;                     /* The command class */
9646      =5      BYTE      cmd;                          /* The command */
9647      =5      BYTE      reportsToFollow;              /**/
9648      =5      BYTE      properties1;                  /* masked byte */
9649      =5      BYTE      dataset1;                     /* MSB */
9650      =5      BYTE      dataset2;                     
9651      =5      BYTE      dataset3;                     /* LSB */
9652      =5      BYTE      year1;                        /* MSB */
9653      =5      BYTE      year2;                        /* LSB */
9654      =5      BYTE      month;                        /**/
9655      =5      BYTE      day;                          /**/
9656      =5      BYTE      hourLocalTime;                /**/
9657      =5      BYTE      minuteLocalTime;              /**/
9658      =5      BYTE      secondLocalTime;              /**/
9659      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
9660      =5  } ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME;
9661      =5  
9662      =5  /************************************************************/
9663      =5  /* Meter Tbl Current Data Report 2byte command class structs */
9664      =5  /************************************************************/
9665      =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME_
9666      =5  {
9667      =5      BYTE      cmdClass;                     /* The command class */
9668      =5      BYTE      cmd;                          /* The command */
9669      =5      BYTE      reportsToFollow;              /**/
9670      =5      BYTE      properties1;                  /* masked byte */
9671      =5      BYTE      dataset1;                     /* MSB */
9672      =5      BYTE      dataset2;                     
9673      =5      BYTE      dataset3;                     /* LSB */
9674      =5      BYTE      year1;                        /* MSB */
9675      =5      BYTE      year2;                        /* LSB */
9676      =5      BYTE      month;                        /**/
9677      =5      BYTE      day;                          /**/
9678      =5      BYTE      hourLocalTime;                /**/
9679      =5      BYTE      minuteLocalTime;              /**/
9680      =5      BYTE      secondLocalTime;              /**/
9681      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
9682      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
9683      =5  } ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME;
9684      =5  
9685      =5  /************************************************************/
9686      =5  /* Meter Tbl Current Data Report 3byte command class structs */
9687      =5  /************************************************************/
9688      =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME_
9689      =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 185 

9690      =5      BYTE      cmdClass;                     /* The command class */
9691      =5      BYTE      cmd;                          /* The command */
9692      =5      BYTE      reportsToFollow;              /**/
9693      =5      BYTE      properties1;                  /* masked byte */
9694      =5      BYTE      dataset1;                     /* MSB */
9695      =5      BYTE      dataset2;                     
9696      =5      BYTE      dataset3;                     /* LSB */
9697      =5      BYTE      year1;                        /* MSB */
9698      =5      BYTE      year2;                        /* LSB */
9699      =5      BYTE      month;                        /**/
9700      =5      BYTE      day;                          /**/
9701      =5      BYTE      hourLocalTime;                /**/
9702      =5      BYTE      minuteLocalTime;              /**/
9703      =5      BYTE      secondLocalTime;              /**/
9704      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
9705      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
9706      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup3;                /**/
9707      =5  } ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME;
9708      =5  
9709      =5  /************************************************************/
9710      =5  /* Meter Tbl Current Data Report 4byte command class structs */
9711      =5  /************************************************************/
9712      =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME_
9713      =5  {
9714      =5      BYTE      cmdClass;                     /* The command class */
9715      =5      BYTE      cmd;                          /* The command */
9716      =5      BYTE      reportsToFollow;              /**/
9717      =5      BYTE      properties1;                  /* masked byte */
9718      =5      BYTE      dataset1;                     /* MSB */
9719      =5      BYTE      dataset2;                     
9720      =5      BYTE      dataset3;                     /* LSB */
9721      =5      BYTE      year1;                        /* MSB */
9722      =5      BYTE      year2;                        /* LSB */
9723      =5      BYTE      month;                        /**/
9724      =5      BYTE      day;                          /**/
9725      =5      BYTE      hourLocalTime;                /**/
9726      =5      BYTE      minuteLocalTime;              /**/
9727      =5      BYTE      secondLocalTime;              /**/
9728      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
9729      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
9730      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup3;                /**/
9731      =5      VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup4;                /**/
9732      =5  } ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME;
9733      =5  
9734      =5  /************************************************************/
9735      =5  /* Meter Tbl Historical Data Get command class structs */   
9736      =5  /************************************************************/
9737      =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_GET_FRAME_
9738      =5  {
9739      =5      BYTE      cmdClass;                     /* The command class */
9740      =5      BYTE      cmd;                          /* The command */
9741      =5      BYTE      maximumReports;               /**/
9742      =5      BYTE      historicalDatasetRequested1;  /* MSB */
9743      =5      BYTE      historicalDatasetRequested2;  
9744      =5      BYTE      historicalDatasetRequested3;  /* LSB */
9745      =5      BYTE      startYear1;                   /* MSB */
9746      =5      BYTE      startYear2;                   /* LSB */
9747      =5      BYTE      startMonth;                   /**/
9748      =5      BYTE      startDay;                     /**/
9749      =5      BYTE      startHourLocalTime;           /**/
9750      =5      BYTE      startMinuteLocalTime;         /**/
9751      =5      BYTE      startSecondLocalTime;         /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 186 

9752      =5      BYTE      stopYear1;                    /* MSB */
9753      =5      BYTE      stopYear2;                    /* LSB */
9754      =5      BYTE      stopMonth;                    /**/
9755      =5      BYTE      stopDay;                      /**/
9756      =5      BYTE      stopHourLocalTime;            /**/
9757      =5      BYTE      stopMinuteLocalTime;          /**/
9758      =5      BYTE      stopSecondLocalTime;          /**/
9759      =5  } ZW_METER_TBL_HISTORICAL_DATA_GET_FRAME;
9760      =5  
9761      =5  /************************************************************/
9762      =5  /* Meter Tbl Historical Data Report variant group structs */
9763      =5  /************************************************************/
9764      =5  typedef struct _VG_METER_TBL_HISTORICAL_DATA_REPORT_VG_
9765      =5  {
9766      =5      BYTE      properties1;                  /* masked byte */
9767      =5      BYTE      historicalValue1;             /* MSB */
9768      =5      BYTE      historicalValue2;             
9769      =5      BYTE      historicalValue3;             
9770      =5      BYTE      historicalValue4;             /* LSB */
9771      =5  } VG_METER_TBL_HISTORICAL_DATA_REPORT_VG;
9772      =5  
9773      =5  /************************************************************/
9774      =5  /* Meter Tbl Historical Data Report 1byte command class structs */
9775      =5  /************************************************************/
9776      =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME_
9777      =5  {
9778      =5      BYTE      cmdClass;                     /* The command class */
9779      =5      BYTE      cmd;                          /* The command */
9780      =5      BYTE      reportsToFollow;              /**/
9781      =5      BYTE      properties1;                  /* masked byte */
9782      =5      BYTE      dataset1;                     /* MSB */
9783      =5      BYTE      dataset2;                     
9784      =5      BYTE      dataset3;                     /* LSB */
9785      =5      BYTE      year1;                        /* MSB */
9786      =5      BYTE      year2;                        /* LSB */
9787      =5      BYTE      month;                        /**/
9788      =5      BYTE      day;                          /**/
9789      =5      BYTE      hourLocalTime;                /**/
9790      =5      BYTE      minuteLocalTime;              /**/
9791      =5      BYTE      secondLocalTime;              /**/
9792      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
9793      =5  } ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME;
9794      =5  
9795      =5  /************************************************************/
9796      =5  /* Meter Tbl Historical Data Report 2byte command class structs */
9797      =5  /************************************************************/
9798      =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME_
9799      =5  {
9800      =5      BYTE      cmdClass;                     /* The command class */
9801      =5      BYTE      cmd;                          /* The command */
9802      =5      BYTE      reportsToFollow;              /**/
9803      =5      BYTE      properties1;                  /* masked byte */
9804      =5      BYTE      dataset1;                     /* MSB */
9805      =5      BYTE      dataset2;                     
9806      =5      BYTE      dataset3;                     /* LSB */
9807      =5      BYTE      year1;                        /* MSB */
9808      =5      BYTE      year2;                        /* LSB */
9809      =5      BYTE      month;                        /**/
9810      =5      BYTE      day;                          /**/
9811      =5      BYTE      hourLocalTime;                /**/
9812      =5      BYTE      minuteLocalTime;              /**/
9813      =5      BYTE      secondLocalTime;              /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 187 

9814      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
9815      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
9816      =5  } ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME;
9817      =5  
9818      =5  /************************************************************/
9819      =5  /* Meter Tbl Historical Data Report 3byte command class structs */
9820      =5  /************************************************************/
9821      =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME_
9822      =5  {
9823      =5      BYTE      cmdClass;                     /* The command class */
9824      =5      BYTE      cmd;                          /* The command */
9825      =5      BYTE      reportsToFollow;              /**/
9826      =5      BYTE      properties1;                  /* masked byte */
9827      =5      BYTE      dataset1;                     /* MSB */
9828      =5      BYTE      dataset2;                     
9829      =5      BYTE      dataset3;                     /* LSB */
9830      =5      BYTE      year1;                        /* MSB */
9831      =5      BYTE      year2;                        /* LSB */
9832      =5      BYTE      month;                        /**/
9833      =5      BYTE      day;                          /**/
9834      =5      BYTE      hourLocalTime;                /**/
9835      =5      BYTE      minuteLocalTime;              /**/
9836      =5      BYTE      secondLocalTime;              /**/
9837      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
9838      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
9839      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup3;                /**/
9840      =5  } ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME;
9841      =5  
9842      =5  /************************************************************/
9843      =5  /* Meter Tbl Historical Data Report 4byte command class structs */
9844      =5  /************************************************************/
9845      =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME_
9846      =5  {
9847      =5      BYTE      cmdClass;                     /* The command class */
9848      =5      BYTE      cmd;                          /* The command */
9849      =5      BYTE      reportsToFollow;              /**/
9850      =5      BYTE      properties1;                  /* masked byte */
9851      =5      BYTE      dataset1;                     /* MSB */
9852      =5      BYTE      dataset2;                     
9853      =5      BYTE      dataset3;                     /* LSB */
9854      =5      BYTE      year1;                        /* MSB */
9855      =5      BYTE      year2;                        /* LSB */
9856      =5      BYTE      month;                        /**/
9857      =5      BYTE      day;                          /**/
9858      =5      BYTE      hourLocalTime;                /**/
9859      =5      BYTE      minuteLocalTime;              /**/
9860      =5      BYTE      secondLocalTime;              /**/
9861      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
9862      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
9863      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup3;                /**/
9864      =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup4;                /**/
9865      =5  } ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME;
9866      =5  
9867      =5  /************************************************************/
9868      =5  /* Meter Tbl Report command class structs */                
9869      =5  /************************************************************/
9870      =5  typedef struct _ZW_METER_TBL_REPORT_FRAME_
9871      =5  {
9872      =5      BYTE      cmdClass;                     /* The command class */
9873      =5      BYTE      cmd;                          /* The command */
9874      =5      BYTE      properties1;                  /* masked byte */
9875      =5      BYTE      properties2;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 188 

9876      =5      BYTE      datasetSupported1;            /* MSB */
9877      =5      BYTE      datasetSupported2;            
9878      =5      BYTE      datasetSupported3;            /* LSB */
9879      =5      BYTE      datasetHistorySupported1;     /* MSB */
9880      =5      BYTE      datasetHistorySupported2;     
9881      =5      BYTE      datasetHistorySupported3;     /* LSB */
9882      =5      BYTE      dataHistorySupported1;        /* MSB */
9883      =5      BYTE      dataHistorySupported2;        
9884      =5      BYTE      dataHistorySupported3;        /* LSB */
9885      =5  } ZW_METER_TBL_REPORT_FRAME;
9886      =5  
9887      =5  /************************************************************/
9888      =5  /* Meter Tbl Table Capability Get command class structs */  
9889      =5  /************************************************************/
9890      =5  typedef struct _ZW_METER_TBL_TABLE_CAPABILITY_GET_FRAME_
9891      =5  {
9892      =5      BYTE      cmdClass;                     /* The command class */
9893      =5      BYTE      cmd;                          /* The command */
9894      =5  } ZW_METER_TBL_TABLE_CAPABILITY_GET_FRAME;
9895      =5  
9896      =5  /************************************************************/
9897      =5  /* Meter Tbl Table Id Get command class structs */          
9898      =5  /************************************************************/
9899      =5  typedef struct _ZW_METER_TBL_TABLE_ID_GET_FRAME_
9900      =5  {
9901      =5      BYTE      cmdClass;                     /* The command class */
9902      =5      BYTE      cmd;                          /* The command */
9903      =5  } ZW_METER_TBL_TABLE_ID_GET_FRAME;
9904      =5  
9905      =5  /************************************************************/
9906      =5  /* Meter Tbl Table Id Report 1byte command class structs */ 
9907      =5  /************************************************************/
9908      =5  typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_FRAME_
9909      =5  {
9910      =5      BYTE      cmdClass;                     /* The command class */
9911      =5      BYTE      cmd;                          /* The command */
9912      =5      BYTE      properties1;                  /* masked byte */
9913      =5      BYTE      meterIdCharacter1;            
9914      =5  } ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_FRAME;
9915      =5  
9916      =5  /************************************************************/
9917      =5  /* Meter Tbl Table Id Report 2byte command class structs */ 
9918      =5  /************************************************************/
9919      =5  typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_FRAME_
9920      =5  {
9921      =5      BYTE      cmdClass;                     /* The command class */
9922      =5      BYTE      cmd;                          /* The command */
9923      =5      BYTE      properties1;                  /* masked byte */
9924      =5      BYTE      meterIdCharacter1;            /* MSB */
9925      =5      BYTE      meterIdCharacter2;            /* LSB */
9926      =5  } ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_FRAME;
9927      =5  
9928      =5  /************************************************************/
9929      =5  /* Meter Tbl Table Id Report 3byte command class structs */ 
9930      =5  /************************************************************/
9931      =5  typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_FRAME_
9932      =5  {
9933      =5      BYTE      cmdClass;                     /* The command class */
9934      =5      BYTE      cmd;                          /* The command */
9935      =5      BYTE      properties1;                  /* masked byte */
9936      =5      BYTE      meterIdCharacter1;            /* MSB */
9937      =5      BYTE      meterIdCharacter2;            
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 189 

9938      =5      BYTE      meterIdCharacter3;            /* LSB */
9939      =5  } ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_FRAME;
9940      =5  
9941      =5  /************************************************************/
9942      =5  /* Meter Tbl Table Id Report 4byte command class structs */ 
9943      =5  /************************************************************/
9944      =5  typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_FRAME_
9945      =5  {
9946      =5      BYTE      cmdClass;                     /* The command class */
9947      =5      BYTE      cmd;                          /* The command */
9948      =5      BYTE      properties1;                  /* masked byte */
9949      =5      BYTE      meterIdCharacter1;            /* MSB */
9950      =5      BYTE      meterIdCharacter2;            
9951      =5      BYTE      meterIdCharacter3;            
9952      =5      BYTE      meterIdCharacter4;            /* LSB */
9953      =5  } ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_FRAME;
9954      =5  
9955      =5  /************************************************************/
9956      =5  /* Meter Tbl Table Point Adm No Get command class structs */
9957      =5  /************************************************************/
9958      =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_FRAME_
9959      =5  {
9960      =5      BYTE      cmdClass;                     /* The command class */
9961      =5      BYTE      cmd;                          /* The command */
9962      =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_FRAME;
9963      =5  
9964      =5  /************************************************************/
9965      =5  /* Meter Tbl Table Point Adm No Report 1byte command class structs */
9966      =5  /************************************************************/
9967      =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_FRAME_
9968      =5  {
9969      =5      BYTE      cmdClass;                     /* The command class */
9970      =5      BYTE      cmd;                          /* The command */
9971      =5      BYTE      properties1;                  /* masked byte */
9972      =5      BYTE      meterPointAdmNumberCharacter1;
9973      =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_FRAME;
9974      =5  
9975      =5  /************************************************************/
9976      =5  /* Meter Tbl Table Point Adm No Report 2byte command class structs */
9977      =5  /************************************************************/
9978      =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_FRAME_
9979      =5  {
9980      =5      BYTE      cmdClass;                     /* The command class */
9981      =5      BYTE      cmd;                          /* The command */
9982      =5      BYTE      properties1;                  /* masked byte */
9983      =5      BYTE      meterPointAdmNumberCharacter1;/* MSB */
9984      =5      BYTE      meterPointAdmNumberCharacter2;/* LSB */
9985      =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_FRAME;
9986      =5  
9987      =5  /************************************************************/
9988      =5  /* Meter Tbl Table Point Adm No Report 3byte command class structs */
9989      =5  /************************************************************/
9990      =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_FRAME_
9991      =5  {
9992      =5      BYTE      cmdClass;                     /* The command class */
9993      =5      BYTE      cmd;                          /* The command */
9994      =5      BYTE      properties1;                  /* masked byte */
9995      =5      BYTE      meterPointAdmNumberCharacter1;/* MSB */
9996      =5      BYTE      meterPointAdmNumberCharacter2;
9997      =5      BYTE      meterPointAdmNumberCharacter3;/* LSB */
9998      =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_FRAME;
9999      =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 190 

10000  00  =5  /************************************************************/
10001  00  =5  /* Meter Tbl Table Point Adm No Report 4byte command class structs */
10002  00  =5  /************************************************************/
10003  00  =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_FRAME_
10004  00  =5  {
10005  00  =5      BYTE      cmdClass;                     /* The command class */
10006  00  =5      BYTE      cmd;                          /* The command */
10007  00  =5      BYTE      properties1;                  /* masked byte */
10008  00  =5      BYTE      meterPointAdmNumberCharacter1;/* MSB */
10009  00  =5      BYTE      meterPointAdmNumberCharacter2;
10010  00  =5      BYTE      meterPointAdmNumberCharacter3;
10011  00  =5      BYTE      meterPointAdmNumberCharacter4;/* LSB */
10012  00  =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_FRAME;
10013  00  =5  
10014  00  =5  /************************************************************/
10015  00  =5  /* Meter Tbl Status Report V2 variant group structs */      
10016  00  =5  /************************************************************/
10017  00  =5  typedef struct _VG_METER_TBL_STATUS_REPORT_V2_VG_
10018  00  =5  {
10019  00  =5      BYTE      properties1;                  /* masked byte */
10020  00  =5      BYTE      year1;                        /* MSB */
10021  00  =5      BYTE      year2;                        /* LSB */
10022  00  =5      BYTE      month;                        /**/
10023  00  =5      BYTE      day;                          /**/
10024  00  =5      BYTE      hourLocalTime;                /**/
10025  00  =5      BYTE      minuteLocalTime;              /**/
10026  00  =5      BYTE      secondLocalTime;              /**/
10027  00  =5  } VG_METER_TBL_STATUS_REPORT_V2_VG;
10028  00  =5  
10029  00  =5  /************************************************************/
10030  00  =5  /* Meter Tbl Status Report 1byte V2 command class structs */
10031  00  =5  /************************************************************/
10032  00  =5  typedef struct _ZW_METER_TBL_STATUS_REPORT_1BYTE_V2_FRAME_
10033  00  =5  {
10034  00  =5      BYTE      cmdClass;                     /* The command class */
10035  00  =5      BYTE      cmd;                          /* The command */
10036  00  =5      BYTE      reportsToFollow;              /**/
10037  00  =5      BYTE      currentOperatingStatus1;      /* MSB */
10038  00  =5      BYTE      currentOperatingStatus2;      
10039  00  =5      BYTE      currentOperatingStatus3;      /* LSB */
10040  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup1;                /**/
10041  00  =5  } ZW_METER_TBL_STATUS_REPORT_1BYTE_V2_FRAME;
10042  00  =5  
10043  00  =5  /************************************************************/
10044  00  =5  /* Meter Tbl Status Report 2byte V2 command class structs */
10045  00  =5  /************************************************************/
10046  00  =5  typedef struct _ZW_METER_TBL_STATUS_REPORT_2BYTE_V2_FRAME_
10047  00  =5  {
10048  00  =5      BYTE      cmdClass;                     /* The command class */
10049  00  =5      BYTE      cmd;                          /* The command */
10050  00  =5      BYTE      reportsToFollow;              /**/
10051  00  =5      BYTE      currentOperatingStatus1;      /* MSB */
10052  00  =5      BYTE      currentOperatingStatus2;      
10053  00  =5      BYTE      currentOperatingStatus3;      /* LSB */
10054  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup1;                /**/
10055  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup2;                /**/
10056  00  =5  } ZW_METER_TBL_STATUS_REPORT_2BYTE_V2_FRAME;
10057  00  =5  
10058  00  =5  /************************************************************/
10059  00  =5  /* Meter Tbl Status Report 3byte V2 command class structs */
10060  00  =5  /************************************************************/
10061  00  =5  typedef struct _ZW_METER_TBL_STATUS_REPORT_3BYTE_V2_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 191 

10062  00  =5  {
10063  00  =5      BYTE      cmdClass;                     /* The command class */
10064  00  =5      BYTE      cmd;                          /* The command */
10065  00  =5      BYTE      reportsToFollow;              /**/
10066  00  =5      BYTE      currentOperatingStatus1;      /* MSB */
10067  00  =5      BYTE      currentOperatingStatus2;      
10068  00  =5      BYTE      currentOperatingStatus3;      /* LSB */
10069  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup1;                /**/
10070  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup2;                /**/
10071  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup3;                /**/
10072  00  =5  } ZW_METER_TBL_STATUS_REPORT_3BYTE_V2_FRAME;
10073  00  =5  
10074  00  =5  /************************************************************/
10075  00  =5  /* Meter Tbl Status Report 4byte V2 command class structs */
10076  00  =5  /************************************************************/
10077  00  =5  typedef struct _ZW_METER_TBL_STATUS_REPORT_4BYTE_V2_FRAME_
10078  00  =5  {
10079  00  =5      BYTE      cmdClass;                     /* The command class */
10080  00  =5      BYTE      cmd;                          /* The command */
10081  00  =5      BYTE      reportsToFollow;              /**/
10082  00  =5      BYTE      currentOperatingStatus1;      /* MSB */
10083  00  =5      BYTE      currentOperatingStatus2;      
10084  00  =5      BYTE      currentOperatingStatus3;      /* LSB */
10085  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup1;                /**/
10086  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup2;                /**/
10087  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup3;                /**/
10088  00  =5      VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup4;                /**/
10089  00  =5  } ZW_METER_TBL_STATUS_REPORT_4BYTE_V2_FRAME;
10090  00  =5  
10091  00  =5  /************************************************************/
10092  00  =5  /* Meter Tbl Status Date Get V2 command class structs */    
10093  00  =5  /************************************************************/
10094  00  =5  typedef struct _ZW_METER_TBL_STATUS_DATE_GET_V2_FRAME_
10095  00  =5  {
10096  00  =5      BYTE      cmdClass;                     /* The command class */
10097  00  =5      BYTE      cmd;                          /* The command */
10098  00  =5      BYTE      maximumReports;               /**/
10099  00  =5      BYTE      startYear1;                   /* MSB */
10100  00  =5      BYTE      startYear2;                   /* LSB */
10101  00  =5      BYTE      startMonth;                   /**/
10102  00  =5      BYTE      startDay;                     /**/
10103  00  =5      BYTE      startHourLocalTime;           /**/
10104  00  =5      BYTE      startMinuteLocalTime;         /**/
10105  00  =5      BYTE      startSecondLocalTime;         /**/
10106  00  =5      BYTE      stopYear1;                    /* MSB */
10107  00  =5      BYTE      stopYear2;                    /* LSB */
10108  00  =5      BYTE      stopMonth;                    /**/
10109  00  =5      BYTE      stopDay;                      /**/
10110  00  =5      BYTE      stopHourLocalTime;            /**/
10111  00  =5      BYTE      stopMinuteLocalTime;          /**/
10112  00  =5      BYTE      stopSecondLocalTime;          /**/
10113  00  =5  } ZW_METER_TBL_STATUS_DATE_GET_V2_FRAME;
10114  00  =5  
10115  00  =5  /************************************************************/
10116  00  =5  /* Meter Tbl Status Depth Get V2 command class structs */   
10117  00  =5  /************************************************************/
10118  00  =5  typedef struct _ZW_METER_TBL_STATUS_DEPTH_GET_V2_FRAME_
10119  00  =5  {
10120  00  =5      BYTE      cmdClass;                     /* The command class */
10121  00  =5      BYTE      cmd;                          /* The command */
10122  00  =5      BYTE      statusEventLogDepth;          /**/
10123  00  =5  } ZW_METER_TBL_STATUS_DEPTH_GET_V2_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 192 

10124  00  =5  
10125  00  =5  /************************************************************/
10126  00  =5  /* Meter Tbl Status Supported Get V2 command class structs */
10127  00  =5  /************************************************************/
10128  00  =5  typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_GET_V2_FRAME_
10129  00  =5  {
10130  00  =5      BYTE      cmdClass;                     /* The command class */
10131  00  =5      BYTE      cmd;                          /* The command */
10132  00  =5  } ZW_METER_TBL_STATUS_SUPPORTED_GET_V2_FRAME;
10133  00  =5  
10134  00  =5  /************************************************************/
10135  00  =5  /* Meter Tbl Status Supported Report V2 command class structs */
10136  00  =5  /************************************************************/
10137  00  =5  typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V2_FRAME_
10138  00  =5  {
10139  00  =5      BYTE      cmdClass;                     /* The command class */
10140  00  =5      BYTE      cmd;                          /* The command */
10141  00  =5      BYTE      supportedOperatingStatus1;    /* MSB */
10142  00  =5      BYTE      supportedOperatingStatus2;    
10143  00  =5      BYTE      supportedOperatingStatus3;    /* LSB */
10144  00  =5      BYTE      statusEventLogDepth;          /**/
10145  00  =5  } ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V2_FRAME;
10146  00  =5  
10147  00  =5  /************************************************************/
10148  00  =5  /* Meter Tbl Current Data Get V2 command class structs */   
10149  00  =5  /************************************************************/
10150  00  =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_GET_V2_FRAME_
10151  00  =5  {
10152  00  =5      BYTE      cmdClass;                     /* The command class */
10153  00  =5      BYTE      cmd;                          /* The command */
10154  00  =5      BYTE      datasetRequested1;            /* MSB */
10155  00  =5      BYTE      datasetRequested2;            
10156  00  =5      BYTE      datasetRequested3;            /* LSB */
10157  00  =5  } ZW_METER_TBL_CURRENT_DATA_GET_V2_FRAME;
10158  00  =5  
10159  00  =5  /************************************************************/
10160  00  =5  /* Meter Tbl Current Data Report V2 variant group structs */
10161  00  =5  /************************************************************/
10162  00  =5  typedef struct _VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG_
10163  00  =5  {
10164  00  =5      BYTE      properties1;                  /* masked byte */
10165  00  =5      BYTE      currentValue1;                /* MSB */
10166  00  =5      BYTE      currentValue2;                
10167  00  =5      BYTE      currentValue3;                
10168  00  =5      BYTE      currentValue4;                /* LSB */
10169  00  =5  } VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG;
10170  00  =5  
10171  00  =5  /************************************************************/
10172  00  =5  /* Meter Tbl Current Data Report 1byte V2 command class structs */
10173  00  =5  /************************************************************/
10174  00  =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_V2_FRAME_
10175  00  =5  {
10176  00  =5      BYTE      cmdClass;                     /* The command class */
10177  00  =5      BYTE      cmd;                          /* The command */
10178  00  =5      BYTE      reportsToFollow;              /**/
10179  00  =5      BYTE      properties1;                  /* masked byte */
10180  00  =5      BYTE      dataset1;                     /* MSB */
10181  00  =5      BYTE      dataset2;                     
10182  00  =5      BYTE      dataset3;                     /* LSB */
10183  00  =5      BYTE      year1;                        /* MSB */
10184  00  =5      BYTE      year2;                        /* LSB */
10185  00  =5      BYTE      month;                        /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 193 

10186  00  =5      BYTE      day;                          /**/
10187  00  =5      BYTE      hourLocalTime;                /**/
10188  00  =5      BYTE      minuteLocalTime;              /**/
10189  00  =5      BYTE      secondLocalTime;              /**/
10190  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup1;                /**/
10191  00  =5  } ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_V2_FRAME;
10192  00  =5  
10193  00  =5  /************************************************************/
10194  00  =5  /* Meter Tbl Current Data Report 2byte V2 command class structs */
10195  00  =5  /************************************************************/
10196  00  =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_V2_FRAME_
10197  00  =5  {
10198  00  =5      BYTE      cmdClass;                     /* The command class */
10199  00  =5      BYTE      cmd;                          /* The command */
10200  00  =5      BYTE      reportsToFollow;              /**/
10201  00  =5      BYTE      properties1;                  /* masked byte */
10202  00  =5      BYTE      dataset1;                     /* MSB */
10203  00  =5      BYTE      dataset2;                     
10204  00  =5      BYTE      dataset3;                     /* LSB */
10205  00  =5      BYTE      year1;                        /* MSB */
10206  00  =5      BYTE      year2;                        /* LSB */
10207  00  =5      BYTE      month;                        /**/
10208  00  =5      BYTE      day;                          /**/
10209  00  =5      BYTE      hourLocalTime;                /**/
10210  00  =5      BYTE      minuteLocalTime;              /**/
10211  00  =5      BYTE      secondLocalTime;              /**/
10212  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup1;                /**/
10213  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup2;                /**/
10214  00  =5  } ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_V2_FRAME;
10215  00  =5  
10216  00  =5  /************************************************************/
10217  00  =5  /* Meter Tbl Current Data Report 3byte V2 command class structs */
10218  00  =5  /************************************************************/
10219  00  =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_V2_FRAME_
10220  00  =5  {
10221  00  =5      BYTE      cmdClass;                     /* The command class */
10222  00  =5      BYTE      cmd;                          /* The command */
10223  00  =5      BYTE      reportsToFollow;              /**/
10224  00  =5      BYTE      properties1;                  /* masked byte */
10225  00  =5      BYTE      dataset1;                     /* MSB */
10226  00  =5      BYTE      dataset2;                     
10227  00  =5      BYTE      dataset3;                     /* LSB */
10228  00  =5      BYTE      year1;                        /* MSB */
10229  00  =5      BYTE      year2;                        /* LSB */
10230  00  =5      BYTE      month;                        /**/
10231  00  =5      BYTE      day;                          /**/
10232  00  =5      BYTE      hourLocalTime;                /**/
10233  00  =5      BYTE      minuteLocalTime;              /**/
10234  00  =5      BYTE      secondLocalTime;              /**/
10235  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup1;                /**/
10236  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup2;                /**/
10237  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup3;                /**/
10238  00  =5  } ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_V2_FRAME;
10239  00  =5  
10240  00  =5  /************************************************************/
10241  00  =5  /* Meter Tbl Current Data Report 4byte V2 command class structs */
10242  00  =5  /************************************************************/
10243  00  =5  typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_V2_FRAME_
10244  00  =5  {
10245  00  =5      BYTE      cmdClass;                     /* The command class */
10246  00  =5      BYTE      cmd;                          /* The command */
10247  00  =5      BYTE      reportsToFollow;              /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 194 

10248  00  =5      BYTE      properties1;                  /* masked byte */
10249  00  =5      BYTE      dataset1;                     /* MSB */
10250  00  =5      BYTE      dataset2;                     
10251  00  =5      BYTE      dataset3;                     /* LSB */
10252  00  =5      BYTE      year1;                        /* MSB */
10253  00  =5      BYTE      year2;                        /* LSB */
10254  00  =5      BYTE      month;                        /**/
10255  00  =5      BYTE      day;                          /**/
10256  00  =5      BYTE      hourLocalTime;                /**/
10257  00  =5      BYTE      minuteLocalTime;              /**/
10258  00  =5      BYTE      secondLocalTime;              /**/
10259  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup1;                /**/
10260  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup2;                /**/
10261  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup3;                /**/
10262  00  =5      VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup4;                /**/
10263  00  =5  } ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_V2_FRAME;
10264  00  =5  
10265  00  =5  /************************************************************/
10266  00  =5  /* Meter Tbl Historical Data Get V2 command class structs */
10267  00  =5  /************************************************************/
10268  00  =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_GET_V2_FRAME_
10269  00  =5  {
10270  00  =5      BYTE      cmdClass;                     /* The command class */
10271  00  =5      BYTE      cmd;                          /* The command */
10272  00  =5      BYTE      maximumReports;               /**/
10273  00  =5      BYTE      historicalDatasetRequested1;  /* MSB */
10274  00  =5      BYTE      historicalDatasetRequested2;  
10275  00  =5      BYTE      historicalDatasetRequested3;  /* LSB */
10276  00  =5      BYTE      startYear1;                   /* MSB */
10277  00  =5      BYTE      startYear2;                   /* LSB */
10278  00  =5      BYTE      startMonth;                   /**/
10279  00  =5      BYTE      startDay;                     /**/
10280  00  =5      BYTE      startHourLocalTime;           /**/
10281  00  =5      BYTE      startMinuteLocalTime;         /**/
10282  00  =5      BYTE      startSecondLocalTime;         /**/
10283  00  =5      BYTE      stopYear1;                    /* MSB */
10284  00  =5      BYTE      stopYear2;                    /* LSB */
10285  00  =5      BYTE      stopMonth;                    /**/
10286  00  =5      BYTE      stopDay;                      /**/
10287  00  =5      BYTE      stopHourLocalTime;            /**/
10288  00  =5      BYTE      stopMinuteLocalTime;          /**/
10289  00  =5      BYTE      stopSecondLocalTime;          /**/
10290  00  =5  } ZW_METER_TBL_HISTORICAL_DATA_GET_V2_FRAME;
10291  00  =5  
10292  00  =5  /************************************************************/
10293  00  =5  /* Meter Tbl Historical Data Report V2 variant group structs */
10294  00  =5  /************************************************************/
10295  00  =5  typedef struct _VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG_
10296  00  =5  {
10297  00  =5      BYTE      properties1;                  /* masked byte */
10298  00  =5      BYTE      historicalValue1;             /* MSB */
10299  00  =5      BYTE      historicalValue2;             
10300  00  =5      BYTE      historicalValue3;             
10301  00  =5      BYTE      historicalValue4;             /* LSB */
10302  00  =5  } VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG;
10303  00  =5  
10304  00  =5  /************************************************************/
10305  00  =5  /* Meter Tbl Historical Data Report 1byte V2 command class structs */
10306  00  =5  /************************************************************/
10307  00  =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_V2_FRAME_
10308  00  =5  {
10309  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 195 

10310  00  =5      BYTE      cmd;                          /* The command */
10311  00  =5      BYTE      reportsToFollow;              /**/
10312  00  =5      BYTE      properties1;                  /* masked byte */
10313  00  =5      BYTE      dataset1;                     /* MSB */
10314  00  =5      BYTE      dataset2;                     
10315  00  =5      BYTE      dataset3;                     /* LSB */
10316  00  =5      BYTE      year1;                        /* MSB */
10317  00  =5      BYTE      year2;                        /* LSB */
10318  00  =5      BYTE      month;                        /**/
10319  00  =5      BYTE      day;                          /**/
10320  00  =5      BYTE      hourLocalTime;                /**/
10321  00  =5      BYTE      minuteLocalTime;              /**/
10322  00  =5      BYTE      secondLocalTime;              /**/
10323  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup1;                /**/
10324  00  =5  } ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_V2_FRAME;
10325  00  =5  
10326  00  =5  /************************************************************/
10327  00  =5  /* Meter Tbl Historical Data Report 2byte V2 command class structs */
10328  00  =5  /************************************************************/
10329  00  =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_V2_FRAME_
10330  00  =5  {
10331  00  =5      BYTE      cmdClass;                     /* The command class */
10332  00  =5      BYTE      cmd;                          /* The command */
10333  00  =5      BYTE      reportsToFollow;              /**/
10334  00  =5      BYTE      properties1;                  /* masked byte */
10335  00  =5      BYTE      dataset1;                     /* MSB */
10336  00  =5      BYTE      dataset2;                     
10337  00  =5      BYTE      dataset3;                     /* LSB */
10338  00  =5      BYTE      year1;                        /* MSB */
10339  00  =5      BYTE      year2;                        /* LSB */
10340  00  =5      BYTE      month;                        /**/
10341  00  =5      BYTE      day;                          /**/
10342  00  =5      BYTE      hourLocalTime;                /**/
10343  00  =5      BYTE      minuteLocalTime;              /**/
10344  00  =5      BYTE      secondLocalTime;              /**/
10345  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup1;                /**/
10346  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup2;                /**/
10347  00  =5  } ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_V2_FRAME;
10348  00  =5  
10349  00  =5  /************************************************************/
10350  00  =5  /* Meter Tbl Historical Data Report 3byte V2 command class structs */
10351  00  =5  /************************************************************/
10352  00  =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_V2_FRAME_
10353  00  =5  {
10354  00  =5      BYTE      cmdClass;                     /* The command class */
10355  00  =5      BYTE      cmd;                          /* The command */
10356  00  =5      BYTE      reportsToFollow;              /**/
10357  00  =5      BYTE      properties1;                  /* masked byte */
10358  00  =5      BYTE      dataset1;                     /* MSB */
10359  00  =5      BYTE      dataset2;                     
10360  00  =5      BYTE      dataset3;                     /* LSB */
10361  00  =5      BYTE      year1;                        /* MSB */
10362  00  =5      BYTE      year2;                        /* LSB */
10363  00  =5      BYTE      month;                        /**/
10364  00  =5      BYTE      day;                          /**/
10365  00  =5      BYTE      hourLocalTime;                /**/
10366  00  =5      BYTE      minuteLocalTime;              /**/
10367  00  =5      BYTE      secondLocalTime;              /**/
10368  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup1;                /**/
10369  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup2;                /**/
10370  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup3;                /**/
10371  00  =5  } ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_V2_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 196 

10372  00  =5  
10373  00  =5  /************************************************************/
10374  00  =5  /* Meter Tbl Historical Data Report 4byte V2 command class structs */
10375  00  =5  /************************************************************/
10376  00  =5  typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_V2_FRAME_
10377  00  =5  {
10378  00  =5      BYTE      cmdClass;                     /* The command class */
10379  00  =5      BYTE      cmd;                          /* The command */
10380  00  =5      BYTE      reportsToFollow;              /**/
10381  00  =5      BYTE      properties1;                  /* masked byte */
10382  00  =5      BYTE      dataset1;                     /* MSB */
10383  00  =5      BYTE      dataset2;                     
10384  00  =5      BYTE      dataset3;                     /* LSB */
10385  00  =5      BYTE      year1;                        /* MSB */
10386  00  =5      BYTE      year2;                        /* LSB */
10387  00  =5      BYTE      month;                        /**/
10388  00  =5      BYTE      day;                          /**/
10389  00  =5      BYTE      hourLocalTime;                /**/
10390  00  =5      BYTE      minuteLocalTime;              /**/
10391  00  =5      BYTE      secondLocalTime;              /**/
10392  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup1;                /**/
10393  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup2;                /**/
10394  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup3;                /**/
10395  00  =5      VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup4;                /**/
10396  00  =5  } ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_V2_FRAME;
10397  00  =5  
10398  00  =5  /************************************************************/
10399  00  =5  /* Meter Tbl Report V2 command class structs */             
10400  00  =5  /************************************************************/
10401  00  =5  typedef struct _ZW_METER_TBL_REPORT_V2_FRAME_
10402  00  =5  {
10403  00  =5      BYTE      cmdClass;                     /* The command class */
10404  00  =5      BYTE      cmd;                          /* The command */
10405  00  =5      BYTE      properties1;                  /* masked byte */
10406  00  =5      BYTE      properties2;                  /* masked byte */
10407  00  =5      BYTE      datasetSupported1;            /* MSB */
10408  00  =5      BYTE      datasetSupported2;            
10409  00  =5      BYTE      datasetSupported3;            /* LSB */
10410  00  =5      BYTE      datasetHistorySupported1;     /* MSB */
10411  00  =5      BYTE      datasetHistorySupported2;     
10412  00  =5      BYTE      datasetHistorySupported3;     /* LSB */
10413  00  =5      BYTE      dataHistorySupported1;        /* MSB */
10414  00  =5      BYTE      dataHistorySupported2;        
10415  00  =5      BYTE      dataHistorySupported3;        /* LSB */
10416  00  =5  } ZW_METER_TBL_REPORT_V2_FRAME;
10417  00  =5  
10418  00  =5  /************************************************************/
10419  00  =5  /* Meter Tbl Table Capability Get V2 command class structs */
10420  00  =5  /************************************************************/
10421  00  =5  typedef struct _ZW_METER_TBL_TABLE_CAPABILITY_GET_V2_FRAME_
10422  00  =5  {
10423  00  =5      BYTE      cmdClass;                     /* The command class */
10424  00  =5      BYTE      cmd;                          /* The command */
10425  00  =5  } ZW_METER_TBL_TABLE_CAPABILITY_GET_V2_FRAME;
10426  00  =5  
10427  00  =5  /************************************************************/
10428  00  =5  /* Meter Tbl Table Id Get V2 command class structs */       
10429  00  =5  /************************************************************/
10430  00  =5  typedef struct _ZW_METER_TBL_TABLE_ID_GET_V2_FRAME_
10431  00  =5  {
10432  00  =5      BYTE      cmdClass;                     /* The command class */
10433  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 197 

10434  00  =5  } ZW_METER_TBL_TABLE_ID_GET_V2_FRAME;
10435  00  =5  
10436  00  =5  /************************************************************/
10437  00  =5  /* Meter Tbl Table Id Report 1byte V2 command class structs */
10438  00  =5  /************************************************************/
10439  00  =5  typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V2_FRAME_
10440  00  =5  {
10441  00  =5      BYTE      cmdClass;                     /* The command class */
10442  00  =5      BYTE      cmd;                          /* The command */
10443  00  =5      BYTE      properties1;                  /* masked byte */
10444  00  =5      BYTE      meterIdCharacter1;            
10445  00  =5  } ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V2_FRAME;
10446  00  =5  
10447  00  =5  /************************************************************/
10448  00  =5  /* Meter Tbl Table Id Report 2byte V2 command class structs */
10449  00  =5  /************************************************************/
10450  00  =5  typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V2_FRAME_
10451  00  =5  {
10452  00  =5      BYTE      cmdClass;                     /* The command class */
10453  00  =5      BYTE      cmd;                          /* The command */
10454  00  =5      BYTE      properties1;                  /* masked byte */
10455  00  =5      BYTE      meterIdCharacter1;            /* MSB */
10456  00  =5      BYTE      meterIdCharacter2;            /* LSB */
10457  00  =5  } ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V2_FRAME;
10458  00  =5  
10459  00  =5  /************************************************************/
10460  00  =5  /* Meter Tbl Table Id Report 3byte V2 command class structs */
10461  00  =5  /************************************************************/
10462  00  =5  typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V2_FRAME_
10463  00  =5  {
10464  00  =5      BYTE      cmdClass;                     /* The command class */
10465  00  =5      BYTE      cmd;                          /* The command */
10466  00  =5      BYTE      properties1;                  /* masked byte */
10467  00  =5      BYTE      meterIdCharacter1;            /* MSB */
10468  00  =5      BYTE      meterIdCharacter2;            
10469  00  =5      BYTE      meterIdCharacter3;            /* LSB */
10470  00  =5  } ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V2_FRAME;
10471  00  =5  
10472  00  =5  /************************************************************/
10473  00  =5  /* Meter Tbl Table Id Report 4byte V2 command class structs */
10474  00  =5  /************************************************************/
10475  00  =5  typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V2_FRAME_
10476  00  =5  {
10477  00  =5      BYTE      cmdClass;                     /* The command class */
10478  00  =5      BYTE      cmd;                          /* The command */
10479  00  =5      BYTE      properties1;                  /* masked byte */
10480  00  =5      BYTE      meterIdCharacter1;            /* MSB */
10481  00  =5      BYTE      meterIdCharacter2;            
10482  00  =5      BYTE      meterIdCharacter3;            
10483  00  =5      BYTE      meterIdCharacter4;            /* LSB */
10484  00  =5  } ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V2_FRAME;
10485  00  =5  
10486  00  =5  /************************************************************/
10487  00  =5  /* Meter Tbl Table Point Adm No Get V2 command class structs */
10488  00  =5  /************************************************************/
10489  00  =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V2_FRAME_
10490  00  =5  {
10491  00  =5      BYTE      cmdClass;                     /* The command class */
10492  00  =5      BYTE      cmd;                          /* The command */
10493  00  =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V2_FRAME;
10494  00  =5  
10495  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 198 

10496  00  =5  /* Meter Tbl Table Point Adm No Report 1byte V2 command class structs */
10497  00  =5  /************************************************************/
10498  00  =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_V2_FRAME_
10499  00  =5  {
10500  00  =5      BYTE      cmdClass;                     /* The command class */
10501  00  =5      BYTE      cmd;                          /* The command */
10502  00  =5      BYTE      properties1;                  /* masked byte */
10503  00  =5      BYTE      meterPointAdmNumberCharacter1;
10504  00  =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_V2_FRAME;
10505  00  =5  
10506  00  =5  /************************************************************/
10507  00  =5  /* Meter Tbl Table Point Adm No Report 2byte V2 command class structs */
10508  00  =5  /************************************************************/
10509  00  =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_V2_FRAME_
10510  00  =5  {
10511  00  =5      BYTE      cmdClass;                     /* The command class */
10512  00  =5      BYTE      cmd;                          /* The command */
10513  00  =5      BYTE      properties1;                  /* masked byte */
10514  00  =5      BYTE      meterPointAdmNumberCharacter1;/* MSB */
10515  00  =5      BYTE      meterPointAdmNumberCharacter2;/* LSB */
10516  00  =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_V2_FRAME;
10517  00  =5  
10518  00  =5  /************************************************************/
10519  00  =5  /* Meter Tbl Table Point Adm No Report 3byte V2 command class structs */
10520  00  =5  /************************************************************/
10521  00  =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_V2_FRAME_
10522  00  =5  {
10523  00  =5      BYTE      cmdClass;                     /* The command class */
10524  00  =5      BYTE      cmd;                          /* The command */
10525  00  =5      BYTE      properties1;                  /* masked byte */
10526  00  =5      BYTE      meterPointAdmNumberCharacter1;/* MSB */
10527  00  =5      BYTE      meterPointAdmNumberCharacter2;
10528  00  =5      BYTE      meterPointAdmNumberCharacter3;/* LSB */
10529  00  =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_V2_FRAME;
10530  00  =5  
10531  00  =5  /************************************************************/
10532  00  =5  /* Meter Tbl Table Point Adm No Report 4byte V2 command class structs */
10533  00  =5  /************************************************************/
10534  00  =5  typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_V2_FRAME_
10535  00  =5  {
10536  00  =5      BYTE      cmdClass;                     /* The command class */
10537  00  =5      BYTE      cmd;                          /* The command */
10538  00  =5      BYTE      properties1;                  /* masked byte */
10539  00  =5      BYTE      meterPointAdmNumberCharacter1;/* MSB */
10540  00  =5      BYTE      meterPointAdmNumberCharacter2;
10541  00  =5      BYTE      meterPointAdmNumberCharacter3;
10542  00  =5      BYTE      meterPointAdmNumberCharacter4;/* LSB */
10543  00  =5  } ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_V2_FRAME;
10544  00  =5  
10545  00  =5  /************************************************************/
10546  00  =5  /* Meter Tbl Push Configuration Get command class structs */
10547  00  =5  /************************************************************/
10548  00  =5  typedef struct _ZW_METER_TBL_PUSH_CONFIGURATION_GET_FRAME_
10549  00  =5  {
10550  00  =5      BYTE      cmdClass;                     /* The command class */
10551  00  =5      BYTE      cmd;                          /* The command */
10552  00  =5  } ZW_METER_TBL_PUSH_CONFIGURATION_GET_FRAME;
10553  00  =5  
10554  00  =5  /************************************************************/
10555  00  =5  /* Meter Tbl Push Configuration Report command class structs */
10556  00  =5  /************************************************************/
10557  00  =5  typedef struct _ZW_METER_TBL_PUSH_CONFIGURATION_REPORT_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 199 

10558  00  =5  {
10559  00  =5      BYTE      cmdClass;                     /* The command class */
10560  00  =5      BYTE      cmd;                          /* The command */
10561  00  =5      BYTE      properties1;                  /* masked byte */
10562  00  =5      BYTE      pushDataset1;                 /* MSB */
10563  00  =5      BYTE      pushDataset2;                 
10564  00  =5      BYTE      pushDataset3;                 /* LSB */
10565  00  =5      BYTE      intervalMonths;               /**/
10566  00  =5      BYTE      intervalDays;                 /**/
10567  00  =5      BYTE      intervalHours;                /**/
10568  00  =5      BYTE      intervalMinutes;              /**/
10569  00  =5      BYTE      pushNodeId;                   /**/
10570  00  =5  } ZW_METER_TBL_PUSH_CONFIGURATION_REPORT_FRAME;
10571  00  =5  
10572  00  =5  /************************************************************/
10573  00  =5  /* Meter Tbl Push Configuration Set command class structs */
10574  00  =5  /************************************************************/
10575  00  =5  typedef struct _ZW_METER_TBL_PUSH_CONFIGURATION_SET_FRAME_
10576  00  =5  {
10577  00  =5      BYTE      cmdClass;                     /* The command class */
10578  00  =5      BYTE      cmd;                          /* The command */
10579  00  =5      BYTE      properties1;                  /* masked byte */
10580  00  =5      BYTE      pushDataset1;                 /* MSB */
10581  00  =5      BYTE      pushDataset2;                 
10582  00  =5      BYTE      pushDataset3;                 /* LSB */
10583  00  =5      BYTE      intervalMonths;               /**/
10584  00  =5      BYTE      intervalDays;                 /**/
10585  00  =5      BYTE      intervalHours;                /**/
10586  00  =5      BYTE      intervalMinutes;              /**/
10587  00  =5      BYTE      pushNodeId;                   /**/
10588  00  =5  } ZW_METER_TBL_PUSH_CONFIGURATION_SET_FRAME;
10589  00  =5  
10590  00  =5  /************************************************************/
10591  00  =5  /* Meter Get command class structs */                       
10592  00  =5  /************************************************************/
10593  00  =5  typedef struct _ZW_METER_GET_FRAME_
10594  00  =5  {
10595  00  =5      BYTE      cmdClass;                     /* The command class */
10596  00  =5      BYTE      cmd;                          /* The command */
10597  00  =5  } ZW_METER_GET_FRAME;
10598  00  =5  
10599  00  =5  /************************************************************/
10600  00  =5  /* Meter Report 1byte command class structs */              
10601  00  =5  /************************************************************/
10602  00  =5  typedef struct _ZW_METER_REPORT_1BYTE_FRAME_
10603  00  =5  {
10604  00  =5      BYTE      cmdClass;                     /* The command class */
10605  00  =5      BYTE      cmd;                          /* The command */
10606  00  =5      BYTE      meterType;                    /**/
10607  00  =5      BYTE      properties1;                  /* masked byte */
10608  00  =5      BYTE      meterValue1;                  
10609  00  =5  } ZW_METER_REPORT_1BYTE_FRAME;
10610  00  =5  
10611  00  =5  /************************************************************/
10612  00  =5  /* Meter Report 2byte command class structs */              
10613  00  =5  /************************************************************/
10614  00  =5  typedef struct _ZW_METER_REPORT_2BYTE_FRAME_
10615  00  =5  {
10616  00  =5      BYTE      cmdClass;                     /* The command class */
10617  00  =5      BYTE      cmd;                          /* The command */
10618  00  =5      BYTE      meterType;                    /**/
10619  00  =5      BYTE      properties1;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 200 

10620  00  =5      BYTE      meterValue1;                  /* MSB */
10621  00  =5      BYTE      meterValue2;                  /* LSB */
10622  00  =5  } ZW_METER_REPORT_2BYTE_FRAME;
10623  00  =5  
10624  00  =5  /************************************************************/
10625  00  =5  /* Meter Report 3byte command class structs */              
10626  00  =5  /************************************************************/
10627  00  =5  typedef struct _ZW_METER_REPORT_3BYTE_FRAME_
10628  00  =5  {
10629  00  =5      BYTE      cmdClass;                     /* The command class */
10630  00  =5      BYTE      cmd;                          /* The command */
10631  00  =5      BYTE      meterType;                    /**/
10632  00  =5      BYTE      properties1;                  /* masked byte */
10633  00  =5      BYTE      meterValue1;                  /* MSB */
10634  00  =5      BYTE      meterValue2;                  
10635  00  =5      BYTE      meterValue3;                  /* LSB */
10636  00  =5  } ZW_METER_REPORT_3BYTE_FRAME;
10637  00  =5  
10638  00  =5  /************************************************************/
10639  00  =5  /* Meter Report 4byte command class structs */              
10640  00  =5  /************************************************************/
10641  00  =5  typedef struct _ZW_METER_REPORT_4BYTE_FRAME_
10642  00  =5  {
10643  00  =5      BYTE      cmdClass;                     /* The command class */
10644  00  =5      BYTE      cmd;                          /* The command */
10645  00  =5      BYTE      meterType;                    /**/
10646  00  =5      BYTE      properties1;                  /* masked byte */
10647  00  =5      BYTE      meterValue1;                  /* MSB */
10648  00  =5      BYTE      meterValue2;                  
10649  00  =5      BYTE      meterValue3;                  
10650  00  =5      BYTE      meterValue4;                  /* LSB */
10651  00  =5  } ZW_METER_REPORT_4BYTE_FRAME;
10652  00  =5  
10653  00  =5  /************************************************************/
10654  00  =5  /* Meter Get V2 command class structs */                    
10655  00  =5  /************************************************************/
10656  00  =5  typedef struct _ZW_METER_GET_V2_FRAME_
10657  00  =5  {
10658  00  =5      BYTE      cmdClass;                     /* The command class */
10659  00  =5      BYTE      cmd;                          /* The command */
10660  00  =5      BYTE      properties1;                  /* masked byte */
10661  00  =5  } ZW_METER_GET_V2_FRAME;
10662  00  =5  
10663  00  =5  /************************************************************/
10664  00  =5  /* Meter Report 1byte V2 command class structs */           
10665  00  =5  /************************************************************/
10666  00  =5  typedef struct _ZW_METER_REPORT_1BYTE_V2_FRAME_
10667  00  =5  {
10668  00  =5      BYTE      cmdClass;                     /* The command class */
10669  00  =5      BYTE      cmd;                          /* The command */
10670  00  =5      BYTE      properties1;                  /* masked byte */
10671  00  =5      BYTE      properties2;                  /* masked byte */
10672  00  =5      BYTE      meterValue1;                  
10673  00  =5      BYTE      deltaTime1;                   /* MSB */
10674  00  =5      BYTE      deltaTime2;                   /* LSB */
10675  00  =5      BYTE      previousMeterValue1;          
10676  00  =5  } ZW_METER_REPORT_1BYTE_V2_FRAME;
10677  00  =5  
10678  00  =5  /************************************************************/
10679  00  =5  /* Meter Report 2byte V2 command class structs */           
10680  00  =5  /************************************************************/
10681  00  =5  typedef struct _ZW_METER_REPORT_2BYTE_V2_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 201 

10682  00  =5  {
10683  00  =5      BYTE      cmdClass;                     /* The command class */
10684  00  =5      BYTE      cmd;                          /* The command */
10685  00  =5      BYTE      properties1;                  /* masked byte */
10686  00  =5      BYTE      properties2;                  /* masked byte */
10687  00  =5      BYTE      meterValue1;                  /* MSB */
10688  00  =5      BYTE      meterValue2;                  /* LSB */
10689  00  =5      BYTE      deltaTime1;                   /* MSB */
10690  00  =5      BYTE      deltaTime2;                   /* LSB */
10691  00  =5      BYTE      previousMeterValue1;          /* MSB */
10692  00  =5      BYTE      previousMeterValue2;          /* LSB */
10693  00  =5  } ZW_METER_REPORT_2BYTE_V2_FRAME;
10694  00  =5  
10695  00  =5  /************************************************************/
10696  00  =5  /* Meter Report 3byte V2 command class structs */           
10697  00  =5  /************************************************************/
10698  00  =5  typedef struct _ZW_METER_REPORT_3BYTE_V2_FRAME_
10699  00  =5  {
10700  00  =5      BYTE      cmdClass;                     /* The command class */
10701  00  =5      BYTE      cmd;                          /* The command */
10702  00  =5      BYTE      properties1;                  /* masked byte */
10703  00  =5      BYTE      properties2;                  /* masked byte */
10704  00  =5      BYTE      meterValue1;                  /* MSB */
10705  00  =5      BYTE      meterValue2;                  
10706  00  =5      BYTE      meterValue3;                  /* LSB */
10707  00  =5      BYTE      deltaTime1;                   /* MSB */
10708  00  =5      BYTE      deltaTime2;                   /* LSB */
10709  00  =5      BYTE      previousMeterValue1;          /* MSB */
10710  00  =5      BYTE      previousMeterValue2;          
10711  00  =5      BYTE      previousMeterValue3;          /* LSB */
10712  00  =5  } ZW_METER_REPORT_3BYTE_V2_FRAME;
10713  00  =5  
10714  00  =5  /************************************************************/
10715  00  =5  /* Meter Report 4byte V2 command class structs */           
10716  00  =5  /************************************************************/
10717  00  =5  typedef struct _ZW_METER_REPORT_4BYTE_V2_FRAME_
10718  00  =5  {
10719  00  =5      BYTE      cmdClass;                     /* The command class */
10720  00  =5      BYTE      cmd;                          /* The command */
10721  00  =5      BYTE      properties1;                  /* masked byte */
10722  00  =5      BYTE      properties2;                  /* masked byte */
10723  00  =5      BYTE      meterValue1;                  /* MSB */
10724  00  =5      BYTE      meterValue2;                  
10725  00  =5      BYTE      meterValue3;                  
10726  00  =5      BYTE      meterValue4;                  /* LSB */
10727  00  =5      BYTE      deltaTime1;                   /* MSB */
10728  00  =5      BYTE      deltaTime2;                   /* LSB */
10729  00  =5      BYTE      previousMeterValue1;          /* MSB */
10730  00  =5      BYTE      previousMeterValue2;          
10731  00  =5      BYTE      previousMeterValue3;          
10732  00  =5      BYTE      previousMeterValue4;          /* LSB */
10733  00  =5  } ZW_METER_REPORT_4BYTE_V2_FRAME;
10734  00  =5  
10735  00  =5  /************************************************************/
10736  00  =5  /* Meter Reset V2 command class structs */                  
10737  00  =5  /************************************************************/
10738  00  =5  typedef struct _ZW_METER_RESET_V2_FRAME_
10739  00  =5  {
10740  00  =5      BYTE      cmdClass;                     /* The command class */
10741  00  =5      BYTE      cmd;                          /* The command */
10742  00  =5  } ZW_METER_RESET_V2_FRAME;
10743  00  =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 202 

10744  00  =5  /************************************************************/
10745  00  =5  /* Meter Supported Get V2 command class structs */          
10746  00  =5  /************************************************************/
10747  00  =5  typedef struct _ZW_METER_SUPPORTED_GET_V2_FRAME_
10748  00  =5  {
10749  00  =5      BYTE      cmdClass;                     /* The command class */
10750  00  =5      BYTE      cmd;                          /* The command */
10751  00  =5  } ZW_METER_SUPPORTED_GET_V2_FRAME;
10752  00  =5  
10753  00  =5  /************************************************************/
10754  00  =5  /* Meter Supported Report V2 command class structs */       
10755  00  =5  /************************************************************/
10756  00  =5  typedef struct _ZW_METER_SUPPORTED_REPORT_V2_FRAME_
10757  00  =5  {
10758  00  =5      BYTE      cmdClass;                     /* The command class */
10759  00  =5      BYTE      cmd;                          /* The command */
10760  00  =5      BYTE      properties1;                  /* masked byte */
10761  00  =5      BYTE      properties2;                  /* masked byte */
10762  00  =5  } ZW_METER_SUPPORTED_REPORT_V2_FRAME;
10763  00  =5  
10764  00  =5  /************************************************************/
10765  00  =5  /* Meter Get V3 command class structs */                    
10766  00  =5  /************************************************************/
10767  00  =5  typedef struct _ZW_METER_GET_V3_FRAME_
10768  00  =5  {
10769  00  =5      BYTE      cmdClass;                     /* The command class */
10770  00  =5      BYTE      cmd;                          /* The command */
10771  00  =5      BYTE      properties1;                  /* masked byte */
10772  00  =5  } ZW_METER_GET_V3_FRAME;
10773  00  =5  
10774  00  =5  /************************************************************/
10775  00  =5  /* Meter Report 1byte V3 command class structs */           
10776  00  =5  /************************************************************/
10777  00  =5  typedef struct _ZW_METER_REPORT_1BYTE_V3_FRAME_
10778  00  =5  {
10779  00  =5      BYTE      cmdClass;                     /* The command class */
10780  00  =5      BYTE      cmd;                          /* The command */
10781  00  =5      BYTE      properties1;                  /* masked byte */
10782  00  =5      BYTE      properties2;                  /* masked byte */
10783  00  =5      BYTE      meterValue1;                  
10784  00  =5      BYTE      deltaTime1;                   /* MSB */
10785  00  =5      BYTE      deltaTime2;                   /* LSB */
10786  00  =5      BYTE      previousMeterValue1;          
10787  00  =5  } ZW_METER_REPORT_1BYTE_V3_FRAME;
10788  00  =5  
10789  00  =5  /************************************************************/
10790  00  =5  /* Meter Report 2byte V3 command class structs */           
10791  00  =5  /************************************************************/
10792  00  =5  typedef struct _ZW_METER_REPORT_2BYTE_V3_FRAME_
10793  00  =5  {
10794  00  =5      BYTE      cmdClass;                     /* The command class */
10795  00  =5      BYTE      cmd;                          /* The command */
10796  00  =5      BYTE      properties1;                  /* masked byte */
10797  00  =5      BYTE      properties2;                  /* masked byte */
10798  00  =5      BYTE      meterValue1;                  /* MSB */
10799  00  =5      BYTE      meterValue2;                  /* LSB */
10800  00  =5      BYTE      deltaTime1;                   /* MSB */
10801  00  =5      BYTE      deltaTime2;                   /* LSB */
10802  00  =5      BYTE      previousMeterValue1;          /* MSB */
10803  00  =5      BYTE      previousMeterValue2;          /* LSB */
10804  00  =5  } ZW_METER_REPORT_2BYTE_V3_FRAME;
10805  00  =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 203 

10806  00  =5  /************************************************************/
10807  00  =5  /* Meter Report 3byte V3 command class structs */           
10808  00  =5  /************************************************************/
10809  00  =5  typedef struct _ZW_METER_REPORT_3BYTE_V3_FRAME_
10810  00  =5  {
10811  00  =5      BYTE      cmdClass;                     /* The command class */
10812  00  =5      BYTE      cmd;                          /* The command */
10813  00  =5      BYTE      properties1;                  /* masked byte */
10814  00  =5      BYTE      properties2;                  /* masked byte */
10815  00  =5      BYTE      meterValue1;                  /* MSB */
10816  00  =5      BYTE      meterValue2;                  
10817  00  =5      BYTE      meterValue3;                  /* LSB */
10818  00  =5      BYTE      deltaTime1;                   /* MSB */
10819  00  =5      BYTE      deltaTime2;                   /* LSB */
10820  00  =5      BYTE      previousMeterValue1;          /* MSB */
10821  00  =5      BYTE      previousMeterValue2;          
10822  00  =5      BYTE      previousMeterValue3;          /* LSB */
10823  00  =5  } ZW_METER_REPORT_3BYTE_V3_FRAME;
10824  00  =5  
10825  00  =5  /************************************************************/
10826  00  =5  /* Meter Report 4byte V3 command class structs */           
10827  00  =5  /************************************************************/
10828  00  =5  typedef struct _ZW_METER_REPORT_4BYTE_V3_FRAME_
10829  00  =5  {
10830  00  =5      BYTE      cmdClass;                     /* The command class */
10831  00  =5      BYTE      cmd;                          /* The command */
10832  00  =5      BYTE      properties1;                  /* masked byte */
10833  00  =5      BYTE      properties2;                  /* masked byte */
10834  00  =5      BYTE      meterValue1;                  /* MSB */
10835  00  =5      BYTE      meterValue2;                  
10836  00  =5      BYTE      meterValue3;                  
10837  00  =5      BYTE      meterValue4;                  /* LSB */
10838  00  =5      BYTE      deltaTime1;                   /* MSB */
10839  00  =5      BYTE      deltaTime2;                   /* LSB */
10840  00  =5      BYTE      previousMeterValue1;          /* MSB */
10841  00  =5      BYTE      previousMeterValue2;          
10842  00  =5      BYTE      previousMeterValue3;          
10843  00  =5      BYTE      previousMeterValue4;          /* LSB */
10844  00  =5  } ZW_METER_REPORT_4BYTE_V3_FRAME;
10845  00  =5  
10846  00  =5  /************************************************************/
10847  00  =5  /* Meter Reset V3 command class structs */                  
10848  00  =5  /************************************************************/
10849  00  =5  typedef struct _ZW_METER_RESET_V3_FRAME_
10850  00  =5  {
10851  00  =5      BYTE      cmdClass;                     /* The command class */
10852  00  =5      BYTE      cmd;                          /* The command */
10853  00  =5  } ZW_METER_RESET_V3_FRAME;
10854  00  =5  
10855  00  =5  /************************************************************/
10856  00  =5  /* Meter Supported Get V3 command class structs */          
10857  00  =5  /************************************************************/
10858  00  =5  typedef struct _ZW_METER_SUPPORTED_GET_V3_FRAME_
10859  00  =5  {
10860  00  =5      BYTE      cmdClass;                     /* The command class */
10861  00  =5      BYTE      cmd;                          /* The command */
10862  00  =5  } ZW_METER_SUPPORTED_GET_V3_FRAME;
10863  00  =5  
10864  00  =5  /************************************************************/
10865  00  =5  /* Meter Supported Report V3 command class structs */       
10866  00  =5  /************************************************************/
10867  00  =5  typedef struct _ZW_METER_SUPPORTED_REPORT_V3_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 204 

10868  00  =5  {
10869  00  =5      BYTE      cmdClass;                     /* The command class */
10870  00  =5      BYTE      cmd;                          /* The command */
10871  00  =5      BYTE      properties1;                  /* masked byte */
10872  00  =5      BYTE      scaleSupported;               /**/
10873  00  =5  } ZW_METER_SUPPORTED_REPORT_V3_FRAME;
10874  00  =5  
10875  00  =5  /************************************************************/
10876  00  =5  /* Move To Position Get command class structs */            
10877  00  =5  /************************************************************/
10878  00  =5  typedef struct _ZW_MOVE_TO_POSITION_GET_FRAME_
10879  00  =5  {
10880  00  =5      BYTE      cmdClass;                     /* The command class */
10881  00  =5      BYTE      cmd;                          /* The command */
10882  00  =5  } ZW_MOVE_TO_POSITION_GET_FRAME;
10883  00  =5  
10884  00  =5  /************************************************************/
10885  00  =5  /* Move To Position Report command class structs */         
10886  00  =5  /************************************************************/
10887  00  =5  typedef struct _ZW_MOVE_TO_POSITION_REPORT_FRAME_
10888  00  =5  {
10889  00  =5      BYTE      cmdClass;                     /* The command class */
10890  00  =5      BYTE      cmd;                          /* The command */
10891  00  =5      BYTE      value;                        /**/
10892  00  =5  } ZW_MOVE_TO_POSITION_REPORT_FRAME;
10893  00  =5  
10894  00  =5  /************************************************************/
10895  00  =5  /* Move To Position Set command class structs */            
10896  00  =5  /************************************************************/
10897  00  =5  typedef struct _ZW_MOVE_TO_POSITION_SET_FRAME_
10898  00  =5  {
10899  00  =5      BYTE      cmdClass;                     /* The command class */
10900  00  =5      BYTE      cmd;                          /* The command */
10901  00  =5      BYTE      value;                        /**/
10902  00  =5  } ZW_MOVE_TO_POSITION_SET_FRAME;
10903  00  =5  
10904  00  =5  /************************************************************/
10905  00  =5  /* Multi Channel Association Get V2 command class structs */
10906  00  =5  /************************************************************/
10907  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GET_V2_FRAME_
10908  00  =5  {
10909  00  =5      BYTE      cmdClass;                     /* The command class */
10910  00  =5      BYTE      cmd;                          /* The command */
10911  00  =5      BYTE      groupingIdentifier;           /**/
10912  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_GET_V2_FRAME;
10913  00  =5  
10914  00  =5  /************************************************************/
10915  00  =5  /* Multi Channel Association Groupings Get V2 command class structs */
10916  00  =5  /************************************************************/
10917  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V2_FRAME_
10918  00  =5  {
10919  00  =5      BYTE      cmdClass;                     /* The command class */
10920  00  =5      BYTE      cmd;                          /* The command */
10921  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V2_FRAME;
10922  00  =5  
10923  00  =5  /************************************************************/
10924  00  =5  /* Multi Channel Association Groupings Report V2 command class structs */
10925  00  =5  /************************************************************/
10926  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME_
10927  00  =5  {
10928  00  =5      BYTE      cmdClass;                     /* The command class */
10929  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 205 

10930  00  =5      BYTE      supportedGroupings;           /**/
10931  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME;
10932  00  =5  
10933  00  =5  /************************************************************/
10934  00  =5  /* Multi Channel Association Remove V2 variant group structs */
10935  00  =5  /************************************************************/
10936  00  =5  typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG_
10937  00  =5  {
10938  00  =5      BYTE      multiChannelNodeId;           /**/
10939  00  =5      BYTE      properties1;                  /* masked byte */
10940  00  =5  } VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG;
10941  00  =5  
10942  00  =5  /************************************************************/
10943  00  =5  /* Multi Channel Association Remove 1byte V2 command class structs */
10944  00  =5  /************************************************************/
10945  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V2_FRAME_
10946  00  =5  {
10947  00  =5      BYTE      cmdClass;                     /* The command class */
10948  00  =5      BYTE      cmd;                          /* The command */
10949  00  =5      BYTE      groupingIdentifier;           /**/
10950  00  =5      BYTE      nodeId1;                      
10951  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
10952  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup1;                /**/
10953  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V2_FRAME;
10954  00  =5  
10955  00  =5  /************************************************************/
10956  00  =5  /* Multi Channel Association Remove 2byte V2 command class structs */
10957  00  =5  /************************************************************/
10958  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V2_FRAME_
10959  00  =5  {
10960  00  =5      BYTE      cmdClass;                     /* The command class */
10961  00  =5      BYTE      cmd;                          /* The command */
10962  00  =5      BYTE      groupingIdentifier;           /**/
10963  00  =5      BYTE      nodeId1;                      /* MSB */
10964  00  =5      BYTE      nodeId2;                      /* LSB */
10965  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
10966  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup1;                /**/
10967  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup2;                /**/
10968  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V2_FRAME;
10969  00  =5  
10970  00  =5  /************************************************************/
10971  00  =5  /* Multi Channel Association Remove 3byte V2 command class structs */
10972  00  =5  /************************************************************/
10973  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V2_FRAME_
10974  00  =5  {
10975  00  =5      BYTE      cmdClass;                     /* The command class */
10976  00  =5      BYTE      cmd;                          /* The command */
10977  00  =5      BYTE      groupingIdentifier;           /**/
10978  00  =5      BYTE      nodeId1;                      /* MSB */
10979  00  =5      BYTE      nodeId2;                      
10980  00  =5      BYTE      nodeId3;                      /* LSB */
10981  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
10982  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup1;                /**/
10983  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup2;                /**/
10984  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup3;                /**/
10985  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V2_FRAME;
10986  00  =5  
10987  00  =5  /************************************************************/
10988  00  =5  /* Multi Channel Association Remove 4byte V2 command class structs */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 206 

10989  00  =5  /************************************************************/
10990  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V2_FRAME_
10991  00  =5  {
10992  00  =5      BYTE      cmdClass;                     /* The command class */
10993  00  =5      BYTE      cmd;                          /* The command */
10994  00  =5      BYTE      groupingIdentifier;           /**/
10995  00  =5      BYTE      nodeId1;                      /* MSB */
10996  00  =5      BYTE      nodeId2;                      
10997  00  =5      BYTE      nodeId3;                      
10998  00  =5      BYTE      nodeId4;                      /* LSB */
10999  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11000  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup1;                /**/
11001  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup2;                /**/
11002  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup3;                /**/
11003  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup4;                /**/
11004  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V2_FRAME;
11005  00  =5  
11006  00  =5  /************************************************************/
11007  00  =5  /* Multi Channel Association Report V2 variant group structs */
11008  00  =5  /************************************************************/
11009  00  =5  typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG_
11010  00  =5  {
11011  00  =5      BYTE      multiChannelNodeId;           /**/
11012  00  =5      BYTE      properties1;                  /* masked byte */
11013  00  =5  } VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG;
11014  00  =5  
11015  00  =5  /************************************************************/
11016  00  =5  /* Multi Channel Association Report 1byte V2 command class structs */
11017  00  =5  /************************************************************/
11018  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V2_FRAME_
11019  00  =5  {
11020  00  =5      BYTE      cmdClass;                     /* The command class */
11021  00  =5      BYTE      cmd;                          /* The command */
11022  00  =5      BYTE      groupingIdentifier;           /**/
11023  00  =5      BYTE      maxNodesSupported;            /**/
11024  00  =5      BYTE      reportsToFollow;              /**/
11025  00  =5      BYTE      nodeId1;                      
11026  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11027  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup1;                /**/
11028  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V2_FRAME;
11029  00  =5  
11030  00  =5  /************************************************************/
11031  00  =5  /* Multi Channel Association Report 2byte V2 command class structs */
11032  00  =5  /************************************************************/
11033  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V2_FRAME_
11034  00  =5  {
11035  00  =5      BYTE      cmdClass;                     /* The command class */
11036  00  =5      BYTE      cmd;                          /* The command */
11037  00  =5      BYTE      groupingIdentifier;           /**/
11038  00  =5      BYTE      maxNodesSupported;            /**/
11039  00  =5      BYTE      reportsToFollow;              /**/
11040  00  =5      BYTE      nodeId1;                      /* MSB */
11041  00  =5      BYTE      nodeId2;                      /* LSB */
11042  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11043  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup1;                /**/
11044  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup2;                /**/
11045  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V2_FRAME;
11046  00  =5  
11047  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 207 

11048  00  =5  /* Multi Channel Association Report 3byte V2 command class structs */
11049  00  =5  /************************************************************/
11050  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V2_FRAME_
11051  00  =5  {
11052  00  =5      BYTE      cmdClass;                     /* The command class */
11053  00  =5      BYTE      cmd;                          /* The command */
11054  00  =5      BYTE      groupingIdentifier;           /**/
11055  00  =5      BYTE      maxNodesSupported;            /**/
11056  00  =5      BYTE      reportsToFollow;              /**/
11057  00  =5      BYTE      nodeId1;                      /* MSB */
11058  00  =5      BYTE      nodeId2;                      
11059  00  =5      BYTE      nodeId3;                      /* LSB */
11060  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11061  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup1;                /**/
11062  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup2;                /**/
11063  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup3;                /**/
11064  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V2_FRAME;
11065  00  =5  
11066  00  =5  /************************************************************/
11067  00  =5  /* Multi Channel Association Report 4byte V2 command class structs */
11068  00  =5  /************************************************************/
11069  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V2_FRAME_
11070  00  =5  {
11071  00  =5      BYTE      cmdClass;                     /* The command class */
11072  00  =5      BYTE      cmd;                          /* The command */
11073  00  =5      BYTE      groupingIdentifier;           /**/
11074  00  =5      BYTE      maxNodesSupported;            /**/
11075  00  =5      BYTE      reportsToFollow;              /**/
11076  00  =5      BYTE      nodeId1;                      /* MSB */
11077  00  =5      BYTE      nodeId2;                      
11078  00  =5      BYTE      nodeId3;                      
11079  00  =5      BYTE      nodeId4;                      /* LSB */
11080  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11081  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup1;                /**/
11082  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup2;                /**/
11083  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup3;                /**/
11084  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup4;                /**/
11085  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V2_FRAME;
11086  00  =5  
11087  00  =5  /************************************************************/
11088  00  =5  /* Multi Channel Association Set V2 variant group structs */
11089  00  =5  /************************************************************/
11090  00  =5  typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG_
11091  00  =5  {
11092  00  =5      BYTE      multiChannelNodeId;           /**/
11093  00  =5      BYTE      properties1;                  /* masked byte */
11094  00  =5  } VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG;
11095  00  =5  
11096  00  =5  /************************************************************/
11097  00  =5  /* Multi Channel Association Set 1byte V2 command class structs */
11098  00  =5  /************************************************************/
11099  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V2_FRAME_
11100  00  =5  {
11101  00  =5      BYTE      cmdClass;                     /* The command class */
11102  00  =5      BYTE      cmd;                          /* The command */
11103  00  =5      BYTE      groupingIdentifier;           /**/
11104  00  =5      BYTE      nodeId1;                      
11105  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11106  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup1;                /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 208 

11107  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V2_FRAME;
11108  00  =5  
11109  00  =5  /************************************************************/
11110  00  =5  /* Multi Channel Association Set 2byte V2 command class structs */
11111  00  =5  /************************************************************/
11112  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V2_FRAME_
11113  00  =5  {
11114  00  =5      BYTE      cmdClass;                     /* The command class */
11115  00  =5      BYTE      cmd;                          /* The command */
11116  00  =5      BYTE      groupingIdentifier;           /**/
11117  00  =5      BYTE      nodeId1;                      /* MSB */
11118  00  =5      BYTE      nodeId2;                      /* LSB */
11119  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11120  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup1;                /**/
11121  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup2;                /**/
11122  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V2_FRAME;
11123  00  =5  
11124  00  =5  /************************************************************/
11125  00  =5  /* Multi Channel Association Set 3byte V2 command class structs */
11126  00  =5  /************************************************************/
11127  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V2_FRAME_
11128  00  =5  {
11129  00  =5      BYTE      cmdClass;                     /* The command class */
11130  00  =5      BYTE      cmd;                          /* The command */
11131  00  =5      BYTE      groupingIdentifier;           /**/
11132  00  =5      BYTE      nodeId1;                      /* MSB */
11133  00  =5      BYTE      nodeId2;                      
11134  00  =5      BYTE      nodeId3;                      /* LSB */
11135  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11136  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup1;                /**/
11137  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup2;                /**/
11138  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup3;                /**/
11139  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V2_FRAME;
11140  00  =5  
11141  00  =5  /************************************************************/
11142  00  =5  /* Multi Channel Association Set 4byte V2 command class structs */
11143  00  =5  /************************************************************/
11144  00  =5  typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V2_FRAME_
11145  00  =5  {
11146  00  =5      BYTE      cmdClass;                     /* The command class */
11147  00  =5      BYTE      cmd;                          /* The command */
11148  00  =5      BYTE      groupingIdentifier;           /**/
11149  00  =5      BYTE      nodeId1;                      /* MSB */
11150  00  =5      BYTE      nodeId2;                      
11151  00  =5      BYTE      nodeId3;                      
11152  00  =5      BYTE      nodeId4;                      /* LSB */
11153  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11154  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup1;                /**/
11155  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup2;                /**/
11156  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup3;                /**/
11157  00  =5      VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup4;                /**/
11158  00  =5  } ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V2_FRAME;
11159  00  =5  
11160  00  =5  /************************************************************/
11161  00  =5  /* Multi Channel Capability Get V2 command class structs */ 
11162  00  =5  /************************************************************/
11163  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAME_
11164  00  =5  {
11165  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 209 

11166  00  =5      BYTE      cmd;                          /* The command */
11167  00  =5      BYTE      properties1;                  /* masked byte */
11168  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAME;
11169  00  =5  
11170  00  =5  /************************************************************/
11171  00  =5  /* Multi Channel Capability Report 1byte V2 command class structs */
11172  00  =5  /************************************************************/
11173  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V2_FRAME_
11174  00  =5  {
11175  00  =5      BYTE      cmdClass;                     /* The command class */
11176  00  =5      BYTE      cmd;                          /* The command */
11177  00  =5      BYTE      properties1;                  /* masked byte */
11178  00  =5      BYTE      genericDeviceClass;           /**/
11179  00  =5      BYTE      specificDeviceClass;          /**/
11180  00  =5      BYTE      commandClass1;                
11181  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V2_FRAME;
11182  00  =5  
11183  00  =5  /************************************************************/
11184  00  =5  /* Multi Channel Capability Report 2byte V2 command class structs */
11185  00  =5  /************************************************************/
11186  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V2_FRAME_
11187  00  =5  {
11188  00  =5      BYTE      cmdClass;                     /* The command class */
11189  00  =5      BYTE      cmd;                          /* The command */
11190  00  =5      BYTE      properties1;                  /* masked byte */
11191  00  =5      BYTE      genericDeviceClass;           /**/
11192  00  =5      BYTE      specificDeviceClass;          /**/
11193  00  =5      BYTE      commandClass1;                /* MSB */
11194  00  =5      BYTE      commandClass2;                /* LSB */
11195  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V2_FRAME;
11196  00  =5  
11197  00  =5  /************************************************************/
11198  00  =5  /* Multi Channel Capability Report 3byte V2 command class structs */
11199  00  =5  /************************************************************/
11200  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V2_FRAME_
11201  00  =5  {
11202  00  =5      BYTE      cmdClass;                     /* The command class */
11203  00  =5      BYTE      cmd;                          /* The command */
11204  00  =5      BYTE      properties1;                  /* masked byte */
11205  00  =5      BYTE      genericDeviceClass;           /**/
11206  00  =5      BYTE      specificDeviceClass;          /**/
11207  00  =5      BYTE      commandClass1;                /* MSB */
11208  00  =5      BYTE      commandClass2;                
11209  00  =5      BYTE      commandClass3;                /* LSB */
11210  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V2_FRAME;
11211  00  =5  
11212  00  =5  /************************************************************/
11213  00  =5  /* Multi Channel Capability Report 4byte V2 command class structs */
11214  00  =5  /************************************************************/
11215  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V2_FRAME_
11216  00  =5  {
11217  00  =5      BYTE      cmdClass;                     /* The command class */
11218  00  =5      BYTE      cmd;                          /* The command */
11219  00  =5      BYTE      properties1;                  /* masked byte */
11220  00  =5      BYTE      genericDeviceClass;           /**/
11221  00  =5      BYTE      specificDeviceClass;          /**/
11222  00  =5      BYTE      commandClass1;                /* MSB */
11223  00  =5      BYTE      commandClass2;                
11224  00  =5      BYTE      commandClass3;                
11225  00  =5      BYTE      commandClass4;                /* LSB */
11226  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V2_FRAME;
11227  00  =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 210 

11228  00  =5  /************************************************************/
11229  00  =5  /* Multi Channel End Point Find V2 command class structs */ 
11230  00  =5  /************************************************************/
11231  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_V2_FRAME_
11232  00  =5  {
11233  00  =5      BYTE      cmdClass;                     /* The command class */
11234  00  =5      BYTE      cmd;                          /* The command */
11235  00  =5      BYTE      genericDeviceClass;           /**/
11236  00  =5      BYTE      specificDeviceClass;          /**/
11237  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_V2_FRAME;
11238  00  =5  
11239  00  =5  /************************************************************/
11240  00  =5  /* Multi Channel End Point Find Report V2 variant group structs */
11241  00  =5  /************************************************************/
11242  00  =5  typedef struct _VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG_
11243  00  =5  {
11244  00  =5      BYTE      properties1;                  /* masked byte */
11245  00  =5  } VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG;
11246  00  =5  
11247  00  =5  /************************************************************/
11248  00  =5  /* Multi Channel End Point Find Report 1byte V2 command class structs */
11249  00  =5  /************************************************************/
11250  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V2_FRAME_
11251  00  =5  {
11252  00  =5      BYTE      cmdClass;                     /* The command class */
11253  00  =5      BYTE      cmd;                          /* The command */
11254  00  =5      BYTE      reportsToFollow;              /**/
11255  00  =5      BYTE      genericDeviceClass;           /**/
11256  00  =5      BYTE      specificDeviceClass;          /**/
11257  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup1;                /**/
11258  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V2_FRAME;
11259  00  =5  
11260  00  =5  /************************************************************/
11261  00  =5  /* Multi Channel End Point Find Report 2byte V2 command class structs */
11262  00  =5  /************************************************************/
11263  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V2_FRAME_
11264  00  =5  {
11265  00  =5      BYTE      cmdClass;                     /* The command class */
11266  00  =5      BYTE      cmd;                          /* The command */
11267  00  =5      BYTE      reportsToFollow;              /**/
11268  00  =5      BYTE      genericDeviceClass;           /**/
11269  00  =5      BYTE      specificDeviceClass;          /**/
11270  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup1;                /**/
11271  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup2;                /**/
11272  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V2_FRAME;
11273  00  =5  
11274  00  =5  /************************************************************/
11275  00  =5  /* Multi Channel End Point Find Report 3byte V2 command class structs */
11276  00  =5  /************************************************************/
11277  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V2_FRAME_
11278  00  =5  {
11279  00  =5      BYTE      cmdClass;                     /* The command class */
11280  00  =5      BYTE      cmd;                          /* The command */
11281  00  =5      BYTE      reportsToFollow;              /**/
11282  00  =5      BYTE      genericDeviceClass;           /**/
11283  00  =5      BYTE      specificDeviceClass;          /**/
11284  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup1;                /**/
11285  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup2;                /**/
11286  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup3;                /**/
11287  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V2_FRAME;
11288  00  =5  
11289  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 211 

11290  00  =5  /* Multi Channel End Point Find Report 4byte V2 command class structs */
11291  00  =5  /************************************************************/
11292  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V2_FRAME_
11293  00  =5  {
11294  00  =5      BYTE      cmdClass;                     /* The command class */
11295  00  =5      BYTE      cmd;                          /* The command */
11296  00  =5      BYTE      reportsToFollow;              /**/
11297  00  =5      BYTE      genericDeviceClass;           /**/
11298  00  =5      BYTE      specificDeviceClass;          /**/
11299  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup1;                /**/
11300  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup2;                /**/
11301  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup3;                /**/
11302  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup4;                /**/
11303  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V2_FRAME;
11304  00  =5  
11305  00  =5  /************************************************************/
11306  00  =5  /* Multi Channel End Point Get V2 command class structs */  
11307  00  =5  /************************************************************/
11308  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_GET_V2_FRAME_
11309  00  =5  {
11310  00  =5      BYTE      cmdClass;                     /* The command class */
11311  00  =5      BYTE      cmd;                          /* The command */
11312  00  =5  } ZW_MULTI_CHANNEL_END_POINT_GET_V2_FRAME;
11313  00  =5  
11314  00  =5  /************************************************************/
11315  00  =5  /* Multi Channel End Point Report V2 command class structs */
11316  00  =5  /************************************************************/
11317  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_REPORT_V2_FRAME_
11318  00  =5  {
11319  00  =5      BYTE      cmdClass;                     /* The command class */
11320  00  =5      BYTE      cmd;                          /* The command */
11321  00  =5      BYTE      properties1;                  /* masked byte */
11322  00  =5      BYTE      properties2;                  /* masked byte */
11323  00  =5  } ZW_MULTI_CHANNEL_END_POINT_REPORT_V2_FRAME;
11324  00  =5  
11325  00  =5  /************************************************************/
11326  00  =5  /* Multi Instance Get V2 command class structs */           
11327  00  =5  /************************************************************/
11328  00  =5  typedef struct _ZW_MULTI_INSTANCE_GET_V2_FRAME_
11329  00  =5  {
11330  00  =5      BYTE      cmdClass;                     /* The command class */
11331  00  =5      BYTE      cmd;                          /* The command */
11332  00  =5      BYTE      commandClass;                 /**/
11333  00  =5  } ZW_MULTI_INSTANCE_GET_V2_FRAME;
11334  00  =5  
11335  00  =5  /************************************************************/
11336  00  =5  /* Multi Instance Report V2 command class structs */        
11337  00  =5  /************************************************************/
11338  00  =5  typedef struct _ZW_MULTI_INSTANCE_REPORT_V2_FRAME_
11339  00  =5  {
11340  00  =5      BYTE      cmdClass;                     /* The command class */
11341  00  =5      BYTE      cmd;                          /* The command */
11342  00  =5      BYTE      commandClass;                 /**/
11343  00  =5      BYTE      properties1;                  /* masked byte */
11344  00  =5  } ZW_MULTI_INSTANCE_REPORT_V2_FRAME;
11345  00  =5  
11346  00  =5  /************************************************************/
11347  00  =5  /* Multi Channel Capability Get V3 command class structs */ 
11348  00  =5  /************************************************************/
11349  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAME_
11350  00  =5  {
11351  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 212 

11352  00  =5      BYTE      cmd;                          /* The command */
11353  00  =5      BYTE      properties1;                  /* masked byte */
11354  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAME;
11355  00  =5  
11356  00  =5  /************************************************************/
11357  00  =5  /* Multi Channel Capability Report 1byte V3 command class structs */
11358  00  =5  /************************************************************/
11359  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V3_FRAME_
11360  00  =5  {
11361  00  =5      BYTE      cmdClass;                     /* The command class */
11362  00  =5      BYTE      cmd;                          /* The command */
11363  00  =5      BYTE      properties1;                  /* masked byte */
11364  00  =5      BYTE      genericDeviceClass;           /**/
11365  00  =5      BYTE      specificDeviceClass;          /**/
11366  00  =5      BYTE      commandClass1;                
11367  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V3_FRAME;
11368  00  =5  
11369  00  =5  /************************************************************/
11370  00  =5  /* Multi Channel Capability Report 2byte V3 command class structs */
11371  00  =5  /************************************************************/
11372  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V3_FRAME_
11373  00  =5  {
11374  00  =5      BYTE      cmdClass;                     /* The command class */
11375  00  =5      BYTE      cmd;                          /* The command */
11376  00  =5      BYTE      properties1;                  /* masked byte */
11377  00  =5      BYTE      genericDeviceClass;           /**/
11378  00  =5      BYTE      specificDeviceClass;          /**/
11379  00  =5      BYTE      commandClass1;                /* MSB */
11380  00  =5      BYTE      commandClass2;                /* LSB */
11381  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V3_FRAME;
11382  00  =5  
11383  00  =5  /************************************************************/
11384  00  =5  /* Multi Channel Capability Report 3byte V3 command class structs */
11385  00  =5  /************************************************************/
11386  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V3_FRAME_
11387  00  =5  {
11388  00  =5      BYTE      cmdClass;                     /* The command class */
11389  00  =5      BYTE      cmd;                          /* The command */
11390  00  =5      BYTE      properties1;                  /* masked byte */
11391  00  =5      BYTE      genericDeviceClass;           /**/
11392  00  =5      BYTE      specificDeviceClass;          /**/
11393  00  =5      BYTE      commandClass1;                /* MSB */
11394  00  =5      BYTE      commandClass2;                
11395  00  =5      BYTE      commandClass3;                /* LSB */
11396  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V3_FRAME;
11397  00  =5  
11398  00  =5  /************************************************************/
11399  00  =5  /* Multi Channel Capability Report 4byte V3 command class structs */
11400  00  =5  /************************************************************/
11401  00  =5  typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V3_FRAME_
11402  00  =5  {
11403  00  =5      BYTE      cmdClass;                     /* The command class */
11404  00  =5      BYTE      cmd;                          /* The command */
11405  00  =5      BYTE      properties1;                  /* masked byte */
11406  00  =5      BYTE      genericDeviceClass;           /**/
11407  00  =5      BYTE      specificDeviceClass;          /**/
11408  00  =5      BYTE      commandClass1;                /* MSB */
11409  00  =5      BYTE      commandClass2;                
11410  00  =5      BYTE      commandClass3;                
11411  00  =5      BYTE      commandClass4;                /* LSB */
11412  00  =5  } ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V3_FRAME;
11413  00  =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 213 

11414  00  =5  /************************************************************/
11415  00  =5  /* Multi Channel End Point Find V3 command class structs */ 
11416  00  =5  /************************************************************/
11417  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_V3_FRAME_
11418  00  =5  {
11419  00  =5      BYTE      cmdClass;                     /* The command class */
11420  00  =5      BYTE      cmd;                          /* The command */
11421  00  =5      BYTE      genericDeviceClass;           /**/
11422  00  =5      BYTE      specificDeviceClass;          /**/
11423  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_V3_FRAME;
11424  00  =5  
11425  00  =5  /************************************************************/
11426  00  =5  /* Multi Channel End Point Find Report V3 variant group structs */
11427  00  =5  /************************************************************/
11428  00  =5  typedef struct _VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG_
11429  00  =5  {
11430  00  =5      BYTE      properties1;                  /* masked byte */
11431  00  =5  } VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG;
11432  00  =5  
11433  00  =5  /************************************************************/
11434  00  =5  /* Multi Channel End Point Find Report 1byte V3 command class structs */
11435  00  =5  /************************************************************/
11436  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V3_FRAME_
11437  00  =5  {
11438  00  =5      BYTE      cmdClass;                     /* The command class */
11439  00  =5      BYTE      cmd;                          /* The command */
11440  00  =5      BYTE      reportsToFollow;              /**/
11441  00  =5      BYTE      genericDeviceClass;           /**/
11442  00  =5      BYTE      specificDeviceClass;          /**/
11443  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup1;                /**/
11444  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V3_FRAME;
11445  00  =5  
11446  00  =5  /************************************************************/
11447  00  =5  /* Multi Channel End Point Find Report 2byte V3 command class structs */
11448  00  =5  /************************************************************/
11449  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V3_FRAME_
11450  00  =5  {
11451  00  =5      BYTE      cmdClass;                     /* The command class */
11452  00  =5      BYTE      cmd;                          /* The command */
11453  00  =5      BYTE      reportsToFollow;              /**/
11454  00  =5      BYTE      genericDeviceClass;           /**/
11455  00  =5      BYTE      specificDeviceClass;          /**/
11456  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup1;                /**/
11457  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup2;                /**/
11458  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V3_FRAME;
11459  00  =5  
11460  00  =5  /************************************************************/
11461  00  =5  /* Multi Channel End Point Find Report 3byte V3 command class structs */
11462  00  =5  /************************************************************/
11463  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V3_FRAME_
11464  00  =5  {
11465  00  =5      BYTE      cmdClass;                     /* The command class */
11466  00  =5      BYTE      cmd;                          /* The command */
11467  00  =5      BYTE      reportsToFollow;              /**/
11468  00  =5      BYTE      genericDeviceClass;           /**/
11469  00  =5      BYTE      specificDeviceClass;          /**/
11470  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup1;                /**/
11471  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup2;                /**/
11472  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup3;                /**/
11473  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V3_FRAME;
11474  00  =5  
11475  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 214 

11476  00  =5  /* Multi Channel End Point Find Report 4byte V3 command class structs */
11477  00  =5  /************************************************************/
11478  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V3_FRAME_
11479  00  =5  {
11480  00  =5      BYTE      cmdClass;                     /* The command class */
11481  00  =5      BYTE      cmd;                          /* The command */
11482  00  =5      BYTE      reportsToFollow;              /**/
11483  00  =5      BYTE      genericDeviceClass;           /**/
11484  00  =5      BYTE      specificDeviceClass;          /**/
11485  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup1;                /**/
11486  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup2;                /**/
11487  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup3;                /**/
11488  00  =5      VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup4;                /**/
11489  00  =5  } ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V3_FRAME;
11490  00  =5  
11491  00  =5  /************************************************************/
11492  00  =5  /* Multi Channel End Point Get V3 command class structs */  
11493  00  =5  /************************************************************/
11494  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_GET_V3_FRAME_
11495  00  =5  {
11496  00  =5      BYTE      cmdClass;                     /* The command class */
11497  00  =5      BYTE      cmd;                          /* The command */
11498  00  =5  } ZW_MULTI_CHANNEL_END_POINT_GET_V3_FRAME;
11499  00  =5  
11500  00  =5  /************************************************************/
11501  00  =5  /* Multi Channel End Point Report V3 command class structs */
11502  00  =5  /************************************************************/
11503  00  =5  typedef struct _ZW_MULTI_CHANNEL_END_POINT_REPORT_V3_FRAME_
11504  00  =5  {
11505  00  =5      BYTE      cmdClass;                     /* The command class */
11506  00  =5      BYTE      cmd;                          /* The command */
11507  00  =5      BYTE      properties1;                  /* masked byte */
11508  00  =5      BYTE      properties2;                  /* masked byte */
11509  00  =5  } ZW_MULTI_CHANNEL_END_POINT_REPORT_V3_FRAME;
11510  00  =5  
11511  00  =5  /************************************************************/
11512  00  =5  /* Multi Instance Get V3 command class structs */           
11513  00  =5  /************************************************************/
11514  00  =5  typedef struct _ZW_MULTI_INSTANCE_GET_V3_FRAME_
11515  00  =5  {
11516  00  =5      BYTE      cmdClass;                     /* The command class */
11517  00  =5      BYTE      cmd;                          /* The command */
11518  00  =5      BYTE      commandClass;                 /**/
11519  00  =5  } ZW_MULTI_INSTANCE_GET_V3_FRAME;
11520  00  =5  
11521  00  =5  /************************************************************/
11522  00  =5  /* Multi Instance Report V3 command class structs */        
11523  00  =5  /************************************************************/
11524  00  =5  typedef struct _ZW_MULTI_INSTANCE_REPORT_V3_FRAME_
11525  00  =5  {
11526  00  =5      BYTE      cmdClass;                     /* The command class */
11527  00  =5      BYTE      cmd;                          /* The command */
11528  00  =5      BYTE      commandClass;                 /**/
11529  00  =5      BYTE      properties1;                  /* masked byte */
11530  00  =5  } ZW_MULTI_INSTANCE_REPORT_V3_FRAME;
11531  00  =5  
11532  00  =5  /************************************************************/
11533  00  =5  /* Multi Instance Association Get command class structs */  
11534  00  =5  /************************************************************/
11535  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_GET_FRAME_
11536  00  =5  {
11537  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 215 

11538  00  =5      BYTE      cmd;                          /* The command */
11539  00  =5      BYTE      groupingIdentifier;           /**/
11540  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_GET_FRAME;
11541  00  =5  
11542  00  =5  /************************************************************/
11543  00  =5  /* Multi Instance Association Groupings Get command class structs */
11544  00  =5  /************************************************************/
11545  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_GET_FRAME_
11546  00  =5  {
11547  00  =5      BYTE      cmdClass;                     /* The command class */
11548  00  =5      BYTE      cmd;                          /* The command */
11549  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_GET_FRAME;
11550  00  =5  
11551  00  =5  /************************************************************/
11552  00  =5  /* Multi Instance Association Groupings Report command class structs */
11553  00  =5  /************************************************************/
11554  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_REPORT_FRAME_
11555  00  =5  {
11556  00  =5      BYTE      cmdClass;                     /* The command class */
11557  00  =5      BYTE      cmd;                          /* The command */
11558  00  =5      BYTE      supportedGroupings;           /**/
11559  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_REPORT_FRAME;
11560  00  =5  
11561  00  =5  /************************************************************/
11562  00  =5  /* Multi Instance Association Remove variant group structs */
11563  00  =5  /************************************************************/
11564  00  =5  typedef struct _VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG_
11565  00  =5  {
11566  00  =5      BYTE      multiInstanceNodeId;          /**/
11567  00  =5      BYTE      instance;                     /**/
11568  00  =5  } VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG;
11569  00  =5  
11570  00  =5  /************************************************************/
11571  00  =5  /* Multi Instance Association Remove 1byte command class structs */
11572  00  =5  /************************************************************/
11573  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_1BYTE_FRAME_
11574  00  =5  {
11575  00  =5      BYTE      cmdClass;                     /* The command class */
11576  00  =5      BYTE      cmd;                          /* The command */
11577  00  =5      BYTE      groupingIdentifier;           /**/
11578  00  =5      BYTE      nodeId1;                      
11579  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11580  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup1;                /**/
11581  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_1BYTE_FRAME;
11582  00  =5  
11583  00  =5  /************************************************************/
11584  00  =5  /* Multi Instance Association Remove 2byte command class structs */
11585  00  =5  /************************************************************/
11586  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_2BYTE_FRAME_
11587  00  =5  {
11588  00  =5      BYTE      cmdClass;                     /* The command class */
11589  00  =5      BYTE      cmd;                          /* The command */
11590  00  =5      BYTE      groupingIdentifier;           /**/
11591  00  =5      BYTE      nodeId1;                      /* MSB */
11592  00  =5      BYTE      nodeId2;                      /* LSB */
11593  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11594  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup1;                /**/
11595  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup2;                /**/
11596  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_2BYTE_FRAME;
11597  00  =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 216 

11598  00  =5  /************************************************************/
11599  00  =5  /* Multi Instance Association Remove 3byte command class structs */
11600  00  =5  /************************************************************/
11601  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_3BYTE_FRAME_
11602  00  =5  {
11603  00  =5      BYTE      cmdClass;                     /* The command class */
11604  00  =5      BYTE      cmd;                          /* The command */
11605  00  =5      BYTE      groupingIdentifier;           /**/
11606  00  =5      BYTE      nodeId1;                      /* MSB */
11607  00  =5      BYTE      nodeId2;                      
11608  00  =5      BYTE      nodeId3;                      /* LSB */
11609  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11610  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup1;                /**/
11611  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup2;                /**/
11612  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup3;                /**/
11613  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_3BYTE_FRAME;
11614  00  =5  
11615  00  =5  /************************************************************/
11616  00  =5  /* Multi Instance Association Remove 4byte command class structs */
11617  00  =5  /************************************************************/
11618  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_4BYTE_FRAME_
11619  00  =5  {
11620  00  =5      BYTE      cmdClass;                     /* The command class */
11621  00  =5      BYTE      cmd;                          /* The command */
11622  00  =5      BYTE      groupingIdentifier;           /**/
11623  00  =5      BYTE      nodeId1;                      /* MSB */
11624  00  =5      BYTE      nodeId2;                      
11625  00  =5      BYTE      nodeId3;                      
11626  00  =5      BYTE      nodeId4;                      /* LSB */
11627  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11628  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup1;                /**/
11629  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup2;                /**/
11630  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup3;                /**/
11631  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup4;                /**/
11632  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_4BYTE_FRAME;
11633  00  =5  
11634  00  =5  /************************************************************/
11635  00  =5  /* Multi Instance Association Report variant group structs */
11636  00  =5  /************************************************************/
11637  00  =5  typedef struct _VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG_
11638  00  =5  {
11639  00  =5      BYTE      multiInstanceNodeId;          /**/
11640  00  =5      BYTE      instance;                     /**/
11641  00  =5  } VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG;
11642  00  =5  
11643  00  =5  /************************************************************/
11644  00  =5  /* Multi Instance Association Report 1byte command class structs */
11645  00  =5  /************************************************************/
11646  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_1BYTE_FRAME_
11647  00  =5  {
11648  00  =5      BYTE      cmdClass;                     /* The command class */
11649  00  =5      BYTE      cmd;                          /* The command */
11650  00  =5      BYTE      groupingIdentifier;           /**/
11651  00  =5      BYTE      maxNodesSupported;            /**/
11652  00  =5      BYTE      reportsToFollow;              /**/
11653  00  =5      BYTE      nodeId1;                      
11654  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11655  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup1;                /**/
11656  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_1BYTE_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 217 

11657  00  =5  
11658  00  =5  /************************************************************/
11659  00  =5  /* Multi Instance Association Report 2byte command class structs */
11660  00  =5  /************************************************************/
11661  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_2BYTE_FRAME_
11662  00  =5  {
11663  00  =5      BYTE      cmdClass;                     /* The command class */
11664  00  =5      BYTE      cmd;                          /* The command */
11665  00  =5      BYTE      groupingIdentifier;           /**/
11666  00  =5      BYTE      maxNodesSupported;            /**/
11667  00  =5      BYTE      reportsToFollow;              /**/
11668  00  =5      BYTE      nodeId1;                      /* MSB */
11669  00  =5      BYTE      nodeId2;                      /* LSB */
11670  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11671  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup1;                /**/
11672  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup2;                /**/
11673  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_2BYTE_FRAME;
11674  00  =5  
11675  00  =5  /************************************************************/
11676  00  =5  /* Multi Instance Association Report 3byte command class structs */
11677  00  =5  /************************************************************/
11678  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_3BYTE_FRAME_
11679  00  =5  {
11680  00  =5      BYTE      cmdClass;                     /* The command class */
11681  00  =5      BYTE      cmd;                          /* The command */
11682  00  =5      BYTE      groupingIdentifier;           /**/
11683  00  =5      BYTE      maxNodesSupported;            /**/
11684  00  =5      BYTE      reportsToFollow;              /**/
11685  00  =5      BYTE      nodeId1;                      /* MSB */
11686  00  =5      BYTE      nodeId2;                      
11687  00  =5      BYTE      nodeId3;                      /* LSB */
11688  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11689  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup1;                /**/
11690  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup2;                /**/
11691  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup3;                /**/
11692  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_3BYTE_FRAME;
11693  00  =5  
11694  00  =5  /************************************************************/
11695  00  =5  /* Multi Instance Association Report 4byte command class structs */
11696  00  =5  /************************************************************/
11697  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_4BYTE_FRAME_
11698  00  =5  {
11699  00  =5      BYTE      cmdClass;                     /* The command class */
11700  00  =5      BYTE      cmd;                          /* The command */
11701  00  =5      BYTE      groupingIdentifier;           /**/
11702  00  =5      BYTE      maxNodesSupported;            /**/
11703  00  =5      BYTE      reportsToFollow;              /**/
11704  00  =5      BYTE      nodeId1;                      /* MSB */
11705  00  =5      BYTE      nodeId2;                      
11706  00  =5      BYTE      nodeId3;                      
11707  00  =5      BYTE      nodeId4;                      /* LSB */
11708  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11709  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup1;                /**/
11710  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup2;                /**/
11711  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup3;                /**/
11712  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup4;                /**/
11713  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_4BYTE_FRAME;
11714  00  =5  
11715  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 218 

11716  00  =5  /* Multi Instance Association Set variant group structs */  
11717  00  =5  /************************************************************/
11718  00  =5  typedef struct _VG_MULTI_INSTANCE_ASSOCIATION_SET_VG_
11719  00  =5  {
11720  00  =5      BYTE      multiInstanceNodeId;          /**/
11721  00  =5      BYTE      instance;                     /**/
11722  00  =5  } VG_MULTI_INSTANCE_ASSOCIATION_SET_VG;
11723  00  =5  
11724  00  =5  /************************************************************/
11725  00  =5  /* Multi Instance Association Set 1byte command class structs */
11726  00  =5  /************************************************************/
11727  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_SET_1BYTE_FRAME_
11728  00  =5  {
11729  00  =5      BYTE      cmdClass;                     /* The command class */
11730  00  =5      BYTE      cmd;                          /* The command */
11731  00  =5      BYTE      groupingIdentifier;           /**/
11732  00  =5      BYTE      nodeId1;                      
11733  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11734  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup1;                /**/
11735  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_SET_1BYTE_FRAME;
11736  00  =5  
11737  00  =5  /************************************************************/
11738  00  =5  /* Multi Instance Association Set 2byte command class structs */
11739  00  =5  /************************************************************/
11740  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_SET_2BYTE_FRAME_
11741  00  =5  {
11742  00  =5      BYTE      cmdClass;                     /* The command class */
11743  00  =5      BYTE      cmd;                          /* The command */
11744  00  =5      BYTE      groupingIdentifier;           /**/
11745  00  =5      BYTE      nodeId1;                      /* MSB */
11746  00  =5      BYTE      nodeId2;                      /* LSB */
11747  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11748  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup1;                /**/
11749  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup2;                /**/
11750  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_SET_2BYTE_FRAME;
11751  00  =5  
11752  00  =5  /************************************************************/
11753  00  =5  /* Multi Instance Association Set 3byte command class structs */
11754  00  =5  /************************************************************/
11755  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_SET_3BYTE_FRAME_
11756  00  =5  {
11757  00  =5      BYTE      cmdClass;                     /* The command class */
11758  00  =5      BYTE      cmd;                          /* The command */
11759  00  =5      BYTE      groupingIdentifier;           /**/
11760  00  =5      BYTE      nodeId1;                      /* MSB */
11761  00  =5      BYTE      nodeId2;                      
11762  00  =5      BYTE      nodeId3;                      /* LSB */
11763  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11764  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup1;                /**/
11765  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup2;                /**/
11766  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup3;                /**/
11767  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_SET_3BYTE_FRAME;
11768  00  =5  
11769  00  =5  /************************************************************/
11770  00  =5  /* Multi Instance Association Set 4byte command class structs */
11771  00  =5  /************************************************************/
11772  00  =5  typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_SET_4BYTE_FRAME_
11773  00  =5  {
11774  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 219 

11775  00  =5      BYTE      cmd;                          /* The command */
11776  00  =5      BYTE      groupingIdentifier;           /**/
11777  00  =5      BYTE      nodeId1;                      /* MSB */
11778  00  =5      BYTE      nodeId2;                      
11779  00  =5      BYTE      nodeId3;                      
11780  00  =5      BYTE      nodeId4;                      /* LSB */
11781  00  =5      BYTE      marker;                       /*This marker identifier is used to separate between nodes wi
             -thout and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
11782  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup1;                /**/
11783  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup2;                /**/
11784  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup3;                /**/
11785  00  =5      VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup4;                /**/
11786  00  =5  } ZW_MULTI_INSTANCE_ASSOCIATION_SET_4BYTE_FRAME;
11787  00  =5  
11788  00  =5  /************************************************************/
11789  00  =5  /* Multi Instance Get command class structs */              
11790  00  =5  /************************************************************/
11791  00  =5  typedef struct _ZW_MULTI_INSTANCE_GET_FRAME_
11792  00  =5  {
11793  00  =5      BYTE      cmdClass;                     /* The command class */
11794  00  =5      BYTE      cmd;                          /* The command */
11795  00  =5      BYTE      commandClass;                 /**/
11796  00  =5  } ZW_MULTI_INSTANCE_GET_FRAME;
11797  00  =5  
11798  00  =5  /************************************************************/
11799  00  =5  /* Multi Instance Report command class structs */           
11800  00  =5  /************************************************************/
11801  00  =5  typedef struct _ZW_MULTI_INSTANCE_REPORT_FRAME_
11802  00  =5  {
11803  00  =5      BYTE      cmdClass;                     /* The command class */
11804  00  =5      BYTE      cmd;                          /* The command */
11805  00  =5      BYTE      commandClass;                 /**/
11806  00  =5      BYTE      instances;                    /**/
11807  00  =5  } ZW_MULTI_INSTANCE_REPORT_FRAME;
11808  00  =5  
11809  00  =5  /************************************************************/
11810  00  =5  /* Node Info Cached Get command class structs */            
11811  00  =5  /************************************************************/
11812  00  =5  typedef struct _ZW_NODE_INFO_CACHED_GET_FRAME_
11813  00  =5  {
11814  00  =5      BYTE      cmdClass;                     /* The command class */
11815  00  =5      BYTE      cmd;                          /* The command */
11816  00  =5      BYTE      seqNo;                        /**/
11817  00  =5      BYTE      properties1;                  /* masked byte */
11818  00  =5      BYTE      nodeId;                       /**/
11819  00  =5  } ZW_NODE_INFO_CACHED_GET_FRAME;
11820  00  =5  
11821  00  =5  /************************************************************/
11822  00  =5  /* Node Info Cached Report 1byte command class structs */   
11823  00  =5  /************************************************************/
11824  00  =5  typedef struct _ZW_NODE_INFO_CACHED_REPORT_1BYTE_FRAME_
11825  00  =5  {
11826  00  =5      BYTE      cmdClass;                     /* The command class */
11827  00  =5      BYTE      cmd;                          /* The command */
11828  00  =5      BYTE      seqNo;                        /**/
11829  00  =5      BYTE      properties1;                  /* masked byte */
11830  00  =5      BYTE      properties2;                  /* masked byte */
11831  00  =5      BYTE      properties3;                  /* masked byte */
11832  00  =5      BYTE      reserved;                     /**/
11833  00  =5      BYTE      basicDeviceClass;             /**/
11834  00  =5      BYTE      genericDeviceClass;           /**/
11835  00  =5      BYTE      specificDeviceClass;          /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 220 

11836  00  =5      BYTE      nonSecureCommandClass1;       
11837  00  =5      BYTE      securityScheme0Mark1;         /* MSB */
11838  00  =5      BYTE      securityScheme0Mark2;         /* LSB */
11839  00  =5      BYTE      securityScheme0CommandClass1; 
11840  00  =5  } ZW_NODE_INFO_CACHED_REPORT_1BYTE_FRAME;
11841  00  =5  
11842  00  =5  /************************************************************/
11843  00  =5  /* Node Info Cached Report 2byte command class structs */   
11844  00  =5  /************************************************************/
11845  00  =5  typedef struct _ZW_NODE_INFO_CACHED_REPORT_2BYTE_FRAME_
11846  00  =5  {
11847  00  =5      BYTE      cmdClass;                     /* The command class */
11848  00  =5      BYTE      cmd;                          /* The command */
11849  00  =5      BYTE      seqNo;                        /**/
11850  00  =5      BYTE      properties1;                  /* masked byte */
11851  00  =5      BYTE      properties2;                  /* masked byte */
11852  00  =5      BYTE      properties3;                  /* masked byte */
11853  00  =5      BYTE      reserved;                     /**/
11854  00  =5      BYTE      basicDeviceClass;             /**/
11855  00  =5      BYTE      genericDeviceClass;           /**/
11856  00  =5      BYTE      specificDeviceClass;          /**/
11857  00  =5      BYTE      nonSecureCommandClass1;       /* MSB */
11858  00  =5      BYTE      nonSecureCommandClass2;       /* LSB */
11859  00  =5      BYTE      securityScheme0Mark1;         /* MSB */
11860  00  =5      BYTE      securityScheme0Mark2;         /* LSB */
11861  00  =5      BYTE      securityScheme0CommandClass1; /* MSB */
11862  00  =5      BYTE      securityScheme0CommandClass2; /* LSB */
11863  00  =5  } ZW_NODE_INFO_CACHED_REPORT_2BYTE_FRAME;
11864  00  =5  
11865  00  =5  /************************************************************/
11866  00  =5  /* Node Info Cached Report 3byte command class structs */   
11867  00  =5  /************************************************************/
11868  00  =5  typedef struct _ZW_NODE_INFO_CACHED_REPORT_3BYTE_FRAME_
11869  00  =5  {
11870  00  =5      BYTE      cmdClass;                     /* The command class */
11871  00  =5      BYTE      cmd;                          /* The command */
11872  00  =5      BYTE      seqNo;                        /**/
11873  00  =5      BYTE      properties1;                  /* masked byte */
11874  00  =5      BYTE      properties2;                  /* masked byte */
11875  00  =5      BYTE      properties3;                  /* masked byte */
11876  00  =5      BYTE      reserved;                     /**/
11877  00  =5      BYTE      basicDeviceClass;             /**/
11878  00  =5      BYTE      genericDeviceClass;           /**/
11879  00  =5      BYTE      specificDeviceClass;          /**/
11880  00  =5      BYTE      nonSecureCommandClass1;       /* MSB */
11881  00  =5      BYTE      nonSecureCommandClass2;       
11882  00  =5      BYTE      nonSecureCommandClass3;       /* LSB */
11883  00  =5      BYTE      securityScheme0Mark1;         /* MSB */
11884  00  =5      BYTE      securityScheme0Mark2;         /* LSB */
11885  00  =5      BYTE      securityScheme0CommandClass1; /* MSB */
11886  00  =5      BYTE      securityScheme0CommandClass2; 
11887  00  =5      BYTE      securityScheme0CommandClass3; /* LSB */
11888  00  =5  } ZW_NODE_INFO_CACHED_REPORT_3BYTE_FRAME;
11889  00  =5  
11890  00  =5  /************************************************************/
11891  00  =5  /* Node Info Cached Report 4byte command class structs */   
11892  00  =5  /************************************************************/
11893  00  =5  typedef struct _ZW_NODE_INFO_CACHED_REPORT_4BYTE_FRAME_
11894  00  =5  {
11895  00  =5      BYTE      cmdClass;                     /* The command class */
11896  00  =5      BYTE      cmd;                          /* The command */
11897  00  =5      BYTE      seqNo;                        /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 221 

11898  00  =5      BYTE      properties1;                  /* masked byte */
11899  00  =5      BYTE      properties2;                  /* masked byte */
11900  00  =5      BYTE      properties3;                  /* masked byte */
11901  00  =5      BYTE      reserved;                     /**/
11902  00  =5      BYTE      basicDeviceClass;             /**/
11903  00  =5      BYTE      genericDeviceClass;           /**/
11904  00  =5      BYTE      specificDeviceClass;          /**/
11905  00  =5      BYTE      nonSecureCommandClass1;       /* MSB */
11906  00  =5      BYTE      nonSecureCommandClass2;       
11907  00  =5      BYTE      nonSecureCommandClass3;       
11908  00  =5      BYTE      nonSecureCommandClass4;       /* LSB */
11909  00  =5      BYTE      securityScheme0Mark1;         /* MSB */
11910  00  =5      BYTE      securityScheme0Mark2;         /* LSB */
11911  00  =5      BYTE      securityScheme0CommandClass1; /* MSB */
11912  00  =5      BYTE      securityScheme0CommandClass2; 
11913  00  =5      BYTE      securityScheme0CommandClass3; 
11914  00  =5      BYTE      securityScheme0CommandClass4; /* LSB */
11915  00  =5  } ZW_NODE_INFO_CACHED_REPORT_4BYTE_FRAME;
11916  00  =5  
11917  00  =5  /************************************************************/
11918  00  =5  /* Node List Get command class structs */                   
11919  00  =5  /************************************************************/
11920  00  =5  typedef struct _ZW_NODE_LIST_GET_FRAME_
11921  00  =5  {
11922  00  =5      BYTE      cmdClass;                     /* The command class */
11923  00  =5      BYTE      cmd;                          /* The command */
11924  00  =5      BYTE      seqNo;                        /**/
11925  00  =5  } ZW_NODE_LIST_GET_FRAME;
11926  00  =5  
11927  00  =5  /************************************************************/
11928  00  =5  /* Node List Report 1byte command class structs */          
11929  00  =5  /************************************************************/
11930  00  =5  typedef struct _ZW_NODE_LIST_REPORT_1BYTE_FRAME_
11931  00  =5  {
11932  00  =5      BYTE      cmdClass;                     /* The command class */
11933  00  =5      BYTE      cmd;                          /* The command */
11934  00  =5      BYTE      seqNo;                        /**/
11935  00  =5      BYTE      status;                       /**/
11936  00  =5      BYTE      nodeListControllerId;         /**/
11937  00  =5      BYTE      nodeListData1;                
11938  00  =5  } ZW_NODE_LIST_REPORT_1BYTE_FRAME;
11939  00  =5  
11940  00  =5  /************************************************************/
11941  00  =5  /* Node List Report 2byte command class structs */          
11942  00  =5  /************************************************************/
11943  00  =5  typedef struct _ZW_NODE_LIST_REPORT_2BYTE_FRAME_
11944  00  =5  {
11945  00  =5      BYTE      cmdClass;                     /* The command class */
11946  00  =5      BYTE      cmd;                          /* The command */
11947  00  =5      BYTE      seqNo;                        /**/
11948  00  =5      BYTE      status;                       /**/
11949  00  =5      BYTE      nodeListControllerId;         /**/
11950  00  =5      BYTE      nodeListData1;                /* MSB */
11951  00  =5      BYTE      nodeListData2;                /* LSB */
11952  00  =5  } ZW_NODE_LIST_REPORT_2BYTE_FRAME;
11953  00  =5  
11954  00  =5  /************************************************************/
11955  00  =5  /* Node List Report 3byte command class structs */          
11956  00  =5  /************************************************************/
11957  00  =5  typedef struct _ZW_NODE_LIST_REPORT_3BYTE_FRAME_
11958  00  =5  {
11959  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 222 

11960  00  =5      BYTE      cmd;                          /* The command */
11961  00  =5      BYTE      seqNo;                        /**/
11962  00  =5      BYTE      status;                       /**/
11963  00  =5      BYTE      nodeListControllerId;         /**/
11964  00  =5      BYTE      nodeListData1;                /* MSB */
11965  00  =5      BYTE      nodeListData2;                
11966  00  =5      BYTE      nodeListData3;                /* LSB */
11967  00  =5  } ZW_NODE_LIST_REPORT_3BYTE_FRAME;
11968  00  =5  
11969  00  =5  /************************************************************/
11970  00  =5  /* Node List Report 4byte command class structs */          
11971  00  =5  /************************************************************/
11972  00  =5  typedef struct _ZW_NODE_LIST_REPORT_4BYTE_FRAME_
11973  00  =5  {
11974  00  =5      BYTE      cmdClass;                     /* The command class */
11975  00  =5      BYTE      cmd;                          /* The command */
11976  00  =5      BYTE      seqNo;                        /**/
11977  00  =5      BYTE      status;                       /**/
11978  00  =5      BYTE      nodeListControllerId;         /**/
11979  00  =5      BYTE      nodeListData1;                /* MSB */
11980  00  =5      BYTE      nodeListData2;                
11981  00  =5      BYTE      nodeListData3;                
11982  00  =5      BYTE      nodeListData4;                /* LSB */
11983  00  =5  } ZW_NODE_LIST_REPORT_4BYTE_FRAME;
11984  00  =5  
11985  00  =5  /************************************************************/
11986  00  =5  /* Learn Mode Set command class structs */                  
11987  00  =5  /************************************************************/
11988  00  =5  typedef struct _ZW_LEARN_MODE_SET_FRAME_
11989  00  =5  {
11990  00  =5      BYTE      cmdClass;                     /* The command class */
11991  00  =5      BYTE      cmd;                          /* The command */
11992  00  =5      BYTE      seqNo;                        /**/
11993  00  =5      BYTE      reserved;                     /**/
11994  00  =5      BYTE      mode;                         /**/
11995  00  =5  } ZW_LEARN_MODE_SET_FRAME;
11996  00  =5  
11997  00  =5  /************************************************************/
11998  00  =5  /* Learn Mode Set Status command class structs */           
11999  00  =5  /************************************************************/
12000  00  =5  typedef struct _ZW_LEARN_MODE_SET_STATUS_FRAME_
12001  00  =5  {
12002  00  =5      BYTE      cmdClass;                     /* The command class */
12003  00  =5      BYTE      cmd;                          /* The command */
12004  00  =5      BYTE      seqNo;                        /**/
12005  00  =5      BYTE      status;                       /**/
12006  00  =5      BYTE      reserved;                     /**/
12007  00  =5      BYTE      newNodeId;                    /**/
12008  00  =5  } ZW_LEARN_MODE_SET_STATUS_FRAME;
12009  00  =5  
12010  00  =5  /************************************************************/
12011  00  =5  /* Node Information Send command class structs */           
12012  00  =5  /************************************************************/
12013  00  =5  typedef struct _ZW_NODE_INFORMATION_SEND_FRAME_
12014  00  =5  {
12015  00  =5      BYTE      cmdClass;                     /* The command class */
12016  00  =5      BYTE      cmd;                          /* The command */
12017  00  =5      BYTE      seqNo;                        /**/
12018  00  =5      BYTE      reserved;                     /**/
12019  00  =5      BYTE      destinationNodeId;            /**/
12020  00  =5      BYTE      txOptions;                    /**/
12021  00  =5  } ZW_NODE_INFORMATION_SEND_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 223 

12022  00  =5  
12023  00  =5  /************************************************************/
12024  00  =5  /* Network Update Request command class structs */          
12025  00  =5  /************************************************************/
12026  00  =5  typedef struct _ZW_NETWORK_UPDATE_REQUEST_FRAME_
12027  00  =5  {
12028  00  =5      BYTE      cmdClass;                     /* The command class */
12029  00  =5      BYTE      cmd;                          /* The command */
12030  00  =5      BYTE      seqNo;                        /**/
12031  00  =5  } ZW_NETWORK_UPDATE_REQUEST_FRAME;
12032  00  =5  
12033  00  =5  /************************************************************/
12034  00  =5  /* Network Update Request Status command class structs */   
12035  00  =5  /************************************************************/
12036  00  =5  typedef struct _ZW_NETWORK_UPDATE_REQUEST_STATUS_FRAME_
12037  00  =5  {
12038  00  =5      BYTE      cmdClass;                     /* The command class */
12039  00  =5      BYTE      cmd;                          /* The command */
12040  00  =5      BYTE      seqNo;                        /**/
12041  00  =5      BYTE      status;                       /**/
12042  00  =5  } ZW_NETWORK_UPDATE_REQUEST_STATUS_FRAME;
12043  00  =5  
12044  00  =5  /************************************************************/
12045  00  =5  /* Default Set command class structs */                     
12046  00  =5  /************************************************************/
12047  00  =5  typedef struct _ZW_DEFAULT_SET_FRAME_
12048  00  =5  {
12049  00  =5      BYTE      cmdClass;                     /* The command class */
12050  00  =5      BYTE      cmd;                          /* The command */
12051  00  =5      BYTE      seqNo;                        /**/
12052  00  =5  } ZW_DEFAULT_SET_FRAME;
12053  00  =5  
12054  00  =5  /************************************************************/
12055  00  =5  /* Default Set Complete command class structs */            
12056  00  =5  /************************************************************/
12057  00  =5  typedef struct _ZW_DEFAULT_SET_COMPLETE_FRAME_
12058  00  =5  {
12059  00  =5      BYTE      cmdClass;                     /* The command class */
12060  00  =5      BYTE      cmd;                          /* The command */
12061  00  =5      BYTE      seqNo;                        /**/
12062  00  =5      BYTE      status;                       /**/
12063  00  =5  } ZW_DEFAULT_SET_COMPLETE_FRAME;
12064  00  =5  
12065  00  =5  /************************************************************/
12066  00  =5  /* Failed Node Remove command class structs */              
12067  00  =5  /************************************************************/
12068  00  =5  typedef struct _ZW_FAILED_NODE_REMOVE_FRAME_
12069  00  =5  {
12070  00  =5      BYTE      cmdClass;                     /* The command class */
12071  00  =5      BYTE      cmd;                          /* The command */
12072  00  =5      BYTE      seqNo;                        /**/
12073  00  =5      BYTE      nodeId;                       /**/
12074  00  =5  } ZW_FAILED_NODE_REMOVE_FRAME;
12075  00  =5  
12076  00  =5  /************************************************************/
12077  00  =5  /* Failed Node Remove Status command class structs */       
12078  00  =5  /************************************************************/
12079  00  =5  typedef struct _ZW_FAILED_NODE_REMOVE_STATUS_FRAME_
12080  00  =5  {
12081  00  =5      BYTE      cmdClass;                     /* The command class */
12082  00  =5      BYTE      cmd;                          /* The command */
12083  00  =5      BYTE      seqNo;                        /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 224 

12084  00  =5      BYTE      status;                       /**/
12085  00  =5      BYTE      nodeId;                       /**/
12086  00  =5  } ZW_FAILED_NODE_REMOVE_STATUS_FRAME;
12087  00  =5  
12088  00  =5  /************************************************************/
12089  00  =5  /* Node Add command class structs */                        
12090  00  =5  /************************************************************/
12091  00  =5  typedef struct _ZW_NODE_ADD_FRAME_
12092  00  =5  {
12093  00  =5      BYTE      cmdClass;                     /* The command class */
12094  00  =5      BYTE      cmd;                          /* The command */
12095  00  =5      BYTE      seqNo;                        /**/
12096  00  =5      BYTE      reserved;                     /**/
12097  00  =5      BYTE      mode;                         /**/
12098  00  =5      BYTE      txOptions;                    /**/
12099  00  =5  } ZW_NODE_ADD_FRAME;
12100  00  =5  
12101  00  =5  /************************************************************/
12102  00  =5  /* Node Add Status 1byte command class structs */           
12103  00  =5  /************************************************************/
12104  00  =5  typedef struct _ZW_NODE_ADD_STATUS_1BYTE_FRAME_
12105  00  =5  {
12106  00  =5      BYTE      cmdClass;                     /* The command class */
12107  00  =5      BYTE      cmd;                          /* The command */
12108  00  =5      BYTE      seqNo;                        /**/
12109  00  =5      BYTE      status;                       /**/
12110  00  =5      BYTE      reserved;                     /**/
12111  00  =5      BYTE      newNodeId;                    /**/
12112  00  =5      BYTE      nodeInfoLength;               /**/
12113  00  =5      BYTE      properties1;                  /* masked byte */
12114  00  =5      BYTE      properties2;                  /* masked byte */
12115  00  =5      BYTE      basicDeviceClass;             /**/
12116  00  =5      BYTE      genericDeviceClass;           /**/
12117  00  =5      BYTE      specificDeviceClass;          /**/
12118  00  =5      BYTE      commandClass1;                
12119  00  =5  } ZW_NODE_ADD_STATUS_1BYTE_FRAME;
12120  00  =5  
12121  00  =5  /************************************************************/
12122  00  =5  /* Node Add Status 2byte command class structs */           
12123  00  =5  /************************************************************/
12124  00  =5  typedef struct _ZW_NODE_ADD_STATUS_2BYTE_FRAME_
12125  00  =5  {
12126  00  =5      BYTE      cmdClass;                     /* The command class */
12127  00  =5      BYTE      cmd;                          /* The command */
12128  00  =5      BYTE      seqNo;                        /**/
12129  00  =5      BYTE      status;                       /**/
12130  00  =5      BYTE      reserved;                     /**/
12131  00  =5      BYTE      newNodeId;                    /**/
12132  00  =5      BYTE      nodeInfoLength;               /**/
12133  00  =5      BYTE      properties1;                  /* masked byte */
12134  00  =5      BYTE      properties2;                  /* masked byte */
12135  00  =5      BYTE      basicDeviceClass;             /**/
12136  00  =5      BYTE      genericDeviceClass;           /**/
12137  00  =5      BYTE      specificDeviceClass;          /**/
12138  00  =5      BYTE      commandClass1;                /* MSB */
12139  00  =5      BYTE      commandClass2;                /* LSB */
12140  00  =5  } ZW_NODE_ADD_STATUS_2BYTE_FRAME;
12141  00  =5  
12142  00  =5  /************************************************************/
12143  00  =5  /* Node Add Status 3byte command class structs */           
12144  00  =5  /************************************************************/
12145  00  =5  typedef struct _ZW_NODE_ADD_STATUS_3BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 225 

12146  00  =5  {
12147  00  =5      BYTE      cmdClass;                     /* The command class */
12148  00  =5      BYTE      cmd;                          /* The command */
12149  00  =5      BYTE      seqNo;                        /**/
12150  00  =5      BYTE      status;                       /**/
12151  00  =5      BYTE      reserved;                     /**/
12152  00  =5      BYTE      newNodeId;                    /**/
12153  00  =5      BYTE      nodeInfoLength;               /**/
12154  00  =5      BYTE      properties1;                  /* masked byte */
12155  00  =5      BYTE      properties2;                  /* masked byte */
12156  00  =5      BYTE      basicDeviceClass;             /**/
12157  00  =5      BYTE      genericDeviceClass;           /**/
12158  00  =5      BYTE      specificDeviceClass;          /**/
12159  00  =5      BYTE      commandClass1;                /* MSB */
12160  00  =5      BYTE      commandClass2;                
12161  00  =5      BYTE      commandClass3;                /* LSB */
12162  00  =5  } ZW_NODE_ADD_STATUS_3BYTE_FRAME;
12163  00  =5  
12164  00  =5  /************************************************************/
12165  00  =5  /* Node Add Status 4byte command class structs */           
12166  00  =5  /************************************************************/
12167  00  =5  typedef struct _ZW_NODE_ADD_STATUS_4BYTE_FRAME_
12168  00  =5  {
12169  00  =5      BYTE      cmdClass;                     /* The command class */
12170  00  =5      BYTE      cmd;                          /* The command */
12171  00  =5      BYTE      seqNo;                        /**/
12172  00  =5      BYTE      status;                       /**/
12173  00  =5      BYTE      reserved;                     /**/
12174  00  =5      BYTE      newNodeId;                    /**/
12175  00  =5      BYTE      nodeInfoLength;               /**/
12176  00  =5      BYTE      properties1;                  /* masked byte */
12177  00  =5      BYTE      properties2;                  /* masked byte */
12178  00  =5      BYTE      basicDeviceClass;             /**/
12179  00  =5      BYTE      genericDeviceClass;           /**/
12180  00  =5      BYTE      specificDeviceClass;          /**/
12181  00  =5      BYTE      commandClass1;                /* MSB */
12182  00  =5      BYTE      commandClass2;                
12183  00  =5      BYTE      commandClass3;                
12184  00  =5      BYTE      commandClass4;                /* LSB */
12185  00  =5  } ZW_NODE_ADD_STATUS_4BYTE_FRAME;
12186  00  =5  
12187  00  =5  /************************************************************/
12188  00  =5  /* Node Remove command class structs */                     
12189  00  =5  /************************************************************/
12190  00  =5  typedef struct _ZW_NODE_REMOVE_FRAME_
12191  00  =5  {
12192  00  =5      BYTE      cmdClass;                     /* The command class */
12193  00  =5      BYTE      cmd;                          /* The command */
12194  00  =5      BYTE      seqNo;                        /**/
12195  00  =5      BYTE      reserved;                     /**/
12196  00  =5      BYTE      mode;                         /**/
12197  00  =5  } ZW_NODE_REMOVE_FRAME;
12198  00  =5  
12199  00  =5  /************************************************************/
12200  00  =5  /* Node Remove Status command class structs */              
12201  00  =5  /************************************************************/
12202  00  =5  typedef struct _ZW_NODE_REMOVE_STATUS_FRAME_
12203  00  =5  {
12204  00  =5      BYTE      cmdClass;                     /* The command class */
12205  00  =5      BYTE      cmd;                          /* The command */
12206  00  =5      BYTE      seqNo;                        /**/
12207  00  =5      BYTE      status;                       /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 226 

12208  00  =5      BYTE      nodeid;                       /**/
12209  00  =5  } ZW_NODE_REMOVE_STATUS_FRAME;
12210  00  =5  
12211  00  =5  /************************************************************/
12212  00  =5  /* Failed Node Replace command class structs */             
12213  00  =5  /************************************************************/
12214  00  =5  typedef struct _ZW_FAILED_NODE_REPLACE_FRAME_
12215  00  =5  {
12216  00  =5      BYTE      cmdClass;                     /* The command class */
12217  00  =5      BYTE      cmd;                          /* The command */
12218  00  =5      BYTE      seqNo;                        /**/
12219  00  =5      BYTE      nodeId;                       /**/
12220  00  =5      BYTE      txOptions;                    /**/
12221  00  =5      BYTE      mode;                         /**/
12222  00  =5  } ZW_FAILED_NODE_REPLACE_FRAME;
12223  00  =5  
12224  00  =5  /************************************************************/
12225  00  =5  /* Failed Node Replace Status command class structs */      
12226  00  =5  /************************************************************/
12227  00  =5  typedef struct _ZW_FAILED_NODE_REPLACE_STATUS_FRAME_
12228  00  =5  {
12229  00  =5      BYTE      cmdClass;                     /* The command class */
12230  00  =5      BYTE      cmd;                          /* The command */
12231  00  =5      BYTE      seqNo;                        /**/
12232  00  =5      BYTE      status;                       /**/
12233  00  =5      BYTE      nodeId;                       /**/
12234  00  =5  } ZW_FAILED_NODE_REPLACE_STATUS_FRAME;
12235  00  =5  
12236  00  =5  /************************************************************/
12237  00  =5  /* Node Neighbor Update Request command class structs */    
12238  00  =5  /************************************************************/
12239  00  =5  typedef struct _ZW_NODE_NEIGHBOR_UPDATE_REQUEST_FRAME_
12240  00  =5  {
12241  00  =5      BYTE      cmdClass;                     /* The command class */
12242  00  =5      BYTE      cmd;                          /* The command */
12243  00  =5      BYTE      seqNo;                        /**/
12244  00  =5      BYTE      nodeId;                       /**/
12245  00  =5  } ZW_NODE_NEIGHBOR_UPDATE_REQUEST_FRAME;
12246  00  =5  
12247  00  =5  /************************************************************/
12248  00  =5  /* Node Neighbor Update Status command class structs */     
12249  00  =5  /************************************************************/
12250  00  =5  typedef struct _ZW_NODE_NEIGHBOR_UPDATE_STATUS_FRAME_
12251  00  =5  {
12252  00  =5      BYTE      cmdClass;                     /* The command class */
12253  00  =5      BYTE      cmd;                          /* The command */
12254  00  =5      BYTE      seqNo;                        /**/
12255  00  =5      BYTE      status;                       /**/
12256  00  =5  } ZW_NODE_NEIGHBOR_UPDATE_STATUS_FRAME;
12257  00  =5  
12258  00  =5  /************************************************************/
12259  00  =5  /* Return Route Assign command class structs */             
12260  00  =5  /************************************************************/
12261  00  =5  typedef struct _ZW_RETURN_ROUTE_ASSIGN_FRAME_
12262  00  =5  {
12263  00  =5      BYTE      cmdClass;                     /* The command class */
12264  00  =5      BYTE      cmd;                          /* The command */
12265  00  =5      BYTE      seqNo;                        /**/
12266  00  =5      BYTE      sourceNodeId;                 /**/
12267  00  =5      BYTE      destinationNodeId;            /**/
12268  00  =5  } ZW_RETURN_ROUTE_ASSIGN_FRAME;
12269  00  =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 227 

12270  00  =5  /************************************************************/
12271  00  =5  /* Return Route Assign Complete command class structs */    
12272  00  =5  /************************************************************/
12273  00  =5  typedef struct _ZW_RETURN_ROUTE_ASSIGN_COMPLETE_FRAME_
12274  00  =5  {
12275  00  =5      BYTE      cmdClass;                     /* The command class */
12276  00  =5      BYTE      cmd;                          /* The command */
12277  00  =5      BYTE      seqNo;                        /**/
12278  00  =5      BYTE      status;                       /**/
12279  00  =5  } ZW_RETURN_ROUTE_ASSIGN_COMPLETE_FRAME;
12280  00  =5  
12281  00  =5  /************************************************************/
12282  00  =5  /* Return Route Delete command class structs */             
12283  00  =5  /************************************************************/
12284  00  =5  typedef struct _ZW_RETURN_ROUTE_DELETE_FRAME_
12285  00  =5  {
12286  00  =5      BYTE      cmdClass;                     /* The command class */
12287  00  =5      BYTE      cmd;                          /* The command */
12288  00  =5      BYTE      seqNo;                        /**/
12289  00  =5      BYTE      nodeId;                       /**/
12290  00  =5  } ZW_RETURN_ROUTE_DELETE_FRAME;
12291  00  =5  
12292  00  =5  /************************************************************/
12293  00  =5  /* Return Route Delete Complete command class structs */    
12294  00  =5  /************************************************************/
12295  00  =5  typedef struct _ZW_RETURN_ROUTE_DELETE_COMPLETE_FRAME_
12296  00  =5  {
12297  00  =5      BYTE      cmdClass;                     /* The command class */
12298  00  =5      BYTE      cmd;                          /* The command */
12299  00  =5      BYTE      seqNo;                        /**/
12300  00  =5      BYTE      status;                       /**/
12301  00  =5  } ZW_RETURN_ROUTE_DELETE_COMPLETE_FRAME;
12302  00  =5  
12303  00  =5  /************************************************************/
12304  00  =5  /* Node Naming Node Location Report command class structs */
12305  00  =5  /************************************************************/
12306  00  =5  typedef struct _ZW_NODE_NAMING_NODE_LOCATION_REPORT_FRAME_
12307  00  =5  {
12308  00  =5      BYTE      cmdClass;                     /* The command class */
12309  00  =5      BYTE      cmd;                          /* The command */
12310  00  =5      BYTE      level;                        /* masked byte */
12311  00  =5      BYTE      nodeLocationChar1;            /* MSB */
12312  00  =5      BYTE      nodeLocationChar2;            
12313  00  =5      BYTE      nodeLocationChar3;            
12314  00  =5      BYTE      nodeLocationChar4;            
12315  00  =5      BYTE      nodeLocationChar5;            
12316  00  =5      BYTE      nodeLocationChar6;            
12317  00  =5      BYTE      nodeLocationChar7;            
12318  00  =5      BYTE      nodeLocationChar8;            
12319  00  =5      BYTE      nodeLocationChar9;            
12320  00  =5      BYTE      nodeLocationChar10;           
12321  00  =5      BYTE      nodeLocationChar11;           
12322  00  =5      BYTE      nodeLocationChar12;           
12323  00  =5      BYTE      nodeLocationChar13;           
12324  00  =5      BYTE      nodeLocationChar14;           
12325  00  =5      BYTE      nodeLocationChar15;           
12326  00  =5      BYTE      nodeLocationChar16;           /* LSB */
12327  00  =5  } ZW_NODE_NAMING_NODE_LOCATION_REPORT_FRAME;
12328  00  =5  
12329  00  =5  /************************************************************/
12330  00  =5  /* Node Naming Node Location Set command class structs */   
12331  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 228 

12332  00  =5  typedef struct _ZW_NODE_NAMING_NODE_LOCATION_SET_FRAME_
12333  00  =5  {
12334  00  =5      BYTE      cmdClass;                     /* The command class */
12335  00  =5      BYTE      cmd;                          /* The command */
12336  00  =5      BYTE      level;                        /* masked byte */
12337  00  =5      BYTE      nodeLocationChar1;            /* MSB */
12338  00  =5      BYTE      nodeLocationChar2;            
12339  00  =5      BYTE      nodeLocationChar3;            
12340  00  =5      BYTE      nodeLocationChar4;            
12341  00  =5      BYTE      nodeLocationChar5;            
12342  00  =5      BYTE      nodeLocationChar6;            
12343  00  =5      BYTE      nodeLocationChar7;            
12344  00  =5      BYTE      nodeLocationChar8;            
12345  00  =5      BYTE      nodeLocationChar9;            
12346  00  =5      BYTE      nodeLocationChar10;           
12347  00  =5      BYTE      nodeLocationChar11;           
12348  00  =5      BYTE      nodeLocationChar12;           
12349  00  =5      BYTE      nodeLocationChar13;           
12350  00  =5      BYTE      nodeLocationChar14;           
12351  00  =5      BYTE      nodeLocationChar15;           
12352  00  =5      BYTE      nodeLocationChar16;           /* LSB */
12353  00  =5  } ZW_NODE_NAMING_NODE_LOCATION_SET_FRAME;
12354  00  =5  
12355  00  =5  /************************************************************/
12356  00  =5  /* Node Naming Node Location Get command class structs */   
12357  00  =5  /************************************************************/
12358  00  =5  typedef struct _ZW_NODE_NAMING_NODE_LOCATION_GET_FRAME_
12359  00  =5  {
12360  00  =5      BYTE      cmdClass;                     /* The command class */
12361  00  =5      BYTE      cmd;                          /* The command */
12362  00  =5  } ZW_NODE_NAMING_NODE_LOCATION_GET_FRAME;
12363  00  =5  
12364  00  =5  /************************************************************/
12365  00  =5  /* Node Naming Node Name Get command class structs */       
12366  00  =5  /************************************************************/
12367  00  =5  typedef struct _ZW_NODE_NAMING_NODE_NAME_GET_FRAME_
12368  00  =5  {
12369  00  =5      BYTE      cmdClass;                     /* The command class */
12370  00  =5      BYTE      cmd;                          /* The command */
12371  00  =5  } ZW_NODE_NAMING_NODE_NAME_GET_FRAME;
12372  00  =5  
12373  00  =5  /************************************************************/
12374  00  =5  /* Node Naming Node Name Report command class structs */    
12375  00  =5  /************************************************************/
12376  00  =5  typedef struct _ZW_NODE_NAMING_NODE_NAME_REPORT_FRAME_
12377  00  =5  {
12378  00  =5      BYTE      cmdClass;                     /* The command class */
12379  00  =5      BYTE      cmd;                          /* The command */
12380  00  =5      BYTE      level;                        /* masked byte */
12381  00  =5      BYTE      nodeNameChar1;                /* MSB */
12382  00  =5      BYTE      nodeNameChar2;                
12383  00  =5      BYTE      nodeNameChar3;                
12384  00  =5      BYTE      nodeNameChar4;                
12385  00  =5      BYTE      nodeNameChar5;                
12386  00  =5      BYTE      nodeNameChar6;                
12387  00  =5      BYTE      nodeNameChar7;                
12388  00  =5      BYTE      nodeNameChar8;                
12389  00  =5      BYTE      nodeNameChar9;                
12390  00  =5      BYTE      nodeNameChar10;               
12391  00  =5      BYTE      nodeNameChar11;               
12392  00  =5      BYTE      nodeNameChar12;               
12393  00  =5      BYTE      nodeNameChar13;               
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 229 

12394  00  =5      BYTE      nodeNameChar14;               
12395  00  =5      BYTE      nodeNameChar15;               
12396  00  =5      BYTE      nodeNameChar16;               /* LSB */
12397  00  =5  } ZW_NODE_NAMING_NODE_NAME_REPORT_FRAME;
12398  00  =5  
12399  00  =5  /************************************************************/
12400  00  =5  /* Node Naming Node Name Set command class structs */       
12401  00  =5  /************************************************************/
12402  00  =5  typedef struct _ZW_NODE_NAMING_NODE_NAME_SET_FRAME_
12403  00  =5  {
12404  00  =5      BYTE      cmdClass;                     /* The command class */
12405  00  =5      BYTE      cmd;                          /* The command */
12406  00  =5      BYTE      level;                        /* masked byte */
12407  00  =5      BYTE      nodeNameChar1;                /* MSB */
12408  00  =5      BYTE      nodeNameChar2;                
12409  00  =5      BYTE      nodeNameChar3;                
12410  00  =5      BYTE      nodeNameChar4;                
12411  00  =5      BYTE      nodeNameChar5;                
12412  00  =5      BYTE      nodeNameChar6;                
12413  00  =5      BYTE      nodeNameChar7;                
12414  00  =5      BYTE      nodeNameChar8;                
12415  00  =5      BYTE      nodeNameChar9;                
12416  00  =5      BYTE      nodeNameChar10;               
12417  00  =5      BYTE      nodeNameChar11;               
12418  00  =5      BYTE      nodeNameChar12;               
12419  00  =5      BYTE      nodeNameChar13;               
12420  00  =5      BYTE      nodeNameChar14;               
12421  00  =5      BYTE      nodeNameChar15;               
12422  00  =5      BYTE      nodeNameChar16;               /* LSB */
12423  00  =5  } ZW_NODE_NAMING_NODE_NAME_SET_FRAME;
12424  00  =5  
12425  00  =5  /************************************************************/
12426  00  =5  /* Powerlevel Get command class structs */                  
12427  00  =5  /************************************************************/
12428  00  =5  typedef struct _ZW_POWERLEVEL_GET_FRAME_
12429  00  =5  {
12430  00  =5      BYTE      cmdClass;                     /* The command class */
12431  00  =5      BYTE      cmd;                          /* The command */
12432  00  =5  } ZW_POWERLEVEL_GET_FRAME;
12433  00  =5  
12434  00  =5  /************************************************************/
12435  00  =5  /* Powerlevel Report command class structs */               
12436  00  =5  /************************************************************/
12437  00  =5  typedef struct _ZW_POWERLEVEL_REPORT_FRAME_
12438  00  =5  {
12439  00  =5      BYTE      cmdClass;                     /* The command class */
12440  00  =5      BYTE      cmd;                          /* The command */
12441  00  =5      BYTE      powerLevel;                   /**/
12442  00  =5      BYTE      timeout;                      /**/
12443  00  =5  } ZW_POWERLEVEL_REPORT_FRAME;
12444  00  =5  
12445  00  =5  /************************************************************/
12446  00  =5  /* Powerlevel Set command class structs */                  
12447  00  =5  /************************************************************/
12448  00  =5  typedef struct _ZW_POWERLEVEL_SET_FRAME_
12449  00  =5  {
12450  00  =5      BYTE      cmdClass;                     /* The command class */
12451  00  =5      BYTE      cmd;                          /* The command */
12452  00  =5      BYTE      powerLevel;                   /**/
12453  00  =5      BYTE      timeout;                      /**/
12454  00  =5  } ZW_POWERLEVEL_SET_FRAME;
12455  00  =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 230 

12456  00  =5  /************************************************************/
12457  00  =5  /* Powerlevel Test Node Get command class structs */        
12458  00  =5  /************************************************************/
12459  00  =5  typedef struct _ZW_POWERLEVEL_TEST_NODE_GET_FRAME_
12460  00  =5  {
12461  00  =5      BYTE      cmdClass;                     /* The command class */
12462  00  =5      BYTE      cmd;                          /* The command */
12463  00  =5  } ZW_POWERLEVEL_TEST_NODE_GET_FRAME;
12464  00  =5  
12465  00  =5  /************************************************************/
12466  00  =5  /* Powerlevel Test Node Report command class structs */     
12467  00  =5  /************************************************************/
12468  00  =5  typedef struct _ZW_POWERLEVEL_TEST_NODE_REPORT_FRAME_
12469  00  =5  {
12470  00  =5      BYTE      cmdClass;                     /* The command class */
12471  00  =5      BYTE      cmd;                          /* The command */
12472  00  =5      BYTE      testNodeid;                   /**/
12473  00  =5      BYTE      statusOfOperation;            /**/
12474  00  =5      BYTE      testFrameCount1;              /* MSB */
12475  00  =5      BYTE      testFrameCount2;              /* LSB */
12476  00  =5  } ZW_POWERLEVEL_TEST_NODE_REPORT_FRAME;
12477  00  =5  
12478  00  =5  /************************************************************/
12479  00  =5  /* Powerlevel Test Node Set command class structs */        
12480  00  =5  /************************************************************/
12481  00  =5  typedef struct _ZW_POWERLEVEL_TEST_NODE_SET_FRAME_
12482  00  =5  {
12483  00  =5      BYTE      cmdClass;                     /* The command class */
12484  00  =5      BYTE      cmd;                          /* The command */
12485  00  =5      BYTE      testNodeid;                   /**/
12486  00  =5      BYTE      powerLevel;                   /**/
12487  00  =5      BYTE      testFrameCount1;              /* MSB */
12488  00  =5      BYTE      testFrameCount2;              /* LSB */
12489  00  =5  } ZW_POWERLEVEL_TEST_NODE_SET_FRAME;
12490  00  =5  
12491  00  =5  /************************************************************/
12492  00  =5  /* Cmd Encapsulation 1byte command class structs */         
12493  00  =5  /************************************************************/
12494  00  =5  typedef struct _ZW_CMD_ENCAPSULATION_1BYTE_FRAME_
12495  00  =5  {
12496  00  =5      BYTE      cmdClass;                     /* The command class */
12497  00  =5      BYTE      cmd;                          /* The command */
12498  00  =5      BYTE      data1;                        
12499  00  =5  } ZW_CMD_ENCAPSULATION_1BYTE_FRAME;
12500  00  =5  
12501  00  =5  /************************************************************/
12502  00  =5  /* Cmd Encapsulation 2byte command class structs */         
12503  00  =5  /************************************************************/
12504  00  =5  typedef struct _ZW_CMD_ENCAPSULATION_2BYTE_FRAME_
12505  00  =5  {
12506  00  =5      BYTE      cmdClass;                     /* The command class */
12507  00  =5      BYTE      cmd;                          /* The command */
12508  00  =5      BYTE      data1;                        /* MSB */
12509  00  =5      BYTE      data2;                        /* LSB */
12510  00  =5  } ZW_CMD_ENCAPSULATION_2BYTE_FRAME;
12511  00  =5  
12512  00  =5  /************************************************************/
12513  00  =5  /* Cmd Encapsulation 3byte command class structs */         
12514  00  =5  /************************************************************/
12515  00  =5  typedef struct _ZW_CMD_ENCAPSULATION_3BYTE_FRAME_
12516  00  =5  {
12517  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 231 

12518  00  =5      BYTE      cmd;                          /* The command */
12519  00  =5      BYTE      data1;                        /* MSB */
12520  00  =5      BYTE      data2;                        
12521  00  =5      BYTE      data3;                        /* LSB */
12522  00  =5  } ZW_CMD_ENCAPSULATION_3BYTE_FRAME;
12523  00  =5  
12524  00  =5  /************************************************************/
12525  00  =5  /* Cmd Encapsulation 4byte command class structs */         
12526  00  =5  /************************************************************/
12527  00  =5  typedef struct _ZW_CMD_ENCAPSULATION_4BYTE_FRAME_
12528  00  =5  {
12529  00  =5      BYTE      cmdClass;                     /* The command class */
12530  00  =5      BYTE      cmd;                          /* The command */
12531  00  =5      BYTE      data1;                        /* MSB */
12532  00  =5      BYTE      data2;                        
12533  00  =5      BYTE      data3;                        
12534  00  =5      BYTE      data4;                        /* LSB */
12535  00  =5  } ZW_CMD_ENCAPSULATION_4BYTE_FRAME;
12536  00  =5  
12537  00  =5  /************************************************************/
12538  00  =5  /* Prepayment Balance Get command class structs */          
12539  00  =5  /************************************************************/
12540  00  =5  typedef struct _ZW_PREPAYMENT_BALANCE_GET_FRAME_
12541  00  =5  {
12542  00  =5      BYTE      cmdClass;                     /* The command class */
12543  00  =5      BYTE      cmd;                          /* The command */
12544  00  =5      BYTE      properties1;                  /* masked byte */
12545  00  =5  } ZW_PREPAYMENT_BALANCE_GET_FRAME;
12546  00  =5  
12547  00  =5  /************************************************************/
12548  00  =5  /* Prepayment Balance Report command class structs */       
12549  00  =5  /************************************************************/
12550  00  =5  typedef struct _ZW_PREPAYMENT_BALANCE_REPORT_FRAME_
12551  00  =5  {
12552  00  =5      BYTE      cmdClass;                     /* The command class */
12553  00  =5      BYTE      cmd;                          /* The command */
12554  00  =5      BYTE      properties1;                  /* masked byte */
12555  00  =5      BYTE      properties2;                  /* masked byte */
12556  00  =5      BYTE      balanceValue1;                /* MSB */
12557  00  =5      BYTE      balanceValue2;                
12558  00  =5      BYTE      balanceValue3;                
12559  00  =5      BYTE      balanceValue4;                /* LSB */
12560  00  =5      BYTE      properties3;                  /* masked byte */
12561  00  =5      BYTE      debt1;                        /* MSB */
12562  00  =5      BYTE      debt2;                        
12563  00  =5      BYTE      debt3;                        
12564  00  =5      BYTE      debt4;                        /* LSB */
12565  00  =5      BYTE      properties4;                  /* masked byte */
12566  00  =5      BYTE      emerCredit1;                  /* MSB */
12567  00  =5      BYTE      emerCredit2;                  
12568  00  =5      BYTE      emerCredit3;                  
12569  00  =5      BYTE      emerCredit4;                  /* LSB */
12570  00  =5      BYTE      currency1;                    /* MSB */
12571  00  =5      BYTE      currency2;                    
12572  00  =5      BYTE      currency3;                    /* LSB */
12573  00  =5      BYTE      debtRecoveryPercentage;       /**/
12574  00  =5  } ZW_PREPAYMENT_BALANCE_REPORT_FRAME;
12575  00  =5  
12576  00  =5  /************************************************************/
12577  00  =5  /* Prepayment Supported Get command class structs */        
12578  00  =5  /************************************************************/
12579  00  =5  typedef struct _ZW_PREPAYMENT_SUPPORTED_GET_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 232 

12580  00  =5  {
12581  00  =5      BYTE      cmdClass;                     /* The command class */
12582  00  =5      BYTE      cmd;                          /* The command */
12583  00  =5  } ZW_PREPAYMENT_SUPPORTED_GET_FRAME;
12584  00  =5  
12585  00  =5  /************************************************************/
12586  00  =5  /* Prepayment Supported Report command class structs */     
12587  00  =5  /************************************************************/
12588  00  =5  typedef struct _ZW_PREPAYMENT_SUPPORTED_REPORT_FRAME_
12589  00  =5  {
12590  00  =5      BYTE      cmdClass;                     /* The command class */
12591  00  =5      BYTE      cmd;                          /* The command */
12592  00  =5      BYTE      properties1;                  /* masked byte */
12593  00  =5  } ZW_PREPAYMENT_SUPPORTED_REPORT_FRAME;
12594  00  =5  
12595  00  =5  /************************************************************/
12596  00  =5  /* Proprietary Get 1byte command class structs */           
12597  00  =5  /************************************************************/
12598  00  =5  typedef struct _ZW_PROPRIETARY_GET_1BYTE_FRAME_
12599  00  =5  {
12600  00  =5      BYTE      cmdClass;                     /* The command class */
12601  00  =5      BYTE      cmd;                          /* The command */
12602  00  =5      BYTE      data1;                        
12603  00  =5  } ZW_PROPRIETARY_GET_1BYTE_FRAME;
12604  00  =5  
12605  00  =5  /************************************************************/
12606  00  =5  /* Proprietary Get 2byte command class structs */           
12607  00  =5  /************************************************************/
12608  00  =5  typedef struct _ZW_PROPRIETARY_GET_2BYTE_FRAME_
12609  00  =5  {
12610  00  =5      BYTE      cmdClass;                     /* The command class */
12611  00  =5      BYTE      cmd;                          /* The command */
12612  00  =5      BYTE      data1;                        /* MSB */
12613  00  =5      BYTE      data2;                        /* LSB */
12614  00  =5  } ZW_PROPRIETARY_GET_2BYTE_FRAME;
12615  00  =5  
12616  00  =5  /************************************************************/
12617  00  =5  /* Proprietary Get 3byte command class structs */           
12618  00  =5  /************************************************************/
12619  00  =5  typedef struct _ZW_PROPRIETARY_GET_3BYTE_FRAME_
12620  00  =5  {
12621  00  =5      BYTE      cmdClass;                     /* The command class */
12622  00  =5      BYTE      cmd;                          /* The command */
12623  00  =5      BYTE      data1;                        /* MSB */
12624  00  =5      BYTE      data2;                        
12625  00  =5      BYTE      data3;                        /* LSB */
12626  00  =5  } ZW_PROPRIETARY_GET_3BYTE_FRAME;
12627  00  =5  
12628  00  =5  /************************************************************/
12629  00  =5  /* Proprietary Get 4byte command class structs */           
12630  00  =5  /************************************************************/
12631  00  =5  typedef struct _ZW_PROPRIETARY_GET_4BYTE_FRAME_
12632  00  =5  {
12633  00  =5      BYTE      cmdClass;                     /* The command class */
12634  00  =5      BYTE      cmd;                          /* The command */
12635  00  =5      BYTE      data1;                        /* MSB */
12636  00  =5      BYTE      data2;                        
12637  00  =5      BYTE      data3;                        
12638  00  =5      BYTE      data4;                        /* LSB */
12639  00  =5  } ZW_PROPRIETARY_GET_4BYTE_FRAME;
12640  00  =5  
12641  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 233 

12642  00  =5  /* Proprietary Report 1byte command class structs */        
12643  00  =5  /************************************************************/
12644  00  =5  typedef struct _ZW_PROPRIETARY_REPORT_1BYTE_FRAME_
12645  00  =5  {
12646  00  =5      BYTE      cmdClass;                     /* The command class */
12647  00  =5      BYTE      cmd;                          /* The command */
12648  00  =5      BYTE      data1;                        
12649  00  =5  } ZW_PROPRIETARY_REPORT_1BYTE_FRAME;
12650  00  =5  
12651  00  =5  /************************************************************/
12652  00  =5  /* Proprietary Report 2byte command class structs */        
12653  00  =5  /************************************************************/
12654  00  =5  typedef struct _ZW_PROPRIETARY_REPORT_2BYTE_FRAME_
12655  00  =5  {
12656  00  =5      BYTE      cmdClass;                     /* The command class */
12657  00  =5      BYTE      cmd;                          /* The command */
12658  00  =5      BYTE      data1;                        /* MSB */
12659  00  =5      BYTE      data2;                        /* LSB */
12660  00  =5  } ZW_PROPRIETARY_REPORT_2BYTE_FRAME;
12661  00  =5  
12662  00  =5  /************************************************************/
12663  00  =5  /* Proprietary Report 3byte command class structs */        
12664  00  =5  /************************************************************/
12665  00  =5  typedef struct _ZW_PROPRIETARY_REPORT_3BYTE_FRAME_
12666  00  =5  {
12667  00  =5      BYTE      cmdClass;                     /* The command class */
12668  00  =5      BYTE      cmd;                          /* The command */
12669  00  =5      BYTE      data1;                        /* MSB */
12670  00  =5      BYTE      data2;                        
12671  00  =5      BYTE      data3;                        /* LSB */
12672  00  =5  } ZW_PROPRIETARY_REPORT_3BYTE_FRAME;
12673  00  =5  
12674  00  =5  /************************************************************/
12675  00  =5  /* Proprietary Report 4byte command class structs */        
12676  00  =5  /************************************************************/
12677  00  =5  typedef struct _ZW_PROPRIETARY_REPORT_4BYTE_FRAME_
12678  00  =5  {
12679  00  =5      BYTE      cmdClass;                     /* The command class */
12680  00  =5      BYTE      cmd;                          /* The command */
12681  00  =5      BYTE      data1;                        /* MSB */
12682  00  =5      BYTE      data2;                        
12683  00  =5      BYTE      data3;                        
12684  00  =5      BYTE      data4;                        /* LSB */
12685  00  =5  } ZW_PROPRIETARY_REPORT_4BYTE_FRAME;
12686  00  =5  
12687  00  =5  /************************************************************/
12688  00  =5  /* Proprietary Set 1byte command class structs */           
12689  00  =5  /************************************************************/
12690  00  =5  typedef struct _ZW_PROPRIETARY_SET_1BYTE_FRAME_
12691  00  =5  {
12692  00  =5      BYTE      cmdClass;                     /* The command class */
12693  00  =5      BYTE      cmd;                          /* The command */
12694  00  =5      BYTE      data1;                        
12695  00  =5  } ZW_PROPRIETARY_SET_1BYTE_FRAME;
12696  00  =5  
12697  00  =5  /************************************************************/
12698  00  =5  /* Proprietary Set 2byte command class structs */           
12699  00  =5  /************************************************************/
12700  00  =5  typedef struct _ZW_PROPRIETARY_SET_2BYTE_FRAME_
12701  00  =5  {
12702  00  =5      BYTE      cmdClass;                     /* The command class */
12703  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 234 

12704  00  =5      BYTE      data1;                        /* MSB */
12705  00  =5      BYTE      data2;                        /* LSB */
12706  00  =5  } ZW_PROPRIETARY_SET_2BYTE_FRAME;
12707  00  =5  
12708  00  =5  /************************************************************/
12709  00  =5  /* Proprietary Set 3byte command class structs */           
12710  00  =5  /************************************************************/
12711  00  =5  typedef struct _ZW_PROPRIETARY_SET_3BYTE_FRAME_
12712  00  =5  {
12713  00  =5      BYTE      cmdClass;                     /* The command class */
12714  00  =5      BYTE      cmd;                          /* The command */
12715  00  =5      BYTE      data1;                        /* MSB */
12716  00  =5      BYTE      data2;                        
12717  00  =5      BYTE      data3;                        /* LSB */
12718  00  =5  } ZW_PROPRIETARY_SET_3BYTE_FRAME;
12719  00  =5  
12720  00  =5  /************************************************************/
12721  00  =5  /* Proprietary Set 4byte command class structs */           
12722  00  =5  /************************************************************/
12723  00  =5  typedef struct _ZW_PROPRIETARY_SET_4BYTE_FRAME_
12724  00  =5  {
12725  00  =5      BYTE      cmdClass;                     /* The command class */
12726  00  =5      BYTE      cmd;                          /* The command */
12727  00  =5      BYTE      data1;                        /* MSB */
12728  00  =5      BYTE      data2;                        
12729  00  =5      BYTE      data3;                        
12730  00  =5      BYTE      data4;                        /* LSB */
12731  00  =5  } ZW_PROPRIETARY_SET_4BYTE_FRAME;
12732  00  =5  
12733  00  =5  /************************************************************/
12734  00  =5  /* Protection Get command class structs */                  
12735  00  =5  /************************************************************/
12736  00  =5  typedef struct _ZW_PROTECTION_GET_FRAME_
12737  00  =5  {
12738  00  =5      BYTE      cmdClass;                     /* The command class */
12739  00  =5      BYTE      cmd;                          /* The command */
12740  00  =5  } ZW_PROTECTION_GET_FRAME;
12741  00  =5  
12742  00  =5  /************************************************************/
12743  00  =5  /* Protection Report command class structs */               
12744  00  =5  /************************************************************/
12745  00  =5  typedef struct _ZW_PROTECTION_REPORT_FRAME_
12746  00  =5  {
12747  00  =5      BYTE      cmdClass;                     /* The command class */
12748  00  =5      BYTE      cmd;                          /* The command */
12749  00  =5      BYTE      protectionState;              /**/
12750  00  =5  } ZW_PROTECTION_REPORT_FRAME;
12751  00  =5  
12752  00  =5  /************************************************************/
12753  00  =5  /* Protection Set command class structs */                  
12754  00  =5  /************************************************************/
12755  00  =5  typedef struct _ZW_PROTECTION_SET_FRAME_
12756  00  =5  {
12757  00  =5      BYTE      cmdClass;                     /* The command class */
12758  00  =5      BYTE      cmd;                          /* The command */
12759  00  =5      BYTE      protectionState;              /**/
12760  00  =5  } ZW_PROTECTION_SET_FRAME;
12761  00  =5  
12762  00  =5  /************************************************************/
12763  00  =5  /* Protection Ec Get V2 command class structs */            
12764  00  =5  /************************************************************/
12765  00  =5  typedef struct _ZW_PROTECTION_EC_GET_V2_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 235 

12766  00  =5  {
12767  00  =5      BYTE      cmdClass;                     /* The command class */
12768  00  =5      BYTE      cmd;                          /* The command */
12769  00  =5  } ZW_PROTECTION_EC_GET_V2_FRAME;
12770  00  =5  
12771  00  =5  /************************************************************/
12772  00  =5  /* Protection Ec Report V2 command class structs */         
12773  00  =5  /************************************************************/
12774  00  =5  typedef struct _ZW_PROTECTION_EC_REPORT_V2_FRAME_
12775  00  =5  {
12776  00  =5      BYTE      cmdClass;                     /* The command class */
12777  00  =5      BYTE      cmd;                          /* The command */
12778  00  =5      BYTE      nodeId;                       /**/
12779  00  =5  } ZW_PROTECTION_EC_REPORT_V2_FRAME;
12780  00  =5  
12781  00  =5  /************************************************************/
12782  00  =5  /* Protection Ec Set V2 command class structs */            
12783  00  =5  /************************************************************/
12784  00  =5  typedef struct _ZW_PROTECTION_EC_SET_V2_FRAME_
12785  00  =5  {
12786  00  =5      BYTE      cmdClass;                     /* The command class */
12787  00  =5      BYTE      cmd;                          /* The command */
12788  00  =5      BYTE      nodeId;                       /**/
12789  00  =5  } ZW_PROTECTION_EC_SET_V2_FRAME;
12790  00  =5  
12791  00  =5  /************************************************************/
12792  00  =5  /* Protection Get V2 command class structs */               
12793  00  =5  /************************************************************/
12794  00  =5  typedef struct _ZW_PROTECTION_GET_V2_FRAME_
12795  00  =5  {
12796  00  =5      BYTE      cmdClass;                     /* The command class */
12797  00  =5      BYTE      cmd;                          /* The command */
12798  00  =5  } ZW_PROTECTION_GET_V2_FRAME;
12799  00  =5  
12800  00  =5  /************************************************************/
12801  00  =5  /* Protection Report V2 command class structs */            
12802  00  =5  /************************************************************/
12803  00  =5  typedef struct _ZW_PROTECTION_REPORT_V2_FRAME_
12804  00  =5  {
12805  00  =5      BYTE      cmdClass;                     /* The command class */
12806  00  =5      BYTE      cmd;                          /* The command */
12807  00  =5      BYTE      level;                        /* masked byte */
12808  00  =5      BYTE      level2;                       /* masked byte */
12809  00  =5  } ZW_PROTECTION_REPORT_V2_FRAME;
12810  00  =5  
12811  00  =5  /************************************************************/
12812  00  =5  /* Protection Set V2 command class structs */               
12813  00  =5  /************************************************************/
12814  00  =5  typedef struct _ZW_PROTECTION_SET_V2_FRAME_
12815  00  =5  {
12816  00  =5      BYTE      cmdClass;                     /* The command class */
12817  00  =5      BYTE      cmd;                          /* The command */
12818  00  =5      BYTE      level;                        /* masked byte */
12819  00  =5      BYTE      level2;                       /* masked byte */
12820  00  =5  } ZW_PROTECTION_SET_V2_FRAME;
12821  00  =5  
12822  00  =5  /************************************************************/
12823  00  =5  /* Protection Supported Get V2 command class structs */     
12824  00  =5  /************************************************************/
12825  00  =5  typedef struct _ZW_PROTECTION_SUPPORTED_GET_V2_FRAME_
12826  00  =5  {
12827  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 236 

12828  00  =5      BYTE      cmd;                          /* The command */
12829  00  =5  } ZW_PROTECTION_SUPPORTED_GET_V2_FRAME;
12830  00  =5  
12831  00  =5  /************************************************************/
12832  00  =5  /* Protection Supported Report V2 command class structs */  
12833  00  =5  /************************************************************/
12834  00  =5  typedef struct _ZW_PROTECTION_SUPPORTED_REPORT_V2_FRAME_
12835  00  =5  {
12836  00  =5      BYTE      cmdClass;                     /* The command class */
12837  00  =5      BYTE      cmd;                          /* The command */
12838  00  =5      BYTE      level;                        /* masked byte */
12839  00  =5      BYTE      localProtectionState1;        /* MSB */
12840  00  =5      BYTE      localProtectionState2;        /* LSB */
12841  00  =5      BYTE      rfProtectionState1;           /* MSB */
12842  00  =5      BYTE      rfProtectionState2;           /* LSB */
12843  00  =5  } ZW_PROTECTION_SUPPORTED_REPORT_V2_FRAME;
12844  00  =5  
12845  00  =5  /************************************************************/
12846  00  =5  /* Protection Timeout Get V2 command class structs */       
12847  00  =5  /************************************************************/
12848  00  =5  typedef struct _ZW_PROTECTION_TIMEOUT_GET_V2_FRAME_
12849  00  =5  {
12850  00  =5      BYTE      cmdClass;                     /* The command class */
12851  00  =5      BYTE      cmd;                          /* The command */
12852  00  =5  } ZW_PROTECTION_TIMEOUT_GET_V2_FRAME;
12853  00  =5  
12854  00  =5  /************************************************************/
12855  00  =5  /* Protection Timeout Report V2 command class structs */    
12856  00  =5  /************************************************************/
12857  00  =5  typedef struct _ZW_PROTECTION_TIMEOUT_REPORT_V2_FRAME_
12858  00  =5  {
12859  00  =5      BYTE      cmdClass;                     /* The command class */
12860  00  =5      BYTE      cmd;                          /* The command */
12861  00  =5      BYTE      timeout;                      /**/
12862  00  =5  } ZW_PROTECTION_TIMEOUT_REPORT_V2_FRAME;
12863  00  =5  
12864  00  =5  /************************************************************/
12865  00  =5  /* Protection Timeout Set V2 command class structs */       
12866  00  =5  /************************************************************/
12867  00  =5  typedef struct _ZW_PROTECTION_TIMEOUT_SET_V2_FRAME_
12868  00  =5  {
12869  00  =5      BYTE      cmdClass;                     /* The command class */
12870  00  =5      BYTE      cmd;                          /* The command */
12871  00  =5      BYTE      timeout;                      /**/
12872  00  =5  } ZW_PROTECTION_TIMEOUT_SET_V2_FRAME;
12873  00  =5  
12874  00  =5  /************************************************************/
12875  00  =5  /* Rate Tbl Remove 1byte command class structs */           
12876  00  =5  /************************************************************/
12877  00  =5  typedef struct _ZW_RATE_TBL_REMOVE_1BYTE_FRAME_
12878  00  =5  {
12879  00  =5      BYTE      cmdClass;                     /* The command class */
12880  00  =5      BYTE      cmd;                          /* The command */
12881  00  =5      BYTE      properties1;                  /* masked byte */
12882  00  =5      BYTE      rateParameterSetId1;          
12883  00  =5  } ZW_RATE_TBL_REMOVE_1BYTE_FRAME;
12884  00  =5  
12885  00  =5  /************************************************************/
12886  00  =5  /* Rate Tbl Remove 2byte command class structs */           
12887  00  =5  /************************************************************/
12888  00  =5  typedef struct _ZW_RATE_TBL_REMOVE_2BYTE_FRAME_
12889  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 237 

12890  00  =5      BYTE      cmdClass;                     /* The command class */
12891  00  =5      BYTE      cmd;                          /* The command */
12892  00  =5      BYTE      properties1;                  /* masked byte */
12893  00  =5      BYTE      rateParameterSetId1;          /* MSB */
12894  00  =5      BYTE      rateParameterSetId2;          /* LSB */
12895  00  =5  } ZW_RATE_TBL_REMOVE_2BYTE_FRAME;
12896  00  =5  
12897  00  =5  /************************************************************/
12898  00  =5  /* Rate Tbl Remove 3byte command class structs */           
12899  00  =5  /************************************************************/
12900  00  =5  typedef struct _ZW_RATE_TBL_REMOVE_3BYTE_FRAME_
12901  00  =5  {
12902  00  =5      BYTE      cmdClass;                     /* The command class */
12903  00  =5      BYTE      cmd;                          /* The command */
12904  00  =5      BYTE      properties1;                  /* masked byte */
12905  00  =5      BYTE      rateParameterSetId1;          /* MSB */
12906  00  =5      BYTE      rateParameterSetId2;          
12907  00  =5      BYTE      rateParameterSetId3;          /* LSB */
12908  00  =5  } ZW_RATE_TBL_REMOVE_3BYTE_FRAME;
12909  00  =5  
12910  00  =5  /************************************************************/
12911  00  =5  /* Rate Tbl Remove 4byte command class structs */           
12912  00  =5  /************************************************************/
12913  00  =5  typedef struct _ZW_RATE_TBL_REMOVE_4BYTE_FRAME_
12914  00  =5  {
12915  00  =5      BYTE      cmdClass;                     /* The command class */
12916  00  =5      BYTE      cmd;                          /* The command */
12917  00  =5      BYTE      properties1;                  /* masked byte */
12918  00  =5      BYTE      rateParameterSetId1;          /* MSB */
12919  00  =5      BYTE      rateParameterSetId2;          
12920  00  =5      BYTE      rateParameterSetId3;          
12921  00  =5      BYTE      rateParameterSetId4;          /* LSB */
12922  00  =5  } ZW_RATE_TBL_REMOVE_4BYTE_FRAME;
12923  00  =5  
12924  00  =5  /************************************************************/
12925  00  =5  /* Rate Tbl Set 1byte command class structs */              
12926  00  =5  /************************************************************/
12927  00  =5  typedef struct _ZW_RATE_TBL_SET_1BYTE_FRAME_
12928  00  =5  {
12929  00  =5      BYTE      cmdClass;                     /* The command class */
12930  00  =5      BYTE      cmd;                          /* The command */
12931  00  =5      BYTE      rateParameterSetId;           /**/
12932  00  =5      BYTE      properties1;                  /* masked byte */
12933  00  =5      BYTE      rateCharacter1;               
12934  00  =5      BYTE      startHourLocalTime;           /**/
12935  00  =5      BYTE      startMinuteLocalTime;         /**/
12936  00  =5      BYTE      durationMinute1;              /* MSB */
12937  00  =5      BYTE      durationMinute2;              /* LSB */
12938  00  =5      BYTE      properties2;                  /* masked byte */
12939  00  =5      BYTE      minConsumptionValue1;         /* MSB */
12940  00  =5      BYTE      minConsumptionValue2;         
12941  00  =5      BYTE      minConsumptionValue3;         
12942  00  =5      BYTE      minConsumptionValue4;         /* LSB */
12943  00  =5      BYTE      maxConsumptionValue1;         /* MSB */
12944  00  =5      BYTE      maxConsumptionValue2;         
12945  00  =5      BYTE      maxConsumptionValue3;         
12946  00  =5      BYTE      maxConsumptionValue4;         /* LSB */
12947  00  =5      BYTE      properties3;                  /* masked byte */
12948  00  =5      BYTE      maxDemandValue1;              /* MSB */
12949  00  =5      BYTE      maxDemandValue2;              
12950  00  =5      BYTE      maxDemandValue3;              
12951  00  =5      BYTE      maxDemandValue4;              /* LSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 238 

12952  00  =5      BYTE      dcpRateId;                    /**/
12953  00  =5  } ZW_RATE_TBL_SET_1BYTE_FRAME;
12954  00  =5  
12955  00  =5  /************************************************************/
12956  00  =5  /* Rate Tbl Set 2byte command class structs */              
12957  00  =5  /************************************************************/
12958  00  =5  typedef struct _ZW_RATE_TBL_SET_2BYTE_FRAME_
12959  00  =5  {
12960  00  =5      BYTE      cmdClass;                     /* The command class */
12961  00  =5      BYTE      cmd;                          /* The command */
12962  00  =5      BYTE      rateParameterSetId;           /**/
12963  00  =5      BYTE      properties1;                  /* masked byte */
12964  00  =5      BYTE      rateCharacter1;               /* MSB */
12965  00  =5      BYTE      rateCharacter2;               /* LSB */
12966  00  =5      BYTE      startHourLocalTime;           /**/
12967  00  =5      BYTE      startMinuteLocalTime;         /**/
12968  00  =5      BYTE      durationMinute1;              /* MSB */
12969  00  =5      BYTE      durationMinute2;              /* LSB */
12970  00  =5      BYTE      properties2;                  /* masked byte */
12971  00  =5      BYTE      minConsumptionValue1;         /* MSB */
12972  00  =5      BYTE      minConsumptionValue2;         
12973  00  =5      BYTE      minConsumptionValue3;         
12974  00  =5      BYTE      minConsumptionValue4;         /* LSB */
12975  00  =5      BYTE      maxConsumptionValue1;         /* MSB */
12976  00  =5      BYTE      maxConsumptionValue2;         
12977  00  =5      BYTE      maxConsumptionValue3;         
12978  00  =5      BYTE      maxConsumptionValue4;         /* LSB */
12979  00  =5      BYTE      properties3;                  /* masked byte */
12980  00  =5      BYTE      maxDemandValue1;              /* MSB */
12981  00  =5      BYTE      maxDemandValue2;              
12982  00  =5      BYTE      maxDemandValue3;              
12983  00  =5      BYTE      maxDemandValue4;              /* LSB */
12984  00  =5      BYTE      dcpRateId;                    /**/
12985  00  =5  } ZW_RATE_TBL_SET_2BYTE_FRAME;
12986  00  =5  
12987  00  =5  /************************************************************/
12988  00  =5  /* Rate Tbl Set 3byte command class structs */              
12989  00  =5  /************************************************************/
12990  00  =5  typedef struct _ZW_RATE_TBL_SET_3BYTE_FRAME_
12991  00  =5  {
12992  00  =5      BYTE      cmdClass;                     /* The command class */
12993  00  =5      BYTE      cmd;                          /* The command */
12994  00  =5      BYTE      rateParameterSetId;           /**/
12995  00  =5      BYTE      properties1;                  /* masked byte */
12996  00  =5      BYTE      rateCharacter1;               /* MSB */
12997  00  =5      BYTE      rateCharacter2;               
12998  00  =5      BYTE      rateCharacter3;               /* LSB */
12999  00  =5      BYTE      startHourLocalTime;           /**/
13000  00  =5      BYTE      startMinuteLocalTime;         /**/
13001  00  =5      BYTE      durationMinute1;              /* MSB */
13002  00  =5      BYTE      durationMinute2;              /* LSB */
13003  00  =5      BYTE      properties2;                  /* masked byte */
13004  00  =5      BYTE      minConsumptionValue1;         /* MSB */
13005  00  =5      BYTE      minConsumptionValue2;         
13006  00  =5      BYTE      minConsumptionValue3;         
13007  00  =5      BYTE      minConsumptionValue4;         /* LSB */
13008  00  =5      BYTE      maxConsumptionValue1;         /* MSB */
13009  00  =5      BYTE      maxConsumptionValue2;         
13010  00  =5      BYTE      maxConsumptionValue3;         
13011  00  =5      BYTE      maxConsumptionValue4;         /* LSB */
13012  00  =5      BYTE      properties3;                  /* masked byte */
13013  00  =5      BYTE      maxDemandValue1;              /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 239 

13014  00  =5      BYTE      maxDemandValue2;              
13015  00  =5      BYTE      maxDemandValue3;              
13016  00  =5      BYTE      maxDemandValue4;              /* LSB */
13017  00  =5      BYTE      dcpRateId;                    /**/
13018  00  =5  } ZW_RATE_TBL_SET_3BYTE_FRAME;
13019  00  =5  
13020  00  =5  /************************************************************/
13021  00  =5  /* Rate Tbl Set 4byte command class structs */              
13022  00  =5  /************************************************************/
13023  00  =5  typedef struct _ZW_RATE_TBL_SET_4BYTE_FRAME_
13024  00  =5  {
13025  00  =5      BYTE      cmdClass;                     /* The command class */
13026  00  =5      BYTE      cmd;                          /* The command */
13027  00  =5      BYTE      rateParameterSetId;           /**/
13028  00  =5      BYTE      properties1;                  /* masked byte */
13029  00  =5      BYTE      rateCharacter1;               /* MSB */
13030  00  =5      BYTE      rateCharacter2;               
13031  00  =5      BYTE      rateCharacter3;               
13032  00  =5      BYTE      rateCharacter4;               /* LSB */
13033  00  =5      BYTE      startHourLocalTime;           /**/
13034  00  =5      BYTE      startMinuteLocalTime;         /**/
13035  00  =5      BYTE      durationMinute1;              /* MSB */
13036  00  =5      BYTE      durationMinute2;              /* LSB */
13037  00  =5      BYTE      properties2;                  /* masked byte */
13038  00  =5      BYTE      minConsumptionValue1;         /* MSB */
13039  00  =5      BYTE      minConsumptionValue2;         
13040  00  =5      BYTE      minConsumptionValue3;         
13041  00  =5      BYTE      minConsumptionValue4;         /* LSB */
13042  00  =5      BYTE      maxConsumptionValue1;         /* MSB */
13043  00  =5      BYTE      maxConsumptionValue2;         
13044  00  =5      BYTE      maxConsumptionValue3;         
13045  00  =5      BYTE      maxConsumptionValue4;         /* LSB */
13046  00  =5      BYTE      properties3;                  /* masked byte */
13047  00  =5      BYTE      maxDemandValue1;              /* MSB */
13048  00  =5      BYTE      maxDemandValue2;              
13049  00  =5      BYTE      maxDemandValue3;              
13050  00  =5      BYTE      maxDemandValue4;              /* LSB */
13051  00  =5      BYTE      dcpRateId;                    /**/
13052  00  =5  } ZW_RATE_TBL_SET_4BYTE_FRAME;
13053  00  =5  
13054  00  =5  /************************************************************/
13055  00  =5  /* Rate Tbl Active Rate Get command class structs */        
13056  00  =5  /************************************************************/
13057  00  =5  typedef struct _ZW_RATE_TBL_ACTIVE_RATE_GET_FRAME_
13058  00  =5  {
13059  00  =5      BYTE      cmdClass;                     /* The command class */
13060  00  =5      BYTE      cmd;                          /* The command */
13061  00  =5  } ZW_RATE_TBL_ACTIVE_RATE_GET_FRAME;
13062  00  =5  
13063  00  =5  /************************************************************/
13064  00  =5  /* Rate Tbl Active Rate Report command class structs */     
13065  00  =5  /************************************************************/
13066  00  =5  typedef struct _ZW_RATE_TBL_ACTIVE_RATE_REPORT_FRAME_
13067  00  =5  {
13068  00  =5      BYTE      cmdClass;                     /* The command class */
13069  00  =5      BYTE      cmd;                          /* The command */
13070  00  =5      BYTE      rateParameterSetId;           /**/
13071  00  =5  } ZW_RATE_TBL_ACTIVE_RATE_REPORT_FRAME;
13072  00  =5  
13073  00  =5  /************************************************************/
13074  00  =5  /* Rate Tbl Current Data Get command class structs */       
13075  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 240 

13076  00  =5  typedef struct _ZW_RATE_TBL_CURRENT_DATA_GET_FRAME_
13077  00  =5  {
13078  00  =5      BYTE      cmdClass;                     /* The command class */
13079  00  =5      BYTE      cmd;                          /* The command */
13080  00  =5      BYTE      rateParameterSetId;           /**/
13081  00  =5      BYTE      datasetRequested1;            /* MSB */
13082  00  =5      BYTE      datasetRequested2;            
13083  00  =5      BYTE      datasetRequested3;            /* LSB */
13084  00  =5  } ZW_RATE_TBL_CURRENT_DATA_GET_FRAME;
13085  00  =5  
13086  00  =5  /************************************************************/
13087  00  =5  /* Rate Tbl Current Data Report variant group structs */    
13088  00  =5  /************************************************************/
13089  00  =5  typedef struct _VG_RATE_TBL_CURRENT_DATA_REPORT_VG_
13090  00  =5  {
13091  00  =5      BYTE      properties1;                  /* masked byte */
13092  00  =5      BYTE      currentValue1;                /* MSB */
13093  00  =5      BYTE      currentValue2;                
13094  00  =5      BYTE      currentValue3;                
13095  00  =5      BYTE      currentValue4;                /* LSB */
13096  00  =5  } VG_RATE_TBL_CURRENT_DATA_REPORT_VG;
13097  00  =5  
13098  00  =5  /************************************************************/
13099  00  =5  /* Rate Tbl Current Data Report 1byte command class structs */
13100  00  =5  /************************************************************/
13101  00  =5  typedef struct _ZW_RATE_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME_
13102  00  =5  {
13103  00  =5      BYTE      cmdClass;                     /* The command class */
13104  00  =5      BYTE      cmd;                          /* The command */
13105  00  =5      BYTE      reportsToFollow;              /**/
13106  00  =5      BYTE      rateParameterSetId;           /**/
13107  00  =5      BYTE      dataset1;                     /* MSB */
13108  00  =5      BYTE      dataset2;                     
13109  00  =5      BYTE      dataset3;                     /* LSB */
13110  00  =5      BYTE      year1;                        /* MSB */
13111  00  =5      BYTE      year2;                        /* LSB */
13112  00  =5      BYTE      month;                        /**/
13113  00  =5      BYTE      day;                          /**/
13114  00  =5      BYTE      hourLocalTime;                /**/
13115  00  =5      BYTE      minuteLocalTime;              /**/
13116  00  =5      BYTE      secondLocalTime;              /**/
13117  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
13118  00  =5  } ZW_RATE_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME;
13119  00  =5  
13120  00  =5  /************************************************************/
13121  00  =5  /* Rate Tbl Current Data Report 2byte command class structs */
13122  00  =5  /************************************************************/
13123  00  =5  typedef struct _ZW_RATE_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME_
13124  00  =5  {
13125  00  =5      BYTE      cmdClass;                     /* The command class */
13126  00  =5      BYTE      cmd;                          /* The command */
13127  00  =5      BYTE      reportsToFollow;              /**/
13128  00  =5      BYTE      rateParameterSetId;           /**/
13129  00  =5      BYTE      dataset1;                     /* MSB */
13130  00  =5      BYTE      dataset2;                     
13131  00  =5      BYTE      dataset3;                     /* LSB */
13132  00  =5      BYTE      year1;                        /* MSB */
13133  00  =5      BYTE      year2;                        /* LSB */
13134  00  =5      BYTE      month;                        /**/
13135  00  =5      BYTE      day;                          /**/
13136  00  =5      BYTE      hourLocalTime;                /**/
13137  00  =5      BYTE      minuteLocalTime;              /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 241 

13138  00  =5      BYTE      secondLocalTime;              /**/
13139  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
13140  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
13141  00  =5  } ZW_RATE_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME;
13142  00  =5  
13143  00  =5  /************************************************************/
13144  00  =5  /* Rate Tbl Current Data Report 3byte command class structs */
13145  00  =5  /************************************************************/
13146  00  =5  typedef struct _ZW_RATE_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME_
13147  00  =5  {
13148  00  =5      BYTE      cmdClass;                     /* The command class */
13149  00  =5      BYTE      cmd;                          /* The command */
13150  00  =5      BYTE      reportsToFollow;              /**/
13151  00  =5      BYTE      rateParameterSetId;           /**/
13152  00  =5      BYTE      dataset1;                     /* MSB */
13153  00  =5      BYTE      dataset2;                     
13154  00  =5      BYTE      dataset3;                     /* LSB */
13155  00  =5      BYTE      year1;                        /* MSB */
13156  00  =5      BYTE      year2;                        /* LSB */
13157  00  =5      BYTE      month;                        /**/
13158  00  =5      BYTE      day;                          /**/
13159  00  =5      BYTE      hourLocalTime;                /**/
13160  00  =5      BYTE      minuteLocalTime;              /**/
13161  00  =5      BYTE      secondLocalTime;              /**/
13162  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
13163  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
13164  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup3;                /**/
13165  00  =5  } ZW_RATE_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME;
13166  00  =5  
13167  00  =5  /************************************************************/
13168  00  =5  /* Rate Tbl Current Data Report 4byte command class structs */
13169  00  =5  /************************************************************/
13170  00  =5  typedef struct _ZW_RATE_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME_
13171  00  =5  {
13172  00  =5      BYTE      cmdClass;                     /* The command class */
13173  00  =5      BYTE      cmd;                          /* The command */
13174  00  =5      BYTE      reportsToFollow;              /**/
13175  00  =5      BYTE      rateParameterSetId;           /**/
13176  00  =5      BYTE      dataset1;                     /* MSB */
13177  00  =5      BYTE      dataset2;                     
13178  00  =5      BYTE      dataset3;                     /* LSB */
13179  00  =5      BYTE      year1;                        /* MSB */
13180  00  =5      BYTE      year2;                        /* LSB */
13181  00  =5      BYTE      month;                        /**/
13182  00  =5      BYTE      day;                          /**/
13183  00  =5      BYTE      hourLocalTime;                /**/
13184  00  =5      BYTE      minuteLocalTime;              /**/
13185  00  =5      BYTE      secondLocalTime;              /**/
13186  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
13187  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
13188  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup3;                /**/
13189  00  =5      VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup4;                /**/
13190  00  =5  } ZW_RATE_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME;
13191  00  =5  
13192  00  =5  /************************************************************/
13193  00  =5  /* Rate Tbl Get command class structs */                    
13194  00  =5  /************************************************************/
13195  00  =5  typedef struct _ZW_RATE_TBL_GET_FRAME_
13196  00  =5  {
13197  00  =5      BYTE      cmdClass;                     /* The command class */
13198  00  =5      BYTE      cmd;                          /* The command */
13199  00  =5      BYTE      rateParameterSetId;           /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 242 

13200  00  =5  } ZW_RATE_TBL_GET_FRAME;
13201  00  =5  
13202  00  =5  /************************************************************/
13203  00  =5  /* Rate Tbl Historical Data Get command class structs */    
13204  00  =5  /************************************************************/
13205  00  =5  typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_GET_FRAME_
13206  00  =5  {
13207  00  =5      BYTE      cmdClass;                     /* The command class */
13208  00  =5      BYTE      cmd;                          /* The command */
13209  00  =5      BYTE      maximumReports;               /**/
13210  00  =5      BYTE      rateParameterSetId;           /**/
13211  00  =5      BYTE      datasetRequested1;            /* MSB */
13212  00  =5      BYTE      datasetRequested2;            
13213  00  =5      BYTE      datasetRequested3;            /* LSB */
13214  00  =5      BYTE      startYear1;                   /* MSB */
13215  00  =5      BYTE      startYear2;                   /* LSB */
13216  00  =5      BYTE      startMonth;                   /**/
13217  00  =5      BYTE      startDay;                     /**/
13218  00  =5      BYTE      startHourLocalTime;           /**/
13219  00  =5      BYTE      startMinuteLocalTime;         /**/
13220  00  =5      BYTE      startSecondLocalTime;         /**/
13221  00  =5      BYTE      stopYear1;                    /* MSB */
13222  00  =5      BYTE      stopYear2;                    /* LSB */
13223  00  =5      BYTE      stopMonth;                    /**/
13224  00  =5      BYTE      stopDay;                      /**/
13225  00  =5      BYTE      stopHourLocalTime;            /**/
13226  00  =5      BYTE      stopMinuteLocalTime;          /**/
13227  00  =5      BYTE      stopSecondLocalTime;          /**/
13228  00  =5  } ZW_RATE_TBL_HISTORICAL_DATA_GET_FRAME;
13229  00  =5  
13230  00  =5  /************************************************************/
13231  00  =5  /* Rate Tbl Historical Data Report variant group structs */ 
13232  00  =5  /************************************************************/
13233  00  =5  typedef struct _VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG_
13234  00  =5  {
13235  00  =5      BYTE      properties1;                  /* masked byte */
13236  00  =5      BYTE      historicalValue1;             /* MSB */
13237  00  =5      BYTE      historicalValue2;             
13238  00  =5      BYTE      historicalValue3;             
13239  00  =5      BYTE      historicalValue4;             /* LSB */
13240  00  =5  } VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG;
13241  00  =5  
13242  00  =5  /************************************************************/
13243  00  =5  /* Rate Tbl Historical Data Report 1byte command class structs */
13244  00  =5  /************************************************************/
13245  00  =5  typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME_
13246  00  =5  {
13247  00  =5      BYTE      cmdClass;                     /* The command class */
13248  00  =5      BYTE      cmd;                          /* The command */
13249  00  =5      BYTE      reportsToFollow;              /**/
13250  00  =5      BYTE      rateParameterSetId;           /**/
13251  00  =5      BYTE      dataset1;                     /* MSB */
13252  00  =5      BYTE      dataset2;                     
13253  00  =5      BYTE      dataset3;                     /* LSB */
13254  00  =5      BYTE      year1;                        /* MSB */
13255  00  =5      BYTE      year2;                        /* LSB */
13256  00  =5      BYTE      month;                        /**/
13257  00  =5      BYTE      day;                          /**/
13258  00  =5      BYTE      hourLocalTime;                /**/
13259  00  =5      BYTE      minuteLocalTime;              /**/
13260  00  =5      BYTE      secondLocalTime;              /**/
13261  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 243 

13262  00  =5  } ZW_RATE_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME;
13263  00  =5  
13264  00  =5  /************************************************************/
13265  00  =5  /* Rate Tbl Historical Data Report 2byte command class structs */
13266  00  =5  /************************************************************/
13267  00  =5  typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME_
13268  00  =5  {
13269  00  =5      BYTE      cmdClass;                     /* The command class */
13270  00  =5      BYTE      cmd;                          /* The command */
13271  00  =5      BYTE      reportsToFollow;              /**/
13272  00  =5      BYTE      rateParameterSetId;           /**/
13273  00  =5      BYTE      dataset1;                     /* MSB */
13274  00  =5      BYTE      dataset2;                     
13275  00  =5      BYTE      dataset3;                     /* LSB */
13276  00  =5      BYTE      year1;                        /* MSB */
13277  00  =5      BYTE      year2;                        /* LSB */
13278  00  =5      BYTE      month;                        /**/
13279  00  =5      BYTE      day;                          /**/
13280  00  =5      BYTE      hourLocalTime;                /**/
13281  00  =5      BYTE      minuteLocalTime;              /**/
13282  00  =5      BYTE      secondLocalTime;              /**/
13283  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
13284  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
13285  00  =5  } ZW_RATE_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME;
13286  00  =5  
13287  00  =5  /************************************************************/
13288  00  =5  /* Rate Tbl Historical Data Report 3byte command class structs */
13289  00  =5  /************************************************************/
13290  00  =5  typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME_
13291  00  =5  {
13292  00  =5      BYTE      cmdClass;                     /* The command class */
13293  00  =5      BYTE      cmd;                          /* The command */
13294  00  =5      BYTE      reportsToFollow;              /**/
13295  00  =5      BYTE      rateParameterSetId;           /**/
13296  00  =5      BYTE      dataset1;                     /* MSB */
13297  00  =5      BYTE      dataset2;                     
13298  00  =5      BYTE      dataset3;                     /* LSB */
13299  00  =5      BYTE      year1;                        /* MSB */
13300  00  =5      BYTE      year2;                        /* LSB */
13301  00  =5      BYTE      month;                        /**/
13302  00  =5      BYTE      day;                          /**/
13303  00  =5      BYTE      hourLocalTime;                /**/
13304  00  =5      BYTE      minuteLocalTime;              /**/
13305  00  =5      BYTE      secondLocalTime;              /**/
13306  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
13307  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
13308  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup3;                /**/
13309  00  =5  } ZW_RATE_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME;
13310  00  =5  
13311  00  =5  /************************************************************/
13312  00  =5  /* Rate Tbl Historical Data Report 4byte command class structs */
13313  00  =5  /************************************************************/
13314  00  =5  typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME_
13315  00  =5  {
13316  00  =5      BYTE      cmdClass;                     /* The command class */
13317  00  =5      BYTE      cmd;                          /* The command */
13318  00  =5      BYTE      reportsToFollow;              /**/
13319  00  =5      BYTE      rateParameterSetId;           /**/
13320  00  =5      BYTE      dataset1;                     /* MSB */
13321  00  =5      BYTE      dataset2;                     
13322  00  =5      BYTE      dataset3;                     /* LSB */
13323  00  =5      BYTE      year1;                        /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 244 

13324  00  =5      BYTE      year2;                        /* LSB */
13325  00  =5      BYTE      month;                        /**/
13326  00  =5      BYTE      day;                          /**/
13327  00  =5      BYTE      hourLocalTime;                /**/
13328  00  =5      BYTE      minuteLocalTime;              /**/
13329  00  =5      BYTE      secondLocalTime;              /**/
13330  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
13331  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
13332  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup3;                /**/
13333  00  =5      VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup4;                /**/
13334  00  =5  } ZW_RATE_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME;
13335  00  =5  
13336  00  =5  /************************************************************/
13337  00  =5  /* Rate Tbl Report 1byte command class structs */           
13338  00  =5  /************************************************************/
13339  00  =5  typedef struct _ZW_RATE_TBL_REPORT_1BYTE_FRAME_
13340  00  =5  {
13341  00  =5      BYTE      cmdClass;                     /* The command class */
13342  00  =5      BYTE      cmd;                          /* The command */
13343  00  =5      BYTE      rateParameterSetId;           /**/
13344  00  =5      BYTE      properties1;                  /* masked byte */
13345  00  =5      BYTE      rateCharacter1;               
13346  00  =5      BYTE      startHourLocalTime;           /**/
13347  00  =5      BYTE      startMinuteLocalTime;         /**/
13348  00  =5      BYTE      durationMinute1;              /* MSB */
13349  00  =5      BYTE      durationMinute2;              /* LSB */
13350  00  =5      BYTE      properties2;                  /* masked byte */
13351  00  =5      BYTE      minConsumptionValue1;         /* MSB */
13352  00  =5      BYTE      minConsumptionValue2;         
13353  00  =5      BYTE      minConsumptionValue3;         
13354  00  =5      BYTE      minConsumptionValue4;         /* LSB */
13355  00  =5      BYTE      maxConsumptionValue1;         /* MSB */
13356  00  =5      BYTE      maxConsumptionValue2;         
13357  00  =5      BYTE      maxConsumptionValue3;         
13358  00  =5      BYTE      maxConsumptionValue4;         /* LSB */
13359  00  =5      BYTE      properties3;                  /* masked byte */
13360  00  =5      BYTE      maxDemandValue1;              /* MSB */
13361  00  =5      BYTE      maxDemandValue2;              
13362  00  =5      BYTE      maxDemandValue3;              
13363  00  =5      BYTE      maxDemandValue4;              /* LSB */
13364  00  =5      BYTE      dcpRateId;                    /**/
13365  00  =5  } ZW_RATE_TBL_REPORT_1BYTE_FRAME;
13366  00  =5  
13367  00  =5  /************************************************************/
13368  00  =5  /* Rate Tbl Report 2byte command class structs */           
13369  00  =5  /************************************************************/
13370  00  =5  typedef struct _ZW_RATE_TBL_REPORT_2BYTE_FRAME_
13371  00  =5  {
13372  00  =5      BYTE      cmdClass;                     /* The command class */
13373  00  =5      BYTE      cmd;                          /* The command */
13374  00  =5      BYTE      rateParameterSetId;           /**/
13375  00  =5      BYTE      properties1;                  /* masked byte */
13376  00  =5      BYTE      rateCharacter1;               /* MSB */
13377  00  =5      BYTE      rateCharacter2;               /* LSB */
13378  00  =5      BYTE      startHourLocalTime;           /**/
13379  00  =5      BYTE      startMinuteLocalTime;         /**/
13380  00  =5      BYTE      durationMinute1;              /* MSB */
13381  00  =5      BYTE      durationMinute2;              /* LSB */
13382  00  =5      BYTE      properties2;                  /* masked byte */
13383  00  =5      BYTE      minConsumptionValue1;         /* MSB */
13384  00  =5      BYTE      minConsumptionValue2;         
13385  00  =5      BYTE      minConsumptionValue3;         
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 245 

13386  00  =5      BYTE      minConsumptionValue4;         /* LSB */
13387  00  =5      BYTE      maxConsumptionValue1;         /* MSB */
13388  00  =5      BYTE      maxConsumptionValue2;         
13389  00  =5      BYTE      maxConsumptionValue3;         
13390  00  =5      BYTE      maxConsumptionValue4;         /* LSB */
13391  00  =5      BYTE      properties3;                  /* masked byte */
13392  00  =5      BYTE      maxDemandValue1;              /* MSB */
13393  00  =5      BYTE      maxDemandValue2;              
13394  00  =5      BYTE      maxDemandValue3;              
13395  00  =5      BYTE      maxDemandValue4;              /* LSB */
13396  00  =5      BYTE      dcpRateId;                    /**/
13397  00  =5  } ZW_RATE_TBL_REPORT_2BYTE_FRAME;
13398  00  =5  
13399  00  =5  /************************************************************/
13400  00  =5  /* Rate Tbl Report 3byte command class structs */           
13401  00  =5  /************************************************************/
13402  00  =5  typedef struct _ZW_RATE_TBL_REPORT_3BYTE_FRAME_
13403  00  =5  {
13404  00  =5      BYTE      cmdClass;                     /* The command class */
13405  00  =5      BYTE      cmd;                          /* The command */
13406  00  =5      BYTE      rateParameterSetId;           /**/
13407  00  =5      BYTE      properties1;                  /* masked byte */
13408  00  =5      BYTE      rateCharacter1;               /* MSB */
13409  00  =5      BYTE      rateCharacter2;               
13410  00  =5      BYTE      rateCharacter3;               /* LSB */
13411  00  =5      BYTE      startHourLocalTime;           /**/
13412  00  =5      BYTE      startMinuteLocalTime;         /**/
13413  00  =5      BYTE      durationMinute1;              /* MSB */
13414  00  =5      BYTE      durationMinute2;              /* LSB */
13415  00  =5      BYTE      properties2;                  /* masked byte */
13416  00  =5      BYTE      minConsumptionValue1;         /* MSB */
13417  00  =5      BYTE      minConsumptionValue2;         
13418  00  =5      BYTE      minConsumptionValue3;         
13419  00  =5      BYTE      minConsumptionValue4;         /* LSB */
13420  00  =5      BYTE      maxConsumptionValue1;         /* MSB */
13421  00  =5      BYTE      maxConsumptionValue2;         
13422  00  =5      BYTE      maxConsumptionValue3;         
13423  00  =5      BYTE      maxConsumptionValue4;         /* LSB */
13424  00  =5      BYTE      properties3;                  /* masked byte */
13425  00  =5      BYTE      maxDemandValue1;              /* MSB */
13426  00  =5      BYTE      maxDemandValue2;              
13427  00  =5      BYTE      maxDemandValue3;              
13428  00  =5      BYTE      maxDemandValue4;              /* LSB */
13429  00  =5      BYTE      dcpRateId;                    /**/
13430  00  =5  } ZW_RATE_TBL_REPORT_3BYTE_FRAME;
13431  00  =5  
13432  00  =5  /************************************************************/
13433  00  =5  /* Rate Tbl Report 4byte command class structs */           
13434  00  =5  /************************************************************/
13435  00  =5  typedef struct _ZW_RATE_TBL_REPORT_4BYTE_FRAME_
13436  00  =5  {
13437  00  =5      BYTE      cmdClass;                     /* The command class */
13438  00  =5      BYTE      cmd;                          /* The command */
13439  00  =5      BYTE      rateParameterSetId;           /**/
13440  00  =5      BYTE      properties1;                  /* masked byte */
13441  00  =5      BYTE      rateCharacter1;               /* MSB */
13442  00  =5      BYTE      rateCharacter2;               
13443  00  =5      BYTE      rateCharacter3;               
13444  00  =5      BYTE      rateCharacter4;               /* LSB */
13445  00  =5      BYTE      startHourLocalTime;           /**/
13446  00  =5      BYTE      startMinuteLocalTime;         /**/
13447  00  =5      BYTE      durationMinute1;              /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 246 

13448  00  =5      BYTE      durationMinute2;              /* LSB */
13449  00  =5      BYTE      properties2;                  /* masked byte */
13450  00  =5      BYTE      minConsumptionValue1;         /* MSB */
13451  00  =5      BYTE      minConsumptionValue2;         
13452  00  =5      BYTE      minConsumptionValue3;         
13453  00  =5      BYTE      minConsumptionValue4;         /* LSB */
13454  00  =5      BYTE      maxConsumptionValue1;         /* MSB */
13455  00  =5      BYTE      maxConsumptionValue2;         
13456  00  =5      BYTE      maxConsumptionValue3;         
13457  00  =5      BYTE      maxConsumptionValue4;         /* LSB */
13458  00  =5      BYTE      properties3;                  /* masked byte */
13459  00  =5      BYTE      maxDemandValue1;              /* MSB */
13460  00  =5      BYTE      maxDemandValue2;              
13461  00  =5      BYTE      maxDemandValue3;              
13462  00  =5      BYTE      maxDemandValue4;              /* LSB */
13463  00  =5      BYTE      dcpRateId;                    /**/
13464  00  =5  } ZW_RATE_TBL_REPORT_4BYTE_FRAME;
13465  00  =5  
13466  00  =5  /************************************************************/
13467  00  =5  /* Rate Tbl Supported Get command class structs */          
13468  00  =5  /************************************************************/
13469  00  =5  typedef struct _ZW_RATE_TBL_SUPPORTED_GET_FRAME_
13470  00  =5  {
13471  00  =5      BYTE      cmdClass;                     /* The command class */
13472  00  =5      BYTE      cmd;                          /* The command */
13473  00  =5  } ZW_RATE_TBL_SUPPORTED_GET_FRAME;
13474  00  =5  
13475  00  =5  /************************************************************/
13476  00  =5  /* Rate Tbl Supported Report command class structs */       
13477  00  =5  /************************************************************/
13478  00  =5  typedef struct _ZW_RATE_TBL_SUPPORTED_REPORT_FRAME_
13479  00  =5  {
13480  00  =5      BYTE      cmdClass;                     /* The command class */
13481  00  =5      BYTE      cmd;                          /* The command */
13482  00  =5      BYTE      ratesSupported;               /**/
13483  00  =5      BYTE      parameterSetSupportedBitMask1;/* MSB */
13484  00  =5      BYTE      parameterSetSupportedBitMask2;/* LSB */
13485  00  =5  } ZW_RATE_TBL_SUPPORTED_REPORT_FRAME;
13486  00  =5  
13487  00  =5  /************************************************************/
13488  00  =5  /* Remote Association Activate command class structs */     
13489  00  =5  /************************************************************/
13490  00  =5  typedef struct _ZW_REMOTE_ASSOCIATION_ACTIVATE_FRAME_
13491  00  =5  {
13492  00  =5      BYTE      cmdClass;                     /* The command class */
13493  00  =5      BYTE      cmd;                          /* The command */
13494  00  =5      BYTE      groupingIdentifier;           /**/
13495  00  =5  } ZW_REMOTE_ASSOCIATION_ACTIVATE_FRAME;
13496  00  =5  
13497  00  =5  /************************************************************/
13498  00  =5  /* Remote Association Configuration Get command class structs */
13499  00  =5  /************************************************************/
13500  00  =5  typedef struct _ZW_REMOTE_ASSOCIATION_CONFIGURATION_GET_FRAME_
13501  00  =5  {
13502  00  =5      BYTE      cmdClass;                     /* The command class */
13503  00  =5      BYTE      cmd;                          /* The command */
13504  00  =5      BYTE      localGroupingIdentifier;      /**/
13505  00  =5  } ZW_REMOTE_ASSOCIATION_CONFIGURATION_GET_FRAME;
13506  00  =5  
13507  00  =5  /************************************************************/
13508  00  =5  /* Remote Association Configuration Report command class structs */
13509  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 247 

13510  00  =5  typedef struct _ZW_REMOTE_ASSOCIATION_CONFIGURATION_REPORT_FRAME_
13511  00  =5  {
13512  00  =5      BYTE      cmdClass;                     /* The command class */
13513  00  =5      BYTE      cmd;                          /* The command */
13514  00  =5      BYTE      localGroupingIdentifier;      /**/
13515  00  =5      BYTE      remoteNodeid;                 /**/
13516  00  =5      BYTE      remoteGroupingIdentifier;     /**/
13517  00  =5  } ZW_REMOTE_ASSOCIATION_CONFIGURATION_REPORT_FRAME;
13518  00  =5  
13519  00  =5  /************************************************************/
13520  00  =5  /* Remote Association Configuration Set command class structs */
13521  00  =5  /************************************************************/
13522  00  =5  typedef struct _ZW_REMOTE_ASSOCIATION_CONFIGURATION_SET_FRAME_
13523  00  =5  {
13524  00  =5      BYTE      cmdClass;                     /* The command class */
13525  00  =5      BYTE      cmd;                          /* The command */
13526  00  =5      BYTE      localGroupingIdentifier;      /**/
13527  00  =5      BYTE      remoteNodeid;                 /**/
13528  00  =5      BYTE      remoteGroupingIdentifier;     /**/
13529  00  =5  } ZW_REMOTE_ASSOCIATION_CONFIGURATION_SET_FRAME;
13530  00  =5  
13531  00  =5  /************************************************************/
13532  00  =5  /* Scene Activation Set command class structs */            
13533  00  =5  /************************************************************/
13534  00  =5  typedef struct _ZW_SCENE_ACTIVATION_SET_FRAME_
13535  00  =5  {
13536  00  =5      BYTE      cmdClass;                     /* The command class */
13537  00  =5      BYTE      cmd;                          /* The command */
13538  00  =5      BYTE      sceneId;                      /**/
13539  00  =5      BYTE      dimmingDuration;              /**/
13540  00  =5  } ZW_SCENE_ACTIVATION_SET_FRAME;
13541  00  =5  
13542  00  =5  /************************************************************/
13543  00  =5  /* Scene Actuator Conf Get command class structs */         
13544  00  =5  /************************************************************/
13545  00  =5  typedef struct _ZW_SCENE_ACTUATOR_CONF_GET_FRAME_
13546  00  =5  {
13547  00  =5      BYTE      cmdClass;                     /* The command class */
13548  00  =5      BYTE      cmd;                          /* The command */
13549  00  =5      BYTE      sceneId;                      /**/
13550  00  =5  } ZW_SCENE_ACTUATOR_CONF_GET_FRAME;
13551  00  =5  
13552  00  =5  /************************************************************/
13553  00  =5  /* Scene Actuator Conf Report command class structs */      
13554  00  =5  /************************************************************/
13555  00  =5  typedef struct _ZW_SCENE_ACTUATOR_CONF_REPORT_FRAME_
13556  00  =5  {
13557  00  =5      BYTE      cmdClass;                     /* The command class */
13558  00  =5      BYTE      cmd;                          /* The command */
13559  00  =5      BYTE      sceneId;                      /**/
13560  00  =5      BYTE      level;                        /**/
13561  00  =5      BYTE      dimmingDuration;              /**/
13562  00  =5  } ZW_SCENE_ACTUATOR_CONF_REPORT_FRAME;
13563  00  =5  
13564  00  =5  /************************************************************/
13565  00  =5  /* Scene Actuator Conf Set command class structs */         
13566  00  =5  /************************************************************/
13567  00  =5  typedef struct _ZW_SCENE_ACTUATOR_CONF_SET_FRAME_
13568  00  =5  {
13569  00  =5      BYTE      cmdClass;                     /* The command class */
13570  00  =5      BYTE      cmd;                          /* The command */
13571  00  =5      BYTE      sceneId;                      /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 248 

13572  00  =5      BYTE      dimmingDuration;              /**/
13573  00  =5      BYTE      level2;                       /* masked byte */
13574  00  =5      BYTE      level;                        /**/
13575  00  =5  } ZW_SCENE_ACTUATOR_CONF_SET_FRAME;
13576  00  =5  
13577  00  =5  /************************************************************/
13578  00  =5  /* Scene Controller Conf Get command class structs */       
13579  00  =5  /************************************************************/
13580  00  =5  typedef struct _ZW_SCENE_CONTROLLER_CONF_GET_FRAME_
13581  00  =5  {
13582  00  =5      BYTE      cmdClass;                     /* The command class */
13583  00  =5      BYTE      cmd;                          /* The command */
13584  00  =5      BYTE      groupId;                      /**/
13585  00  =5  } ZW_SCENE_CONTROLLER_CONF_GET_FRAME;
13586  00  =5  
13587  00  =5  /************************************************************/
13588  00  =5  /* Scene Controller Conf Report command class structs */    
13589  00  =5  /************************************************************/
13590  00  =5  typedef struct _ZW_SCENE_CONTROLLER_CONF_REPORT_FRAME_
13591  00  =5  {
13592  00  =5      BYTE      cmdClass;                     /* The command class */
13593  00  =5      BYTE      cmd;                          /* The command */
13594  00  =5      BYTE      groupId;                      /**/
13595  00  =5      BYTE      sceneId;                      /**/
13596  00  =5      BYTE      dimmingDuration;              /**/
13597  00  =5  } ZW_SCENE_CONTROLLER_CONF_REPORT_FRAME;
13598  00  =5  
13599  00  =5  /************************************************************/
13600  00  =5  /* Scene Controller Conf Set command class structs */       
13601  00  =5  /************************************************************/
13602  00  =5  typedef struct _ZW_SCENE_CONTROLLER_CONF_SET_FRAME_
13603  00  =5  {
13604  00  =5      BYTE      cmdClass;                     /* The command class */
13605  00  =5      BYTE      cmd;                          /* The command */
13606  00  =5      BYTE      groupId;                      /**/
13607  00  =5      BYTE      sceneId;                      /**/
13608  00  =5      BYTE      dimmingDuration;              /**/
13609  00  =5  } ZW_SCENE_CONTROLLER_CONF_SET_FRAME;
13610  00  =5  
13611  00  =5  /************************************************************/
13612  00  =5  /* Schedule Entry Lock Enable All Set command class structs */
13613  00  =5  /************************************************************/
13614  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_FRAME_
13615  00  =5  {
13616  00  =5      BYTE      cmdClass;                     /* The command class */
13617  00  =5      BYTE      cmd;                          /* The command */
13618  00  =5      BYTE      enabled;                      /**/
13619  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_FRAME;
13620  00  =5  
13621  00  =5  /************************************************************/
13622  00  =5  /* Schedule Entry Lock Enable Set command class structs */  
13623  00  =5  /************************************************************/
13624  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_FRAME_
13625  00  =5  {
13626  00  =5      BYTE      cmdClass;                     /* The command class */
13627  00  =5      BYTE      cmd;                          /* The command */
13628  00  =5      BYTE      userIdentifier;               /**/
13629  00  =5      BYTE      enabled;                      /**/
13630  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_FRAME;
13631  00  =5  
13632  00  =5  /************************************************************/
13633  00  =5  /* Schedule Entry Lock Week Day Get command class structs */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 249 

13634  00  =5  /************************************************************/
13635  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_FRAME_
13636  00  =5  {
13637  00  =5      BYTE      cmdClass;                     /* The command class */
13638  00  =5      BYTE      cmd;                          /* The command */
13639  00  =5      BYTE      userIdentifier;               /**/
13640  00  =5      BYTE      scheduleSlotId;               /**/
13641  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_FRAME;
13642  00  =5  
13643  00  =5  /************************************************************/
13644  00  =5  /* Schedule Entry Lock Week Day Report command class structs */
13645  00  =5  /************************************************************/
13646  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_FRAME_
13647  00  =5  {
13648  00  =5      BYTE      cmdClass;                     /* The command class */
13649  00  =5      BYTE      cmd;                          /* The command */
13650  00  =5      BYTE      userIdentifier;               /**/
13651  00  =5      BYTE      scheduleSlotId;               /**/
13652  00  =5      BYTE      dayOfWeek;                    /**/
13653  00  =5      BYTE      startHour;                    /**/
13654  00  =5      BYTE      startMinute;                  /**/
13655  00  =5      BYTE      stopHour;                     /**/
13656  00  =5      BYTE      stopMinute;                   /**/
13657  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_FRAME;
13658  00  =5  
13659  00  =5  /************************************************************/
13660  00  =5  /* Schedule Entry Lock Week Day Set command class structs */
13661  00  =5  /************************************************************/
13662  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_FRAME_
13663  00  =5  {
13664  00  =5      BYTE      cmdClass;                     /* The command class */
13665  00  =5      BYTE      cmd;                          /* The command */
13666  00  =5      BYTE      setAction;                    /**/
13667  00  =5      BYTE      userIdentifier;               /**/
13668  00  =5      BYTE      scheduleSlotId;               /**/
13669  00  =5      BYTE      dayOfWeek;                    /**/
13670  00  =5      BYTE      startHour;                    /**/
13671  00  =5      BYTE      startMinute;                  /**/
13672  00  =5      BYTE      stopHour;                     /**/
13673  00  =5      BYTE      stopMinute;                   /**/
13674  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_FRAME;
13675  00  =5  
13676  00  =5  /************************************************************/
13677  00  =5  /* Schedule Entry Lock Year Day Get command class structs */
13678  00  =5  /************************************************************/
13679  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_FRAME_
13680  00  =5  {
13681  00  =5      BYTE      cmdClass;                     /* The command class */
13682  00  =5      BYTE      cmd;                          /* The command */
13683  00  =5      BYTE      userIdentifier;               /**/
13684  00  =5      BYTE      scheduleSlotId;               /**/
13685  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_FRAME;
13686  00  =5  
13687  00  =5  /************************************************************/
13688  00  =5  /* Schedule Entry Lock Year Day Report command class structs */
13689  00  =5  /************************************************************/
13690  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_FRAME_
13691  00  =5  {
13692  00  =5      BYTE      cmdClass;                     /* The command class */
13693  00  =5      BYTE      cmd;                          /* The command */
13694  00  =5      BYTE      userIdentifier;               /**/
13695  00  =5      BYTE      scheduleSlotId;               /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 250 

13696  00  =5      BYTE      startYear;                    /**/
13697  00  =5      BYTE      startMonth;                   /**/
13698  00  =5      BYTE      startDay;                     /**/
13699  00  =5      BYTE      startHour;                    /**/
13700  00  =5      BYTE      startMinute;                  /**/
13701  00  =5      BYTE      stopYear;                     /**/
13702  00  =5      BYTE      stopMonth;                    /**/
13703  00  =5      BYTE      stopDay;                      /**/
13704  00  =5      BYTE      stopHour;                     /**/
13705  00  =5      BYTE      stopMinute;                   /**/
13706  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_FRAME;
13707  00  =5  
13708  00  =5  /************************************************************/
13709  00  =5  /* Schedule Entry Lock Year Day Set command class structs */
13710  00  =5  /************************************************************/
13711  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_FRAME_
13712  00  =5  {
13713  00  =5      BYTE      cmdClass;                     /* The command class */
13714  00  =5      BYTE      cmd;                          /* The command */
13715  00  =5      BYTE      setAction;                    /**/
13716  00  =5      BYTE      userIdentifier;               /**/
13717  00  =5      BYTE      scheduleSlotId;               /**/
13718  00  =5      BYTE      startYear;                    /**/
13719  00  =5      BYTE      startMonth;                   /**/
13720  00  =5      BYTE      startDay;                     /**/
13721  00  =5      BYTE      startHour;                    /**/
13722  00  =5      BYTE      startMinute;                  /**/
13723  00  =5      BYTE      stopYear;                     /**/
13724  00  =5      BYTE      stopMonth;                    /**/
13725  00  =5      BYTE      stopDay;                      /**/
13726  00  =5      BYTE      stopHour;                     /**/
13727  00  =5      BYTE      stopMinute;                   /**/
13728  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_FRAME;
13729  00  =5  
13730  00  =5  /************************************************************/
13731  00  =5  /* Schedule Entry Type Supported Get command class structs */
13732  00  =5  /************************************************************/
13733  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_FRAME_
13734  00  =5  {
13735  00  =5      BYTE      cmdClass;                     /* The command class */
13736  00  =5      BYTE      cmd;                          /* The command */
13737  00  =5  } ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_FRAME;
13738  00  =5  
13739  00  =5  /************************************************************/
13740  00  =5  /* Schedule Entry Type Supported Report command class structs */
13741  00  =5  /************************************************************/
13742  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_FRAME_
13743  00  =5  {
13744  00  =5      BYTE      cmdClass;                     /* The command class */
13745  00  =5      BYTE      cmd;                          /* The command */
13746  00  =5      BYTE      numberOfSlotsWeekDay;         /**/
13747  00  =5      BYTE      numberOfSlotsYearDay;         /**/
13748  00  =5  } ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_FRAME;
13749  00  =5  
13750  00  =5  /************************************************************/
13751  00  =5  /* Schedule Entry Lock Enable All Set V2 command class structs */
13752  00  =5  /************************************************************/
13753  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V2_FRAME_
13754  00  =5  {
13755  00  =5      BYTE      cmdClass;                     /* The command class */
13756  00  =5      BYTE      cmd;                          /* The command */
13757  00  =5      BYTE      enabled;                      /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 251 

13758  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V2_FRAME;
13759  00  =5  
13760  00  =5  /************************************************************/
13761  00  =5  /* Schedule Entry Lock Enable Set V2 command class structs */
13762  00  =5  /************************************************************/
13763  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2_FRAME_
13764  00  =5  {
13765  00  =5      BYTE      cmdClass;                     /* The command class */
13766  00  =5      BYTE      cmd;                          /* The command */
13767  00  =5      BYTE      userIdentifier;               /**/
13768  00  =5      BYTE      enabled;                      /**/
13769  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2_FRAME;
13770  00  =5  
13771  00  =5  /************************************************************/
13772  00  =5  /* Schedule Entry Lock Time Offset Get V2 command class structs */
13773  00  =5  /************************************************************/
13774  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V2_FRAME_
13775  00  =5  {
13776  00  =5      BYTE      cmdClass;                     /* The command class */
13777  00  =5      BYTE      cmd;                          /* The command */
13778  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V2_FRAME;
13779  00  =5  
13780  00  =5  /************************************************************/
13781  00  =5  /* Schedule Entry Lock Time Offset Report V2 command class structs */
13782  00  =5  /************************************************************/
13783  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V2_FRAME_
13784  00  =5  {
13785  00  =5      BYTE      cmdClass;                     /* The command class */
13786  00  =5      BYTE      cmd;                          /* The command */
13787  00  =5      BYTE      level;                        /* masked byte */
13788  00  =5      BYTE      minuteTzo;                    /**/
13789  00  =5      BYTE      level2;                       /* masked byte */
13790  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V2_FRAME;
13791  00  =5  
13792  00  =5  /************************************************************/
13793  00  =5  /* Schedule Entry Lock Time Offset Set V2 command class structs */
13794  00  =5  /************************************************************/
13795  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V2_FRAME_
13796  00  =5  {
13797  00  =5      BYTE      cmdClass;                     /* The command class */
13798  00  =5      BYTE      cmd;                          /* The command */
13799  00  =5      BYTE      level;                        /* masked byte */
13800  00  =5      BYTE      minuteTzo;                    /**/
13801  00  =5      BYTE      level2;                       /* masked byte */
13802  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V2_FRAME;
13803  00  =5  
13804  00  =5  /************************************************************/
13805  00  =5  /* Schedule Entry Lock Week Day Get V2 command class structs */
13806  00  =5  /************************************************************/
13807  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V2_FRAME_
13808  00  =5  {
13809  00  =5      BYTE      cmdClass;                     /* The command class */
13810  00  =5      BYTE      cmd;                          /* The command */
13811  00  =5      BYTE      userIdentifier;               /**/
13812  00  =5      BYTE      scheduleSlotId;               /**/
13813  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V2_FRAME;
13814  00  =5  
13815  00  =5  /************************************************************/
13816  00  =5  /* Schedule Entry Lock Week Day Report V2 command class structs */
13817  00  =5  /************************************************************/
13818  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V2_FRAME_
13819  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 252 

13820  00  =5      BYTE      cmdClass;                     /* The command class */
13821  00  =5      BYTE      cmd;                          /* The command */
13822  00  =5      BYTE      userIdentifier;               /**/
13823  00  =5      BYTE      scheduleSlotId;               /**/
13824  00  =5      BYTE      dayOfWeek;                    /**/
13825  00  =5      BYTE      startHour;                    /**/
13826  00  =5      BYTE      startMinute;                  /**/
13827  00  =5      BYTE      stopHour;                     /**/
13828  00  =5      BYTE      stopMinute;                   /**/
13829  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V2_FRAME;
13830  00  =5  
13831  00  =5  /************************************************************/
13832  00  =5  /* Schedule Entry Lock Week Day Set V2 command class structs */
13833  00  =5  /************************************************************/
13834  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V2_FRAME_
13835  00  =5  {
13836  00  =5      BYTE      cmdClass;                     /* The command class */
13837  00  =5      BYTE      cmd;                          /* The command */
13838  00  =5      BYTE      setAction;                    /**/
13839  00  =5      BYTE      userIdentifier;               /**/
13840  00  =5      BYTE      scheduleSlotId;               /**/
13841  00  =5      BYTE      dayOfWeek;                    /**/
13842  00  =5      BYTE      startHour;                    /**/
13843  00  =5      BYTE      startMinute;                  /**/
13844  00  =5      BYTE      stopHour;                     /**/
13845  00  =5      BYTE      stopMinute;                   /**/
13846  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V2_FRAME;
13847  00  =5  
13848  00  =5  /************************************************************/
13849  00  =5  /* Schedule Entry Lock Year Day Get V2 command class structs */
13850  00  =5  /************************************************************/
13851  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V2_FRAME_
13852  00  =5  {
13853  00  =5      BYTE      cmdClass;                     /* The command class */
13854  00  =5      BYTE      cmd;                          /* The command */
13855  00  =5      BYTE      userIdentifier;               /**/
13856  00  =5      BYTE      scheduleSlotId;               /**/
13857  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V2_FRAME;
13858  00  =5  
13859  00  =5  /************************************************************/
13860  00  =5  /* Schedule Entry Lock Year Day Report V2 command class structs */
13861  00  =5  /************************************************************/
13862  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V2_FRAME_
13863  00  =5  {
13864  00  =5      BYTE      cmdClass;                     /* The command class */
13865  00  =5      BYTE      cmd;                          /* The command */
13866  00  =5      BYTE      userIdentifier;               /**/
13867  00  =5      BYTE      scheduleSlotId;               /**/
13868  00  =5      BYTE      startYear;                    /**/
13869  00  =5      BYTE      startMonth;                   /**/
13870  00  =5      BYTE      startDay;                     /**/
13871  00  =5      BYTE      startHour;                    /**/
13872  00  =5      BYTE      startMinute;                  /**/
13873  00  =5      BYTE      stopYear;                     /**/
13874  00  =5      BYTE      stopMonth;                    /**/
13875  00  =5      BYTE      stopDay;                      /**/
13876  00  =5      BYTE      stopHour;                     /**/
13877  00  =5      BYTE      stopMinute;                   /**/
13878  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V2_FRAME;
13879  00  =5  
13880  00  =5  /************************************************************/
13881  00  =5  /* Schedule Entry Lock Year Day Set V2 command class structs */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 253 

13882  00  =5  /************************************************************/
13883  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V2_FRAME_
13884  00  =5  {
13885  00  =5      BYTE      cmdClass;                     /* The command class */
13886  00  =5      BYTE      cmd;                          /* The command */
13887  00  =5      BYTE      setAction;                    /**/
13888  00  =5      BYTE      userIdentifier;               /**/
13889  00  =5      BYTE      scheduleSlotId;               /**/
13890  00  =5      BYTE      startYear;                    /**/
13891  00  =5      BYTE      startMonth;                   /**/
13892  00  =5      BYTE      startDay;                     /**/
13893  00  =5      BYTE      startHour;                    /**/
13894  00  =5      BYTE      startMinute;                  /**/
13895  00  =5      BYTE      stopYear;                     /**/
13896  00  =5      BYTE      stopMonth;                    /**/
13897  00  =5      BYTE      stopDay;                      /**/
13898  00  =5      BYTE      stopHour;                     /**/
13899  00  =5      BYTE      stopMinute;                   /**/
13900  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V2_FRAME;
13901  00  =5  
13902  00  =5  /************************************************************/
13903  00  =5  /* Schedule Entry Type Supported Get V2 command class structs */
13904  00  =5  /************************************************************/
13905  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V2_FRAME_
13906  00  =5  {
13907  00  =5      BYTE      cmdClass;                     /* The command class */
13908  00  =5      BYTE      cmd;                          /* The command */
13909  00  =5  } ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V2_FRAME;
13910  00  =5  
13911  00  =5  /************************************************************/
13912  00  =5  /* Schedule Entry Type Supported Report V2 command class structs */
13913  00  =5  /************************************************************/
13914  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V2_FRAME_
13915  00  =5  {
13916  00  =5      BYTE      cmdClass;                     /* The command class */
13917  00  =5      BYTE      cmd;                          /* The command */
13918  00  =5      BYTE      numberOfSlotsWeekDay;         /**/
13919  00  =5      BYTE      numberOfSlotsYearDay;         /**/
13920  00  =5  } ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V2_FRAME;
13921  00  =5  
13922  00  =5  /************************************************************/
13923  00  =5  /* Schedule Entry Lock Enable All Set V3 command class structs */
13924  00  =5  /************************************************************/
13925  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V3_FRAME_
13926  00  =5  {
13927  00  =5      BYTE      cmdClass;                     /* The command class */
13928  00  =5      BYTE      cmd;                          /* The command */
13929  00  =5      BYTE      enabled;                      /**/
13930  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V3_FRAME;
13931  00  =5  
13932  00  =5  /************************************************************/
13933  00  =5  /* Schedule Entry Lock Enable Set V3 command class structs */
13934  00  =5  /************************************************************/
13935  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3_FRAME_
13936  00  =5  {
13937  00  =5      BYTE      cmdClass;                     /* The command class */
13938  00  =5      BYTE      cmd;                          /* The command */
13939  00  =5      BYTE      userIdentifier;               /**/
13940  00  =5      BYTE      enabled;                      /**/
13941  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3_FRAME;
13942  00  =5  
13943  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 254 

13944  00  =5  /* Schedule Entry Lock Time Offset Get V3 command class structs */
13945  00  =5  /************************************************************/
13946  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V3_FRAME_
13947  00  =5  {
13948  00  =5      BYTE      cmdClass;                     /* The command class */
13949  00  =5      BYTE      cmd;                          /* The command */
13950  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V3_FRAME;
13951  00  =5  
13952  00  =5  /************************************************************/
13953  00  =5  /* Schedule Entry Lock Time Offset Report V3 command class structs */
13954  00  =5  /************************************************************/
13955  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V3_FRAME_
13956  00  =5  {
13957  00  =5      BYTE      cmdClass;                     /* The command class */
13958  00  =5      BYTE      cmd;                          /* The command */
13959  00  =5      BYTE      level;                        /* masked byte */
13960  00  =5      BYTE      minuteTzo;                    /**/
13961  00  =5      BYTE      level2;                       /* masked byte */
13962  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V3_FRAME;
13963  00  =5  
13964  00  =5  /************************************************************/
13965  00  =5  /* Schedule Entry Lock Time Offset Set V3 command class structs */
13966  00  =5  /************************************************************/
13967  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V3_FRAME_
13968  00  =5  {
13969  00  =5      BYTE      cmdClass;                     /* The command class */
13970  00  =5      BYTE      cmd;                          /* The command */
13971  00  =5      BYTE      level;                        /* masked byte */
13972  00  =5      BYTE      minuteTzo;                    /**/
13973  00  =5      BYTE      level2;                       /* masked byte */
13974  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V3_FRAME;
13975  00  =5  
13976  00  =5  /************************************************************/
13977  00  =5  /* Schedule Entry Lock Week Day Get V3 command class structs */
13978  00  =5  /************************************************************/
13979  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V3_FRAME_
13980  00  =5  {
13981  00  =5      BYTE      cmdClass;                     /* The command class */
13982  00  =5      BYTE      cmd;                          /* The command */
13983  00  =5      BYTE      userIdentifier;               /**/
13984  00  =5      BYTE      scheduleSlotId;               /**/
13985  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V3_FRAME;
13986  00  =5  
13987  00  =5  /************************************************************/
13988  00  =5  /* Schedule Entry Lock Week Day Report V3 command class structs */
13989  00  =5  /************************************************************/
13990  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V3_FRAME_
13991  00  =5  {
13992  00  =5      BYTE      cmdClass;                     /* The command class */
13993  00  =5      BYTE      cmd;                          /* The command */
13994  00  =5      BYTE      userIdentifier;               /**/
13995  00  =5      BYTE      scheduleSlotId;               /**/
13996  00  =5      BYTE      dayOfWeek;                    /**/
13997  00  =5      BYTE      startHour;                    /**/
13998  00  =5      BYTE      startMinute;                  /**/
13999  00  =5      BYTE      stopHour;                     /**/
14000  00  =5      BYTE      stopMinute;                   /**/
14001  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V3_FRAME;
14002  00  =5  
14003  00  =5  /************************************************************/
14004  00  =5  /* Schedule Entry Lock Week Day Set V3 command class structs */
14005  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 255 

14006  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V3_FRAME_
14007  00  =5  {
14008  00  =5      BYTE      cmdClass;                     /* The command class */
14009  00  =5      BYTE      cmd;                          /* The command */
14010  00  =5      BYTE      setAction;                    /**/
14011  00  =5      BYTE      userIdentifier;               /**/
14012  00  =5      BYTE      scheduleSlotId;               /**/
14013  00  =5      BYTE      dayOfWeek;                    /**/
14014  00  =5      BYTE      startHour;                    /**/
14015  00  =5      BYTE      startMinute;                  /**/
14016  00  =5      BYTE      stopHour;                     /**/
14017  00  =5      BYTE      stopMinute;                   /**/
14018  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V3_FRAME;
14019  00  =5  
14020  00  =5  /************************************************************/
14021  00  =5  /* Schedule Entry Lock Year Day Get V3 command class structs */
14022  00  =5  /************************************************************/
14023  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V3_FRAME_
14024  00  =5  {
14025  00  =5      BYTE      cmdClass;                     /* The command class */
14026  00  =5      BYTE      cmd;                          /* The command */
14027  00  =5      BYTE      userIdentifier;               /**/
14028  00  =5      BYTE      scheduleSlotId;               /**/
14029  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V3_FRAME;
14030  00  =5  
14031  00  =5  /************************************************************/
14032  00  =5  /* Schedule Entry Lock Year Day Report V3 command class structs */
14033  00  =5  /************************************************************/
14034  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V3_FRAME_
14035  00  =5  {
14036  00  =5      BYTE      cmdClass;                     /* The command class */
14037  00  =5      BYTE      cmd;                          /* The command */
14038  00  =5      BYTE      userIdentifier;               /**/
14039  00  =5      BYTE      scheduleSlotId;               /**/
14040  00  =5      BYTE      startYear;                    /**/
14041  00  =5      BYTE      startMonth;                   /**/
14042  00  =5      BYTE      startDay;                     /**/
14043  00  =5      BYTE      startHour;                    /**/
14044  00  =5      BYTE      startMinute;                  /**/
14045  00  =5      BYTE      stopYear;                     /**/
14046  00  =5      BYTE      stopMonth;                    /**/
14047  00  =5      BYTE      stopDay;                      /**/
14048  00  =5      BYTE      stopHour;                     /**/
14049  00  =5      BYTE      stopMinute;                   /**/
14050  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V3_FRAME;
14051  00  =5  
14052  00  =5  /************************************************************/
14053  00  =5  /* Schedule Entry Lock Year Day Set V3 command class structs */
14054  00  =5  /************************************************************/
14055  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V3_FRAME_
14056  00  =5  {
14057  00  =5      BYTE      cmdClass;                     /* The command class */
14058  00  =5      BYTE      cmd;                          /* The command */
14059  00  =5      BYTE      setAction;                    /**/
14060  00  =5      BYTE      userIdentifier;               /**/
14061  00  =5      BYTE      scheduleSlotId;               /**/
14062  00  =5      BYTE      startYear;                    /**/
14063  00  =5      BYTE      startMonth;                   /**/
14064  00  =5      BYTE      startDay;                     /**/
14065  00  =5      BYTE      startHour;                    /**/
14066  00  =5      BYTE      startMinute;                  /**/
14067  00  =5      BYTE      stopYear;                     /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 256 

14068  00  =5      BYTE      stopMonth;                    /**/
14069  00  =5      BYTE      stopDay;                      /**/
14070  00  =5      BYTE      stopHour;                     /**/
14071  00  =5      BYTE      stopMinute;                   /**/
14072  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V3_FRAME;
14073  00  =5  
14074  00  =5  /************************************************************/
14075  00  =5  /* Schedule Entry Type Supported Get V3 command class structs */
14076  00  =5  /************************************************************/
14077  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V3_FRAME_
14078  00  =5  {
14079  00  =5      BYTE      cmdClass;                     /* The command class */
14080  00  =5      BYTE      cmd;                          /* The command */
14081  00  =5  } ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V3_FRAME;
14082  00  =5  
14083  00  =5  /************************************************************/
14084  00  =5  /* Schedule Entry Type Supported Report V3 command class structs */
14085  00  =5  /************************************************************/
14086  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V3_FRAME_
14087  00  =5  {
14088  00  =5      BYTE      cmdClass;                     /* The command class */
14089  00  =5      BYTE      cmd;                          /* The command */
14090  00  =5      BYTE      numberOfSlotsWeekDay;         /**/
14091  00  =5      BYTE      numberOfSlotsYearDay;         /**/
14092  00  =5      BYTE      numberOfSlotsDailyRepeating;  /**/
14093  00  =5  } ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V3_FRAME;
14094  00  =5  
14095  00  =5  /************************************************************/
14096  00  =5  /* Schedule Entry Lock Daily Repeating Get V3 command class structs */
14097  00  =5  /************************************************************/
14098  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V3_FRAME_
14099  00  =5  {
14100  00  =5      BYTE      cmdClass;                     /* The command class */
14101  00  =5      BYTE      cmd;                          /* The command */
14102  00  =5      BYTE      userIdentifier;               /**/
14103  00  =5      BYTE      scheduleSlotId;               /**/
14104  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V3_FRAME;
14105  00  =5  
14106  00  =5  /************************************************************/
14107  00  =5  /* Schedule Entry Lock Daily Repeating Report V3 command class structs */
14108  00  =5  /************************************************************/
14109  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V3_FRAME_
14110  00  =5  {
14111  00  =5      BYTE      cmdClass;                     /* The command class */
14112  00  =5      BYTE      cmd;                          /* The command */
14113  00  =5      BYTE      userIdentifier;               /**/
14114  00  =5      BYTE      scheduleSlotId;               /**/
14115  00  =5      BYTE      weekDayBitmask;               /**/
14116  00  =5      BYTE      startHour;                    /**/
14117  00  =5      BYTE      startMinute;                  /**/
14118  00  =5      BYTE      durationHour;                 /**/
14119  00  =5      BYTE      durationMinute;               /**/
14120  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V3_FRAME;
14121  00  =5  
14122  00  =5  /************************************************************/
14123  00  =5  /* Schedule Entry Lock Daily Repeating Set V3 command class structs */
14124  00  =5  /************************************************************/
14125  00  =5  typedef struct _ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V3_FRAME_
14126  00  =5  {
14127  00  =5      BYTE      cmdClass;                     /* The command class */
14128  00  =5      BYTE      cmd;                          /* The command */
14129  00  =5      BYTE      setAction;                    /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 257 

14130  00  =5      BYTE      userIdentifier;               /**/
14131  00  =5      BYTE      scheduleSlotId;               /**/
14132  00  =5      BYTE      weekDayBitmask;               /**/
14133  00  =5      BYTE      startHour;                    /**/
14134  00  =5      BYTE      startMinute;                  /**/
14135  00  =5      BYTE      durationHour;                 /**/
14136  00  =5      BYTE      durationMinute;               /**/
14137  00  =5  } ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V3_FRAME;
14138  00  =5  
14139  00  =5  /************************************************************/
14140  00  =5  /* Screen Attributes Get command class structs */           
14141  00  =5  /************************************************************/
14142  00  =5  typedef struct _ZW_SCREEN_ATTRIBUTES_GET_FRAME_
14143  00  =5  {
14144  00  =5      BYTE      cmdClass;                     /* The command class */
14145  00  =5      BYTE      cmd;                          /* The command */
14146  00  =5  } ZW_SCREEN_ATTRIBUTES_GET_FRAME;
14147  00  =5  
14148  00  =5  /************************************************************/
14149  00  =5  /* Screen Attributes Report command class structs */        
14150  00  =5  /************************************************************/
14151  00  =5  typedef struct _ZW_SCREEN_ATTRIBUTES_REPORT_FRAME_
14152  00  =5  {
14153  00  =5      BYTE      cmdClass;                     /* The command class */
14154  00  =5      BYTE      cmd;                          /* The command */
14155  00  =5      BYTE      properties1;                  /* masked byte */
14156  00  =5      BYTE      numberOfCharactersPerLine;    /**/
14157  00  =5      BYTE      sizeOfLineBuffer;             /**/
14158  00  =5      BYTE      numericalPresentationOfACharacter;/**/
14159  00  =5  } ZW_SCREEN_ATTRIBUTES_REPORT_FRAME;
14160  00  =5  
14161  00  =5  /************************************************************/
14162  00  =5  /* Screen Attributes Get V2 command class structs */        
14163  00  =5  /************************************************************/
14164  00  =5  typedef struct _ZW_SCREEN_ATTRIBUTES_GET_V2_FRAME_
14165  00  =5  {
14166  00  =5      BYTE      cmdClass;                     /* The command class */
14167  00  =5      BYTE      cmd;                          /* The command */
14168  00  =5  } ZW_SCREEN_ATTRIBUTES_GET_V2_FRAME;
14169  00  =5  
14170  00  =5  /************************************************************/
14171  00  =5  /* Screen Attributes Report V2 command class structs */     
14172  00  =5  /************************************************************/
14173  00  =5  typedef struct _ZW_SCREEN_ATTRIBUTES_REPORT_V2_FRAME_
14174  00  =5  {
14175  00  =5      BYTE      cmdClass;                     /* The command class */
14176  00  =5      BYTE      cmd;                          /* The command */
14177  00  =5      BYTE      properties1;                  /* masked byte */
14178  00  =5      BYTE      numberOfCharactersPerLine;    /**/
14179  00  =5      BYTE      sizeOfLineBuffer;             /**/
14180  00  =5      BYTE      numericalPresentationOfACharacter;/**/
14181  00  =5      BYTE      screenTimeout;                /**/
14182  00  =5  } ZW_SCREEN_ATTRIBUTES_REPORT_V2_FRAME;
14183  00  =5  
14184  00  =5  /************************************************************/
14185  00  =5  /* Screen Md Get command class structs */                   
14186  00  =5  /************************************************************/
14187  00  =5  typedef struct _ZW_SCREEN_MD_GET_FRAME_
14188  00  =5  {
14189  00  =5      BYTE      cmdClass;                     /* The command class */
14190  00  =5      BYTE      cmd;                          /* The command */
14191  00  =5      BYTE      numberOfReports;              /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 258 

14192  00  =5      BYTE      nodeId;                       /**/
14193  00  =5  } ZW_SCREEN_MD_GET_FRAME;
14194  00  =5  
14195  00  =5  /************************************************************/
14196  00  =5  /* Screen Md Report variant group structs */                
14197  00  =5  /************************************************************/
14198  00  =5  typedef struct _VG_SCREEN_MD_REPORT_1BYTE_VG_
14199  00  =5  {
14200  00  =5      BYTE      properties1;                  /* masked byte */
14201  00  =5      BYTE      characterPosition;            /**/
14202  00  =5      BYTE      numberOfCharacters;           /**/
14203  00  =5      BYTE      character1;                   
14204  00  =5  } VG_SCREEN_MD_REPORT_1BYTE_VG;
14205  00  =5  
14206  00  =5  /************************************************************/
14207  00  =5  /* Screen Md Report variant group structs */                
14208  00  =5  /************************************************************/
14209  00  =5  typedef struct _VG_SCREEN_MD_REPORT_2BYTE_VG_
14210  00  =5  {
14211  00  =5      BYTE      properties1;                  /* masked byte */
14212  00  =5      BYTE      characterPosition;            /**/
14213  00  =5      BYTE      numberOfCharacters;           /**/
14214  00  =5      BYTE      character1;                   /* MSB */
14215  00  =5      BYTE      character2;                   /* LSB */
14216  00  =5  } VG_SCREEN_MD_REPORT_2BYTE_VG;
14217  00  =5  
14218  00  =5  /************************************************************/
14219  00  =5  /* Screen Md Report variant group structs */                
14220  00  =5  /************************************************************/
14221  00  =5  typedef struct _VG_SCREEN_MD_REPORT_3BYTE_VG_
14222  00  =5  {
14223  00  =5      BYTE      properties1;                  /* masked byte */
14224  00  =5      BYTE      characterPosition;            /**/
14225  00  =5      BYTE      numberOfCharacters;           /**/
14226  00  =5      BYTE      character1;                   /* MSB */
14227  00  =5      BYTE      character2;                   
14228  00  =5      BYTE      character3;                   /* LSB */
14229  00  =5  } VG_SCREEN_MD_REPORT_3BYTE_VG;
14230  00  =5  
14231  00  =5  /************************************************************/
14232  00  =5  /* Screen Md Report variant group structs */                
14233  00  =5  /************************************************************/
14234  00  =5  typedef struct _VG_SCREEN_MD_REPORT_4BYTE_VG_
14235  00  =5  {
14236  00  =5      BYTE      properties1;                  /* masked byte */
14237  00  =5      BYTE      characterPosition;            /**/
14238  00  =5      BYTE      numberOfCharacters;           /**/
14239  00  =5      BYTE      character1;                   /* MSB */
14240  00  =5      BYTE      character2;                   
14241  00  =5      BYTE      character3;                   
14242  00  =5      BYTE      character4;                   /* LSB */
14243  00  =5  } VG_SCREEN_MD_REPORT_4BYTE_VG;
14244  00  =5  
14245  00  =5  /************************************************************/
14246  00  =5  /* Screen Md Report 1byte command class structs */          
14247  00  =5  /************************************************************/
14248  00  =5  typedef struct _ZW_SCREEN_MD_REPORT_1BYTE_FRAME_
14249  00  =5  {
14250  00  =5      BYTE      cmdClass;                     /* The command class */
14251  00  =5      BYTE      cmd;                          /* The command */
14252  00  =5      BYTE      properties1;                  /* masked byte */
14253  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup1;                /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 259 

14254  00  =5  } ZW_SCREEN_MD_REPORT_1BYTE_FRAME;
14255  00  =5  
14256  00  =5  /************************************************************/
14257  00  =5  /* Screen Md Report 2byte command class structs */          
14258  00  =5  /************************************************************/
14259  00  =5  typedef struct _ZW_SCREEN_MD_REPORT_2BYTE_FRAME_
14260  00  =5  {
14261  00  =5      BYTE      cmdClass;                     /* The command class */
14262  00  =5      BYTE      cmd;                          /* The command */
14263  00  =5      BYTE      properties1;                  /* masked byte */
14264  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup1;                /**/
14265  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup2;                /**/
14266  00  =5  } ZW_SCREEN_MD_REPORT_2BYTE_FRAME;
14267  00  =5  
14268  00  =5  /************************************************************/
14269  00  =5  /* Screen Md Report 3byte command class structs */          
14270  00  =5  /************************************************************/
14271  00  =5  typedef struct _ZW_SCREEN_MD_REPORT_3BYTE_FRAME_
14272  00  =5  {
14273  00  =5      BYTE      cmdClass;                     /* The command class */
14274  00  =5      BYTE      cmd;                          /* The command */
14275  00  =5      BYTE      properties1;                  /* masked byte */
14276  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup1;                /**/
14277  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup2;                /**/
14278  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup3;                /**/
14279  00  =5  } ZW_SCREEN_MD_REPORT_3BYTE_FRAME;
14280  00  =5  
14281  00  =5  /************************************************************/
14282  00  =5  /* Screen Md Report 4byte command class structs */          
14283  00  =5  /************************************************************/
14284  00  =5  typedef struct _ZW_SCREEN_MD_REPORT_4BYTE_FRAME_
14285  00  =5  {
14286  00  =5      BYTE      cmdClass;                     /* The command class */
14287  00  =5      BYTE      cmd;                          /* The command */
14288  00  =5      BYTE      properties1;                  /* masked byte */
14289  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup1;                /**/
14290  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup2;                /**/
14291  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup3;                /**/
14292  00  =5      VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup4;                /**/
14293  00  =5  } ZW_SCREEN_MD_REPORT_4BYTE_FRAME;
14294  00  =5  
14295  00  =5  /************************************************************/
14296  00  =5  /* Screen Md Get V2 command class structs */                
14297  00  =5  /************************************************************/
14298  00  =5  typedef struct _ZW_SCREEN_MD_GET_V2_FRAME_
14299  00  =5  {
14300  00  =5      BYTE      cmdClass;                     /* The command class */
14301  00  =5      BYTE      cmd;                          /* The command */
14302  00  =5      BYTE      numberOfReports;              /**/
14303  00  =5      BYTE      nodeId;                       /**/
14304  00  =5  } ZW_SCREEN_MD_GET_V2_FRAME;
14305  00  =5  
14306  00  =5  /************************************************************/
14307  00  =5  /* Screen Md Report V2 variant group structs */             
14308  00  =5  /************************************************************/
14309  00  =5  typedef struct _VG_SCREEN_MD_REPORT_1BYTE_V2_VG_
14310  00  =5  {
14311  00  =5      BYTE      properties1;                  /* masked byte */
14312  00  =5      BYTE      characterPosition;            /**/
14313  00  =5      BYTE      numberOfCharacters;           /**/
14314  00  =5      BYTE      character1;                   
14315  00  =5  } VG_SCREEN_MD_REPORT_1BYTE_V2_VG;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 260 

14316  00  =5  
14317  00  =5  /************************************************************/
14318  00  =5  /* Screen Md Report V2 variant group structs */             
14319  00  =5  /************************************************************/
14320  00  =5  typedef struct _VG_SCREEN_MD_REPORT_2BYTE_V2_VG_
14321  00  =5  {
14322  00  =5      BYTE      properties1;                  /* masked byte */
14323  00  =5      BYTE      characterPosition;            /**/
14324  00  =5      BYTE      numberOfCharacters;           /**/
14325  00  =5      BYTE      character1;                   /* MSB */
14326  00  =5      BYTE      character2;                   /* LSB */
14327  00  =5  } VG_SCREEN_MD_REPORT_2BYTE_V2_VG;
14328  00  =5  
14329  00  =5  /************************************************************/
14330  00  =5  /* Screen Md Report V2 variant group structs */             
14331  00  =5  /************************************************************/
14332  00  =5  typedef struct _VG_SCREEN_MD_REPORT_3BYTE_V2_VG_
14333  00  =5  {
14334  00  =5      BYTE      properties1;                  /* masked byte */
14335  00  =5      BYTE      characterPosition;            /**/
14336  00  =5      BYTE      numberOfCharacters;           /**/
14337  00  =5      BYTE      character1;                   /* MSB */
14338  00  =5      BYTE      character2;                   
14339  00  =5      BYTE      character3;                   /* LSB */
14340  00  =5  } VG_SCREEN_MD_REPORT_3BYTE_V2_VG;
14341  00  =5  
14342  00  =5  /************************************************************/
14343  00  =5  /* Screen Md Report V2 variant group structs */             
14344  00  =5  /************************************************************/
14345  00  =5  typedef struct _VG_SCREEN_MD_REPORT_4BYTE_V2_VG_
14346  00  =5  {
14347  00  =5      BYTE      properties1;                  /* masked byte */
14348  00  =5      BYTE      characterPosition;            /**/
14349  00  =5      BYTE      numberOfCharacters;           /**/
14350  00  =5      BYTE      character1;                   /* MSB */
14351  00  =5      BYTE      character2;                   
14352  00  =5      BYTE      character3;                   
14353  00  =5      BYTE      character4;                   /* LSB */
14354  00  =5  } VG_SCREEN_MD_REPORT_4BYTE_V2_VG;
14355  00  =5  
14356  00  =5  /************************************************************/
14357  00  =5  /* Screen Md Report 1byte V2 command class structs */       
14358  00  =5  /************************************************************/
14359  00  =5  typedef struct _ZW_SCREEN_MD_REPORT_1BYTE_V2_FRAME_
14360  00  =5  {
14361  00  =5      BYTE      cmdClass;                     /* The command class */
14362  00  =5      BYTE      cmd;                          /* The command */
14363  00  =5      BYTE      properties1;                  /* masked byte */
14364  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup1;                /**/
14365  00  =5      BYTE      properties2;                  /* masked byte */
14366  00  =5  } ZW_SCREEN_MD_REPORT_1BYTE_V2_FRAME;
14367  00  =5  
14368  00  =5  /************************************************************/
14369  00  =5  /* Screen Md Report 2byte V2 command class structs */       
14370  00  =5  /************************************************************/
14371  00  =5  typedef struct _ZW_SCREEN_MD_REPORT_2BYTE_V2_FRAME_
14372  00  =5  {
14373  00  =5      BYTE      cmdClass;                     /* The command class */
14374  00  =5      BYTE      cmd;                          /* The command */
14375  00  =5      BYTE      properties1;                  /* masked byte */
14376  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup1;                /**/
14377  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup2;                /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 261 

14378  00  =5      BYTE      properties2;                  /* masked byte */
14379  00  =5  } ZW_SCREEN_MD_REPORT_2BYTE_V2_FRAME;
14380  00  =5  
14381  00  =5  /************************************************************/
14382  00  =5  /* Screen Md Report 3byte V2 command class structs */       
14383  00  =5  /************************************************************/
14384  00  =5  typedef struct _ZW_SCREEN_MD_REPORT_3BYTE_V2_FRAME_
14385  00  =5  {
14386  00  =5      BYTE      cmdClass;                     /* The command class */
14387  00  =5      BYTE      cmd;                          /* The command */
14388  00  =5      BYTE      properties1;                  /* masked byte */
14389  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup1;                /**/
14390  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup2;                /**/
14391  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup3;                /**/
14392  00  =5      BYTE      properties2;                  /* masked byte */
14393  00  =5  } ZW_SCREEN_MD_REPORT_3BYTE_V2_FRAME;
14394  00  =5  
14395  00  =5  /************************************************************/
14396  00  =5  /* Screen Md Report 4byte V2 command class structs */       
14397  00  =5  /************************************************************/
14398  00  =5  typedef struct _ZW_SCREEN_MD_REPORT_4BYTE_V2_FRAME_
14399  00  =5  {
14400  00  =5      BYTE      cmdClass;                     /* The command class */
14401  00  =5      BYTE      cmd;                          /* The command */
14402  00  =5      BYTE      properties1;                  /* masked byte */
14403  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup1;                /**/
14404  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup2;                /**/
14405  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup3;                /**/
14406  00  =5      VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup4;                /**/
14407  00  =5      BYTE      properties2;                  /* masked byte */
14408  00  =5  } ZW_SCREEN_MD_REPORT_4BYTE_V2_FRAME;
14409  00  =5  
14410  00  =5  /************************************************************/
14411  00  =5  /* Security Panel Mode Get command class structs */         
14412  00  =5  /************************************************************/
14413  00  =5  typedef struct _ZW_SECURITY_PANEL_MODE_GET_FRAME_
14414  00  =5  {
14415  00  =5      BYTE      cmdClass;                     /* The command class */
14416  00  =5      BYTE      cmd;                          /* The command */
14417  00  =5  } ZW_SECURITY_PANEL_MODE_GET_FRAME;
14418  00  =5  
14419  00  =5  /************************************************************/
14420  00  =5  /* Security Panel Mode Report command class structs */      
14421  00  =5  /************************************************************/
14422  00  =5  typedef struct _ZW_SECURITY_PANEL_MODE_REPORT_FRAME_
14423  00  =5  {
14424  00  =5      BYTE      cmdClass;                     /* The command class */
14425  00  =5      BYTE      cmd;                          /* The command */
14426  00  =5      BYTE      mode;                         /**/
14427  00  =5  } ZW_SECURITY_PANEL_MODE_REPORT_FRAME;
14428  00  =5  
14429  00  =5  /************************************************************/
14430  00  =5  /* Security Panel Mode Set command class structs */         
14431  00  =5  /************************************************************/
14432  00  =5  typedef struct _ZW_SECURITY_PANEL_MODE_SET_FRAME_
14433  00  =5  {
14434  00  =5      BYTE      cmdClass;                     /* The command class */
14435  00  =5      BYTE      cmd;                          /* The command */
14436  00  =5      BYTE      mode;                         /**/
14437  00  =5  } ZW_SECURITY_PANEL_MODE_SET_FRAME;
14438  00  =5  
14439  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 262 

14440  00  =5  /* Security Panel Mode Supported Get command class structs */
14441  00  =5  /************************************************************/
14442  00  =5  typedef struct _ZW_SECURITY_PANEL_MODE_SUPPORTED_GET_FRAME_
14443  00  =5  {
14444  00  =5      BYTE      cmdClass;                     /* The command class */
14445  00  =5      BYTE      cmd;                          /* The command */
14446  00  =5  } ZW_SECURITY_PANEL_MODE_SUPPORTED_GET_FRAME;
14447  00  =5  
14448  00  =5  /************************************************************/
14449  00  =5  /* Security Panel Mode Supported Report command class structs */
14450  00  =5  /************************************************************/
14451  00  =5  typedef struct _ZW_SECURITY_PANEL_MODE_SUPPORTED_REPORT_FRAME_
14452  00  =5  {
14453  00  =5      BYTE      cmdClass;                     /* The command class */
14454  00  =5      BYTE      cmd;                          /* The command */
14455  00  =5      BYTE      supportedModeBitMask1;        /* MSB */
14456  00  =5      BYTE      supportedModeBitMask2;        /* LSB */
14457  00  =5  } ZW_SECURITY_PANEL_MODE_SUPPORTED_REPORT_FRAME;
14458  00  =5  
14459  00  =5  /************************************************************/
14460  00  =5  /* Security Panel Zone Sensor Installed Report command class structs */
14461  00  =5  /************************************************************/
14462  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_REPORT_FRAME_
14463  00  =5  {
14464  00  =5      BYTE      cmdClass;                     /* The command class */
14465  00  =5      BYTE      cmd;                          /* The command */
14466  00  =5      BYTE      zoneNumber;                   /**/
14467  00  =5      BYTE      numberOfSensors;              /**/
14468  00  =5  } ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_REPORT_FRAME;
14469  00  =5  
14470  00  =5  /************************************************************/
14471  00  =5  /* Security Panel Zone Sensor Type Get command class structs */
14472  00  =5  /************************************************************/
14473  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_GET_FRAME_
14474  00  =5  {
14475  00  =5      BYTE      cmdClass;                     /* The command class */
14476  00  =5      BYTE      cmd;                          /* The command */
14477  00  =5      BYTE      zoneNumber;                   /**/
14478  00  =5      BYTE      sensorNumber;                 /**/
14479  00  =5  } ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_GET_FRAME;
14480  00  =5  
14481  00  =5  /************************************************************/
14482  00  =5  /* Security Panel Zone Sensor Type Report command class structs */
14483  00  =5  /************************************************************/
14484  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_REPORT_FRAME_
14485  00  =5  {
14486  00  =5      BYTE      cmdClass;                     /* The command class */
14487  00  =5      BYTE      cmd;                          /* The command */
14488  00  =5      BYTE      zoneNumber;                   /**/
14489  00  =5      BYTE      sensorNumber;                 /**/
14490  00  =5      BYTE      zwaveAlarmType;               /**/
14491  00  =5  } ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_REPORT_FRAME;
14492  00  =5  
14493  00  =5  /************************************************************/
14494  00  =5  /* Security Panel Zone Sensor Installed Get command class structs */
14495  00  =5  /************************************************************/
14496  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_GET_FRAME_
14497  00  =5  {
14498  00  =5      BYTE      cmdClass;                     /* The command class */
14499  00  =5      BYTE      cmd;                          /* The command */
14500  00  =5      BYTE      zoneNumber;                   /**/
14501  00  =5  } ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_GET_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 263 

14502  00  =5  
14503  00  =5  /************************************************************/
14504  00  =5  /* Security Panel Zone Sensor State Get command class structs */
14505  00  =5  /************************************************************/
14506  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_GET_FRAME_
14507  00  =5  {
14508  00  =5      BYTE      cmdClass;                     /* The command class */
14509  00  =5      BYTE      cmd;                          /* The command */
14510  00  =5      BYTE      zoneNumber;                   /**/
14511  00  =5      BYTE      sensorNumber;                 /**/
14512  00  =5  } ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_GET_FRAME;
14513  00  =5  
14514  00  =5  /************************************************************/
14515  00  =5  /* Security Panel Zone Sensor State Report command class structs */
14516  00  =5  /************************************************************/
14517  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_REPORT_FRAME_
14518  00  =5  {
14519  00  =5      BYTE      cmdClass;                     /* The command class */
14520  00  =5      BYTE      cmd;                          /* The command */
14521  00  =5      BYTE      zoneNumber;                   /**/
14522  00  =5      BYTE      sensorNumber;                 /**/
14523  00  =5      BYTE      zwaveAlarmType;               /**/
14524  00  =5      BYTE      zwaveAlarmEvent;              /**/
14525  00  =5      BYTE      eventParameters;              /**/
14526  00  =5  } ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_REPORT_FRAME;
14527  00  =5  
14528  00  =5  /************************************************************/
14529  00  =5  /* Security Panel Zone Number Supported Get command class structs */
14530  00  =5  /************************************************************/
14531  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_NUMBER_SUPPORTED_GET_FRAME_
14532  00  =5  {
14533  00  =5      BYTE      cmdClass;                     /* The command class */
14534  00  =5      BYTE      cmd;                          /* The command */
14535  00  =5  } ZW_SECURITY_PANEL_ZONE_NUMBER_SUPPORTED_GET_FRAME;
14536  00  =5  
14537  00  =5  /************************************************************/
14538  00  =5  /* Security Panel Zone State Get command class structs */   
14539  00  =5  /************************************************************/
14540  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_STATE_GET_FRAME_
14541  00  =5  {
14542  00  =5      BYTE      cmdClass;                     /* The command class */
14543  00  =5      BYTE      cmd;                          /* The command */
14544  00  =5      BYTE      zoneNumber;                   /**/
14545  00  =5  } ZW_SECURITY_PANEL_ZONE_STATE_GET_FRAME;
14546  00  =5  
14547  00  =5  /************************************************************/
14548  00  =5  /* Security Panel Zone State Report command class structs */
14549  00  =5  /************************************************************/
14550  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_STATE_REPORT_FRAME_
14551  00  =5  {
14552  00  =5      BYTE      cmdClass;                     /* The command class */
14553  00  =5      BYTE      cmd;                          /* The command */
14554  00  =5      BYTE      zoneNumber;                   /**/
14555  00  =5      BYTE      zoneState;                    /**/
14556  00  =5  } ZW_SECURITY_PANEL_ZONE_STATE_REPORT_FRAME;
14557  00  =5  
14558  00  =5  /************************************************************/
14559  00  =5  /* Security Panel Zone Supported Report command class structs */
14560  00  =5  /************************************************************/
14561  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_SUPPORTED_REPORT_FRAME_
14562  00  =5  {
14563  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 264 

14564  00  =5      BYTE      cmd;                          /* The command */
14565  00  =5      BYTE      parameters1;                  /* masked byte */
14566  00  =5  } ZW_SECURITY_PANEL_ZONE_SUPPORTED_REPORT_FRAME;
14567  00  =5  
14568  00  =5  /************************************************************/
14569  00  =5  /* Security Panel Zone Type Get command class structs */    
14570  00  =5  /************************************************************/
14571  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_TYPE_GET_FRAME_
14572  00  =5  {
14573  00  =5      BYTE      cmdClass;                     /* The command class */
14574  00  =5      BYTE      cmd;                          /* The command */
14575  00  =5      BYTE      zoneNumber;                   /**/
14576  00  =5  } ZW_SECURITY_PANEL_ZONE_TYPE_GET_FRAME;
14577  00  =5  
14578  00  =5  /************************************************************/
14579  00  =5  /* Security Panel Zone Type Report command class structs */ 
14580  00  =5  /************************************************************/
14581  00  =5  typedef struct _ZW_SECURITY_PANEL_ZONE_TYPE_REPORT_FRAME_
14582  00  =5  {
14583  00  =5      BYTE      cmdClass;                     /* The command class */
14584  00  =5      BYTE      cmd;                          /* The command */
14585  00  =5      BYTE      zoneNumber;                   /**/
14586  00  =5      BYTE      zoneType;                     /**/
14587  00  =5  } ZW_SECURITY_PANEL_ZONE_TYPE_REPORT_FRAME;
14588  00  =5  
14589  00  =5  /************************************************************/
14590  00  =5  /* Network Key Set 1byte command class structs */           
14591  00  =5  /************************************************************/
14592  00  =5  typedef struct _ZW_NETWORK_KEY_SET_1BYTE_FRAME_
14593  00  =5  {
14594  00  =5      BYTE      cmdClass;                     /* The command class */
14595  00  =5      BYTE      cmd;                          /* The command */
14596  00  =5      BYTE      networkKeyByte1;              
14597  00  =5  } ZW_NETWORK_KEY_SET_1BYTE_FRAME;
14598  00  =5  
14599  00  =5  /************************************************************/
14600  00  =5  /* Network Key Set 2byte command class structs */           
14601  00  =5  /************************************************************/
14602  00  =5  typedef struct _ZW_NETWORK_KEY_SET_2BYTE_FRAME_
14603  00  =5  {
14604  00  =5      BYTE      cmdClass;                     /* The command class */
14605  00  =5      BYTE      cmd;                          /* The command */
14606  00  =5      BYTE      networkKeyByte1;              /* MSB */
14607  00  =5      BYTE      networkKeyByte2;              /* LSB */
14608  00  =5  } ZW_NETWORK_KEY_SET_2BYTE_FRAME;
14609  00  =5  
14610  00  =5  /************************************************************/
14611  00  =5  /* Network Key Set 3byte command class structs */           
14612  00  =5  /************************************************************/
14613  00  =5  typedef struct _ZW_NETWORK_KEY_SET_3BYTE_FRAME_
14614  00  =5  {
14615  00  =5      BYTE      cmdClass;                     /* The command class */
14616  00  =5      BYTE      cmd;                          /* The command */
14617  00  =5      BYTE      networkKeyByte1;              /* MSB */
14618  00  =5      BYTE      networkKeyByte2;              
14619  00  =5      BYTE      networkKeyByte3;              /* LSB */
14620  00  =5  } ZW_NETWORK_KEY_SET_3BYTE_FRAME;
14621  00  =5  
14622  00  =5  /************************************************************/
14623  00  =5  /* Network Key Set 4byte command class structs */           
14624  00  =5  /************************************************************/
14625  00  =5  typedef struct _ZW_NETWORK_KEY_SET_4BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 265 

14626  00  =5  {
14627  00  =5      BYTE      cmdClass;                     /* The command class */
14628  00  =5      BYTE      cmd;                          /* The command */
14629  00  =5      BYTE      networkKeyByte1;              /* MSB */
14630  00  =5      BYTE      networkKeyByte2;              
14631  00  =5      BYTE      networkKeyByte3;              
14632  00  =5      BYTE      networkKeyByte4;              /* LSB */
14633  00  =5  } ZW_NETWORK_KEY_SET_4BYTE_FRAME;
14634  00  =5  
14635  00  =5  /************************************************************/
14636  00  =5  /* Network Key Verify command class structs */              
14637  00  =5  /************************************************************/
14638  00  =5  typedef struct _ZW_NETWORK_KEY_VERIFY_FRAME_
14639  00  =5  {
14640  00  =5      BYTE      cmdClass;                     /* The command class */
14641  00  =5      BYTE      cmd;                          /* The command */
14642  00  =5  } ZW_NETWORK_KEY_VERIFY_FRAME;
14643  00  =5  
14644  00  =5  /************************************************************/
14645  00  =5  /* Security Commands Supported Get command class structs */ 
14646  00  =5  /************************************************************/
14647  00  =5  typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_GET_FRAME_
14648  00  =5  {
14649  00  =5      BYTE      cmdClass;                     /* The command class */
14650  00  =5      BYTE      cmd;                          /* The command */
14651  00  =5  } ZW_SECURITY_COMMANDS_SUPPORTED_GET_FRAME;
14652  00  =5  
14653  00  =5  /************************************************************/
14654  00  =5  /* Security Commands Supported Report 1byte command class structs */
14655  00  =5  /************************************************************/
14656  00  =5  typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_1BYTE_FRAME_
14657  00  =5  {
14658  00  =5      BYTE      cmdClass;                     /* The command class */
14659  00  =5      BYTE      cmd;                          /* The command */
14660  00  =5      BYTE      reportsToFollow;              /**/
14661  00  =5      BYTE      commandClassSupport1;         
14662  00  =5      BYTE      commandClassMark;             /*The COMMAND_CLASS_MARK is used to indicate that all precedi
             -ng command classes are supported and all following command classes are controlled.*/
14663  00  =5      BYTE      commandClassControl1;         
14664  00  =5  } ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_1BYTE_FRAME;
14665  00  =5  
14666  00  =5  /************************************************************/
14667  00  =5  /* Security Commands Supported Report 2byte command class structs */
14668  00  =5  /************************************************************/
14669  00  =5  typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_2BYTE_FRAME_
14670  00  =5  {
14671  00  =5      BYTE      cmdClass;                     /* The command class */
14672  00  =5      BYTE      cmd;                          /* The command */
14673  00  =5      BYTE      reportsToFollow;              /**/
14674  00  =5      BYTE      commandClassSupport1;         /* MSB */
14675  00  =5      BYTE      commandClassSupport2;         /* LSB */
14676  00  =5      BYTE      commandClassMark;             /*The COMMAND_CLASS_MARK is used to indicate that all precedi
             -ng command classes are supported and all following command classes are controlled.*/
14677  00  =5      BYTE      commandClassControl1;         /* MSB */
14678  00  =5      BYTE      commandClassControl2;         /* LSB */
14679  00  =5  } ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_2BYTE_FRAME;
14680  00  =5  
14681  00  =5  /************************************************************/
14682  00  =5  /* Security Commands Supported Report 3byte command class structs */
14683  00  =5  /************************************************************/
14684  00  =5  typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_3BYTE_FRAME_
14685  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 266 

14686  00  =5      BYTE      cmdClass;                     /* The command class */
14687  00  =5      BYTE      cmd;                          /* The command */
14688  00  =5      BYTE      reportsToFollow;              /**/
14689  00  =5      BYTE      commandClassSupport1;         /* MSB */
14690  00  =5      BYTE      commandClassSupport2;         
14691  00  =5      BYTE      commandClassSupport3;         /* LSB */
14692  00  =5      BYTE      commandClassMark;             /*The COMMAND_CLASS_MARK is used to indicate that all precedi
             -ng command classes are supported and all following command classes are controlled.*/
14693  00  =5      BYTE      commandClassControl1;         /* MSB */
14694  00  =5      BYTE      commandClassControl2;         
14695  00  =5      BYTE      commandClassControl3;         /* LSB */
14696  00  =5  } ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_3BYTE_FRAME;
14697  00  =5  
14698  00  =5  /************************************************************/
14699  00  =5  /* Security Commands Supported Report 4byte command class structs */
14700  00  =5  /************************************************************/
14701  00  =5  typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_4BYTE_FRAME_
14702  00  =5  {
14703  00  =5      BYTE      cmdClass;                     /* The command class */
14704  00  =5      BYTE      cmd;                          /* The command */
14705  00  =5      BYTE      reportsToFollow;              /**/
14706  00  =5      BYTE      commandClassSupport1;         /* MSB */
14707  00  =5      BYTE      commandClassSupport2;         
14708  00  =5      BYTE      commandClassSupport3;         
14709  00  =5      BYTE      commandClassSupport4;         /* LSB */
14710  00  =5      BYTE      commandClassMark;             /*The COMMAND_CLASS_MARK is used to indicate that all precedi
             -ng command classes are supported and all following command classes are controlled.*/
14711  00  =5      BYTE      commandClassControl1;         /* MSB */
14712  00  =5      BYTE      commandClassControl2;         
14713  00  =5      BYTE      commandClassControl3;         
14714  00  =5      BYTE      commandClassControl4;         /* LSB */
14715  00  =5  } ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_4BYTE_FRAME;
14716  00  =5  
14717  00  =5  /************************************************************/
14718  00  =5  /* Security Message Encapsulation 1byte command class structs */
14719  00  =5  /************************************************************/
14720  00  =5  typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_1BYTE_FRAME_
14721  00  =5  {
14722  00  =5      BYTE      cmdClass;                     /* The command class */
14723  00  =5      BYTE      cmd;                          /* The command */
14724  00  =5      BYTE      initializationVectorByte1;    /* MSB */
14725  00  =5      BYTE      initializationVectorByte2;    
14726  00  =5      BYTE      initializationVectorByte3;    
14727  00  =5      BYTE      initializationVectorByte4;    
14728  00  =5      BYTE      initializationVectorByte5;    
14729  00  =5      BYTE      initializationVectorByte6;    
14730  00  =5      BYTE      initializationVectorByte7;    
14731  00  =5      BYTE      initializationVectorByte8;    /* LSB */
14732  00  =5      BYTE      properties1;                  /* masked byte */
14733  00  =5      BYTE      commandClassIdentifier;       /**/
14734  00  =5      BYTE      commandIdentifier;            /**/
14735  00  =5      BYTE      commandByte1;                 
14736  00  =5      BYTE      receiversNonceIdentifier;     /**/
14737  00  =5      BYTE      messageAuthenticationCodeByte1;/* MSB */
14738  00  =5      BYTE      messageAuthenticationCodeByte2;
14739  00  =5      BYTE      messageAuthenticationCodeByte3;
14740  00  =5      BYTE      messageAuthenticationCodeByte4;
14741  00  =5      BYTE      messageAuthenticationCodeByte5;
14742  00  =5      BYTE      messageAuthenticationCodeByte6;
14743  00  =5      BYTE      messageAuthenticationCodeByte7;
14744  00  =5      BYTE      messageAuthenticationCodeByte8;/* LSB */
14745  00  =5  } ZW_SECURITY_MESSAGE_ENCAPSULATION_1BYTE_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 267 

14746  00  =5  
14747  00  =5  /************************************************************/
14748  00  =5  /* Security Message Encapsulation 2byte command class structs */
14749  00  =5  /************************************************************/
14750  00  =5  typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_2BYTE_FRAME_
14751  00  =5  {
14752  00  =5      BYTE      cmdClass;                     /* The command class */
14753  00  =5      BYTE      cmd;                          /* The command */
14754  00  =5      BYTE      initializationVectorByte1;    /* MSB */
14755  00  =5      BYTE      initializationVectorByte2;    
14756  00  =5      BYTE      initializationVectorByte3;    
14757  00  =5      BYTE      initializationVectorByte4;    
14758  00  =5      BYTE      initializationVectorByte5;    
14759  00  =5      BYTE      initializationVectorByte6;    
14760  00  =5      BYTE      initializationVectorByte7;    
14761  00  =5      BYTE      initializationVectorByte8;    /* LSB */
14762  00  =5      BYTE      properties1;                  /* masked byte */
14763  00  =5      BYTE      commandClassIdentifier;       /**/
14764  00  =5      BYTE      commandIdentifier;            /**/
14765  00  =5      BYTE      commandByte1;                 /* MSB */
14766  00  =5      BYTE      commandByte2;                 /* LSB */
14767  00  =5      BYTE      receiversNonceIdentifier;     /**/
14768  00  =5      BYTE      messageAuthenticationCodeByte1;/* MSB */
14769  00  =5      BYTE      messageAuthenticationCodeByte2;
14770  00  =5      BYTE      messageAuthenticationCodeByte3;
14771  00  =5      BYTE      messageAuthenticationCodeByte4;
14772  00  =5      BYTE      messageAuthenticationCodeByte5;
14773  00  =5      BYTE      messageAuthenticationCodeByte6;
14774  00  =5      BYTE      messageAuthenticationCodeByte7;
14775  00  =5      BYTE      messageAuthenticationCodeByte8;/* LSB */
14776  00  =5  } ZW_SECURITY_MESSAGE_ENCAPSULATION_2BYTE_FRAME;
14777  00  =5  
14778  00  =5  /************************************************************/
14779  00  =5  /* Security Message Encapsulation 3byte command class structs */
14780  00  =5  /************************************************************/
14781  00  =5  typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_3BYTE_FRAME_
14782  00  =5  {
14783  00  =5      BYTE      cmdClass;                     /* The command class */
14784  00  =5      BYTE      cmd;                          /* The command */
14785  00  =5      BYTE      initializationVectorByte1;    /* MSB */
14786  00  =5      BYTE      initializationVectorByte2;    
14787  00  =5      BYTE      initializationVectorByte3;    
14788  00  =5      BYTE      initializationVectorByte4;    
14789  00  =5      BYTE      initializationVectorByte5;    
14790  00  =5      BYTE      initializationVectorByte6;    
14791  00  =5      BYTE      initializationVectorByte7;    
14792  00  =5      BYTE      initializationVectorByte8;    /* LSB */
14793  00  =5      BYTE      properties1;                  /* masked byte */
14794  00  =5      BYTE      commandClassIdentifier;       /**/
14795  00  =5      BYTE      commandIdentifier;            /**/
14796  00  =5      BYTE      commandByte1;                 /* MSB */
14797  00  =5      BYTE      commandByte2;                 
14798  00  =5      BYTE      commandByte3;                 /* LSB */
14799  00  =5      BYTE      receiversNonceIdentifier;     /**/
14800  00  =5      BYTE      messageAuthenticationCodeByte1;/* MSB */
14801  00  =5      BYTE      messageAuthenticationCodeByte2;
14802  00  =5      BYTE      messageAuthenticationCodeByte3;
14803  00  =5      BYTE      messageAuthenticationCodeByte4;
14804  00  =5      BYTE      messageAuthenticationCodeByte5;
14805  00  =5      BYTE      messageAuthenticationCodeByte6;
14806  00  =5      BYTE      messageAuthenticationCodeByte7;
14807  00  =5      BYTE      messageAuthenticationCodeByte8;/* LSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 268 

14808  00  =5  } ZW_SECURITY_MESSAGE_ENCAPSULATION_3BYTE_FRAME;
14809  00  =5  
14810  00  =5  /************************************************************/
14811  00  =5  /* Security Message Encapsulation 4byte command class structs */
14812  00  =5  /************************************************************/
14813  00  =5  typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_4BYTE_FRAME_
14814  00  =5  {
14815  00  =5      BYTE      cmdClass;                     /* The command class */
14816  00  =5      BYTE      cmd;                          /* The command */
14817  00  =5      BYTE      initializationVectorByte1;    /* MSB */
14818  00  =5      BYTE      initializationVectorByte2;    
14819  00  =5      BYTE      initializationVectorByte3;    
14820  00  =5      BYTE      initializationVectorByte4;    
14821  00  =5      BYTE      initializationVectorByte5;    
14822  00  =5      BYTE      initializationVectorByte6;    
14823  00  =5      BYTE      initializationVectorByte7;    
14824  00  =5      BYTE      initializationVectorByte8;    /* LSB */
14825  00  =5      BYTE      properties1;                  /* masked byte */
14826  00  =5      BYTE      commandClassIdentifier;       /**/
14827  00  =5      BYTE      commandIdentifier;            /**/
14828  00  =5      BYTE      commandByte1;                 /* MSB */
14829  00  =5      BYTE      commandByte2;                 
14830  00  =5      BYTE      commandByte3;                 
14831  00  =5      BYTE      commandByte4;                 /* LSB */
14832  00  =5      BYTE      receiversNonceIdentifier;     /**/
14833  00  =5      BYTE      messageAuthenticationCodeByte1;/* MSB */
14834  00  =5      BYTE      messageAuthenticationCodeByte2;
14835  00  =5      BYTE      messageAuthenticationCodeByte3;
14836  00  =5      BYTE      messageAuthenticationCodeByte4;
14837  00  =5      BYTE      messageAuthenticationCodeByte5;
14838  00  =5      BYTE      messageAuthenticationCodeByte6;
14839  00  =5      BYTE      messageAuthenticationCodeByte7;
14840  00  =5      BYTE      messageAuthenticationCodeByte8;/* LSB */
14841  00  =5  } ZW_SECURITY_MESSAGE_ENCAPSULATION_4BYTE_FRAME;
14842  00  =5  
14843  00  =5  /************************************************************/
14844  00  =5  /* Security Message Encapsulation Nonce Get 1byte command class structs */
14845  00  =5  /************************************************************/
14846  00  =5  typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_1BYTE_FRAME_
14847  00  =5  {
14848  00  =5      BYTE      cmdClass;                     /* The command class */
14849  00  =5      BYTE      cmd;                          /* The command */
14850  00  =5      BYTE      initializationVectorByte1;    /* MSB */
14851  00  =5      BYTE      initializationVectorByte2;    
14852  00  =5      BYTE      initializationVectorByte3;    
14853  00  =5      BYTE      initializationVectorByte4;    
14854  00  =5      BYTE      initializationVectorByte5;    
14855  00  =5      BYTE      initializationVectorByte6;    
14856  00  =5      BYTE      initializationVectorByte7;    
14857  00  =5      BYTE      initializationVectorByte8;    /* LSB */
14858  00  =5      BYTE      properties1;                  /* masked byte */
14859  00  =5      BYTE      commandClassIdentifier;       /**/
14860  00  =5      BYTE      commandIdentifier;            /**/
14861  00  =5      BYTE      commandByte1;                 
14862  00  =5      BYTE      receiversNonceIdentifier;     /**/
14863  00  =5      BYTE      messageAuthenticationCodeByte1;/* MSB */
14864  00  =5      BYTE      messageAuthenticationCodeByte2;
14865  00  =5      BYTE      messageAuthenticationCodeByte3;
14866  00  =5      BYTE      messageAuthenticationCodeByte4;
14867  00  =5      BYTE      messageAuthenticationCodeByte5;
14868  00  =5      BYTE      messageAuthenticationCodeByte6;
14869  00  =5      BYTE      messageAuthenticationCodeByte7;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 269 

14870  00  =5      BYTE      messageAuthenticationCodeByte8;/* LSB */
14871  00  =5  } ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_1BYTE_FRAME;
14872  00  =5  
14873  00  =5  /************************************************************/
14874  00  =5  /* Security Message Encapsulation Nonce Get 2byte command class structs */
14875  00  =5  /************************************************************/
14876  00  =5  typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_2BYTE_FRAME_
14877  00  =5  {
14878  00  =5      BYTE      cmdClass;                     /* The command class */
14879  00  =5      BYTE      cmd;                          /* The command */
14880  00  =5      BYTE      initializationVectorByte1;    /* MSB */
14881  00  =5      BYTE      initializationVectorByte2;    
14882  00  =5      BYTE      initializationVectorByte3;    
14883  00  =5      BYTE      initializationVectorByte4;    
14884  00  =5      BYTE      initializationVectorByte5;    
14885  00  =5      BYTE      initializationVectorByte6;    
14886  00  =5      BYTE      initializationVectorByte7;    
14887  00  =5      BYTE      initializationVectorByte8;    /* LSB */
14888  00  =5      BYTE      properties1;                  /* masked byte */
14889  00  =5      BYTE      commandClassIdentifier;       /**/
14890  00  =5      BYTE      commandIdentifier;            /**/
14891  00  =5      BYTE      commandByte1;                 /* MSB */
14892  00  =5      BYTE      commandByte2;                 /* LSB */
14893  00  =5      BYTE      receiversNonceIdentifier;     /**/
14894  00  =5      BYTE      messageAuthenticationCodeByte1;/* MSB */
14895  00  =5      BYTE      messageAuthenticationCodeByte2;
14896  00  =5      BYTE      messageAuthenticationCodeByte3;
14897  00  =5      BYTE      messageAuthenticationCodeByte4;
14898  00  =5      BYTE      messageAuthenticationCodeByte5;
14899  00  =5      BYTE      messageAuthenticationCodeByte6;
14900  00  =5      BYTE      messageAuthenticationCodeByte7;
14901  00  =5      BYTE      messageAuthenticationCodeByte8;/* LSB */
14902  00  =5  } ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_2BYTE_FRAME;
14903  00  =5  
14904  00  =5  /************************************************************/
14905  00  =5  /* Security Message Encapsulation Nonce Get 3byte command class structs */
14906  00  =5  /************************************************************/
14907  00  =5  typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_3BYTE_FRAME_
14908  00  =5  {
14909  00  =5      BYTE      cmdClass;                     /* The command class */
14910  00  =5      BYTE      cmd;                          /* The command */
14911  00  =5      BYTE      initializationVectorByte1;    /* MSB */
14912  00  =5      BYTE      initializationVectorByte2;    
14913  00  =5      BYTE      initializationVectorByte3;    
14914  00  =5      BYTE      initializationVectorByte4;    
14915  00  =5      BYTE      initializationVectorByte5;    
14916  00  =5      BYTE      initializationVectorByte6;    
14917  00  =5      BYTE      initializationVectorByte7;    
14918  00  =5      BYTE      initializationVectorByte8;    /* LSB */
14919  00  =5      BYTE      properties1;                  /* masked byte */
14920  00  =5      BYTE      commandClassIdentifier;       /**/
14921  00  =5      BYTE      commandIdentifier;            /**/
14922  00  =5      BYTE      commandByte1;                 /* MSB */
14923  00  =5      BYTE      commandByte2;                 
14924  00  =5      BYTE      commandByte3;                 /* LSB */
14925  00  =5      BYTE      receiversNonceIdentifier;     /**/
14926  00  =5      BYTE      messageAuthenticationCodeByte1;/* MSB */
14927  00  =5      BYTE      messageAuthenticationCodeByte2;
14928  00  =5      BYTE      messageAuthenticationCodeByte3;
14929  00  =5      BYTE      messageAuthenticationCodeByte4;
14930  00  =5      BYTE      messageAuthenticationCodeByte5;
14931  00  =5      BYTE      messageAuthenticationCodeByte6;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 270 

14932  00  =5      BYTE      messageAuthenticationCodeByte7;
14933  00  =5      BYTE      messageAuthenticationCodeByte8;/* LSB */
14934  00  =5  } ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_3BYTE_FRAME;
14935  00  =5  
14936  00  =5  /************************************************************/
14937  00  =5  /* Security Message Encapsulation Nonce Get 4byte command class structs */
14938  00  =5  /************************************************************/
14939  00  =5  typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_4BYTE_FRAME_
14940  00  =5  {
14941  00  =5      BYTE      cmdClass;                     /* The command class */
14942  00  =5      BYTE      cmd;                          /* The command */
14943  00  =5      BYTE      initializationVectorByte1;    /* MSB */
14944  00  =5      BYTE      initializationVectorByte2;    
14945  00  =5      BYTE      initializationVectorByte3;    
14946  00  =5      BYTE      initializationVectorByte4;    
14947  00  =5      BYTE      initializationVectorByte5;    
14948  00  =5      BYTE      initializationVectorByte6;    
14949  00  =5      BYTE      initializationVectorByte7;    
14950  00  =5      BYTE      initializationVectorByte8;    /* LSB */
14951  00  =5      BYTE      properties1;                  /* masked byte */
14952  00  =5      BYTE      commandClassIdentifier;       /**/
14953  00  =5      BYTE      commandIdentifier;            /**/
14954  00  =5      BYTE      commandByte1;                 /* MSB */
14955  00  =5      BYTE      commandByte2;                 
14956  00  =5      BYTE      commandByte3;                 
14957  00  =5      BYTE      commandByte4;                 /* LSB */
14958  00  =5      BYTE      receiversNonceIdentifier;     /**/
14959  00  =5      BYTE      messageAuthenticationCodeByte1;/* MSB */
14960  00  =5      BYTE      messageAuthenticationCodeByte2;
14961  00  =5      BYTE      messageAuthenticationCodeByte3;
14962  00  =5      BYTE      messageAuthenticationCodeByte4;
14963  00  =5      BYTE      messageAuthenticationCodeByte5;
14964  00  =5      BYTE      messageAuthenticationCodeByte6;
14965  00  =5      BYTE      messageAuthenticationCodeByte7;
14966  00  =5      BYTE      messageAuthenticationCodeByte8;/* LSB */
14967  00  =5  } ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_4BYTE_FRAME;
14968  00  =5  
14969  00  =5  /************************************************************/
14970  00  =5  /* Security Nonce Get command class structs */              
14971  00  =5  /************************************************************/
14972  00  =5  typedef struct _ZW_SECURITY_NONCE_GET_FRAME_
14973  00  =5  {
14974  00  =5      BYTE      cmdClass;                     /* The command class */
14975  00  =5      BYTE      cmd;                          /* The command */
14976  00  =5  } ZW_SECURITY_NONCE_GET_FRAME;
14977  00  =5  
14978  00  =5  /************************************************************/
14979  00  =5  /* Security Nonce Report command class structs */           
14980  00  =5  /************************************************************/
14981  00  =5  typedef struct _ZW_SECURITY_NONCE_REPORT_FRAME_
14982  00  =5  {
14983  00  =5      BYTE      cmdClass;                     /* The command class */
14984  00  =5      BYTE      cmd;                          /* The command */
14985  00  =5      BYTE      nonceByte1;                   /* MSB */
14986  00  =5      BYTE      nonceByte2;                   
14987  00  =5      BYTE      nonceByte3;                   
14988  00  =5      BYTE      nonceByte4;                   
14989  00  =5      BYTE      nonceByte5;                   
14990  00  =5      BYTE      nonceByte6;                   
14991  00  =5      BYTE      nonceByte7;                   
14992  00  =5      BYTE      nonceByte8;                   /* LSB */
14993  00  =5  } ZW_SECURITY_NONCE_REPORT_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 271 

14994  00  =5  
14995  00  =5  /************************************************************/
14996  00  =5  /* Security Scheme Get command class structs */             
14997  00  =5  /************************************************************/
14998  00  =5  typedef struct _ZW_SECURITY_SCHEME_GET_FRAME_
14999  00  =5  {
15000  00  =5      BYTE      cmdClass;                     /* The command class */
15001  00  =5      BYTE      cmd;                          /* The command */
15002  00  =5      BYTE      supportedSecuritySchemes;     /**/
15003  00  =5  } ZW_SECURITY_SCHEME_GET_FRAME;
15004  00  =5  
15005  00  =5  /************************************************************/
15006  00  =5  /* Security Scheme Inherit command class structs */         
15007  00  =5  /************************************************************/
15008  00  =5  typedef struct _ZW_SECURITY_SCHEME_INHERIT_FRAME_
15009  00  =5  {
15010  00  =5      BYTE      cmdClass;                     /* The command class */
15011  00  =5      BYTE      cmd;                          /* The command */
15012  00  =5      BYTE      supportedSecuritySchemes;     /**/
15013  00  =5  } ZW_SECURITY_SCHEME_INHERIT_FRAME;
15014  00  =5  
15015  00  =5  /************************************************************/
15016  00  =5  /* Security Scheme Report command class structs */          
15017  00  =5  /************************************************************/
15018  00  =5  typedef struct _ZW_SECURITY_SCHEME_REPORT_FRAME_
15019  00  =5  {
15020  00  =5      BYTE      cmdClass;                     /* The command class */
15021  00  =5      BYTE      cmd;                          /* The command */
15022  00  =5      BYTE      supportedSecuritySchemes;     /**/
15023  00  =5  } ZW_SECURITY_SCHEME_REPORT_FRAME;
15024  00  =5  
15025  00  =5  /************************************************************/
15026  00  =5  /* Sensor Alarm Get command class structs */                
15027  00  =5  /************************************************************/
15028  00  =5  typedef struct _ZW_SENSOR_ALARM_GET_FRAME_
15029  00  =5  {
15030  00  =5      BYTE      cmdClass;                     /* The command class */
15031  00  =5      BYTE      cmd;                          /* The command */
15032  00  =5      BYTE      sensorType;                   /**/
15033  00  =5  } ZW_SENSOR_ALARM_GET_FRAME;
15034  00  =5  
15035  00  =5  /************************************************************/
15036  00  =5  /* Sensor Alarm Report command class structs */             
15037  00  =5  /************************************************************/
15038  00  =5  typedef struct _ZW_SENSOR_ALARM_REPORT_FRAME_
15039  00  =5  {
15040  00  =5      BYTE      cmdClass;                     /* The command class */
15041  00  =5      BYTE      cmd;                          /* The command */
15042  00  =5      BYTE      sourceNodeId;                 /**/
15043  00  =5      BYTE      sensorType;                   /**/
15044  00  =5      BYTE      sensorState;                  /**/
15045  00  =5      BYTE      seconds1;                     /* MSB */
15046  00  =5      BYTE      seconds2;                     /* LSB */
15047  00  =5  } ZW_SENSOR_ALARM_REPORT_FRAME;
15048  00  =5  
15049  00  =5  /************************************************************/
15050  00  =5  /* Sensor Alarm Supported Get command class structs */      
15051  00  =5  /************************************************************/
15052  00  =5  typedef struct _ZW_SENSOR_ALARM_SUPPORTED_GET_FRAME_
15053  00  =5  {
15054  00  =5      BYTE      cmdClass;                     /* The command class */
15055  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 272 

15056  00  =5  } ZW_SENSOR_ALARM_SUPPORTED_GET_FRAME;
15057  00  =5  
15058  00  =5  /************************************************************/
15059  00  =5  /* Sensor Alarm Supported Report 1byte command class structs */
15060  00  =5  /************************************************************/
15061  00  =5  typedef struct _ZW_SENSOR_ALARM_SUPPORTED_REPORT_1BYTE_FRAME_
15062  00  =5  {
15063  00  =5      BYTE      cmdClass;                     /* The command class */
15064  00  =5      BYTE      cmd;                          /* The command */
15065  00  =5      BYTE      numberOfBitMasks;             /**/
15066  00  =5      BYTE      bitMask1;                     
15067  00  =5  } ZW_SENSOR_ALARM_SUPPORTED_REPORT_1BYTE_FRAME;
15068  00  =5  
15069  00  =5  /************************************************************/
15070  00  =5  /* Sensor Alarm Supported Report 2byte command class structs */
15071  00  =5  /************************************************************/
15072  00  =5  typedef struct _ZW_SENSOR_ALARM_SUPPORTED_REPORT_2BYTE_FRAME_
15073  00  =5  {
15074  00  =5      BYTE      cmdClass;                     /* The command class */
15075  00  =5      BYTE      cmd;                          /* The command */
15076  00  =5      BYTE      numberOfBitMasks;             /**/
15077  00  =5      BYTE      bitMask1;                     /* MSB */
15078  00  =5      BYTE      bitMask2;                     /* LSB */
15079  00  =5  } ZW_SENSOR_ALARM_SUPPORTED_REPORT_2BYTE_FRAME;
15080  00  =5  
15081  00  =5  /************************************************************/
15082  00  =5  /* Sensor Alarm Supported Report 3byte command class structs */
15083  00  =5  /************************************************************/
15084  00  =5  typedef struct _ZW_SENSOR_ALARM_SUPPORTED_REPORT_3BYTE_FRAME_
15085  00  =5  {
15086  00  =5      BYTE      cmdClass;                     /* The command class */
15087  00  =5      BYTE      cmd;                          /* The command */
15088  00  =5      BYTE      numberOfBitMasks;             /**/
15089  00  =5      BYTE      bitMask1;                     /* MSB */
15090  00  =5      BYTE      bitMask2;                     
15091  00  =5      BYTE      bitMask3;                     /* LSB */
15092  00  =5  } ZW_SENSOR_ALARM_SUPPORTED_REPORT_3BYTE_FRAME;
15093  00  =5  
15094  00  =5  /************************************************************/
15095  00  =5  /* Sensor Alarm Supported Report 4byte command class structs */
15096  00  =5  /************************************************************/
15097  00  =5  typedef struct _ZW_SENSOR_ALARM_SUPPORTED_REPORT_4BYTE_FRAME_
15098  00  =5  {
15099  00  =5      BYTE      cmdClass;                     /* The command class */
15100  00  =5      BYTE      cmd;                          /* The command */
15101  00  =5      BYTE      numberOfBitMasks;             /**/
15102  00  =5      BYTE      bitMask1;                     /* MSB */
15103  00  =5      BYTE      bitMask2;                     
15104  00  =5      BYTE      bitMask3;                     
15105  00  =5      BYTE      bitMask4;                     /* LSB */
15106  00  =5  } ZW_SENSOR_ALARM_SUPPORTED_REPORT_4BYTE_FRAME;
15107  00  =5  
15108  00  =5  /************************************************************/
15109  00  =5  /* Sensor Binary Get command class structs */               
15110  00  =5  /************************************************************/
15111  00  =5  typedef struct _ZW_SENSOR_BINARY_GET_FRAME_
15112  00  =5  {
15113  00  =5      BYTE      cmdClass;                     /* The command class */
15114  00  =5      BYTE      cmd;                          /* The command */
15115  00  =5  } ZW_SENSOR_BINARY_GET_FRAME;
15116  00  =5  
15117  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 273 

15118  00  =5  /* Sensor Binary Report command class structs */            
15119  00  =5  /************************************************************/
15120  00  =5  typedef struct _ZW_SENSOR_BINARY_REPORT_FRAME_
15121  00  =5  {
15122  00  =5      BYTE      cmdClass;                     /* The command class */
15123  00  =5      BYTE      cmd;                          /* The command */
15124  00  =5      BYTE      sensorValue;                  /**/
15125  00  =5  } ZW_SENSOR_BINARY_REPORT_FRAME;
15126  00  =5  
15127  00  =5  /************************************************************/
15128  00  =5  /* Sensor Binary Get V2 command class structs */            
15129  00  =5  /************************************************************/
15130  00  =5  typedef struct _ZW_SENSOR_BINARY_GET_V2_FRAME_
15131  00  =5  {
15132  00  =5      BYTE      cmdClass;                     /* The command class */
15133  00  =5      BYTE      cmd;                          /* The command */
15134  00  =5      BYTE      sensorType;                   /**/
15135  00  =5  } ZW_SENSOR_BINARY_GET_V2_FRAME;
15136  00  =5  
15137  00  =5  /************************************************************/
15138  00  =5  /* Sensor Binary Report V2 command class structs */         
15139  00  =5  /************************************************************/
15140  00  =5  typedef struct _ZW_SENSOR_BINARY_REPORT_V2_FRAME_
15141  00  =5  {
15142  00  =5      BYTE      cmdClass;                     /* The command class */
15143  00  =5      BYTE      cmd;                          /* The command */
15144  00  =5      BYTE      sensorValue;                  /**/
15145  00  =5      BYTE      sensorType;                   /**/
15146  00  =5  } ZW_SENSOR_BINARY_REPORT_V2_FRAME;
15147  00  =5  
15148  00  =5  /************************************************************/
15149  00  =5  /* Sensor Binary Supported Get Sensor V2 command class structs */
15150  00  =5  /************************************************************/
15151  00  =5  typedef struct _ZW_SENSOR_BINARY_SUPPORTED_GET_SENSOR_V2_FRAME_
15152  00  =5  {
15153  00  =5      BYTE      cmdClass;                     /* The command class */
15154  00  =5      BYTE      cmd;                          /* The command */
15155  00  =5  } ZW_SENSOR_BINARY_SUPPORTED_GET_SENSOR_V2_FRAME;
15156  00  =5  
15157  00  =5  /************************************************************/
15158  00  =5  /* Sensor Binary Supported Sensor Report 1byte V2 command class structs */
15159  00  =5  /************************************************************/
15160  00  =5  typedef struct _ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_1BYTE_V2_FRAME_
15161  00  =5  {
15162  00  =5      BYTE      cmdClass;                     /* The command class */
15163  00  =5      BYTE      cmd;                          /* The command */
15164  00  =5      BYTE      bitMask1;                     
15165  00  =5  } ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_1BYTE_V2_FRAME;
15166  00  =5  
15167  00  =5  /************************************************************/
15168  00  =5  /* Sensor Binary Supported Sensor Report 2byte V2 command class structs */
15169  00  =5  /************************************************************/
15170  00  =5  typedef struct _ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_2BYTE_V2_FRAME_
15171  00  =5  {
15172  00  =5      BYTE      cmdClass;                     /* The command class */
15173  00  =5      BYTE      cmd;                          /* The command */
15174  00  =5      BYTE      bitMask1;                     /* MSB */
15175  00  =5      BYTE      bitMask2;                     /* LSB */
15176  00  =5  } ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_2BYTE_V2_FRAME;
15177  00  =5  
15178  00  =5  /************************************************************/
15179  00  =5  /* Sensor Binary Supported Sensor Report 3byte V2 command class structs */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 274 

15180  00  =5  /************************************************************/
15181  00  =5  typedef struct _ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_3BYTE_V2_FRAME_
15182  00  =5  {
15183  00  =5      BYTE      cmdClass;                     /* The command class */
15184  00  =5      BYTE      cmd;                          /* The command */
15185  00  =5      BYTE      bitMask1;                     /* MSB */
15186  00  =5      BYTE      bitMask2;                     
15187  00  =5      BYTE      bitMask3;                     /* LSB */
15188  00  =5  } ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_3BYTE_V2_FRAME;
15189  00  =5  
15190  00  =5  /************************************************************/
15191  00  =5  /* Sensor Binary Supported Sensor Report 4byte V2 command class structs */
15192  00  =5  /************************************************************/
15193  00  =5  typedef struct _ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_4BYTE_V2_FRAME_
15194  00  =5  {
15195  00  =5      BYTE      cmdClass;                     /* The command class */
15196  00  =5      BYTE      cmd;                          /* The command */
15197  00  =5      BYTE      bitMask1;                     /* MSB */
15198  00  =5      BYTE      bitMask2;                     
15199  00  =5      BYTE      bitMask3;                     
15200  00  =5      BYTE      bitMask4;                     /* LSB */
15201  00  =5  } ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_4BYTE_V2_FRAME;
15202  00  =5  
15203  00  =5  /************************************************************/
15204  00  =5  /* Sensor Trigger Level Get command class structs */        
15205  00  =5  /************************************************************/
15206  00  =5  typedef struct _ZW_SENSOR_TRIGGER_LEVEL_GET_FRAME_
15207  00  =5  {
15208  00  =5      BYTE      cmdClass;                     /* The command class */
15209  00  =5      BYTE      cmd;                          /* The command */
15210  00  =5  } ZW_SENSOR_TRIGGER_LEVEL_GET_FRAME;
15211  00  =5  
15212  00  =5  /************************************************************/
15213  00  =5  /* Sensor Trigger Level Report 1byte command class structs */
15214  00  =5  /************************************************************/
15215  00  =5  typedef struct _ZW_SENSOR_TRIGGER_LEVEL_REPORT_1BYTE_FRAME_
15216  00  =5  {
15217  00  =5      BYTE      cmdClass;                     /* The command class */
15218  00  =5      BYTE      cmd;                          /* The command */
15219  00  =5      BYTE      sensorType;                   /**/
15220  00  =5      BYTE      properties1;                  /* masked byte */
15221  00  =5      BYTE      triggerValue1;                
15222  00  =5  } ZW_SENSOR_TRIGGER_LEVEL_REPORT_1BYTE_FRAME;
15223  00  =5  
15224  00  =5  /************************************************************/
15225  00  =5  /* Sensor Trigger Level Report 2byte command class structs */
15226  00  =5  /************************************************************/
15227  00  =5  typedef struct _ZW_SENSOR_TRIGGER_LEVEL_REPORT_2BYTE_FRAME_
15228  00  =5  {
15229  00  =5      BYTE      cmdClass;                     /* The command class */
15230  00  =5      BYTE      cmd;                          /* The command */
15231  00  =5      BYTE      sensorType;                   /**/
15232  00  =5      BYTE      properties1;                  /* masked byte */
15233  00  =5      BYTE      triggerValue1;                /* MSB */
15234  00  =5      BYTE      triggerValue2;                /* LSB */
15235  00  =5  } ZW_SENSOR_TRIGGER_LEVEL_REPORT_2BYTE_FRAME;
15236  00  =5  
15237  00  =5  /************************************************************/
15238  00  =5  /* Sensor Trigger Level Report 3byte command class structs */
15239  00  =5  /************************************************************/
15240  00  =5  typedef struct _ZW_SENSOR_TRIGGER_LEVEL_REPORT_3BYTE_FRAME_
15241  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 275 

15242  00  =5      BYTE      cmdClass;                     /* The command class */
15243  00  =5      BYTE      cmd;                          /* The command */
15244  00  =5      BYTE      sensorType;                   /**/
15245  00  =5      BYTE      properties1;                  /* masked byte */
15246  00  =5      BYTE      triggerValue1;                /* MSB */
15247  00  =5      BYTE      triggerValue2;                
15248  00  =5      BYTE      triggerValue3;                /* LSB */
15249  00  =5  } ZW_SENSOR_TRIGGER_LEVEL_REPORT_3BYTE_FRAME;
15250  00  =5  
15251  00  =5  /************************************************************/
15252  00  =5  /* Sensor Trigger Level Report 4byte command class structs */
15253  00  =5  /************************************************************/
15254  00  =5  typedef struct _ZW_SENSOR_TRIGGER_LEVEL_REPORT_4BYTE_FRAME_
15255  00  =5  {
15256  00  =5      BYTE      cmdClass;                     /* The command class */
15257  00  =5      BYTE      cmd;                          /* The command */
15258  00  =5      BYTE      sensorType;                   /**/
15259  00  =5      BYTE      properties1;                  /* masked byte */
15260  00  =5      BYTE      triggerValue1;                /* MSB */
15261  00  =5      BYTE      triggerValue2;                
15262  00  =5      BYTE      triggerValue3;                
15263  00  =5      BYTE      triggerValue4;                /* LSB */
15264  00  =5  } ZW_SENSOR_TRIGGER_LEVEL_REPORT_4BYTE_FRAME;
15265  00  =5  
15266  00  =5  /************************************************************/
15267  00  =5  /* Sensor Trigger Level Set 1byte command class structs */  
15268  00  =5  /************************************************************/
15269  00  =5  typedef struct _ZW_SENSOR_TRIGGER_LEVEL_SET_1BYTE_FRAME_
15270  00  =5  {
15271  00  =5      BYTE      cmdClass;                     /* The command class */
15272  00  =5      BYTE      cmd;                          /* The command */
15273  00  =5      BYTE      properties1;                  /* masked byte */
15274  00  =5      BYTE      sensorType;                   /**/
15275  00  =5      BYTE      properties2;                  /* masked byte */
15276  00  =5      BYTE      triggerValue1;                
15277  00  =5  } ZW_SENSOR_TRIGGER_LEVEL_SET_1BYTE_FRAME;
15278  00  =5  
15279  00  =5  /************************************************************/
15280  00  =5  /* Sensor Trigger Level Set 2byte command class structs */  
15281  00  =5  /************************************************************/
15282  00  =5  typedef struct _ZW_SENSOR_TRIGGER_LEVEL_SET_2BYTE_FRAME_
15283  00  =5  {
15284  00  =5      BYTE      cmdClass;                     /* The command class */
15285  00  =5      BYTE      cmd;                          /* The command */
15286  00  =5      BYTE      properties1;                  /* masked byte */
15287  00  =5      BYTE      sensorType;                   /**/
15288  00  =5      BYTE      properties2;                  /* masked byte */
15289  00  =5      BYTE      triggerValue1;                /* MSB */
15290  00  =5      BYTE      triggerValue2;                /* LSB */
15291  00  =5  } ZW_SENSOR_TRIGGER_LEVEL_SET_2BYTE_FRAME;
15292  00  =5  
15293  00  =5  /************************************************************/
15294  00  =5  /* Sensor Trigger Level Set 3byte command class structs */  
15295  00  =5  /************************************************************/
15296  00  =5  typedef struct _ZW_SENSOR_TRIGGER_LEVEL_SET_3BYTE_FRAME_
15297  00  =5  {
15298  00  =5      BYTE      cmdClass;                     /* The command class */
15299  00  =5      BYTE      cmd;                          /* The command */
15300  00  =5      BYTE      properties1;                  /* masked byte */
15301  00  =5      BYTE      sensorType;                   /**/
15302  00  =5      BYTE      properties2;                  /* masked byte */
15303  00  =5      BYTE      triggerValue1;                /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 276 

15304  00  =5      BYTE      triggerValue2;                
15305  00  =5      BYTE      triggerValue3;                /* LSB */
15306  00  =5  } ZW_SENSOR_TRIGGER_LEVEL_SET_3BYTE_FRAME;
15307  00  =5  
15308  00  =5  /************************************************************/
15309  00  =5  /* Sensor Trigger Level Set 4byte command class structs */  
15310  00  =5  /************************************************************/
15311  00  =5  typedef struct _ZW_SENSOR_TRIGGER_LEVEL_SET_4BYTE_FRAME_
15312  00  =5  {
15313  00  =5      BYTE      cmdClass;                     /* The command class */
15314  00  =5      BYTE      cmd;                          /* The command */
15315  00  =5      BYTE      properties1;                  /* masked byte */
15316  00  =5      BYTE      sensorType;                   /**/
15317  00  =5      BYTE      properties2;                  /* masked byte */
15318  00  =5      BYTE      triggerValue1;                /* MSB */
15319  00  =5      BYTE      triggerValue2;                
15320  00  =5      BYTE      triggerValue3;                
15321  00  =5      BYTE      triggerValue4;                /* LSB */
15322  00  =5  } ZW_SENSOR_TRIGGER_LEVEL_SET_4BYTE_FRAME;
15323  00  =5  
15324  00  =5  /************************************************************/
15325  00  =5  /* Sensor Multilevel Get command class structs */           
15326  00  =5  /************************************************************/
15327  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_GET_FRAME_
15328  00  =5  {
15329  00  =5      BYTE      cmdClass;                     /* The command class */
15330  00  =5      BYTE      cmd;                          /* The command */
15331  00  =5  } ZW_SENSOR_MULTILEVEL_GET_FRAME;
15332  00  =5  
15333  00  =5  /************************************************************/
15334  00  =5  /* Sensor Multilevel Report 1byte command class structs */  
15335  00  =5  /************************************************************/
15336  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_FRAME_
15337  00  =5  {
15338  00  =5      BYTE      cmdClass;                     /* The command class */
15339  00  =5      BYTE      cmd;                          /* The command */
15340  00  =5      BYTE      sensorType;                   /**/
15341  00  =5      BYTE      level;                        /* masked byte */
15342  00  =5      BYTE      sensorValue1;                 
15343  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_FRAME;
15344  00  =5  
15345  00  =5  /************************************************************/
15346  00  =5  /* Sensor Multilevel Report 2byte command class structs */  
15347  00  =5  /************************************************************/
15348  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_FRAME_
15349  00  =5  {
15350  00  =5      BYTE      cmdClass;                     /* The command class */
15351  00  =5      BYTE      cmd;                          /* The command */
15352  00  =5      BYTE      sensorType;                   /**/
15353  00  =5      BYTE      level;                        /* masked byte */
15354  00  =5      BYTE      sensorValue1;                 /* MSB */
15355  00  =5      BYTE      sensorValue2;                 /* LSB */
15356  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_FRAME;
15357  00  =5  
15358  00  =5  /************************************************************/
15359  00  =5  /* Sensor Multilevel Report 3byte command class structs */  
15360  00  =5  /************************************************************/
15361  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_FRAME_
15362  00  =5  {
15363  00  =5      BYTE      cmdClass;                     /* The command class */
15364  00  =5      BYTE      cmd;                          /* The command */
15365  00  =5      BYTE      sensorType;                   /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 277 

15366  00  =5      BYTE      level;                        /* masked byte */
15367  00  =5      BYTE      sensorValue1;                 /* MSB */
15368  00  =5      BYTE      sensorValue2;                 
15369  00  =5      BYTE      sensorValue3;                 /* LSB */
15370  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_FRAME;
15371  00  =5  
15372  00  =5  /************************************************************/
15373  00  =5  /* Sensor Multilevel Report 4byte command class structs */  
15374  00  =5  /************************************************************/
15375  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_FRAME_
15376  00  =5  {
15377  00  =5      BYTE      cmdClass;                     /* The command class */
15378  00  =5      BYTE      cmd;                          /* The command */
15379  00  =5      BYTE      sensorType;                   /**/
15380  00  =5      BYTE      level;                        /* masked byte */
15381  00  =5      BYTE      sensorValue1;                 /* MSB */
15382  00  =5      BYTE      sensorValue2;                 
15383  00  =5      BYTE      sensorValue3;                 
15384  00  =5      BYTE      sensorValue4;                 /* LSB */
15385  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_FRAME;
15386  00  =5  
15387  00  =5  /************************************************************/
15388  00  =5  /* Sensor Multilevel Get V2 command class structs */        
15389  00  =5  /************************************************************/
15390  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_GET_V2_FRAME_
15391  00  =5  {
15392  00  =5      BYTE      cmdClass;                     /* The command class */
15393  00  =5      BYTE      cmd;                          /* The command */
15394  00  =5  } ZW_SENSOR_MULTILEVEL_GET_V2_FRAME;
15395  00  =5  
15396  00  =5  /************************************************************/
15397  00  =5  /* Sensor Multilevel Report 1byte V2 command class structs */
15398  00  =5  /************************************************************/
15399  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V2_FRAME_
15400  00  =5  {
15401  00  =5      BYTE      cmdClass;                     /* The command class */
15402  00  =5      BYTE      cmd;                          /* The command */
15403  00  =5      BYTE      sensorType;                   /**/
15404  00  =5      BYTE      level;                        /* masked byte */
15405  00  =5      BYTE      sensorValue1;                 
15406  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V2_FRAME;
15407  00  =5  
15408  00  =5  /************************************************************/
15409  00  =5  /* Sensor Multilevel Report 2byte V2 command class structs */
15410  00  =5  /************************************************************/
15411  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V2_FRAME_
15412  00  =5  {
15413  00  =5      BYTE      cmdClass;                     /* The command class */
15414  00  =5      BYTE      cmd;                          /* The command */
15415  00  =5      BYTE      sensorType;                   /**/
15416  00  =5      BYTE      level;                        /* masked byte */
15417  00  =5      BYTE      sensorValue1;                 /* MSB */
15418  00  =5      BYTE      sensorValue2;                 /* LSB */
15419  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V2_FRAME;
15420  00  =5  
15421  00  =5  /************************************************************/
15422  00  =5  /* Sensor Multilevel Report 3byte V2 command class structs */
15423  00  =5  /************************************************************/
15424  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V2_FRAME_
15425  00  =5  {
15426  00  =5      BYTE      cmdClass;                     /* The command class */
15427  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 278 

15428  00  =5      BYTE      sensorType;                   /**/
15429  00  =5      BYTE      level;                        /* masked byte */
15430  00  =5      BYTE      sensorValue1;                 /* MSB */
15431  00  =5      BYTE      sensorValue2;                 
15432  00  =5      BYTE      sensorValue3;                 /* LSB */
15433  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V2_FRAME;
15434  00  =5  
15435  00  =5  /************************************************************/
15436  00  =5  /* Sensor Multilevel Report 4byte V2 command class structs */
15437  00  =5  /************************************************************/
15438  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V2_FRAME_
15439  00  =5  {
15440  00  =5      BYTE      cmdClass;                     /* The command class */
15441  00  =5      BYTE      cmd;                          /* The command */
15442  00  =5      BYTE      sensorType;                   /**/
15443  00  =5      BYTE      level;                        /* masked byte */
15444  00  =5      BYTE      sensorValue1;                 /* MSB */
15445  00  =5      BYTE      sensorValue2;                 
15446  00  =5      BYTE      sensorValue3;                 
15447  00  =5      BYTE      sensorValue4;                 /* LSB */
15448  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V2_FRAME;
15449  00  =5  
15450  00  =5  /************************************************************/
15451  00  =5  /* Sensor Multilevel Get V3 command class structs */        
15452  00  =5  /************************************************************/
15453  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_GET_V3_FRAME_
15454  00  =5  {
15455  00  =5      BYTE      cmdClass;                     /* The command class */
15456  00  =5      BYTE      cmd;                          /* The command */
15457  00  =5  } ZW_SENSOR_MULTILEVEL_GET_V3_FRAME;
15458  00  =5  
15459  00  =5  /************************************************************/
15460  00  =5  /* Sensor Multilevel Report 1byte V3 command class structs */
15461  00  =5  /************************************************************/
15462  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V3_FRAME_
15463  00  =5  {
15464  00  =5      BYTE      cmdClass;                     /* The command class */
15465  00  =5      BYTE      cmd;                          /* The command */
15466  00  =5      BYTE      sensorType;                   /**/
15467  00  =5      BYTE      level;                        /* masked byte */
15468  00  =5      BYTE      sensorValue1;                 
15469  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V3_FRAME;
15470  00  =5  
15471  00  =5  /************************************************************/
15472  00  =5  /* Sensor Multilevel Report 2byte V3 command class structs */
15473  00  =5  /************************************************************/
15474  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V3_FRAME_
15475  00  =5  {
15476  00  =5      BYTE      cmdClass;                     /* The command class */
15477  00  =5      BYTE      cmd;                          /* The command */
15478  00  =5      BYTE      sensorType;                   /**/
15479  00  =5      BYTE      level;                        /* masked byte */
15480  00  =5      BYTE      sensorValue1;                 /* MSB */
15481  00  =5      BYTE      sensorValue2;                 /* LSB */
15482  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V3_FRAME;
15483  00  =5  
15484  00  =5  /************************************************************/
15485  00  =5  /* Sensor Multilevel Report 3byte V3 command class structs */
15486  00  =5  /************************************************************/
15487  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V3_FRAME_
15488  00  =5  {
15489  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 279 

15490  00  =5      BYTE      cmd;                          /* The command */
15491  00  =5      BYTE      sensorType;                   /**/
15492  00  =5      BYTE      level;                        /* masked byte */
15493  00  =5      BYTE      sensorValue1;                 /* MSB */
15494  00  =5      BYTE      sensorValue2;                 
15495  00  =5      BYTE      sensorValue3;                 /* LSB */
15496  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V3_FRAME;
15497  00  =5  
15498  00  =5  /************************************************************/
15499  00  =5  /* Sensor Multilevel Report 4byte V3 command class structs */
15500  00  =5  /************************************************************/
15501  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V3_FRAME_
15502  00  =5  {
15503  00  =5      BYTE      cmdClass;                     /* The command class */
15504  00  =5      BYTE      cmd;                          /* The command */
15505  00  =5      BYTE      sensorType;                   /**/
15506  00  =5      BYTE      level;                        /* masked byte */
15507  00  =5      BYTE      sensorValue1;                 /* MSB */
15508  00  =5      BYTE      sensorValue2;                 
15509  00  =5      BYTE      sensorValue3;                 
15510  00  =5      BYTE      sensorValue4;                 /* LSB */
15511  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V3_FRAME;
15512  00  =5  
15513  00  =5  /************************************************************/
15514  00  =5  /* Sensor Multilevel Get V4 command class structs */        
15515  00  =5  /************************************************************/
15516  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_GET_V4_FRAME_
15517  00  =5  {
15518  00  =5      BYTE      cmdClass;                     /* The command class */
15519  00  =5      BYTE      cmd;                          /* The command */
15520  00  =5  } ZW_SENSOR_MULTILEVEL_GET_V4_FRAME;
15521  00  =5  
15522  00  =5  /************************************************************/
15523  00  =5  /* Sensor Multilevel Report 1byte V4 command class structs */
15524  00  =5  /************************************************************/
15525  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V4_FRAME_
15526  00  =5  {
15527  00  =5      BYTE      cmdClass;                     /* The command class */
15528  00  =5      BYTE      cmd;                          /* The command */
15529  00  =5      BYTE      sensorType;                   /**/
15530  00  =5      BYTE      level;                        /* masked byte */
15531  00  =5      BYTE      sensorValue1;                 
15532  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V4_FRAME;
15533  00  =5  
15534  00  =5  /************************************************************/
15535  00  =5  /* Sensor Multilevel Report 2byte V4 command class structs */
15536  00  =5  /************************************************************/
15537  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V4_FRAME_
15538  00  =5  {
15539  00  =5      BYTE      cmdClass;                     /* The command class */
15540  00  =5      BYTE      cmd;                          /* The command */
15541  00  =5      BYTE      sensorType;                   /**/
15542  00  =5      BYTE      level;                        /* masked byte */
15543  00  =5      BYTE      sensorValue1;                 /* MSB */
15544  00  =5      BYTE      sensorValue2;                 /* LSB */
15545  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V4_FRAME;
15546  00  =5  
15547  00  =5  /************************************************************/
15548  00  =5  /* Sensor Multilevel Report 3byte V4 command class structs */
15549  00  =5  /************************************************************/
15550  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V4_FRAME_
15551  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 280 

15552  00  =5      BYTE      cmdClass;                     /* The command class */
15553  00  =5      BYTE      cmd;                          /* The command */
15554  00  =5      BYTE      sensorType;                   /**/
15555  00  =5      BYTE      level;                        /* masked byte */
15556  00  =5      BYTE      sensorValue1;                 /* MSB */
15557  00  =5      BYTE      sensorValue2;                 
15558  00  =5      BYTE      sensorValue3;                 /* LSB */
15559  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V4_FRAME;
15560  00  =5  
15561  00  =5  /************************************************************/
15562  00  =5  /* Sensor Multilevel Report 4byte V4 command class structs */
15563  00  =5  /************************************************************/
15564  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V4_FRAME_
15565  00  =5  {
15566  00  =5      BYTE      cmdClass;                     /* The command class */
15567  00  =5      BYTE      cmd;                          /* The command */
15568  00  =5      BYTE      sensorType;                   /**/
15569  00  =5      BYTE      level;                        /* masked byte */
15570  00  =5      BYTE      sensorValue1;                 /* MSB */
15571  00  =5      BYTE      sensorValue2;                 
15572  00  =5      BYTE      sensorValue3;                 
15573  00  =5      BYTE      sensorValue4;                 /* LSB */
15574  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V4_FRAME;
15575  00  =5  
15576  00  =5  /************************************************************/
15577  00  =5  /* Sensor Multilevel Get V5 command class structs */        
15578  00  =5  /************************************************************/
15579  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_GET_V5_FRAME_
15580  00  =5  {
15581  00  =5      BYTE      cmdClass;                     /* The command class */
15582  00  =5      BYTE      cmd;                          /* The command */
15583  00  =5      BYTE      sensorType;                   /**/
15584  00  =5      BYTE      properties1;                  /* masked byte */
15585  00  =5  } ZW_SENSOR_MULTILEVEL_GET_V5_FRAME;
15586  00  =5  
15587  00  =5  /************************************************************/
15588  00  =5  /* Sensor Multilevel Report 1byte V5 command class structs */
15589  00  =5  /************************************************************/
15590  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V5_FRAME_
15591  00  =5  {
15592  00  =5      BYTE      cmdClass;                     /* The command class */
15593  00  =5      BYTE      cmd;                          /* The command */
15594  00  =5      BYTE      sensorType;                   /**/
15595  00  =5      BYTE      level;                        /* masked byte */
15596  00  =5      BYTE      sensorValue1;                 
15597  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V5_FRAME;
15598  00  =5  
15599  00  =5  /************************************************************/
15600  00  =5  /* Sensor Multilevel Report 2byte V5 command class structs */
15601  00  =5  /************************************************************/
15602  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V5_FRAME_
15603  00  =5  {
15604  00  =5      BYTE      cmdClass;                     /* The command class */
15605  00  =5      BYTE      cmd;                          /* The command */
15606  00  =5      BYTE      sensorType;                   /**/
15607  00  =5      BYTE      level;                        /* masked byte */
15608  00  =5      BYTE      sensorValue1;                 /* MSB */
15609  00  =5      BYTE      sensorValue2;                 /* LSB */
15610  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V5_FRAME;
15611  00  =5  
15612  00  =5  /************************************************************/
15613  00  =5  /* Sensor Multilevel Report 3byte V5 command class structs */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 281 

15614  00  =5  /************************************************************/
15615  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V5_FRAME_
15616  00  =5  {
15617  00  =5      BYTE      cmdClass;                     /* The command class */
15618  00  =5      BYTE      cmd;                          /* The command */
15619  00  =5      BYTE      sensorType;                   /**/
15620  00  =5      BYTE      level;                        /* masked byte */
15621  00  =5      BYTE      sensorValue1;                 /* MSB */
15622  00  =5      BYTE      sensorValue2;                 
15623  00  =5      BYTE      sensorValue3;                 /* LSB */
15624  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V5_FRAME;
15625  00  =5  
15626  00  =5  /************************************************************/
15627  00  =5  /* Sensor Multilevel Report 4byte V5 command class structs */
15628  00  =5  /************************************************************/
15629  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V5_FRAME_
15630  00  =5  {
15631  00  =5      BYTE      cmdClass;                     /* The command class */
15632  00  =5      BYTE      cmd;                          /* The command */
15633  00  =5      BYTE      sensorType;                   /**/
15634  00  =5      BYTE      level;                        /* masked byte */
15635  00  =5      BYTE      sensorValue1;                 /* MSB */
15636  00  =5      BYTE      sensorValue2;                 
15637  00  =5      BYTE      sensorValue3;                 
15638  00  =5      BYTE      sensorValue4;                 /* LSB */
15639  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V5_FRAME;
15640  00  =5  
15641  00  =5  /************************************************************/
15642  00  =5  /* Sensor Multilevel Supported Get Sensor V5 command class structs */
15643  00  =5  /************************************************************/
15644  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V5_FRAME_
15645  00  =5  {
15646  00  =5      BYTE      cmdClass;                     /* The command class */
15647  00  =5      BYTE      cmd;                          /* The command */
15648  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V5_FRAME;
15649  00  =5  
15650  00  =5  /************************************************************/
15651  00  =5  /* Sensor Multilevel Supported Sensor Report 1byte V5 command class structs */
15652  00  =5  /************************************************************/
15653  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V5_FRAME_
15654  00  =5  {
15655  00  =5      BYTE      cmdClass;                     /* The command class */
15656  00  =5      BYTE      cmd;                          /* The command */
15657  00  =5      BYTE      bitMask1;                     
15658  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V5_FRAME;
15659  00  =5  
15660  00  =5  /************************************************************/
15661  00  =5  /* Sensor Multilevel Supported Sensor Report 2byte V5 command class structs */
15662  00  =5  /************************************************************/
15663  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V5_FRAME_
15664  00  =5  {
15665  00  =5      BYTE      cmdClass;                     /* The command class */
15666  00  =5      BYTE      cmd;                          /* The command */
15667  00  =5      BYTE      bitMask1;                     /* MSB */
15668  00  =5      BYTE      bitMask2;                     /* LSB */
15669  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V5_FRAME;
15670  00  =5  
15671  00  =5  /************************************************************/
15672  00  =5  /* Sensor Multilevel Supported Sensor Report 3byte V5 command class structs */
15673  00  =5  /************************************************************/
15674  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V5_FRAME_
15675  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 282 

15676  00  =5      BYTE      cmdClass;                     /* The command class */
15677  00  =5      BYTE      cmd;                          /* The command */
15678  00  =5      BYTE      bitMask1;                     /* MSB */
15679  00  =5      BYTE      bitMask2;                     
15680  00  =5      BYTE      bitMask3;                     /* LSB */
15681  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V5_FRAME;
15682  00  =5  
15683  00  =5  /************************************************************/
15684  00  =5  /* Sensor Multilevel Supported Sensor Report 4byte V5 command class structs */
15685  00  =5  /************************************************************/
15686  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V5_FRAME_
15687  00  =5  {
15688  00  =5      BYTE      cmdClass;                     /* The command class */
15689  00  =5      BYTE      cmd;                          /* The command */
15690  00  =5      BYTE      bitMask1;                     /* MSB */
15691  00  =5      BYTE      bitMask2;                     
15692  00  =5      BYTE      bitMask3;                     
15693  00  =5      BYTE      bitMask4;                     /* LSB */
15694  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V5_FRAME;
15695  00  =5  
15696  00  =5  /************************************************************/
15697  00  =5  /* Sensor Multilevel Supported Get Scale V5 command class structs */
15698  00  =5  /************************************************************/
15699  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V5_FRAME_
15700  00  =5  {
15701  00  =5      BYTE      cmdClass;                     /* The command class */
15702  00  =5      BYTE      cmd;                          /* The command */
15703  00  =5      BYTE      sensorType;                   /**/
15704  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V5_FRAME;
15705  00  =5  
15706  00  =5  /************************************************************/
15707  00  =5  /* Sensor Multilevel Supported Scale Report V5 command class structs */
15708  00  =5  /************************************************************/
15709  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V5_FRAME_
15710  00  =5  {
15711  00  =5      BYTE      cmdClass;                     /* The command class */
15712  00  =5      BYTE      cmd;                          /* The command */
15713  00  =5      BYTE      sensorType;                   /**/
15714  00  =5      BYTE      properties1;                  /* masked byte */
15715  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V5_FRAME;
15716  00  =5  
15717  00  =5  /************************************************************/
15718  00  =5  /* Sensor Multilevel Get V6 command class structs */        
15719  00  =5  /************************************************************/
15720  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_GET_V6_FRAME_
15721  00  =5  {
15722  00  =5      BYTE      cmdClass;                     /* The command class */
15723  00  =5      BYTE      cmd;                          /* The command */
15724  00  =5      BYTE      sensorType;                   /**/
15725  00  =5      BYTE      properties1;                  /* masked byte */
15726  00  =5  } ZW_SENSOR_MULTILEVEL_GET_V6_FRAME;
15727  00  =5  
15728  00  =5  /************************************************************/
15729  00  =5  /* Sensor Multilevel Report 1byte V6 command class structs */
15730  00  =5  /************************************************************/
15731  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V6_FRAME_
15732  00  =5  {
15733  00  =5      BYTE      cmdClass;                     /* The command class */
15734  00  =5      BYTE      cmd;                          /* The command */
15735  00  =5      BYTE      sensorType;                   /**/
15736  00  =5      BYTE      level;                        /* masked byte */
15737  00  =5      BYTE      sensorValue1;                 
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 283 

15738  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V6_FRAME;
15739  00  =5  
15740  00  =5  /************************************************************/
15741  00  =5  /* Sensor Multilevel Report 2byte V6 command class structs */
15742  00  =5  /************************************************************/
15743  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V6_FRAME_
15744  00  =5  {
15745  00  =5      BYTE      cmdClass;                     /* The command class */
15746  00  =5      BYTE      cmd;                          /* The command */
15747  00  =5      BYTE      sensorType;                   /**/
15748  00  =5      BYTE      level;                        /* masked byte */
15749  00  =5      BYTE      sensorValue1;                 /* MSB */
15750  00  =5      BYTE      sensorValue2;                 /* LSB */
15751  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V6_FRAME;
15752  00  =5  
15753  00  =5  /************************************************************/
15754  00  =5  /* Sensor Multilevel Report 3byte V6 command class structs */
15755  00  =5  /************************************************************/
15756  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V6_FRAME_
15757  00  =5  {
15758  00  =5      BYTE      cmdClass;                     /* The command class */
15759  00  =5      BYTE      cmd;                          /* The command */
15760  00  =5      BYTE      sensorType;                   /**/
15761  00  =5      BYTE      level;                        /* masked byte */
15762  00  =5      BYTE      sensorValue1;                 /* MSB */
15763  00  =5      BYTE      sensorValue2;                 
15764  00  =5      BYTE      sensorValue3;                 /* LSB */
15765  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V6_FRAME;
15766  00  =5  
15767  00  =5  /************************************************************/
15768  00  =5  /* Sensor Multilevel Report 4byte V6 command class structs */
15769  00  =5  /************************************************************/
15770  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V6_FRAME_
15771  00  =5  {
15772  00  =5      BYTE      cmdClass;                     /* The command class */
15773  00  =5      BYTE      cmd;                          /* The command */
15774  00  =5      BYTE      sensorType;                   /**/
15775  00  =5      BYTE      level;                        /* masked byte */
15776  00  =5      BYTE      sensorValue1;                 /* MSB */
15777  00  =5      BYTE      sensorValue2;                 
15778  00  =5      BYTE      sensorValue3;                 
15779  00  =5      BYTE      sensorValue4;                 /* LSB */
15780  00  =5  } ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V6_FRAME;
15781  00  =5  
15782  00  =5  /************************************************************/
15783  00  =5  /* Sensor Multilevel Supported Get Sensor V6 command class structs */
15784  00  =5  /************************************************************/
15785  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V6_FRAME_
15786  00  =5  {
15787  00  =5      BYTE      cmdClass;                     /* The command class */
15788  00  =5      BYTE      cmd;                          /* The command */
15789  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V6_FRAME;
15790  00  =5  
15791  00  =5  /************************************************************/
15792  00  =5  /* Sensor Multilevel Supported Sensor Report 1byte V6 command class structs */
15793  00  =5  /************************************************************/
15794  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V6_FRAME_
15795  00  =5  {
15796  00  =5      BYTE      cmdClass;                     /* The command class */
15797  00  =5      BYTE      cmd;                          /* The command */
15798  00  =5      BYTE      bitMask1;                     
15799  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V6_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 284 

15800  00  =5  
15801  00  =5  /************************************************************/
15802  00  =5  /* Sensor Multilevel Supported Sensor Report 2byte V6 command class structs */
15803  00  =5  /************************************************************/
15804  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V6_FRAME_
15805  00  =5  {
15806  00  =5      BYTE      cmdClass;                     /* The command class */
15807  00  =5      BYTE      cmd;                          /* The command */
15808  00  =5      BYTE      bitMask1;                     /* MSB */
15809  00  =5      BYTE      bitMask2;                     /* LSB */
15810  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V6_FRAME;
15811  00  =5  
15812  00  =5  /************************************************************/
15813  00  =5  /* Sensor Multilevel Supported Sensor Report 3byte V6 command class structs */
15814  00  =5  /************************************************************/
15815  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V6_FRAME_
15816  00  =5  {
15817  00  =5      BYTE      cmdClass;                     /* The command class */
15818  00  =5      BYTE      cmd;                          /* The command */
15819  00  =5      BYTE      bitMask1;                     /* MSB */
15820  00  =5      BYTE      bitMask2;                     
15821  00  =5      BYTE      bitMask3;                     /* LSB */
15822  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V6_FRAME;
15823  00  =5  
15824  00  =5  /************************************************************/
15825  00  =5  /* Sensor Multilevel Supported Sensor Report 4byte V6 command class structs */
15826  00  =5  /************************************************************/
15827  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V6_FRAME_
15828  00  =5  {
15829  00  =5      BYTE      cmdClass;                     /* The command class */
15830  00  =5      BYTE      cmd;                          /* The command */
15831  00  =5      BYTE      bitMask1;                     /* MSB */
15832  00  =5      BYTE      bitMask2;                     
15833  00  =5      BYTE      bitMask3;                     
15834  00  =5      BYTE      bitMask4;                     /* LSB */
15835  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V6_FRAME;
15836  00  =5  
15837  00  =5  /************************************************************/
15838  00  =5  /* Sensor Multilevel Supported Get Scale V6 command class structs */
15839  00  =5  /************************************************************/
15840  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V6_FRAME_
15841  00  =5  {
15842  00  =5      BYTE      cmdClass;                     /* The command class */
15843  00  =5      BYTE      cmd;                          /* The command */
15844  00  =5      BYTE      sensorType;                   /**/
15845  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V6_FRAME;
15846  00  =5  
15847  00  =5  /************************************************************/
15848  00  =5  /* Sensor Multilevel Supported Scale Report V6 command class structs */
15849  00  =5  /************************************************************/
15850  00  =5  typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V6_FRAME_
15851  00  =5  {
15852  00  =5      BYTE      cmdClass;                     /* The command class */
15853  00  =5      BYTE      cmd;                          /* The command */
15854  00  =5      BYTE      sensorType;                   /**/
15855  00  =5      BYTE      properties1;                  /* masked byte */
15856  00  =5  } ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V6_FRAME;
15857  00  =5  
15858  00  =5  /************************************************************/
15859  00  =5  /* Sensor Alarm Set 1byte command class structs */          
15860  00  =5  /************************************************************/
15861  00  =5  typedef struct _ZW_SENSOR_ALARM_SET_1BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 285 

15862  00  =5  {
15863  00  =5      BYTE      cmdClass;                     /* The command class */
15864  00  =5      BYTE      cmd;                          /* The command */
15865  00  =5      BYTE      mode;                         /**/
15866  00  =5      BYTE      seconds1;                     /* MSB */
15867  00  =5      BYTE      seconds2;                     /* LSB */
15868  00  =5      BYTE      numberOfBitMasks;             /**/
15869  00  =5      BYTE      bitMask1;                     
15870  00  =5  } ZW_SENSOR_ALARM_SET_1BYTE_FRAME;
15871  00  =5  
15872  00  =5  /************************************************************/
15873  00  =5  /* Sensor Alarm Set 2byte command class structs */          
15874  00  =5  /************************************************************/
15875  00  =5  typedef struct _ZW_SENSOR_ALARM_SET_2BYTE_FRAME_
15876  00  =5  {
15877  00  =5      BYTE      cmdClass;                     /* The command class */
15878  00  =5      BYTE      cmd;                          /* The command */
15879  00  =5      BYTE      mode;                         /**/
15880  00  =5      BYTE      seconds1;                     /* MSB */
15881  00  =5      BYTE      seconds2;                     /* LSB */
15882  00  =5      BYTE      numberOfBitMasks;             /**/
15883  00  =5      BYTE      bitMask1;                     /* MSB */
15884  00  =5      BYTE      bitMask2;                     /* LSB */
15885  00  =5  } ZW_SENSOR_ALARM_SET_2BYTE_FRAME;
15886  00  =5  
15887  00  =5  /************************************************************/
15888  00  =5  /* Sensor Alarm Set 3byte command class structs */          
15889  00  =5  /************************************************************/
15890  00  =5  typedef struct _ZW_SENSOR_ALARM_SET_3BYTE_FRAME_
15891  00  =5  {
15892  00  =5      BYTE      cmdClass;                     /* The command class */
15893  00  =5      BYTE      cmd;                          /* The command */
15894  00  =5      BYTE      mode;                         /**/
15895  00  =5      BYTE      seconds1;                     /* MSB */
15896  00  =5      BYTE      seconds2;                     /* LSB */
15897  00  =5      BYTE      numberOfBitMasks;             /**/
15898  00  =5      BYTE      bitMask1;                     /* MSB */
15899  00  =5      BYTE      bitMask2;                     
15900  00  =5      BYTE      bitMask3;                     /* LSB */
15901  00  =5  } ZW_SENSOR_ALARM_SET_3BYTE_FRAME;
15902  00  =5  
15903  00  =5  /************************************************************/
15904  00  =5  /* Sensor Alarm Set 4byte command class structs */          
15905  00  =5  /************************************************************/
15906  00  =5  typedef struct _ZW_SENSOR_ALARM_SET_4BYTE_FRAME_
15907  00  =5  {
15908  00  =5      BYTE      cmdClass;                     /* The command class */
15909  00  =5      BYTE      cmd;                          /* The command */
15910  00  =5      BYTE      mode;                         /**/
15911  00  =5      BYTE      seconds1;                     /* MSB */
15912  00  =5      BYTE      seconds2;                     /* LSB */
15913  00  =5      BYTE      numberOfBitMasks;             /**/
15914  00  =5      BYTE      bitMask1;                     /* MSB */
15915  00  =5      BYTE      bitMask2;                     
15916  00  =5      BYTE      bitMask3;                     
15917  00  =5      BYTE      bitMask4;                     /* LSB */
15918  00  =5  } ZW_SENSOR_ALARM_SET_4BYTE_FRAME;
15919  00  =5  
15920  00  =5  /************************************************************/
15921  00  =5  /* Simple Av Control Get command class structs */           
15922  00  =5  /************************************************************/
15923  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_GET_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 286 

15924  00  =5  {
15925  00  =5      BYTE      cmdClass;                     /* The command class */
15926  00  =5      BYTE      cmd;                          /* The command */
15927  00  =5  } ZW_SIMPLE_AV_CONTROL_GET_FRAME;
15928  00  =5  
15929  00  =5  /************************************************************/
15930  00  =5  /* Simple Av Control Report command class structs */        
15931  00  =5  /************************************************************/
15932  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_REPORT_FRAME_
15933  00  =5  {
15934  00  =5      BYTE      cmdClass;                     /* The command class */
15935  00  =5      BYTE      cmd;                          /* The command */
15936  00  =5      BYTE      numberOfReports;              /**/
15937  00  =5  } ZW_SIMPLE_AV_CONTROL_REPORT_FRAME;
15938  00  =5  
15939  00  =5  /************************************************************/
15940  00  =5  /* Simple Av Control Set variant group structs */           
15941  00  =5  /************************************************************/
15942  00  =5  typedef struct _VG_SIMPLE_AV_CONTROL_SET_VG_
15943  00  =5  {
15944  00  =5      BYTE      command1;                     /* MSB */
15945  00  =5      BYTE      command2;                     /* LSB */
15946  00  =5  } VG_SIMPLE_AV_CONTROL_SET_VG;
15947  00  =5  
15948  00  =5  /************************************************************/
15949  00  =5  /* Simple Av Control Set 1byte command class structs */     
15950  00  =5  /************************************************************/
15951  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_SET_1BYTE_FRAME_
15952  00  =5  {
15953  00  =5      BYTE      cmdClass;                     /* The command class */
15954  00  =5      BYTE      cmd;                          /* The command */
15955  00  =5      BYTE      sequenceNumber;               /**/
15956  00  =5      BYTE      properties1;                  /* masked byte */
15957  00  =5      BYTE      itemId1;                      /* MSB */
15958  00  =5      BYTE      itemId2;                      /* LSB */
15959  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup1;                /**/
15960  00  =5  } ZW_SIMPLE_AV_CONTROL_SET_1BYTE_FRAME;
15961  00  =5  
15962  00  =5  /************************************************************/
15963  00  =5  /* Simple Av Control Set 2byte command class structs */     
15964  00  =5  /************************************************************/
15965  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_SET_2BYTE_FRAME_
15966  00  =5  {
15967  00  =5      BYTE      cmdClass;                     /* The command class */
15968  00  =5      BYTE      cmd;                          /* The command */
15969  00  =5      BYTE      sequenceNumber;               /**/
15970  00  =5      BYTE      properties1;                  /* masked byte */
15971  00  =5      BYTE      itemId1;                      /* MSB */
15972  00  =5      BYTE      itemId2;                      /* LSB */
15973  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup1;                /**/
15974  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup2;                /**/
15975  00  =5  } ZW_SIMPLE_AV_CONTROL_SET_2BYTE_FRAME;
15976  00  =5  
15977  00  =5  /************************************************************/
15978  00  =5  /* Simple Av Control Set 3byte command class structs */     
15979  00  =5  /************************************************************/
15980  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_SET_3BYTE_FRAME_
15981  00  =5  {
15982  00  =5      BYTE      cmdClass;                     /* The command class */
15983  00  =5      BYTE      cmd;                          /* The command */
15984  00  =5      BYTE      sequenceNumber;               /**/
15985  00  =5      BYTE      properties1;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 287 

15986  00  =5      BYTE      itemId1;                      /* MSB */
15987  00  =5      BYTE      itemId2;                      /* LSB */
15988  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup1;                /**/
15989  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup2;                /**/
15990  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup3;                /**/
15991  00  =5  } ZW_SIMPLE_AV_CONTROL_SET_3BYTE_FRAME;
15992  00  =5  
15993  00  =5  /************************************************************/
15994  00  =5  /* Simple Av Control Set 4byte command class structs */     
15995  00  =5  /************************************************************/
15996  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_SET_4BYTE_FRAME_
15997  00  =5  {
15998  00  =5      BYTE      cmdClass;                     /* The command class */
15999  00  =5      BYTE      cmd;                          /* The command */
16000  00  =5      BYTE      sequenceNumber;               /**/
16001  00  =5      BYTE      properties1;                  /* masked byte */
16002  00  =5      BYTE      itemId1;                      /* MSB */
16003  00  =5      BYTE      itemId2;                      /* LSB */
16004  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup1;                /**/
16005  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup2;                /**/
16006  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup3;                /**/
16007  00  =5      VG_SIMPLE_AV_CONTROL_SET_VG variantgroup4;                /**/
16008  00  =5  } ZW_SIMPLE_AV_CONTROL_SET_4BYTE_FRAME;
16009  00  =5  
16010  00  =5  /************************************************************/
16011  00  =5  /* Simple Av Control Supported Get command class structs */ 
16012  00  =5  /************************************************************/
16013  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_FRAME_
16014  00  =5  {
16015  00  =5      BYTE      cmdClass;                     /* The command class */
16016  00  =5      BYTE      cmd;                          /* The command */
16017  00  =5      BYTE      reportNo;                     /**/
16018  00  =5  } ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_FRAME;
16019  00  =5  
16020  00  =5  /************************************************************/
16021  00  =5  /* Simple Av Control Supported Report 1byte command class structs */
16022  00  =5  /************************************************************/
16023  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_FRAME_
16024  00  =5  {
16025  00  =5      BYTE      cmdClass;                     /* The command class */
16026  00  =5      BYTE      cmd;                          /* The command */
16027  00  =5      BYTE      reportNo;                     /**/
16028  00  =5      BYTE      bitMask1;                     
16029  00  =5  } ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_FRAME;
16030  00  =5  
16031  00  =5  /************************************************************/
16032  00  =5  /* Simple Av Control Supported Report 2byte command class structs */
16033  00  =5  /************************************************************/
16034  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_FRAME_
16035  00  =5  {
16036  00  =5      BYTE      cmdClass;                     /* The command class */
16037  00  =5      BYTE      cmd;                          /* The command */
16038  00  =5      BYTE      reportNo;                     /**/
16039  00  =5      BYTE      bitMask1;                     /* MSB */
16040  00  =5      BYTE      bitMask2;                     /* LSB */
16041  00  =5  } ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_FRAME;
16042  00  =5  
16043  00  =5  /************************************************************/
16044  00  =5  /* Simple Av Control Supported Report 3byte command class structs */
16045  00  =5  /************************************************************/
16046  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_FRAME_
16047  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 288 

16048  00  =5      BYTE      cmdClass;                     /* The command class */
16049  00  =5      BYTE      cmd;                          /* The command */
16050  00  =5      BYTE      reportNo;                     /**/
16051  00  =5      BYTE      bitMask1;                     /* MSB */
16052  00  =5      BYTE      bitMask2;                     
16053  00  =5      BYTE      bitMask3;                     /* LSB */
16054  00  =5  } ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_FRAME;
16055  00  =5  
16056  00  =5  /************************************************************/
16057  00  =5  /* Simple Av Control Supported Report 4byte command class structs */
16058  00  =5  /************************************************************/
16059  00  =5  typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_FRAME_
16060  00  =5  {
16061  00  =5      BYTE      cmdClass;                     /* The command class */
16062  00  =5      BYTE      cmd;                          /* The command */
16063  00  =5      BYTE      reportNo;                     /**/
16064  00  =5      BYTE      bitMask1;                     /* MSB */
16065  00  =5      BYTE      bitMask2;                     
16066  00  =5      BYTE      bitMask3;                     
16067  00  =5      BYTE      bitMask4;                     /* LSB */
16068  00  =5  } ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_FRAME;
16069  00  =5  
16070  00  =5  /************************************************************/
16071  00  =5  /* Switch All Get command class structs */                  
16072  00  =5  /************************************************************/
16073  00  =5  typedef struct _ZW_SWITCH_ALL_GET_FRAME_
16074  00  =5  {
16075  00  =5      BYTE      cmdClass;                     /* The command class */
16076  00  =5      BYTE      cmd;                          /* The command */
16077  00  =5  } ZW_SWITCH_ALL_GET_FRAME;
16078  00  =5  
16079  00  =5  /************************************************************/
16080  00  =5  /* Switch All Off command class structs */                  
16081  00  =5  /************************************************************/
16082  00  =5  typedef struct _ZW_SWITCH_ALL_OFF_FRAME_
16083  00  =5  {
16084  00  =5      BYTE      cmdClass;                     /* The command class */
16085  00  =5      BYTE      cmd;                          /* The command */
16086  00  =5  } ZW_SWITCH_ALL_OFF_FRAME;
16087  00  =5  
16088  00  =5  /************************************************************/
16089  00  =5  /* Switch All On command class structs */                   
16090  00  =5  /************************************************************/
16091  00  =5  typedef struct _ZW_SWITCH_ALL_ON_FRAME_
16092  00  =5  {
16093  00  =5      BYTE      cmdClass;                     /* The command class */
16094  00  =5      BYTE      cmd;                          /* The command */
16095  00  =5  } ZW_SWITCH_ALL_ON_FRAME;
16096  00  =5  
16097  00  =5  /************************************************************/
16098  00  =5  /* Switch All Report command class structs */               
16099  00  =5  /************************************************************/
16100  00  =5  typedef struct _ZW_SWITCH_ALL_REPORT_FRAME_
16101  00  =5  {
16102  00  =5      BYTE      cmdClass;                     /* The command class */
16103  00  =5      BYTE      cmd;                          /* The command */
16104  00  =5      BYTE      mode;                         /**/
16105  00  =5  } ZW_SWITCH_ALL_REPORT_FRAME;
16106  00  =5  
16107  00  =5  /************************************************************/
16108  00  =5  /* Switch All Set command class structs */                  
16109  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 289 

16110  00  =5  typedef struct _ZW_SWITCH_ALL_SET_FRAME_
16111  00  =5  {
16112  00  =5      BYTE      cmdClass;                     /* The command class */
16113  00  =5      BYTE      cmd;                          /* The command */
16114  00  =5      BYTE      mode;                         /**/
16115  00  =5  } ZW_SWITCH_ALL_SET_FRAME;
16116  00  =5  
16117  00  =5  /************************************************************/
16118  00  =5  /* Switch Binary Get command class structs */               
16119  00  =5  /************************************************************/
16120  00  =5  typedef struct _ZW_SWITCH_BINARY_GET_FRAME_
16121  00  =5  {
16122  00  =5      BYTE      cmdClass;                     /* The command class */
16123  00  =5      BYTE      cmd;                          /* The command */
16124  00  =5  } ZW_SWITCH_BINARY_GET_FRAME;
16125  00  =5  
16126  00  =5  /************************************************************/
16127  00  =5  /* Switch Binary Report command class structs */            
16128  00  =5  /************************************************************/
16129  00  =5  typedef struct _ZW_SWITCH_BINARY_REPORT_FRAME_
16130  00  =5  {
16131  00  =5      BYTE      cmdClass;                     /* The command class */
16132  00  =5      BYTE      cmd;                          /* The command */
16133  00  =5      BYTE      value;                        /**/
16134  00  =5  } ZW_SWITCH_BINARY_REPORT_FRAME;
16135  00  =5  
16136  00  =5  /************************************************************/
16137  00  =5  /* Switch Binary Set command class structs */               
16138  00  =5  /************************************************************/
16139  00  =5  typedef struct _ZW_SWITCH_BINARY_SET_FRAME_
16140  00  =5  {
16141  00  =5      BYTE      cmdClass;                     /* The command class */
16142  00  =5      BYTE      cmd;                          /* The command */
16143  00  =5      BYTE      switchValue;                  /**/
16144  00  =5  } ZW_SWITCH_BINARY_SET_FRAME;
16145  00  =5  
16146  00  =5  /************************************************************/
16147  00  =5  /* Switch Multilevel Get command class structs */           
16148  00  =5  /************************************************************/
16149  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_GET_FRAME_
16150  00  =5  {
16151  00  =5      BYTE      cmdClass;                     /* The command class */
16152  00  =5      BYTE      cmd;                          /* The command */
16153  00  =5  } ZW_SWITCH_MULTILEVEL_GET_FRAME;
16154  00  =5  
16155  00  =5  /************************************************************/
16156  00  =5  /* Switch Multilevel Report command class structs */        
16157  00  =5  /************************************************************/
16158  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_REPORT_FRAME_
16159  00  =5  {
16160  00  =5      BYTE      cmdClass;                     /* The command class */
16161  00  =5      BYTE      cmd;                          /* The command */
16162  00  =5      BYTE      value;                        /**/
16163  00  =5  } ZW_SWITCH_MULTILEVEL_REPORT_FRAME;
16164  00  =5  
16165  00  =5  /************************************************************/
16166  00  =5  /* Switch Multilevel Set command class structs */           
16167  00  =5  /************************************************************/
16168  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_SET_FRAME_
16169  00  =5  {
16170  00  =5      BYTE      cmdClass;                     /* The command class */
16171  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 290 

16172  00  =5      BYTE      value;                        /**/
16173  00  =5  } ZW_SWITCH_MULTILEVEL_SET_FRAME;
16174  00  =5  
16175  00  =5  /************************************************************/
16176  00  =5  /* Switch Multilevel Start Level Change command class structs */
16177  00  =5  /************************************************************/
16178  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_FRAME_
16179  00  =5  {
16180  00  =5      BYTE      cmdClass;                     /* The command class */
16181  00  =5      BYTE      cmd;                          /* The command */
16182  00  =5      BYTE      level;                        /* masked byte */
16183  00  =5      BYTE      startLevel;                   /**/
16184  00  =5  } ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_FRAME;
16185  00  =5  
16186  00  =5  /************************************************************/
16187  00  =5  /* Switch Multilevel Stop Level Change command class structs */
16188  00  =5  /************************************************************/
16189  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME_
16190  00  =5  {
16191  00  =5      BYTE      cmdClass;                     /* The command class */
16192  00  =5      BYTE      cmd;                          /* The command */
16193  00  =5  } ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME;
16194  00  =5  
16195  00  =5  /************************************************************/
16196  00  =5  /* Switch Multilevel Get V2 command class structs */        
16197  00  =5  /************************************************************/
16198  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_GET_V2_FRAME_
16199  00  =5  {
16200  00  =5      BYTE      cmdClass;                     /* The command class */
16201  00  =5      BYTE      cmd;                          /* The command */
16202  00  =5  } ZW_SWITCH_MULTILEVEL_GET_V2_FRAME;
16203  00  =5  
16204  00  =5  /************************************************************/
16205  00  =5  /* Switch Multilevel Report V2 command class structs */     
16206  00  =5  /************************************************************/
16207  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_REPORT_V2_FRAME_
16208  00  =5  {
16209  00  =5      BYTE      cmdClass;                     /* The command class */
16210  00  =5      BYTE      cmd;                          /* The command */
16211  00  =5      BYTE      value;                        /**/
16212  00  =5  } ZW_SWITCH_MULTILEVEL_REPORT_V2_FRAME;
16213  00  =5  
16214  00  =5  /************************************************************/
16215  00  =5  /* Switch Multilevel Set V2 command class structs */        
16216  00  =5  /************************************************************/
16217  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_SET_V2_FRAME_
16218  00  =5  {
16219  00  =5      BYTE      cmdClass;                     /* The command class */
16220  00  =5      BYTE      cmd;                          /* The command */
16221  00  =5      BYTE      value;                        /**/
16222  00  =5      BYTE      dimmingDuration;              /**/
16223  00  =5  } ZW_SWITCH_MULTILEVEL_SET_V2_FRAME;
16224  00  =5  
16225  00  =5  /************************************************************/
16226  00  =5  /* Switch Multilevel Start Level Change V2 command class structs */
16227  00  =5  /************************************************************/
16228  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V2_FRAME_
16229  00  =5  {
16230  00  =5      BYTE      cmdClass;                     /* The command class */
16231  00  =5      BYTE      cmd;                          /* The command */
16232  00  =5      BYTE      properties1;                  /* masked byte */
16233  00  =5      BYTE      startLevel;                   /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 291 

16234  00  =5      BYTE      dimmingDuration;              /**/
16235  00  =5  } ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V2_FRAME;
16236  00  =5  
16237  00  =5  /************************************************************/
16238  00  =5  /* Switch Multilevel Stop Level Change V2 command class structs */
16239  00  =5  /************************************************************/
16240  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V2_FRAME_
16241  00  =5  {
16242  00  =5      BYTE      cmdClass;                     /* The command class */
16243  00  =5      BYTE      cmd;                          /* The command */
16244  00  =5  } ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V2_FRAME;
16245  00  =5  
16246  00  =5  /************************************************************/
16247  00  =5  /* Switch Multilevel Get V3 command class structs */        
16248  00  =5  /************************************************************/
16249  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_GET_V3_FRAME_
16250  00  =5  {
16251  00  =5      BYTE      cmdClass;                     /* The command class */
16252  00  =5      BYTE      cmd;                          /* The command */
16253  00  =5  } ZW_SWITCH_MULTILEVEL_GET_V3_FRAME;
16254  00  =5  
16255  00  =5  /************************************************************/
16256  00  =5  /* Switch Multilevel Report V3 command class structs */     
16257  00  =5  /************************************************************/
16258  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_REPORT_V3_FRAME_
16259  00  =5  {
16260  00  =5      BYTE      cmdClass;                     /* The command class */
16261  00  =5      BYTE      cmd;                          /* The command */
16262  00  =5      BYTE      value;                        /**/
16263  00  =5  } ZW_SWITCH_MULTILEVEL_REPORT_V3_FRAME;
16264  00  =5  
16265  00  =5  /************************************************************/
16266  00  =5  /* Switch Multilevel Set V3 command class structs */        
16267  00  =5  /************************************************************/
16268  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_SET_V3_FRAME_
16269  00  =5  {
16270  00  =5      BYTE      cmdClass;                     /* The command class */
16271  00  =5      BYTE      cmd;                          /* The command */
16272  00  =5      BYTE      value;                        /**/
16273  00  =5      BYTE      dimmingDuration;              /**/
16274  00  =5  } ZW_SWITCH_MULTILEVEL_SET_V3_FRAME;
16275  00  =5  
16276  00  =5  /************************************************************/
16277  00  =5  /* Switch Multilevel Start Level Change V3 command class structs */
16278  00  =5  /************************************************************/
16279  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V3_FRAME_
16280  00  =5  {
16281  00  =5      BYTE      cmdClass;                     /* The command class */
16282  00  =5      BYTE      cmd;                          /* The command */
16283  00  =5      BYTE      properties1;                  /* masked byte */
16284  00  =5      BYTE      startLevel;                   /**/
16285  00  =5      BYTE      dimmingDuration;              /**/
16286  00  =5      BYTE      stepSize;                     /**/
16287  00  =5  } ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V3_FRAME;
16288  00  =5  
16289  00  =5  /************************************************************/
16290  00  =5  /* Switch Multilevel Stop Level Change V3 command class structs */
16291  00  =5  /************************************************************/
16292  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V3_FRAME_
16293  00  =5  {
16294  00  =5      BYTE      cmdClass;                     /* The command class */
16295  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 292 

16296  00  =5  } ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V3_FRAME;
16297  00  =5  
16298  00  =5  /************************************************************/
16299  00  =5  /* Switch Multilevel Supported Get V3 command class structs */
16300  00  =5  /************************************************************/
16301  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V3_FRAME_
16302  00  =5  {
16303  00  =5      BYTE      cmdClass;                     /* The command class */
16304  00  =5      BYTE      cmd;                          /* The command */
16305  00  =5  } ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V3_FRAME;
16306  00  =5  
16307  00  =5  /************************************************************/
16308  00  =5  /* Switch Multilevel Supported Report V3 command class structs */
16309  00  =5  /************************************************************/
16310  00  =5  typedef struct _ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_V3_FRAME_
16311  00  =5  {
16312  00  =5      BYTE      cmdClass;                     /* The command class */
16313  00  =5      BYTE      cmd;                          /* The command */
16314  00  =5      BYTE      properties1;                  /* masked byte */
16315  00  =5      BYTE      properties2;                  /* masked byte */
16316  00  =5  } ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_V3_FRAME;
16317  00  =5  
16318  00  =5  /************************************************************/
16319  00  =5  /* Switch Toggle Binary Set command class structs */        
16320  00  =5  /************************************************************/
16321  00  =5  typedef struct _ZW_SWITCH_TOGGLE_BINARY_SET_FRAME_
16322  00  =5  {
16323  00  =5      BYTE      cmdClass;                     /* The command class */
16324  00  =5      BYTE      cmd;                          /* The command */
16325  00  =5  } ZW_SWITCH_TOGGLE_BINARY_SET_FRAME;
16326  00  =5  
16327  00  =5  /************************************************************/
16328  00  =5  /* Switch Toggle Binary Get command class structs */        
16329  00  =5  /************************************************************/
16330  00  =5  typedef struct _ZW_SWITCH_TOGGLE_BINARY_GET_FRAME_
16331  00  =5  {
16332  00  =5      BYTE      cmdClass;                     /* The command class */
16333  00  =5      BYTE      cmd;                          /* The command */
16334  00  =5  } ZW_SWITCH_TOGGLE_BINARY_GET_FRAME;
16335  00  =5  
16336  00  =5  /************************************************************/
16337  00  =5  /* Switch Toggle Binary Report command class structs */     
16338  00  =5  /************************************************************/
16339  00  =5  typedef struct _ZW_SWITCH_TOGGLE_BINARY_REPORT_FRAME_
16340  00  =5  {
16341  00  =5      BYTE      cmdClass;                     /* The command class */
16342  00  =5      BYTE      cmd;                          /* The command */
16343  00  =5      BYTE      value;                        /**/
16344  00  =5  } ZW_SWITCH_TOGGLE_BINARY_REPORT_FRAME;
16345  00  =5  
16346  00  =5  /************************************************************/
16347  00  =5  /* Switch Toggle Multilevel Set command class structs */    
16348  00  =5  /************************************************************/
16349  00  =5  typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_SET_FRAME_
16350  00  =5  {
16351  00  =5      BYTE      cmdClass;                     /* The command class */
16352  00  =5      BYTE      cmd;                          /* The command */
16353  00  =5  } ZW_SWITCH_TOGGLE_MULTILEVEL_SET_FRAME;
16354  00  =5  
16355  00  =5  /************************************************************/
16356  00  =5  /* Switch Toggle Multilevel Get command class structs */    
16357  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 293 

16358  00  =5  typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_GET_FRAME_
16359  00  =5  {
16360  00  =5      BYTE      cmdClass;                     /* The command class */
16361  00  =5      BYTE      cmd;                          /* The command */
16362  00  =5  } ZW_SWITCH_TOGGLE_MULTILEVEL_GET_FRAME;
16363  00  =5  
16364  00  =5  /************************************************************/
16365  00  =5  /* Switch Toggle Multilevel Report command class structs */ 
16366  00  =5  /************************************************************/
16367  00  =5  typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_REPORT_FRAME_
16368  00  =5  {
16369  00  =5      BYTE      cmdClass;                     /* The command class */
16370  00  =5      BYTE      cmd;                          /* The command */
16371  00  =5      BYTE      value;                        /**/
16372  00  =5  } ZW_SWITCH_TOGGLE_MULTILEVEL_REPORT_FRAME;
16373  00  =5  
16374  00  =5  /************************************************************/
16375  00  =5  /* Switch Toggle Multilevel Start Level Change command class structs */
16376  00  =5  /************************************************************/
16377  00  =5  typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_FRAME_
16378  00  =5  {
16379  00  =5      BYTE      cmdClass;                     /* The command class */
16380  00  =5      BYTE      cmd;                          /* The command */
16381  00  =5      BYTE      level;                        /* masked byte */
16382  00  =5      BYTE      startLevel;                   /**/
16383  00  =5  } ZW_SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_FRAME;
16384  00  =5  
16385  00  =5  /************************************************************/
16386  00  =5  /* Switch Toggle Multilevel Stop Level Change command class structs */
16387  00  =5  /************************************************************/
16388  00  =5  typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME_
16389  00  =5  {
16390  00  =5      BYTE      cmdClass;                     /* The command class */
16391  00  =5      BYTE      cmd;                          /* The command */
16392  00  =5  } ZW_SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME;
16393  00  =5  
16394  00  =5  /************************************************************/
16395  00  =5  /* Tariff Tbl Remove 1byte command class structs */         
16396  00  =5  /************************************************************/
16397  00  =5  typedef struct _ZW_TARIFF_TBL_REMOVE_1BYTE_FRAME_
16398  00  =5  {
16399  00  =5      BYTE      cmdClass;                     /* The command class */
16400  00  =5      BYTE      cmd;                          /* The command */
16401  00  =5      BYTE      properties1;                  /* masked byte */
16402  00  =5      BYTE      rateParameterSetId1;          
16403  00  =5  } ZW_TARIFF_TBL_REMOVE_1BYTE_FRAME;
16404  00  =5  
16405  00  =5  /************************************************************/
16406  00  =5  /* Tariff Tbl Remove 2byte command class structs */         
16407  00  =5  /************************************************************/
16408  00  =5  typedef struct _ZW_TARIFF_TBL_REMOVE_2BYTE_FRAME_
16409  00  =5  {
16410  00  =5      BYTE      cmdClass;                     /* The command class */
16411  00  =5      BYTE      cmd;                          /* The command */
16412  00  =5      BYTE      properties1;                  /* masked byte */
16413  00  =5      BYTE      rateParameterSetId1;          /* MSB */
16414  00  =5      BYTE      rateParameterSetId2;          /* LSB */
16415  00  =5  } ZW_TARIFF_TBL_REMOVE_2BYTE_FRAME;
16416  00  =5  
16417  00  =5  /************************************************************/
16418  00  =5  /* Tariff Tbl Remove 3byte command class structs */         
16419  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 294 

16420  00  =5  typedef struct _ZW_TARIFF_TBL_REMOVE_3BYTE_FRAME_
16421  00  =5  {
16422  00  =5      BYTE      cmdClass;                     /* The command class */
16423  00  =5      BYTE      cmd;                          /* The command */
16424  00  =5      BYTE      properties1;                  /* masked byte */
16425  00  =5      BYTE      rateParameterSetId1;          /* MSB */
16426  00  =5      BYTE      rateParameterSetId2;          
16427  00  =5      BYTE      rateParameterSetId3;          /* LSB */
16428  00  =5  } ZW_TARIFF_TBL_REMOVE_3BYTE_FRAME;
16429  00  =5  
16430  00  =5  /************************************************************/
16431  00  =5  /* Tariff Tbl Remove 4byte command class structs */         
16432  00  =5  /************************************************************/
16433  00  =5  typedef struct _ZW_TARIFF_TBL_REMOVE_4BYTE_FRAME_
16434  00  =5  {
16435  00  =5      BYTE      cmdClass;                     /* The command class */
16436  00  =5      BYTE      cmd;                          /* The command */
16437  00  =5      BYTE      properties1;                  /* masked byte */
16438  00  =5      BYTE      rateParameterSetId1;          /* MSB */
16439  00  =5      BYTE      rateParameterSetId2;          
16440  00  =5      BYTE      rateParameterSetId3;          
16441  00  =5      BYTE      rateParameterSetId4;          /* LSB */
16442  00  =5  } ZW_TARIFF_TBL_REMOVE_4BYTE_FRAME;
16443  00  =5  
16444  00  =5  /************************************************************/
16445  00  =5  /* Tariff Tbl Set command class structs */                  
16446  00  =5  /************************************************************/
16447  00  =5  typedef struct _ZW_TARIFF_TBL_SET_FRAME_
16448  00  =5  {
16449  00  =5      BYTE      cmdClass;                     /* The command class */
16450  00  =5      BYTE      cmd;                          /* The command */
16451  00  =5      BYTE      rateParameterSetId;           /**/
16452  00  =5      BYTE      properties1;                  /* masked byte */
16453  00  =5      BYTE      tariffValue1;                 /* MSB */
16454  00  =5      BYTE      tariffValue2;                 
16455  00  =5      BYTE      tariffValue3;                 
16456  00  =5      BYTE      tariffValue4;                 /* LSB */
16457  00  =5  } ZW_TARIFF_TBL_SET_FRAME;
16458  00  =5  
16459  00  =5  /************************************************************/
16460  00  =5  /* Tariff Tbl Supplier Set 1byte command class structs */   
16461  00  =5  /************************************************************/
16462  00  =5  typedef struct _ZW_TARIFF_TBL_SUPPLIER_SET_1BYTE_FRAME_
16463  00  =5  {
16464  00  =5      BYTE      cmdClass;                     /* The command class */
16465  00  =5      BYTE      cmd;                          /* The command */
16466  00  =5      BYTE      year1;                        /* MSB */
16467  00  =5      BYTE      year2;                        /* LSB */
16468  00  =5      BYTE      month;                        /**/
16469  00  =5      BYTE      day;                          /**/
16470  00  =5      BYTE      hourLocalTime;                /**/
16471  00  =5      BYTE      minuteLocalTime;              /**/
16472  00  =5      BYTE      secondLocalTime;              /**/
16473  00  =5      BYTE      currency1;                    /* MSB */
16474  00  =5      BYTE      currency2;                    
16475  00  =5      BYTE      currency3;                    /* LSB */
16476  00  =5      BYTE      properties1;                  /* masked byte */
16477  00  =5      BYTE      standingChargeValue1;         /* MSB */
16478  00  =5      BYTE      standingChargeValue2;         
16479  00  =5      BYTE      standingChargeValue3;         
16480  00  =5      BYTE      standingChargeValue4;         /* LSB */
16481  00  =5      BYTE      properties2;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 295 

16482  00  =5      BYTE      supplierCharacter1;           
16483  00  =5  } ZW_TARIFF_TBL_SUPPLIER_SET_1BYTE_FRAME;
16484  00  =5  
16485  00  =5  /************************************************************/
16486  00  =5  /* Tariff Tbl Supplier Set 2byte command class structs */   
16487  00  =5  /************************************************************/
16488  00  =5  typedef struct _ZW_TARIFF_TBL_SUPPLIER_SET_2BYTE_FRAME_
16489  00  =5  {
16490  00  =5      BYTE      cmdClass;                     /* The command class */
16491  00  =5      BYTE      cmd;                          /* The command */
16492  00  =5      BYTE      year1;                        /* MSB */
16493  00  =5      BYTE      year2;                        /* LSB */
16494  00  =5      BYTE      month;                        /**/
16495  00  =5      BYTE      day;                          /**/
16496  00  =5      BYTE      hourLocalTime;                /**/
16497  00  =5      BYTE      minuteLocalTime;              /**/
16498  00  =5      BYTE      secondLocalTime;              /**/
16499  00  =5      BYTE      currency1;                    /* MSB */
16500  00  =5      BYTE      currency2;                    
16501  00  =5      BYTE      currency3;                    /* LSB */
16502  00  =5      BYTE      properties1;                  /* masked byte */
16503  00  =5      BYTE      standingChargeValue1;         /* MSB */
16504  00  =5      BYTE      standingChargeValue2;         
16505  00  =5      BYTE      standingChargeValue3;         
16506  00  =5      BYTE      standingChargeValue4;         /* LSB */
16507  00  =5      BYTE      properties2;                  /* masked byte */
16508  00  =5      BYTE      supplierCharacter1;           /* MSB */
16509  00  =5      BYTE      supplierCharacter2;           /* LSB */
16510  00  =5  } ZW_TARIFF_TBL_SUPPLIER_SET_2BYTE_FRAME;
16511  00  =5  
16512  00  =5  /************************************************************/
16513  00  =5  /* Tariff Tbl Supplier Set 3byte command class structs */   
16514  00  =5  /************************************************************/
16515  00  =5  typedef struct _ZW_TARIFF_TBL_SUPPLIER_SET_3BYTE_FRAME_
16516  00  =5  {
16517  00  =5      BYTE      cmdClass;                     /* The command class */
16518  00  =5      BYTE      cmd;                          /* The command */
16519  00  =5      BYTE      year1;                        /* MSB */
16520  00  =5      BYTE      year2;                        /* LSB */
16521  00  =5      BYTE      month;                        /**/
16522  00  =5      BYTE      day;                          /**/
16523  00  =5      BYTE      hourLocalTime;                /**/
16524  00  =5      BYTE      minuteLocalTime;              /**/
16525  00  =5      BYTE      secondLocalTime;              /**/
16526  00  =5      BYTE      currency1;                    /* MSB */
16527  00  =5      BYTE      currency2;                    
16528  00  =5      BYTE      currency3;                    /* LSB */
16529  00  =5      BYTE      properties1;                  /* masked byte */
16530  00  =5      BYTE      standingChargeValue1;         /* MSB */
16531  00  =5      BYTE      standingChargeValue2;         
16532  00  =5      BYTE      standingChargeValue3;         
16533  00  =5      BYTE      standingChargeValue4;         /* LSB */
16534  00  =5      BYTE      properties2;                  /* masked byte */
16535  00  =5      BYTE      supplierCharacter1;           /* MSB */
16536  00  =5      BYTE      supplierCharacter2;           
16537  00  =5      BYTE      supplierCharacter3;           /* LSB */
16538  00  =5  } ZW_TARIFF_TBL_SUPPLIER_SET_3BYTE_FRAME;
16539  00  =5  
16540  00  =5  /************************************************************/
16541  00  =5  /* Tariff Tbl Supplier Set 4byte command class structs */   
16542  00  =5  /************************************************************/
16543  00  =5  typedef struct _ZW_TARIFF_TBL_SUPPLIER_SET_4BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 296 

16544  00  =5  {
16545  00  =5      BYTE      cmdClass;                     /* The command class */
16546  00  =5      BYTE      cmd;                          /* The command */
16547  00  =5      BYTE      year1;                        /* MSB */
16548  00  =5      BYTE      year2;                        /* LSB */
16549  00  =5      BYTE      month;                        /**/
16550  00  =5      BYTE      day;                          /**/
16551  00  =5      BYTE      hourLocalTime;                /**/
16552  00  =5      BYTE      minuteLocalTime;              /**/
16553  00  =5      BYTE      secondLocalTime;              /**/
16554  00  =5      BYTE      currency1;                    /* MSB */
16555  00  =5      BYTE      currency2;                    
16556  00  =5      BYTE      currency3;                    /* LSB */
16557  00  =5      BYTE      properties1;                  /* masked byte */
16558  00  =5      BYTE      standingChargeValue1;         /* MSB */
16559  00  =5      BYTE      standingChargeValue2;         
16560  00  =5      BYTE      standingChargeValue3;         
16561  00  =5      BYTE      standingChargeValue4;         /* LSB */
16562  00  =5      BYTE      properties2;                  /* masked byte */
16563  00  =5      BYTE      supplierCharacter1;           /* MSB */
16564  00  =5      BYTE      supplierCharacter2;           
16565  00  =5      BYTE      supplierCharacter3;           
16566  00  =5      BYTE      supplierCharacter4;           /* LSB */
16567  00  =5  } ZW_TARIFF_TBL_SUPPLIER_SET_4BYTE_FRAME;
16568  00  =5  
16569  00  =5  /************************************************************/
16570  00  =5  /* Tariff Tbl Cost Get command class structs */             
16571  00  =5  /************************************************************/
16572  00  =5  typedef struct _ZW_TARIFF_TBL_COST_GET_FRAME_
16573  00  =5  {
16574  00  =5      BYTE      cmdClass;                     /* The command class */
16575  00  =5      BYTE      cmd;                          /* The command */
16576  00  =5      BYTE      rateParameterSetId;           /**/
16577  00  =5      BYTE      startYear1;                   /* MSB */
16578  00  =5      BYTE      startYear2;                   /* LSB */
16579  00  =5      BYTE      startMonth;                   /**/
16580  00  =5      BYTE      startDay;                     /**/
16581  00  =5      BYTE      startHourLocalTime;           /**/
16582  00  =5      BYTE      startMinuteLocalTime;         /**/
16583  00  =5      BYTE      stopYear1;                    /* MSB */
16584  00  =5      BYTE      stopYear2;                    /* LSB */
16585  00  =5      BYTE      stopMonth;                    /**/
16586  00  =5      BYTE      stopDay;                      /**/
16587  00  =5      BYTE      stopHourLocalTime;            /**/
16588  00  =5      BYTE      stopMinuteLocalTime;          /**/
16589  00  =5  } ZW_TARIFF_TBL_COST_GET_FRAME;
16590  00  =5  
16591  00  =5  /************************************************************/
16592  00  =5  /* Tariff Tbl Cost Report command class structs */          
16593  00  =5  /************************************************************/
16594  00  =5  typedef struct _ZW_TARIFF_TBL_COST_REPORT_FRAME_
16595  00  =5  {
16596  00  =5      BYTE      cmdClass;                     /* The command class */
16597  00  =5      BYTE      cmd;                          /* The command */
16598  00  =5      BYTE      rateParameterSetId;           /**/
16599  00  =5      BYTE      properties1;                  /* masked byte */
16600  00  =5      BYTE      startYear1;                   /* MSB */
16601  00  =5      BYTE      startYear2;                   /* LSB */
16602  00  =5      BYTE      startMonth;                   /**/
16603  00  =5      BYTE      startDay;                     /**/
16604  00  =5      BYTE      startHourLocalTime;           /**/
16605  00  =5      BYTE      startMinuteLocalTime;         /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 297 

16606  00  =5      BYTE      stopYear1;                    /* MSB */
16607  00  =5      BYTE      stopYear2;                    /* LSB */
16608  00  =5      BYTE      stopMonth;                    /**/
16609  00  =5      BYTE      stopDay;                      /**/
16610  00  =5      BYTE      stopHourLocalTime;            /**/
16611  00  =5      BYTE      stopMinuteLocalTime;          /**/
16612  00  =5      BYTE      currency1;                    /* MSB */
16613  00  =5      BYTE      currency2;                    
16614  00  =5      BYTE      currency3;                    /* LSB */
16615  00  =5      BYTE      properties2;                  /* masked byte */
16616  00  =5      BYTE      costValue1;                   /* MSB */
16617  00  =5      BYTE      costValue2;                   
16618  00  =5      BYTE      costValue3;                   
16619  00  =5      BYTE      costValue4;                   /* LSB */
16620  00  =5  } ZW_TARIFF_TBL_COST_REPORT_FRAME;
16621  00  =5  
16622  00  =5  /************************************************************/
16623  00  =5  /* Tariff Tbl Get command class structs */                  
16624  00  =5  /************************************************************/
16625  00  =5  typedef struct _ZW_TARIFF_TBL_GET_FRAME_
16626  00  =5  {
16627  00  =5      BYTE      cmdClass;                     /* The command class */
16628  00  =5      BYTE      cmd;                          /* The command */
16629  00  =5      BYTE      rateParameterSetId;           /**/
16630  00  =5  } ZW_TARIFF_TBL_GET_FRAME;
16631  00  =5  
16632  00  =5  /************************************************************/
16633  00  =5  /* Tariff Tbl Report command class structs */               
16634  00  =5  /************************************************************/
16635  00  =5  typedef struct _ZW_TARIFF_TBL_REPORT_FRAME_
16636  00  =5  {
16637  00  =5      BYTE      cmdClass;                     /* The command class */
16638  00  =5      BYTE      cmd;                          /* The command */
16639  00  =5      BYTE      rateParameterSetId;           /**/
16640  00  =5      BYTE      properties1;                  /* masked byte */
16641  00  =5      BYTE      tariffValue1;                 /* MSB */
16642  00  =5      BYTE      tariffValue2;                 
16643  00  =5      BYTE      tariffValue3;                 
16644  00  =5      BYTE      tariffValue4;                 /* LSB */
16645  00  =5  } ZW_TARIFF_TBL_REPORT_FRAME;
16646  00  =5  
16647  00  =5  /************************************************************/
16648  00  =5  /* Tariff Tbl Supplier Get command class structs */         
16649  00  =5  /************************************************************/
16650  00  =5  typedef struct _ZW_TARIFF_TBL_SUPPLIER_GET_FRAME_
16651  00  =5  {
16652  00  =5      BYTE      cmdClass;                     /* The command class */
16653  00  =5      BYTE      cmd;                          /* The command */
16654  00  =5  } ZW_TARIFF_TBL_SUPPLIER_GET_FRAME;
16655  00  =5  
16656  00  =5  /************************************************************/
16657  00  =5  /* Tariff Tbl Supplier Report 1byte command class structs */
16658  00  =5  /************************************************************/
16659  00  =5  typedef struct _ZW_TARIFF_TBL_SUPPLIER_REPORT_1BYTE_FRAME_
16660  00  =5  {
16661  00  =5      BYTE      cmdClass;                     /* The command class */
16662  00  =5      BYTE      cmd;                          /* The command */
16663  00  =5      BYTE      year1;                        /* MSB */
16664  00  =5      BYTE      year2;                        /* LSB */
16665  00  =5      BYTE      month;                        /**/
16666  00  =5      BYTE      day;                          /**/
16667  00  =5      BYTE      hourLocalTime;                /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 298 

16668  00  =5      BYTE      minuteLocalTime;              /**/
16669  00  =5      BYTE      secondLocalTime;              /**/
16670  00  =5      BYTE      currency1;                    /* MSB */
16671  00  =5      BYTE      currency2;                    
16672  00  =5      BYTE      currency3;                    /* LSB */
16673  00  =5      BYTE      properties1;                  /* masked byte */
16674  00  =5      BYTE      standingChargeValue1;         /* MSB */
16675  00  =5      BYTE      standingChargeValue2;         
16676  00  =5      BYTE      standingChargeValue3;         
16677  00  =5      BYTE      standingChargeValue4;         /* LSB */
16678  00  =5      BYTE      properties2;                  /* masked byte */
16679  00  =5      BYTE      supplierCharacter1;           
16680  00  =5  } ZW_TARIFF_TBL_SUPPLIER_REPORT_1BYTE_FRAME;
16681  00  =5  
16682  00  =5  /************************************************************/
16683  00  =5  /* Tariff Tbl Supplier Report 2byte command class structs */
16684  00  =5  /************************************************************/
16685  00  =5  typedef struct _ZW_TARIFF_TBL_SUPPLIER_REPORT_2BYTE_FRAME_
16686  00  =5  {
16687  00  =5      BYTE      cmdClass;                     /* The command class */
16688  00  =5      BYTE      cmd;                          /* The command */
16689  00  =5      BYTE      year1;                        /* MSB */
16690  00  =5      BYTE      year2;                        /* LSB */
16691  00  =5      BYTE      month;                        /**/
16692  00  =5      BYTE      day;                          /**/
16693  00  =5      BYTE      hourLocalTime;                /**/
16694  00  =5      BYTE      minuteLocalTime;              /**/
16695  00  =5      BYTE      secondLocalTime;              /**/
16696  00  =5      BYTE      currency1;                    /* MSB */
16697  00  =5      BYTE      currency2;                    
16698  00  =5      BYTE      currency3;                    /* LSB */
16699  00  =5      BYTE      properties1;                  /* masked byte */
16700  00  =5      BYTE      standingChargeValue1;         /* MSB */
16701  00  =5      BYTE      standingChargeValue2;         
16702  00  =5      BYTE      standingChargeValue3;         
16703  00  =5      BYTE      standingChargeValue4;         /* LSB */
16704  00  =5      BYTE      properties2;                  /* masked byte */
16705  00  =5      BYTE      supplierCharacter1;           /* MSB */
16706  00  =5      BYTE      supplierCharacter2;           /* LSB */
16707  00  =5  } ZW_TARIFF_TBL_SUPPLIER_REPORT_2BYTE_FRAME;
16708  00  =5  
16709  00  =5  /************************************************************/
16710  00  =5  /* Tariff Tbl Supplier Report 3byte command class structs */
16711  00  =5  /************************************************************/
16712  00  =5  typedef struct _ZW_TARIFF_TBL_SUPPLIER_REPORT_3BYTE_FRAME_
16713  00  =5  {
16714  00  =5      BYTE      cmdClass;                     /* The command class */
16715  00  =5      BYTE      cmd;                          /* The command */
16716  00  =5      BYTE      year1;                        /* MSB */
16717  00  =5      BYTE      year2;                        /* LSB */
16718  00  =5      BYTE      month;                        /**/
16719  00  =5      BYTE      day;                          /**/
16720  00  =5      BYTE      hourLocalTime;                /**/
16721  00  =5      BYTE      minuteLocalTime;              /**/
16722  00  =5      BYTE      secondLocalTime;              /**/
16723  00  =5      BYTE      currency1;                    /* MSB */
16724  00  =5      BYTE      currency2;                    
16725  00  =5      BYTE      currency3;                    /* LSB */
16726  00  =5      BYTE      properties1;                  /* masked byte */
16727  00  =5      BYTE      standingChargeValue1;         /* MSB */
16728  00  =5      BYTE      standingChargeValue2;         
16729  00  =5      BYTE      standingChargeValue3;         
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 299 

16730  00  =5      BYTE      standingChargeValue4;         /* LSB */
16731  00  =5      BYTE      properties2;                  /* masked byte */
16732  00  =5      BYTE      supplierCharacter1;           /* MSB */
16733  00  =5      BYTE      supplierCharacter2;           
16734  00  =5      BYTE      supplierCharacter3;           /* LSB */
16735  00  =5  } ZW_TARIFF_TBL_SUPPLIER_REPORT_3BYTE_FRAME;
16736  00  =5  
16737  00  =5  /************************************************************/
16738  00  =5  /* Tariff Tbl Supplier Report 4byte command class structs */
16739  00  =5  /************************************************************/
16740  00  =5  typedef struct _ZW_TARIFF_TBL_SUPPLIER_REPORT_4BYTE_FRAME_
16741  00  =5  {
16742  00  =5      BYTE      cmdClass;                     /* The command class */
16743  00  =5      BYTE      cmd;                          /* The command */
16744  00  =5      BYTE      year1;                        /* MSB */
16745  00  =5      BYTE      year2;                        /* LSB */
16746  00  =5      BYTE      month;                        /**/
16747  00  =5      BYTE      day;                          /**/
16748  00  =5      BYTE      hourLocalTime;                /**/
16749  00  =5      BYTE      minuteLocalTime;              /**/
16750  00  =5      BYTE      secondLocalTime;              /**/
16751  00  =5      BYTE      currency1;                    /* MSB */
16752  00  =5      BYTE      currency2;                    
16753  00  =5      BYTE      currency3;                    /* LSB */
16754  00  =5      BYTE      properties1;                  /* masked byte */
16755  00  =5      BYTE      standingChargeValue1;         /* MSB */
16756  00  =5      BYTE      standingChargeValue2;         
16757  00  =5      BYTE      standingChargeValue3;         
16758  00  =5      BYTE      standingChargeValue4;         /* LSB */
16759  00  =5      BYTE      properties2;                  /* masked byte */
16760  00  =5      BYTE      supplierCharacter1;           /* MSB */
16761  00  =5      BYTE      supplierCharacter2;           
16762  00  =5      BYTE      supplierCharacter3;           
16763  00  =5      BYTE      supplierCharacter4;           /* LSB */
16764  00  =5  } ZW_TARIFF_TBL_SUPPLIER_REPORT_4BYTE_FRAME;
16765  00  =5  
16766  00  =5  /************************************************************/
16767  00  =5  /* Thermostat Fan Mode Get command class structs */         
16768  00  =5  /************************************************************/
16769  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_GET_FRAME_
16770  00  =5  {
16771  00  =5      BYTE      cmdClass;                     /* The command class */
16772  00  =5      BYTE      cmd;                          /* The command */
16773  00  =5  } ZW_THERMOSTAT_FAN_MODE_GET_FRAME;
16774  00  =5  
16775  00  =5  /************************************************************/
16776  00  =5  /* Thermostat Fan Mode Report command class structs */      
16777  00  =5  /************************************************************/
16778  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_REPORT_FRAME_
16779  00  =5  {
16780  00  =5      BYTE      cmdClass;                     /* The command class */
16781  00  =5      BYTE      cmd;                          /* The command */
16782  00  =5      BYTE      level;                        /* masked byte */
16783  00  =5  } ZW_THERMOSTAT_FAN_MODE_REPORT_FRAME;
16784  00  =5  
16785  00  =5  /************************************************************/
16786  00  =5  /* Thermostat Fan Mode Set command class structs */         
16787  00  =5  /************************************************************/
16788  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SET_FRAME_
16789  00  =5  {
16790  00  =5      BYTE      cmdClass;                     /* The command class */
16791  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 300 

16792  00  =5      BYTE      level;                        /* masked byte */
16793  00  =5  } ZW_THERMOSTAT_FAN_MODE_SET_FRAME;
16794  00  =5  
16795  00  =5  /************************************************************/
16796  00  =5  /* Thermostat Fan Mode Supported Get command class structs */
16797  00  =5  /************************************************************/
16798  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_FRAME_
16799  00  =5  {
16800  00  =5      BYTE      cmdClass;                     /* The command class */
16801  00  =5      BYTE      cmd;                          /* The command */
16802  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_FRAME;
16803  00  =5  
16804  00  =5  /************************************************************/
16805  00  =5  /* Thermostat Fan Mode Supported Report 1byte command class structs */
16806  00  =5  /************************************************************/
16807  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_FRAME_
16808  00  =5  {
16809  00  =5      BYTE      cmdClass;                     /* The command class */
16810  00  =5      BYTE      cmd;                          /* The command */
16811  00  =5      BYTE      bitMask1;                     
16812  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_FRAME;
16813  00  =5  
16814  00  =5  /************************************************************/
16815  00  =5  /* Thermostat Fan Mode Supported Report 2byte command class structs */
16816  00  =5  /************************************************************/
16817  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_FRAME_
16818  00  =5  {
16819  00  =5      BYTE      cmdClass;                     /* The command class */
16820  00  =5      BYTE      cmd;                          /* The command */
16821  00  =5      BYTE      bitMask1;                     /* MSB */
16822  00  =5      BYTE      bitMask2;                     /* LSB */
16823  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_FRAME;
16824  00  =5  
16825  00  =5  /************************************************************/
16826  00  =5  /* Thermostat Fan Mode Supported Report 3byte command class structs */
16827  00  =5  /************************************************************/
16828  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_FRAME_
16829  00  =5  {
16830  00  =5      BYTE      cmdClass;                     /* The command class */
16831  00  =5      BYTE      cmd;                          /* The command */
16832  00  =5      BYTE      bitMask1;                     /* MSB */
16833  00  =5      BYTE      bitMask2;                     
16834  00  =5      BYTE      bitMask3;                     /* LSB */
16835  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_FRAME;
16836  00  =5  
16837  00  =5  /************************************************************/
16838  00  =5  /* Thermostat Fan Mode Supported Report 4byte command class structs */
16839  00  =5  /************************************************************/
16840  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_FRAME_
16841  00  =5  {
16842  00  =5      BYTE      cmdClass;                     /* The command class */
16843  00  =5      BYTE      cmd;                          /* The command */
16844  00  =5      BYTE      bitMask1;                     /* MSB */
16845  00  =5      BYTE      bitMask2;                     
16846  00  =5      BYTE      bitMask3;                     
16847  00  =5      BYTE      bitMask4;                     /* LSB */
16848  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_FRAME;
16849  00  =5  
16850  00  =5  /************************************************************/
16851  00  =5  /* Thermostat Fan Mode Get V2 command class structs */      
16852  00  =5  /************************************************************/
16853  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_GET_V2_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 301 

16854  00  =5  {
16855  00  =5      BYTE      cmdClass;                     /* The command class */
16856  00  =5      BYTE      cmd;                          /* The command */
16857  00  =5  } ZW_THERMOSTAT_FAN_MODE_GET_V2_FRAME;
16858  00  =5  
16859  00  =5  /************************************************************/
16860  00  =5  /* Thermostat Fan Mode Report V2 command class structs */   
16861  00  =5  /************************************************************/
16862  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_REPORT_V2_FRAME_
16863  00  =5  {
16864  00  =5      BYTE      cmdClass;                     /* The command class */
16865  00  =5      BYTE      cmd;                          /* The command */
16866  00  =5      BYTE      level;                        /* masked byte */
16867  00  =5  } ZW_THERMOSTAT_FAN_MODE_REPORT_V2_FRAME;
16868  00  =5  
16869  00  =5  /************************************************************/
16870  00  =5  /* Thermostat Fan Mode Set V2 command class structs */      
16871  00  =5  /************************************************************/
16872  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SET_V2_FRAME_
16873  00  =5  {
16874  00  =5      BYTE      cmdClass;                     /* The command class */
16875  00  =5      BYTE      cmd;                          /* The command */
16876  00  =5      BYTE      level;                        /* masked byte */
16877  00  =5  } ZW_THERMOSTAT_FAN_MODE_SET_V2_FRAME;
16878  00  =5  
16879  00  =5  /************************************************************/
16880  00  =5  /* Thermostat Fan Mode Supported Get V2 command class structs */
16881  00  =5  /************************************************************/
16882  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V2_FRAME_
16883  00  =5  {
16884  00  =5      BYTE      cmdClass;                     /* The command class */
16885  00  =5      BYTE      cmd;                          /* The command */
16886  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V2_FRAME;
16887  00  =5  
16888  00  =5  /************************************************************/
16889  00  =5  /* Thermostat Fan Mode Supported Report 1byte V2 command class structs */
16890  00  =5  /************************************************************/
16891  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME_
16892  00  =5  {
16893  00  =5      BYTE      cmdClass;                     /* The command class */
16894  00  =5      BYTE      cmd;                          /* The command */
16895  00  =5      BYTE      bitMask1;                     
16896  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME;
16897  00  =5  
16898  00  =5  /************************************************************/
16899  00  =5  /* Thermostat Fan Mode Supported Report 2byte V2 command class structs */
16900  00  =5  /************************************************************/
16901  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME_
16902  00  =5  {
16903  00  =5      BYTE      cmdClass;                     /* The command class */
16904  00  =5      BYTE      cmd;                          /* The command */
16905  00  =5      BYTE      bitMask1;                     /* MSB */
16906  00  =5      BYTE      bitMask2;                     /* LSB */
16907  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME;
16908  00  =5  
16909  00  =5  /************************************************************/
16910  00  =5  /* Thermostat Fan Mode Supported Report 3byte V2 command class structs */
16911  00  =5  /************************************************************/
16912  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME_
16913  00  =5  {
16914  00  =5      BYTE      cmdClass;                     /* The command class */
16915  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 302 

16916  00  =5      BYTE      bitMask1;                     /* MSB */
16917  00  =5      BYTE      bitMask2;                     
16918  00  =5      BYTE      bitMask3;                     /* LSB */
16919  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME;
16920  00  =5  
16921  00  =5  /************************************************************/
16922  00  =5  /* Thermostat Fan Mode Supported Report 4byte V2 command class structs */
16923  00  =5  /************************************************************/
16924  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME_
16925  00  =5  {
16926  00  =5      BYTE      cmdClass;                     /* The command class */
16927  00  =5      BYTE      cmd;                          /* The command */
16928  00  =5      BYTE      bitMask1;                     /* MSB */
16929  00  =5      BYTE      bitMask2;                     
16930  00  =5      BYTE      bitMask3;                     
16931  00  =5      BYTE      bitMask4;                     /* LSB */
16932  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME;
16933  00  =5  
16934  00  =5  /************************************************************/
16935  00  =5  /* Thermostat Fan Mode Get V3 command class structs */      
16936  00  =5  /************************************************************/
16937  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_GET_V3_FRAME_
16938  00  =5  {
16939  00  =5      BYTE      cmdClass;                     /* The command class */
16940  00  =5      BYTE      cmd;                          /* The command */
16941  00  =5  } ZW_THERMOSTAT_FAN_MODE_GET_V3_FRAME;
16942  00  =5  
16943  00  =5  /************************************************************/
16944  00  =5  /* Thermostat Fan Mode Report V3 command class structs */   
16945  00  =5  /************************************************************/
16946  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_REPORT_V3_FRAME_
16947  00  =5  {
16948  00  =5      BYTE      cmdClass;                     /* The command class */
16949  00  =5      BYTE      cmd;                          /* The command */
16950  00  =5      BYTE      properties1;                  /* masked byte */
16951  00  =5  } ZW_THERMOSTAT_FAN_MODE_REPORT_V3_FRAME;
16952  00  =5  
16953  00  =5  /************************************************************/
16954  00  =5  /* Thermostat Fan Mode Set V3 command class structs */      
16955  00  =5  /************************************************************/
16956  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SET_V3_FRAME_
16957  00  =5  {
16958  00  =5      BYTE      cmdClass;                     /* The command class */
16959  00  =5      BYTE      cmd;                          /* The command */
16960  00  =5      BYTE      properties1;                  /* masked byte */
16961  00  =5  } ZW_THERMOSTAT_FAN_MODE_SET_V3_FRAME;
16962  00  =5  
16963  00  =5  /************************************************************/
16964  00  =5  /* Thermostat Fan Mode Supported Get V3 command class structs */
16965  00  =5  /************************************************************/
16966  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V3_FRAME_
16967  00  =5  {
16968  00  =5      BYTE      cmdClass;                     /* The command class */
16969  00  =5      BYTE      cmd;                          /* The command */
16970  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V3_FRAME;
16971  00  =5  
16972  00  =5  /************************************************************/
16973  00  =5  /* Thermostat Fan Mode Supported Report 1byte V3 command class structs */
16974  00  =5  /************************************************************/
16975  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V3_FRAME_
16976  00  =5  {
16977  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 303 

16978  00  =5      BYTE      cmd;                          /* The command */
16979  00  =5      BYTE      bitMask1;                     
16980  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V3_FRAME;
16981  00  =5  
16982  00  =5  /************************************************************/
16983  00  =5  /* Thermostat Fan Mode Supported Report 2byte V3 command class structs */
16984  00  =5  /************************************************************/
16985  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V3_FRAME_
16986  00  =5  {
16987  00  =5      BYTE      cmdClass;                     /* The command class */
16988  00  =5      BYTE      cmd;                          /* The command */
16989  00  =5      BYTE      bitMask1;                     /* MSB */
16990  00  =5      BYTE      bitMask2;                     /* LSB */
16991  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V3_FRAME;
16992  00  =5  
16993  00  =5  /************************************************************/
16994  00  =5  /* Thermostat Fan Mode Supported Report 3byte V3 command class structs */
16995  00  =5  /************************************************************/
16996  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V3_FRAME_
16997  00  =5  {
16998  00  =5      BYTE      cmdClass;                     /* The command class */
16999  00  =5      BYTE      cmd;                          /* The command */
17000  00  =5      BYTE      bitMask1;                     /* MSB */
17001  00  =5      BYTE      bitMask2;                     
17002  00  =5      BYTE      bitMask3;                     /* LSB */
17003  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V3_FRAME;
17004  00  =5  
17005  00  =5  /************************************************************/
17006  00  =5  /* Thermostat Fan Mode Supported Report 4byte V3 command class structs */
17007  00  =5  /************************************************************/
17008  00  =5  typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V3_FRAME_
17009  00  =5  {
17010  00  =5      BYTE      cmdClass;                     /* The command class */
17011  00  =5      BYTE      cmd;                          /* The command */
17012  00  =5      BYTE      bitMask1;                     /* MSB */
17013  00  =5      BYTE      bitMask2;                     
17014  00  =5      BYTE      bitMask3;                     
17015  00  =5      BYTE      bitMask4;                     /* LSB */
17016  00  =5  } ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V3_FRAME;
17017  00  =5  
17018  00  =5  /************************************************************/
17019  00  =5  /* Thermostat Fan State Get command class structs */        
17020  00  =5  /************************************************************/
17021  00  =5  typedef struct _ZW_THERMOSTAT_FAN_STATE_GET_FRAME_
17022  00  =5  {
17023  00  =5      BYTE      cmdClass;                     /* The command class */
17024  00  =5      BYTE      cmd;                          /* The command */
17025  00  =5  } ZW_THERMOSTAT_FAN_STATE_GET_FRAME;
17026  00  =5  
17027  00  =5  /************************************************************/
17028  00  =5  /* Thermostat Fan State Report command class structs */     
17029  00  =5  /************************************************************/
17030  00  =5  typedef struct _ZW_THERMOSTAT_FAN_STATE_REPORT_FRAME_
17031  00  =5  {
17032  00  =5      BYTE      cmdClass;                     /* The command class */
17033  00  =5      BYTE      cmd;                          /* The command */
17034  00  =5      BYTE      level;                        /* masked byte */
17035  00  =5  } ZW_THERMOSTAT_FAN_STATE_REPORT_FRAME;
17036  00  =5  
17037  00  =5  /************************************************************/
17038  00  =5  /* Thermostat Heating Status Report command class structs */
17039  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 304 

17040  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_STATUS_REPORT_FRAME_
17041  00  =5  {
17042  00  =5      BYTE      cmdClass;                     /* The command class */
17043  00  =5      BYTE      cmd;                          /* The command */
17044  00  =5      BYTE      status;                       /**/
17045  00  =5  } ZW_THERMOSTAT_HEATING_STATUS_REPORT_FRAME;
17046  00  =5  
17047  00  =5  /************************************************************/
17048  00  =5  /* Thermostat Heating Mode Get command class structs */     
17049  00  =5  /************************************************************/
17050  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_MODE_GET_FRAME_
17051  00  =5  {
17052  00  =5      BYTE      cmdClass;                     /* The command class */
17053  00  =5      BYTE      cmd;                          /* The command */
17054  00  =5  } ZW_THERMOSTAT_HEATING_MODE_GET_FRAME;
17055  00  =5  
17056  00  =5  /************************************************************/
17057  00  =5  /* Thermostat Heating Mode Report command class structs */  
17058  00  =5  /************************************************************/
17059  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_MODE_REPORT_FRAME_
17060  00  =5  {
17061  00  =5      BYTE      cmdClass;                     /* The command class */
17062  00  =5      BYTE      cmd;                          /* The command */
17063  00  =5      BYTE      mode;                         /**/
17064  00  =5  } ZW_THERMOSTAT_HEATING_MODE_REPORT_FRAME;
17065  00  =5  
17066  00  =5  /************************************************************/
17067  00  =5  /* Thermostat Heating Mode Set command class structs */     
17068  00  =5  /************************************************************/
17069  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_MODE_SET_FRAME_
17070  00  =5  {
17071  00  =5      BYTE      cmdClass;                     /* The command class */
17072  00  =5      BYTE      cmd;                          /* The command */
17073  00  =5      BYTE      mode;                         /**/
17074  00  =5  } ZW_THERMOSTAT_HEATING_MODE_SET_FRAME;
17075  00  =5  
17076  00  =5  /************************************************************/
17077  00  =5  /* Thermostat Heating Relay Status Get command class structs */
17078  00  =5  /************************************************************/
17079  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_RELAY_STATUS_GET_FRAME_
17080  00  =5  {
17081  00  =5      BYTE      cmdClass;                     /* The command class */
17082  00  =5      BYTE      cmd;                          /* The command */
17083  00  =5  } ZW_THERMOSTAT_HEATING_RELAY_STATUS_GET_FRAME;
17084  00  =5  
17085  00  =5  /************************************************************/
17086  00  =5  /* Thermostat Heating Relay Status Report command class structs */
17087  00  =5  /************************************************************/
17088  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_RELAY_STATUS_REPORT_FRAME_
17089  00  =5  {
17090  00  =5      BYTE      cmdClass;                     /* The command class */
17091  00  =5      BYTE      cmd;                          /* The command */
17092  00  =5      BYTE      relayStatus;                  /**/
17093  00  =5  } ZW_THERMOSTAT_HEATING_RELAY_STATUS_REPORT_FRAME;
17094  00  =5  
17095  00  =5  /************************************************************/
17096  00  =5  /* Thermostat Heating Setpoint Get command class structs */ 
17097  00  =5  /************************************************************/
17098  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_GET_FRAME_
17099  00  =5  {
17100  00  =5      BYTE      cmdClass;                     /* The command class */
17101  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 305 

17102  00  =5      BYTE      setpointNr;                   /**/
17103  00  =5  } ZW_THERMOSTAT_HEATING_SETPOINT_GET_FRAME;
17104  00  =5  
17105  00  =5  /************************************************************/
17106  00  =5  /* Thermostat Heating Setpoint Report 1byte command class structs */
17107  00  =5  /************************************************************/
17108  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_1BYTE_FRAME_
17109  00  =5  {
17110  00  =5      BYTE      cmdClass;                     /* The command class */
17111  00  =5      BYTE      cmd;                          /* The command */
17112  00  =5      BYTE      setpointNr;                   /**/
17113  00  =5      BYTE      properties1;                  /* masked byte */
17114  00  =5      BYTE      value1;                       
17115  00  =5  } ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_1BYTE_FRAME;
17116  00  =5  
17117  00  =5  /************************************************************/
17118  00  =5  /* Thermostat Heating Setpoint Report 2byte command class structs */
17119  00  =5  /************************************************************/
17120  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_2BYTE_FRAME_
17121  00  =5  {
17122  00  =5      BYTE      cmdClass;                     /* The command class */
17123  00  =5      BYTE      cmd;                          /* The command */
17124  00  =5      BYTE      setpointNr;                   /**/
17125  00  =5      BYTE      properties1;                  /* masked byte */
17126  00  =5      BYTE      value1;                       /* MSB */
17127  00  =5      BYTE      value2;                       /* LSB */
17128  00  =5  } ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_2BYTE_FRAME;
17129  00  =5  
17130  00  =5  /************************************************************/
17131  00  =5  /* Thermostat Heating Setpoint Report 3byte command class structs */
17132  00  =5  /************************************************************/
17133  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_3BYTE_FRAME_
17134  00  =5  {
17135  00  =5      BYTE      cmdClass;                     /* The command class */
17136  00  =5      BYTE      cmd;                          /* The command */
17137  00  =5      BYTE      setpointNr;                   /**/
17138  00  =5      BYTE      properties1;                  /* masked byte */
17139  00  =5      BYTE      value1;                       /* MSB */
17140  00  =5      BYTE      value2;                       
17141  00  =5      BYTE      value3;                       /* LSB */
17142  00  =5  } ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_3BYTE_FRAME;
17143  00  =5  
17144  00  =5  /************************************************************/
17145  00  =5  /* Thermostat Heating Setpoint Report 4byte command class structs */
17146  00  =5  /************************************************************/
17147  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_4BYTE_FRAME_
17148  00  =5  {
17149  00  =5      BYTE      cmdClass;                     /* The command class */
17150  00  =5      BYTE      cmd;                          /* The command */
17151  00  =5      BYTE      setpointNr;                   /**/
17152  00  =5      BYTE      properties1;                  /* masked byte */
17153  00  =5      BYTE      value1;                       /* MSB */
17154  00  =5      BYTE      value2;                       
17155  00  =5      BYTE      value3;                       
17156  00  =5      BYTE      value4;                       /* LSB */
17157  00  =5  } ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_4BYTE_FRAME;
17158  00  =5  
17159  00  =5  /************************************************************/
17160  00  =5  /* Thermostat Heating Setpoint Set 1byte command class structs */
17161  00  =5  /************************************************************/
17162  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_SET_1BYTE_FRAME_
17163  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 306 

17164  00  =5      BYTE      cmdClass;                     /* The command class */
17165  00  =5      BYTE      cmd;                          /* The command */
17166  00  =5      BYTE      setpointNr;                   /**/
17167  00  =5      BYTE      properties1;                  /* masked byte */
17168  00  =5      BYTE      value1;                       
17169  00  =5  } ZW_THERMOSTAT_HEATING_SETPOINT_SET_1BYTE_FRAME;
17170  00  =5  
17171  00  =5  /************************************************************/
17172  00  =5  /* Thermostat Heating Setpoint Set 2byte command class structs */
17173  00  =5  /************************************************************/
17174  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_SET_2BYTE_FRAME_
17175  00  =5  {
17176  00  =5      BYTE      cmdClass;                     /* The command class */
17177  00  =5      BYTE      cmd;                          /* The command */
17178  00  =5      BYTE      setpointNr;                   /**/
17179  00  =5      BYTE      properties1;                  /* masked byte */
17180  00  =5      BYTE      value1;                       /* MSB */
17181  00  =5      BYTE      value2;                       /* LSB */
17182  00  =5  } ZW_THERMOSTAT_HEATING_SETPOINT_SET_2BYTE_FRAME;
17183  00  =5  
17184  00  =5  /************************************************************/
17185  00  =5  /* Thermostat Heating Setpoint Set 3byte command class structs */
17186  00  =5  /************************************************************/
17187  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_SET_3BYTE_FRAME_
17188  00  =5  {
17189  00  =5      BYTE      cmdClass;                     /* The command class */
17190  00  =5      BYTE      cmd;                          /* The command */
17191  00  =5      BYTE      setpointNr;                   /**/
17192  00  =5      BYTE      properties1;                  /* masked byte */
17193  00  =5      BYTE      value1;                       /* MSB */
17194  00  =5      BYTE      value2;                       
17195  00  =5      BYTE      value3;                       /* LSB */
17196  00  =5  } ZW_THERMOSTAT_HEATING_SETPOINT_SET_3BYTE_FRAME;
17197  00  =5  
17198  00  =5  /************************************************************/
17199  00  =5  /* Thermostat Heating Setpoint Set 4byte command class structs */
17200  00  =5  /************************************************************/
17201  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_SET_4BYTE_FRAME_
17202  00  =5  {
17203  00  =5      BYTE      cmdClass;                     /* The command class */
17204  00  =5      BYTE      cmd;                          /* The command */
17205  00  =5      BYTE      setpointNr;                   /**/
17206  00  =5      BYTE      properties1;                  /* masked byte */
17207  00  =5      BYTE      value1;                       /* MSB */
17208  00  =5      BYTE      value2;                       
17209  00  =5      BYTE      value3;                       
17210  00  =5      BYTE      value4;                       /* LSB */
17211  00  =5  } ZW_THERMOSTAT_HEATING_SETPOINT_SET_4BYTE_FRAME;
17212  00  =5  
17213  00  =5  /************************************************************/
17214  00  =5  /* Thermostat Heating Status Get command class structs */   
17215  00  =5  /************************************************************/
17216  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_STATUS_GET_FRAME_
17217  00  =5  {
17218  00  =5      BYTE      cmdClass;                     /* The command class */
17219  00  =5      BYTE      cmd;                          /* The command */
17220  00  =5  } ZW_THERMOSTAT_HEATING_STATUS_GET_FRAME;
17221  00  =5  
17222  00  =5  /************************************************************/
17223  00  =5  /* Thermostat Heating Status Set command class structs */   
17224  00  =5  /************************************************************/
17225  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_STATUS_SET_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 307 

17226  00  =5  {
17227  00  =5      BYTE      cmdClass;                     /* The command class */
17228  00  =5      BYTE      cmd;                          /* The command */
17229  00  =5      BYTE      status;                       /**/
17230  00  =5  } ZW_THERMOSTAT_HEATING_STATUS_SET_FRAME;
17231  00  =5  
17232  00  =5  /************************************************************/
17233  00  =5  /* Thermostat Heating Timed Off Set command class structs */
17234  00  =5  /************************************************************/
17235  00  =5  typedef struct _ZW_THERMOSTAT_HEATING_TIMED_OFF_SET_FRAME_
17236  00  =5  {
17237  00  =5      BYTE      cmdClass;                     /* The command class */
17238  00  =5      BYTE      cmd;                          /* The command */
17239  00  =5      BYTE      minutes;                      /**/
17240  00  =5      BYTE      hours;                        /**/
17241  00  =5  } ZW_THERMOSTAT_HEATING_TIMED_OFF_SET_FRAME;
17242  00  =5  
17243  00  =5  /************************************************************/
17244  00  =5  /* Thermostat Mode Get command class structs */             
17245  00  =5  /************************************************************/
17246  00  =5  typedef struct _ZW_THERMOSTAT_MODE_GET_FRAME_
17247  00  =5  {
17248  00  =5      BYTE      cmdClass;                     /* The command class */
17249  00  =5      BYTE      cmd;                          /* The command */
17250  00  =5  } ZW_THERMOSTAT_MODE_GET_FRAME;
17251  00  =5  
17252  00  =5  /************************************************************/
17253  00  =5  /* Thermostat Mode Report command class structs */          
17254  00  =5  /************************************************************/
17255  00  =5  typedef struct _ZW_THERMOSTAT_MODE_REPORT_FRAME_
17256  00  =5  {
17257  00  =5      BYTE      cmdClass;                     /* The command class */
17258  00  =5      BYTE      cmd;                          /* The command */
17259  00  =5      BYTE      level;                        /* masked byte */
17260  00  =5  } ZW_THERMOSTAT_MODE_REPORT_FRAME;
17261  00  =5  
17262  00  =5  /************************************************************/
17263  00  =5  /* Thermostat Mode Set command class structs */             
17264  00  =5  /************************************************************/
17265  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SET_FRAME_
17266  00  =5  {
17267  00  =5      BYTE      cmdClass;                     /* The command class */
17268  00  =5      BYTE      cmd;                          /* The command */
17269  00  =5      BYTE      level;                        /* masked byte */
17270  00  =5  } ZW_THERMOSTAT_MODE_SET_FRAME;
17271  00  =5  
17272  00  =5  /************************************************************/
17273  00  =5  /* Thermostat Mode Supported Get command class structs */   
17274  00  =5  /************************************************************/
17275  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_GET_FRAME_
17276  00  =5  {
17277  00  =5      BYTE      cmdClass;                     /* The command class */
17278  00  =5      BYTE      cmd;                          /* The command */
17279  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_GET_FRAME;
17280  00  =5  
17281  00  =5  /************************************************************/
17282  00  =5  /* Thermostat Mode Supported Report 1byte command class structs */
17283  00  =5  /************************************************************/
17284  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_FRAME_
17285  00  =5  {
17286  00  =5      BYTE      cmdClass;                     /* The command class */
17287  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 308 

17288  00  =5      BYTE      bitMask1;                     
17289  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_FRAME;
17290  00  =5  
17291  00  =5  /************************************************************/
17292  00  =5  /* Thermostat Mode Supported Report 2byte command class structs */
17293  00  =5  /************************************************************/
17294  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_FRAME_
17295  00  =5  {
17296  00  =5      BYTE      cmdClass;                     /* The command class */
17297  00  =5      BYTE      cmd;                          /* The command */
17298  00  =5      BYTE      bitMask1;                     /* MSB */
17299  00  =5      BYTE      bitMask2;                     /* LSB */
17300  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_FRAME;
17301  00  =5  
17302  00  =5  /************************************************************/
17303  00  =5  /* Thermostat Mode Supported Report 3byte command class structs */
17304  00  =5  /************************************************************/
17305  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_FRAME_
17306  00  =5  {
17307  00  =5      BYTE      cmdClass;                     /* The command class */
17308  00  =5      BYTE      cmd;                          /* The command */
17309  00  =5      BYTE      bitMask1;                     /* MSB */
17310  00  =5      BYTE      bitMask2;                     
17311  00  =5      BYTE      bitMask3;                     /* LSB */
17312  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_FRAME;
17313  00  =5  
17314  00  =5  /************************************************************/
17315  00  =5  /* Thermostat Mode Supported Report 4byte command class structs */
17316  00  =5  /************************************************************/
17317  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_FRAME_
17318  00  =5  {
17319  00  =5      BYTE      cmdClass;                     /* The command class */
17320  00  =5      BYTE      cmd;                          /* The command */
17321  00  =5      BYTE      bitMask1;                     /* MSB */
17322  00  =5      BYTE      bitMask2;                     
17323  00  =5      BYTE      bitMask3;                     
17324  00  =5      BYTE      bitMask4;                     /* LSB */
17325  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_FRAME;
17326  00  =5  
17327  00  =5  /************************************************************/
17328  00  =5  /* Thermostat Mode Get V2 command class structs */          
17329  00  =5  /************************************************************/
17330  00  =5  typedef struct _ZW_THERMOSTAT_MODE_GET_V2_FRAME_
17331  00  =5  {
17332  00  =5      BYTE      cmdClass;                     /* The command class */
17333  00  =5      BYTE      cmd;                          /* The command */
17334  00  =5  } ZW_THERMOSTAT_MODE_GET_V2_FRAME;
17335  00  =5  
17336  00  =5  /************************************************************/
17337  00  =5  /* Thermostat Mode Report V2 command class structs */       
17338  00  =5  /************************************************************/
17339  00  =5  typedef struct _ZW_THERMOSTAT_MODE_REPORT_V2_FRAME_
17340  00  =5  {
17341  00  =5      BYTE      cmdClass;                     /* The command class */
17342  00  =5      BYTE      cmd;                          /* The command */
17343  00  =5      BYTE      level;                        /* masked byte */
17344  00  =5  } ZW_THERMOSTAT_MODE_REPORT_V2_FRAME;
17345  00  =5  
17346  00  =5  /************************************************************/
17347  00  =5  /* Thermostat Mode Set V2 command class structs */          
17348  00  =5  /************************************************************/
17349  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SET_V2_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 309 

17350  00  =5  {
17351  00  =5      BYTE      cmdClass;                     /* The command class */
17352  00  =5      BYTE      cmd;                          /* The command */
17353  00  =5      BYTE      level;                        /* masked byte */
17354  00  =5  } ZW_THERMOSTAT_MODE_SET_V2_FRAME;
17355  00  =5  
17356  00  =5  /************************************************************/
17357  00  =5  /* Thermostat Mode Supported Get V2 command class structs */
17358  00  =5  /************************************************************/
17359  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_GET_V2_FRAME_
17360  00  =5  {
17361  00  =5      BYTE      cmdClass;                     /* The command class */
17362  00  =5      BYTE      cmd;                          /* The command */
17363  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_GET_V2_FRAME;
17364  00  =5  
17365  00  =5  /************************************************************/
17366  00  =5  /* Thermostat Mode Supported Report 1byte V2 command class structs */
17367  00  =5  /************************************************************/
17368  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME_
17369  00  =5  {
17370  00  =5      BYTE      cmdClass;                     /* The command class */
17371  00  =5      BYTE      cmd;                          /* The command */
17372  00  =5      BYTE      bitMask1;                     
17373  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME;
17374  00  =5  
17375  00  =5  /************************************************************/
17376  00  =5  /* Thermostat Mode Supported Report 2byte V2 command class structs */
17377  00  =5  /************************************************************/
17378  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME_
17379  00  =5  {
17380  00  =5      BYTE      cmdClass;                     /* The command class */
17381  00  =5      BYTE      cmd;                          /* The command */
17382  00  =5      BYTE      bitMask1;                     /* MSB */
17383  00  =5      BYTE      bitMask2;                     /* LSB */
17384  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME;
17385  00  =5  
17386  00  =5  /************************************************************/
17387  00  =5  /* Thermostat Mode Supported Report 3byte V2 command class structs */
17388  00  =5  /************************************************************/
17389  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME_
17390  00  =5  {
17391  00  =5      BYTE      cmdClass;                     /* The command class */
17392  00  =5      BYTE      cmd;                          /* The command */
17393  00  =5      BYTE      bitMask1;                     /* MSB */
17394  00  =5      BYTE      bitMask2;                     
17395  00  =5      BYTE      bitMask3;                     /* LSB */
17396  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME;
17397  00  =5  
17398  00  =5  /************************************************************/
17399  00  =5  /* Thermostat Mode Supported Report 4byte V2 command class structs */
17400  00  =5  /************************************************************/
17401  00  =5  typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME_
17402  00  =5  {
17403  00  =5      BYTE      cmdClass;                     /* The command class */
17404  00  =5      BYTE      cmd;                          /* The command */
17405  00  =5      BYTE      bitMask1;                     /* MSB */
17406  00  =5      BYTE      bitMask2;                     
17407  00  =5      BYTE      bitMask3;                     
17408  00  =5      BYTE      bitMask4;                     /* LSB */
17409  00  =5  } ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME;
17410  00  =5  
17411  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 310 

17412  00  =5  /* Thermostat Operating State Get command class structs */  
17413  00  =5  /************************************************************/
17414  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_GET_FRAME_
17415  00  =5  {
17416  00  =5      BYTE      cmdClass;                     /* The command class */
17417  00  =5      BYTE      cmd;                          /* The command */
17418  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_GET_FRAME;
17419  00  =5  
17420  00  =5  /************************************************************/
17421  00  =5  /* Thermostat Operating State Report command class structs */
17422  00  =5  /************************************************************/
17423  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_REPORT_FRAME_
17424  00  =5  {
17425  00  =5      BYTE      cmdClass;                     /* The command class */
17426  00  =5      BYTE      cmd;                          /* The command */
17427  00  =5      BYTE      level;                        /* masked byte */
17428  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_REPORT_FRAME;
17429  00  =5  
17430  00  =5  /************************************************************/
17431  00  =5  /* Thermostat Operating State Get V2 command class structs */
17432  00  =5  /************************************************************/
17433  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_GET_V2_FRAME_
17434  00  =5  {
17435  00  =5      BYTE      cmdClass;                     /* The command class */
17436  00  =5      BYTE      cmd;                          /* The command */
17437  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_GET_V2_FRAME;
17438  00  =5  
17439  00  =5  /************************************************************/
17440  00  =5  /* Thermostat Operating State Report V2 command class structs */
17441  00  =5  /************************************************************/
17442  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_REPORT_V2_FRAME_
17443  00  =5  {
17444  00  =5      BYTE      cmdClass;                     /* The command class */
17445  00  =5      BYTE      cmd;                          /* The command */
17446  00  =5      BYTE      properties1;                  /* masked byte */
17447  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_REPORT_V2_FRAME;
17448  00  =5  
17449  00  =5  /************************************************************/
17450  00  =5  /* Thermostat Operating State Logging Supported Get V2 command class structs */
17451  00  =5  /************************************************************/
17452  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_SUPPORTED_GET_V2_FRAME_
17453  00  =5  {
17454  00  =5      BYTE      cmdClass;                     /* The command class */
17455  00  =5      BYTE      cmd;                          /* The command */
17456  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_LOGGING_SUPPORTED_GET_V2_FRAME;
17457  00  =5  
17458  00  =5  /************************************************************/
17459  00  =5  /* Thermostat Operating Logging Supported Report 1byte V2 command class structs */
17460  00  =5  /************************************************************/
17461  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_1BYTE_V2_FRAME_
17462  00  =5  {
17463  00  =5      BYTE      cmdClass;                     /* The command class */
17464  00  =5      BYTE      cmd;                          /* The command */
17465  00  =5      BYTE      bitMask1;                     
17466  00  =5  } ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_1BYTE_V2_FRAME;
17467  00  =5  
17468  00  =5  /************************************************************/
17469  00  =5  /* Thermostat Operating Logging Supported Report 2byte V2 command class structs */
17470  00  =5  /************************************************************/
17471  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_2BYTE_V2_FRAME_
17472  00  =5  {
17473  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 311 

17474  00  =5      BYTE      cmd;                          /* The command */
17475  00  =5      BYTE      bitMask1;                     /* MSB */
17476  00  =5      BYTE      bitMask2;                     /* LSB */
17477  00  =5  } ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_2BYTE_V2_FRAME;
17478  00  =5  
17479  00  =5  /************************************************************/
17480  00  =5  /* Thermostat Operating Logging Supported Report 3byte V2 command class structs */
17481  00  =5  /************************************************************/
17482  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_3BYTE_V2_FRAME_
17483  00  =5  {
17484  00  =5      BYTE      cmdClass;                     /* The command class */
17485  00  =5      BYTE      cmd;                          /* The command */
17486  00  =5      BYTE      bitMask1;                     /* MSB */
17487  00  =5      BYTE      bitMask2;                     
17488  00  =5      BYTE      bitMask3;                     /* LSB */
17489  00  =5  } ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_3BYTE_V2_FRAME;
17490  00  =5  
17491  00  =5  /************************************************************/
17492  00  =5  /* Thermostat Operating Logging Supported Report 4byte V2 command class structs */
17493  00  =5  /************************************************************/
17494  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_4BYTE_V2_FRAME_
17495  00  =5  {
17496  00  =5      BYTE      cmdClass;                     /* The command class */
17497  00  =5      BYTE      cmd;                          /* The command */
17498  00  =5      BYTE      bitMask1;                     /* MSB */
17499  00  =5      BYTE      bitMask2;                     
17500  00  =5      BYTE      bitMask3;                     
17501  00  =5      BYTE      bitMask4;                     /* LSB */
17502  00  =5  } ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_4BYTE_V2_FRAME;
17503  00  =5  
17504  00  =5  /************************************************************/
17505  00  =5  /* Thermostat Operating State Logging Get 1byte V2 command class structs */
17506  00  =5  /************************************************************/
17507  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_1BYTE_V2_FRAME_
17508  00  =5  {
17509  00  =5      BYTE      cmdClass;                     /* The command class */
17510  00  =5      BYTE      cmd;                          /* The command */
17511  00  =5      BYTE      bitMask1;                     
17512  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_1BYTE_V2_FRAME;
17513  00  =5  
17514  00  =5  /************************************************************/
17515  00  =5  /* Thermostat Operating State Logging Get 2byte V2 command class structs */
17516  00  =5  /************************************************************/
17517  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_2BYTE_V2_FRAME_
17518  00  =5  {
17519  00  =5      BYTE      cmdClass;                     /* The command class */
17520  00  =5      BYTE      cmd;                          /* The command */
17521  00  =5      BYTE      bitMask1;                     /* MSB */
17522  00  =5      BYTE      bitMask2;                     /* LSB */
17523  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_2BYTE_V2_FRAME;
17524  00  =5  
17525  00  =5  /************************************************************/
17526  00  =5  /* Thermostat Operating State Logging Get 3byte V2 command class structs */
17527  00  =5  /************************************************************/
17528  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_3BYTE_V2_FRAME_
17529  00  =5  {
17530  00  =5      BYTE      cmdClass;                     /* The command class */
17531  00  =5      BYTE      cmd;                          /* The command */
17532  00  =5      BYTE      bitMask1;                     /* MSB */
17533  00  =5      BYTE      bitMask2;                     
17534  00  =5      BYTE      bitMask3;                     /* LSB */
17535  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_3BYTE_V2_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 312 

17536  00  =5  
17537  00  =5  /************************************************************/
17538  00  =5  /* Thermostat Operating State Logging Get 4byte V2 command class structs */
17539  00  =5  /************************************************************/
17540  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_4BYTE_V2_FRAME_
17541  00  =5  {
17542  00  =5      BYTE      cmdClass;                     /* The command class */
17543  00  =5      BYTE      cmd;                          /* The command */
17544  00  =5      BYTE      bitMask1;                     /* MSB */
17545  00  =5      BYTE      bitMask2;                     
17546  00  =5      BYTE      bitMask3;                     
17547  00  =5      BYTE      bitMask4;                     /* LSB */
17548  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_4BYTE_V2_FRAME;
17549  00  =5  
17550  00  =5  /************************************************************/
17551  00  =5  /* Thermostat Operating State Logging Report V2 variant group structs */
17552  00  =5  /************************************************************/
17553  00  =5  typedef struct _VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG_
17554  00  =5  {
17555  00  =5      BYTE      properties1;                  /* masked byte */
17556  00  =5      BYTE      usageTodayHours;              /**/
17557  00  =5      BYTE      usageTodayMinutes;            /**/
17558  00  =5      BYTE      usageYesterdayHours;          /**/
17559  00  =5      BYTE      usageYesterdayMinutes;        /**/
17560  00  =5  } VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG;
17561  00  =5  
17562  00  =5  /************************************************************/
17563  00  =5  /* Thermostat Operating State Logging Report 1byte V2 command class structs */
17564  00  =5  /************************************************************/
17565  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_1BYTE_V2_FRAME_
17566  00  =5  {
17567  00  =5      BYTE      cmdClass;                     /* The command class */
17568  00  =5      BYTE      cmd;                          /* The command */
17569  00  =5      BYTE      reportsToFollow;              /**/
17570  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup1;                /**/
17571  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_1BYTE_V2_FRAME;
17572  00  =5  
17573  00  =5  /************************************************************/
17574  00  =5  /* Thermostat Operating State Logging Report 2byte V2 command class structs */
17575  00  =5  /************************************************************/
17576  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_2BYTE_V2_FRAME_
17577  00  =5  {
17578  00  =5      BYTE      cmdClass;                     /* The command class */
17579  00  =5      BYTE      cmd;                          /* The command */
17580  00  =5      BYTE      reportsToFollow;              /**/
17581  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup1;                /**/
17582  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup2;                /**/
17583  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_2BYTE_V2_FRAME;
17584  00  =5  
17585  00  =5  /************************************************************/
17586  00  =5  /* Thermostat Operating State Logging Report 3byte V2 command class structs */
17587  00  =5  /************************************************************/
17588  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_3BYTE_V2_FRAME_
17589  00  =5  {
17590  00  =5      BYTE      cmdClass;                     /* The command class */
17591  00  =5      BYTE      cmd;                          /* The command */
17592  00  =5      BYTE      reportsToFollow;              /**/
17593  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup1;                /**/
17594  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup2;                /**/
17595  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup3;                /**/
17596  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_3BYTE_V2_FRAME;
17597  00  =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 313 

17598  00  =5  /************************************************************/
17599  00  =5  /* Thermostat Operating State Logging Report 4byte V2 command class structs */
17600  00  =5  /************************************************************/
17601  00  =5  typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_4BYTE_V2_FRAME_
17602  00  =5  {
17603  00  =5      BYTE      cmdClass;                     /* The command class */
17604  00  =5      BYTE      cmd;                          /* The command */
17605  00  =5      BYTE      reportsToFollow;              /**/
17606  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup1;                /**/
17607  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup2;                /**/
17608  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup3;                /**/
17609  00  =5      VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup4;                /**/
17610  00  =5  } ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_4BYTE_V2_FRAME;
17611  00  =5  
17612  00  =5  /************************************************************/
17613  00  =5  /* Thermostat Setback Get command class structs */          
17614  00  =5  /************************************************************/
17615  00  =5  typedef struct _ZW_THERMOSTAT_SETBACK_GET_FRAME_
17616  00  =5  {
17617  00  =5      BYTE      cmdClass;                     /* The command class */
17618  00  =5      BYTE      cmd;                          /* The command */
17619  00  =5  } ZW_THERMOSTAT_SETBACK_GET_FRAME;
17620  00  =5  
17621  00  =5  /************************************************************/
17622  00  =5  /* Thermostat Setback Report command class structs */       
17623  00  =5  /************************************************************/
17624  00  =5  typedef struct _ZW_THERMOSTAT_SETBACK_REPORT_FRAME_
17625  00  =5  {
17626  00  =5      BYTE      cmdClass;                     /* The command class */
17627  00  =5      BYTE      cmd;                          /* The command */
17628  00  =5      BYTE      properties1;                  /* masked byte */
17629  00  =5      BYTE      setbackState;                 /**/
17630  00  =5  } ZW_THERMOSTAT_SETBACK_REPORT_FRAME;
17631  00  =5  
17632  00  =5  /************************************************************/
17633  00  =5  /* Thermostat Setback Set command class structs */          
17634  00  =5  /************************************************************/
17635  00  =5  typedef struct _ZW_THERMOSTAT_SETBACK_SET_FRAME_
17636  00  =5  {
17637  00  =5      BYTE      cmdClass;                     /* The command class */
17638  00  =5      BYTE      cmd;                          /* The command */
17639  00  =5      BYTE      properties1;                  /* masked byte */
17640  00  =5      BYTE      setbackState;                 /**/
17641  00  =5  } ZW_THERMOSTAT_SETBACK_SET_FRAME;
17642  00  =5  
17643  00  =5  /************************************************************/
17644  00  =5  /* Thermostat Setpoint Get command class structs */         
17645  00  =5  /************************************************************/
17646  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_GET_FRAME_
17647  00  =5  {
17648  00  =5      BYTE      cmdClass;                     /* The command class */
17649  00  =5      BYTE      cmd;                          /* The command */
17650  00  =5      BYTE      level;                        /* masked byte */
17651  00  =5  } ZW_THERMOSTAT_SETPOINT_GET_FRAME;
17652  00  =5  
17653  00  =5  /************************************************************/
17654  00  =5  /* Thermostat Setpoint Report 1byte command class structs */
17655  00  =5  /************************************************************/
17656  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_FRAME_
17657  00  =5  {
17658  00  =5      BYTE      cmdClass;                     /* The command class */
17659  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 314 

17660  00  =5      BYTE      level;                        /* masked byte */
17661  00  =5      BYTE      level2;                       /* masked byte */
17662  00  =5      BYTE      value1;                       
17663  00  =5  } ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_FRAME;
17664  00  =5  
17665  00  =5  /************************************************************/
17666  00  =5  /* Thermostat Setpoint Report 2byte command class structs */
17667  00  =5  /************************************************************/
17668  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_FRAME_
17669  00  =5  {
17670  00  =5      BYTE      cmdClass;                     /* The command class */
17671  00  =5      BYTE      cmd;                          /* The command */
17672  00  =5      BYTE      level;                        /* masked byte */
17673  00  =5      BYTE      level2;                       /* masked byte */
17674  00  =5      BYTE      value1;                       /* MSB */
17675  00  =5      BYTE      value2;                       /* LSB */
17676  00  =5  } ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_FRAME;
17677  00  =5  
17678  00  =5  /************************************************************/
17679  00  =5  /* Thermostat Setpoint Report 3byte command class structs */
17680  00  =5  /************************************************************/
17681  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_FRAME_
17682  00  =5  {
17683  00  =5      BYTE      cmdClass;                     /* The command class */
17684  00  =5      BYTE      cmd;                          /* The command */
17685  00  =5      BYTE      level;                        /* masked byte */
17686  00  =5      BYTE      level2;                       /* masked byte */
17687  00  =5      BYTE      value1;                       /* MSB */
17688  00  =5      BYTE      value2;                       
17689  00  =5      BYTE      value3;                       /* LSB */
17690  00  =5  } ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_FRAME;
17691  00  =5  
17692  00  =5  /************************************************************/
17693  00  =5  /* Thermostat Setpoint Report 4byte command class structs */
17694  00  =5  /************************************************************/
17695  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_FRAME_
17696  00  =5  {
17697  00  =5      BYTE      cmdClass;                     /* The command class */
17698  00  =5      BYTE      cmd;                          /* The command */
17699  00  =5      BYTE      level;                        /* masked byte */
17700  00  =5      BYTE      level2;                       /* masked byte */
17701  00  =5      BYTE      value1;                       /* MSB */
17702  00  =5      BYTE      value2;                       
17703  00  =5      BYTE      value3;                       
17704  00  =5      BYTE      value4;                       /* LSB */
17705  00  =5  } ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_FRAME;
17706  00  =5  
17707  00  =5  /************************************************************/
17708  00  =5  /* Thermostat Setpoint Set 1byte command class structs */   
17709  00  =5  /************************************************************/
17710  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SET_1BYTE_FRAME_
17711  00  =5  {
17712  00  =5      BYTE      cmdClass;                     /* The command class */
17713  00  =5      BYTE      cmd;                          /* The command */
17714  00  =5      BYTE      level;                        /* masked byte */
17715  00  =5      BYTE      level2;                       /* masked byte */
17716  00  =5      BYTE      value1;                       
17717  00  =5  } ZW_THERMOSTAT_SETPOINT_SET_1BYTE_FRAME;
17718  00  =5  
17719  00  =5  /************************************************************/
17720  00  =5  /* Thermostat Setpoint Set 2byte command class structs */   
17721  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 315 

17722  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SET_2BYTE_FRAME_
17723  00  =5  {
17724  00  =5      BYTE      cmdClass;                     /* The command class */
17725  00  =5      BYTE      cmd;                          /* The command */
17726  00  =5      BYTE      level;                        /* masked byte */
17727  00  =5      BYTE      level2;                       /* masked byte */
17728  00  =5      BYTE      value1;                       /* MSB */
17729  00  =5      BYTE      value2;                       /* LSB */
17730  00  =5  } ZW_THERMOSTAT_SETPOINT_SET_2BYTE_FRAME;
17731  00  =5  
17732  00  =5  /************************************************************/
17733  00  =5  /* Thermostat Setpoint Set 3byte command class structs */   
17734  00  =5  /************************************************************/
17735  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SET_3BYTE_FRAME_
17736  00  =5  {
17737  00  =5      BYTE      cmdClass;                     /* The command class */
17738  00  =5      BYTE      cmd;                          /* The command */
17739  00  =5      BYTE      level;                        /* masked byte */
17740  00  =5      BYTE      level2;                       /* masked byte */
17741  00  =5      BYTE      value1;                       /* MSB */
17742  00  =5      BYTE      value2;                       
17743  00  =5      BYTE      value3;                       /* LSB */
17744  00  =5  } ZW_THERMOSTAT_SETPOINT_SET_3BYTE_FRAME;
17745  00  =5  
17746  00  =5  /************************************************************/
17747  00  =5  /* Thermostat Setpoint Set 4byte command class structs */   
17748  00  =5  /************************************************************/
17749  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SET_4BYTE_FRAME_
17750  00  =5  {
17751  00  =5      BYTE      cmdClass;                     /* The command class */
17752  00  =5      BYTE      cmd;                          /* The command */
17753  00  =5      BYTE      level;                        /* masked byte */
17754  00  =5      BYTE      level2;                       /* masked byte */
17755  00  =5      BYTE      value1;                       /* MSB */
17756  00  =5      BYTE      value2;                       
17757  00  =5      BYTE      value3;                       
17758  00  =5      BYTE      value4;                       /* LSB */
17759  00  =5  } ZW_THERMOSTAT_SETPOINT_SET_4BYTE_FRAME;
17760  00  =5  
17761  00  =5  /************************************************************/
17762  00  =5  /* Thermostat Setpoint Supported Get command class structs */
17763  00  =5  /************************************************************/
17764  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_FRAME_
17765  00  =5  {
17766  00  =5      BYTE      cmdClass;                     /* The command class */
17767  00  =5      BYTE      cmd;                          /* The command */
17768  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_FRAME;
17769  00  =5  
17770  00  =5  /************************************************************/
17771  00  =5  /* Thermostat Setpoint Supported Report 1byte command class structs */
17772  00  =5  /************************************************************/
17773  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_FRAME_
17774  00  =5  {
17775  00  =5      BYTE      cmdClass;                     /* The command class */
17776  00  =5      BYTE      cmd;                          /* The command */
17777  00  =5      BYTE      bitMask1;                     
17778  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_FRAME;
17779  00  =5  
17780  00  =5  /************************************************************/
17781  00  =5  /* Thermostat Setpoint Supported Report 2byte command class structs */
17782  00  =5  /************************************************************/
17783  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 316 

17784  00  =5  {
17785  00  =5      BYTE      cmdClass;                     /* The command class */
17786  00  =5      BYTE      cmd;                          /* The command */
17787  00  =5      BYTE      bitMask1;                     /* MSB */
17788  00  =5      BYTE      bitMask2;                     /* LSB */
17789  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_FRAME;
17790  00  =5  
17791  00  =5  /************************************************************/
17792  00  =5  /* Thermostat Setpoint Supported Report 3byte command class structs */
17793  00  =5  /************************************************************/
17794  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_FRAME_
17795  00  =5  {
17796  00  =5      BYTE      cmdClass;                     /* The command class */
17797  00  =5      BYTE      cmd;                          /* The command */
17798  00  =5      BYTE      bitMask1;                     /* MSB */
17799  00  =5      BYTE      bitMask2;                     
17800  00  =5      BYTE      bitMask3;                     /* LSB */
17801  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_FRAME;
17802  00  =5  
17803  00  =5  /************************************************************/
17804  00  =5  /* Thermostat Setpoint Supported Report 4byte command class structs */
17805  00  =5  /************************************************************/
17806  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_FRAME_
17807  00  =5  {
17808  00  =5      BYTE      cmdClass;                     /* The command class */
17809  00  =5      BYTE      cmd;                          /* The command */
17810  00  =5      BYTE      bitMask1;                     /* MSB */
17811  00  =5      BYTE      bitMask2;                     
17812  00  =5      BYTE      bitMask3;                     
17813  00  =5      BYTE      bitMask4;                     /* LSB */
17814  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_FRAME;
17815  00  =5  
17816  00  =5  /************************************************************/
17817  00  =5  /* Thermostat Setpoint Get V2 command class structs */      
17818  00  =5  /************************************************************/
17819  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_GET_V2_FRAME_
17820  00  =5  {
17821  00  =5      BYTE      cmdClass;                     /* The command class */
17822  00  =5      BYTE      cmd;                          /* The command */
17823  00  =5      BYTE      level;                        /* masked byte */
17824  00  =5  } ZW_THERMOSTAT_SETPOINT_GET_V2_FRAME;
17825  00  =5  
17826  00  =5  /************************************************************/
17827  00  =5  /* Thermostat Setpoint Report 1byte V2 command class structs */
17828  00  =5  /************************************************************/
17829  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V2_FRAME_
17830  00  =5  {
17831  00  =5      BYTE      cmdClass;                     /* The command class */
17832  00  =5      BYTE      cmd;                          /* The command */
17833  00  =5      BYTE      level;                        /* masked byte */
17834  00  =5      BYTE      level2;                       /* masked byte */
17835  00  =5      BYTE      value1;                       
17836  00  =5  } ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V2_FRAME;
17837  00  =5  
17838  00  =5  /************************************************************/
17839  00  =5  /* Thermostat Setpoint Report 2byte V2 command class structs */
17840  00  =5  /************************************************************/
17841  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V2_FRAME_
17842  00  =5  {
17843  00  =5      BYTE      cmdClass;                     /* The command class */
17844  00  =5      BYTE      cmd;                          /* The command */
17845  00  =5      BYTE      level;                        /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 317 

17846  00  =5      BYTE      level2;                       /* masked byte */
17847  00  =5      BYTE      value1;                       /* MSB */
17848  00  =5      BYTE      value2;                       /* LSB */
17849  00  =5  } ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V2_FRAME;
17850  00  =5  
17851  00  =5  /************************************************************/
17852  00  =5  /* Thermostat Setpoint Report 3byte V2 command class structs */
17853  00  =5  /************************************************************/
17854  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V2_FRAME_
17855  00  =5  {
17856  00  =5      BYTE      cmdClass;                     /* The command class */
17857  00  =5      BYTE      cmd;                          /* The command */
17858  00  =5      BYTE      level;                        /* masked byte */
17859  00  =5      BYTE      level2;                       /* masked byte */
17860  00  =5      BYTE      value1;                       /* MSB */
17861  00  =5      BYTE      value2;                       
17862  00  =5      BYTE      value3;                       /* LSB */
17863  00  =5  } ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V2_FRAME;
17864  00  =5  
17865  00  =5  /************************************************************/
17866  00  =5  /* Thermostat Setpoint Report 4byte V2 command class structs */
17867  00  =5  /************************************************************/
17868  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V2_FRAME_
17869  00  =5  {
17870  00  =5      BYTE      cmdClass;                     /* The command class */
17871  00  =5      BYTE      cmd;                          /* The command */
17872  00  =5      BYTE      level;                        /* masked byte */
17873  00  =5      BYTE      level2;                       /* masked byte */
17874  00  =5      BYTE      value1;                       /* MSB */
17875  00  =5      BYTE      value2;                       
17876  00  =5      BYTE      value3;                       
17877  00  =5      BYTE      value4;                       /* LSB */
17878  00  =5  } ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V2_FRAME;
17879  00  =5  
17880  00  =5  /************************************************************/
17881  00  =5  /* Thermostat Setpoint Set 1byte V2 command class structs */
17882  00  =5  /************************************************************/
17883  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V2_FRAME_
17884  00  =5  {
17885  00  =5      BYTE      cmdClass;                     /* The command class */
17886  00  =5      BYTE      cmd;                          /* The command */
17887  00  =5      BYTE      level;                        /* masked byte */
17888  00  =5      BYTE      level2;                       /* masked byte */
17889  00  =5      BYTE      value1;                       
17890  00  =5  } ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V2_FRAME;
17891  00  =5  
17892  00  =5  /************************************************************/
17893  00  =5  /* Thermostat Setpoint Set 2byte V2 command class structs */
17894  00  =5  /************************************************************/
17895  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V2_FRAME_
17896  00  =5  {
17897  00  =5      BYTE      cmdClass;                     /* The command class */
17898  00  =5      BYTE      cmd;                          /* The command */
17899  00  =5      BYTE      level;                        /* masked byte */
17900  00  =5      BYTE      level2;                       /* masked byte */
17901  00  =5      BYTE      value1;                       /* MSB */
17902  00  =5      BYTE      value2;                       /* LSB */
17903  00  =5  } ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V2_FRAME;
17904  00  =5  
17905  00  =5  /************************************************************/
17906  00  =5  /* Thermostat Setpoint Set 3byte V2 command class structs */
17907  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 318 

17908  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V2_FRAME_
17909  00  =5  {
17910  00  =5      BYTE      cmdClass;                     /* The command class */
17911  00  =5      BYTE      cmd;                          /* The command */
17912  00  =5      BYTE      level;                        /* masked byte */
17913  00  =5      BYTE      level2;                       /* masked byte */
17914  00  =5      BYTE      value1;                       /* MSB */
17915  00  =5      BYTE      value2;                       
17916  00  =5      BYTE      value3;                       /* LSB */
17917  00  =5  } ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V2_FRAME;
17918  00  =5  
17919  00  =5  /************************************************************/
17920  00  =5  /* Thermostat Setpoint Set 4byte V2 command class structs */
17921  00  =5  /************************************************************/
17922  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V2_FRAME_
17923  00  =5  {
17924  00  =5      BYTE      cmdClass;                     /* The command class */
17925  00  =5      BYTE      cmd;                          /* The command */
17926  00  =5      BYTE      level;                        /* masked byte */
17927  00  =5      BYTE      level2;                       /* masked byte */
17928  00  =5      BYTE      value1;                       /* MSB */
17929  00  =5      BYTE      value2;                       
17930  00  =5      BYTE      value3;                       
17931  00  =5      BYTE      value4;                       /* LSB */
17932  00  =5  } ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V2_FRAME;
17933  00  =5  
17934  00  =5  /************************************************************/
17935  00  =5  /* Thermostat Setpoint Supported Get V2 command class structs */
17936  00  =5  /************************************************************/
17937  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V2_FRAME_
17938  00  =5  {
17939  00  =5      BYTE      cmdClass;                     /* The command class */
17940  00  =5      BYTE      cmd;                          /* The command */
17941  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V2_FRAME;
17942  00  =5  
17943  00  =5  /************************************************************/
17944  00  =5  /* Thermostat Setpoint Supported Report 1byte V2 command class structs */
17945  00  =5  /************************************************************/
17946  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_V2_FRAME_
17947  00  =5  {
17948  00  =5      BYTE      cmdClass;                     /* The command class */
17949  00  =5      BYTE      cmd;                          /* The command */
17950  00  =5      BYTE      bitMask1;                     
17951  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_V2_FRAME;
17952  00  =5  
17953  00  =5  /************************************************************/
17954  00  =5  /* Thermostat Setpoint Supported Report 2byte V2 command class structs */
17955  00  =5  /************************************************************/
17956  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_V2_FRAME_
17957  00  =5  {
17958  00  =5      BYTE      cmdClass;                     /* The command class */
17959  00  =5      BYTE      cmd;                          /* The command */
17960  00  =5      BYTE      bitMask1;                     /* MSB */
17961  00  =5      BYTE      bitMask2;                     /* LSB */
17962  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_V2_FRAME;
17963  00  =5  
17964  00  =5  /************************************************************/
17965  00  =5  /* Thermostat Setpoint Supported Report 3byte V2 command class structs */
17966  00  =5  /************************************************************/
17967  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_V2_FRAME_
17968  00  =5  {
17969  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 319 

17970  00  =5      BYTE      cmd;                          /* The command */
17971  00  =5      BYTE      bitMask1;                     /* MSB */
17972  00  =5      BYTE      bitMask2;                     
17973  00  =5      BYTE      bitMask3;                     /* LSB */
17974  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_V2_FRAME;
17975  00  =5  
17976  00  =5  /************************************************************/
17977  00  =5  /* Thermostat Setpoint Supported Report 4byte V2 command class structs */
17978  00  =5  /************************************************************/
17979  00  =5  typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_V2_FRAME_
17980  00  =5  {
17981  00  =5      BYTE      cmdClass;                     /* The command class */
17982  00  =5      BYTE      cmd;                          /* The command */
17983  00  =5      BYTE      bitMask1;                     /* MSB */
17984  00  =5      BYTE      bitMask2;                     
17985  00  =5      BYTE      bitMask3;                     
17986  00  =5      BYTE      bitMask4;                     /* LSB */
17987  00  =5  } ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_V2_FRAME;
17988  00  =5  
17989  00  =5  /************************************************************/
17990  00  =5  /* Time Parameters Get command class structs */             
17991  00  =5  /************************************************************/
17992  00  =5  typedef struct _ZW_TIME_PARAMETERS_GET_FRAME_
17993  00  =5  {
17994  00  =5      BYTE      cmdClass;                     /* The command class */
17995  00  =5      BYTE      cmd;                          /* The command */
17996  00  =5  } ZW_TIME_PARAMETERS_GET_FRAME;
17997  00  =5  
17998  00  =5  /************************************************************/
17999  00  =5  /* Time Parameters Report command class structs */          
18000  00  =5  /************************************************************/
18001  00  =5  typedef struct _ZW_TIME_PARAMETERS_REPORT_FRAME_
18002  00  =5  {
18003  00  =5      BYTE      cmdClass;                     /* The command class */
18004  00  =5      BYTE      cmd;                          /* The command */
18005  00  =5      BYTE      year1;                        /* MSB */
18006  00  =5      BYTE      year2;                        /* LSB */
18007  00  =5      BYTE      month;                        /**/
18008  00  =5      BYTE      day;                          /**/
18009  00  =5      BYTE      hourUtc;                      /**/
18010  00  =5      BYTE      minuteUtc;                    /**/
18011  00  =5      BYTE      secondUtc;                    /**/
18012  00  =5  } ZW_TIME_PARAMETERS_REPORT_FRAME;
18013  00  =5  
18014  00  =5  /************************************************************/
18015  00  =5  /* Time Parameters Set command class structs */             
18016  00  =5  /************************************************************/
18017  00  =5  typedef struct _ZW_TIME_PARAMETERS_SET_FRAME_
18018  00  =5  {
18019  00  =5      BYTE      cmdClass;                     /* The command class */
18020  00  =5      BYTE      cmd;                          /* The command */
18021  00  =5      BYTE      year1;                        /* MSB */
18022  00  =5      BYTE      year2;                        /* LSB */
18023  00  =5      BYTE      month;                        /**/
18024  00  =5      BYTE      day;                          /**/
18025  00  =5      BYTE      hourUtc;                      /**/
18026  00  =5      BYTE      minuteUtc;                    /**/
18027  00  =5      BYTE      secondUtc;                    /**/
18028  00  =5  } ZW_TIME_PARAMETERS_SET_FRAME;
18029  00  =5  
18030  00  =5  /************************************************************/
18031  00  =5  /* Date Get command class structs */                        
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 320 

18032  00  =5  /************************************************************/
18033  00  =5  typedef struct _ZW_DATE_GET_FRAME_
18034  00  =5  {
18035  00  =5      BYTE      cmdClass;                     /* The command class */
18036  00  =5      BYTE      cmd;                          /* The command */
18037  00  =5  } ZW_DATE_GET_FRAME;
18038  00  =5  
18039  00  =5  /************************************************************/
18040  00  =5  /* Date Report command class structs */                     
18041  00  =5  /************************************************************/
18042  00  =5  typedef struct _ZW_DATE_REPORT_FRAME_
18043  00  =5  {
18044  00  =5      BYTE      cmdClass;                     /* The command class */
18045  00  =5      BYTE      cmd;                          /* The command */
18046  00  =5      BYTE      year1;                        /* MSB */
18047  00  =5      BYTE      year2;                        /* LSB */
18048  00  =5      BYTE      month;                        /**/
18049  00  =5      BYTE      day;                          /**/
18050  00  =5  } ZW_DATE_REPORT_FRAME;
18051  00  =5  
18052  00  =5  /************************************************************/
18053  00  =5  /* Time Get command class structs */                        
18054  00  =5  /************************************************************/
18055  00  =5  typedef struct _ZW_TIME_GET_FRAME_
18056  00  =5  {
18057  00  =5      BYTE      cmdClass;                     /* The command class */
18058  00  =5      BYTE      cmd;                          /* The command */
18059  00  =5  } ZW_TIME_GET_FRAME;
18060  00  =5  
18061  00  =5  /************************************************************/
18062  00  =5  /* Time Report command class structs */                     
18063  00  =5  /************************************************************/
18064  00  =5  typedef struct _ZW_TIME_REPORT_FRAME_
18065  00  =5  {
18066  00  =5      BYTE      cmdClass;                     /* The command class */
18067  00  =5      BYTE      cmd;                          /* The command */
18068  00  =5      BYTE      hourLocalTime;                /* masked byte */
18069  00  =5      BYTE      minuteLocalTime;              /**/
18070  00  =5      BYTE      secondLocalTime;              /**/
18071  00  =5  } ZW_TIME_REPORT_FRAME;
18072  00  =5  
18073  00  =5  /************************************************************/
18074  00  =5  /* Date Get V2 command class structs */                     
18075  00  =5  /************************************************************/
18076  00  =5  typedef struct _ZW_DATE_GET_V2_FRAME_
18077  00  =5  {
18078  00  =5      BYTE      cmdClass;                     /* The command class */
18079  00  =5      BYTE      cmd;                          /* The command */
18080  00  =5  } ZW_DATE_GET_V2_FRAME;
18081  00  =5  
18082  00  =5  /************************************************************/
18083  00  =5  /* Date Report V2 command class structs */                  
18084  00  =5  /************************************************************/
18085  00  =5  typedef struct _ZW_DATE_REPORT_V2_FRAME_
18086  00  =5  {
18087  00  =5      BYTE      cmdClass;                     /* The command class */
18088  00  =5      BYTE      cmd;                          /* The command */
18089  00  =5      BYTE      year1;                        /* MSB */
18090  00  =5      BYTE      year2;                        /* LSB */
18091  00  =5      BYTE      month;                        /**/
18092  00  =5      BYTE      day;                          /**/
18093  00  =5  } ZW_DATE_REPORT_V2_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 321 

18094  00  =5  
18095  00  =5  /************************************************************/
18096  00  =5  /* Time Get V2 command class structs */                     
18097  00  =5  /************************************************************/
18098  00  =5  typedef struct _ZW_TIME_GET_V2_FRAME_
18099  00  =5  {
18100  00  =5      BYTE      cmdClass;                     /* The command class */
18101  00  =5      BYTE      cmd;                          /* The command */
18102  00  =5  } ZW_TIME_GET_V2_FRAME;
18103  00  =5  
18104  00  =5  /************************************************************/
18105  00  =5  /* Time Offset Get V2 command class structs */              
18106  00  =5  /************************************************************/
18107  00  =5  typedef struct _ZW_TIME_OFFSET_GET_V2_FRAME_
18108  00  =5  {
18109  00  =5      BYTE      cmdClass;                     /* The command class */
18110  00  =5      BYTE      cmd;                          /* The command */
18111  00  =5  } ZW_TIME_OFFSET_GET_V2_FRAME;
18112  00  =5  
18113  00  =5  /************************************************************/
18114  00  =5  /* Time Offset Report V2 command class structs */           
18115  00  =5  /************************************************************/
18116  00  =5  typedef struct _ZW_TIME_OFFSET_REPORT_V2_FRAME_
18117  00  =5  {
18118  00  =5      BYTE      cmdClass;                     /* The command class */
18119  00  =5      BYTE      cmd;                          /* The command */
18120  00  =5      BYTE      level;                        /* masked byte */
18121  00  =5      BYTE      minuteTzo;                    /**/
18122  00  =5      BYTE      level2;                       /* masked byte */
18123  00  =5      BYTE      monthStartDst;                /**/
18124  00  =5      BYTE      dayStartDst;                  /**/
18125  00  =5      BYTE      hourStartDst;                 /**/
18126  00  =5      BYTE      monthEndDst;                  /**/
18127  00  =5      BYTE      dayEndDst;                    /**/
18128  00  =5      BYTE      hourEndDst;                   /**/
18129  00  =5  } ZW_TIME_OFFSET_REPORT_V2_FRAME;
18130  00  =5  
18131  00  =5  /************************************************************/
18132  00  =5  /* Time Offset Set V2 command class structs */              
18133  00  =5  /************************************************************/
18134  00  =5  typedef struct _ZW_TIME_OFFSET_SET_V2_FRAME_
18135  00  =5  {
18136  00  =5      BYTE      cmdClass;                     /* The command class */
18137  00  =5      BYTE      cmd;                          /* The command */
18138  00  =5      BYTE      level;                        /* masked byte */
18139  00  =5      BYTE      minuteTzo;                    /**/
18140  00  =5      BYTE      level2;                       /* masked byte */
18141  00  =5      BYTE      monthStartDst;                /**/
18142  00  =5      BYTE      dayStartDst;                  /**/
18143  00  =5      BYTE      hourStartDst;                 /**/
18144  00  =5      BYTE      monthEndDst;                  /**/
18145  00  =5      BYTE      dayEndDst;                    /**/
18146  00  =5      BYTE      hourEndDst;                   /**/
18147  00  =5  } ZW_TIME_OFFSET_SET_V2_FRAME;
18148  00  =5  
18149  00  =5  /************************************************************/
18150  00  =5  /* Time Report V2 command class structs */                  
18151  00  =5  /************************************************************/
18152  00  =5  typedef struct _ZW_TIME_REPORT_V2_FRAME_
18153  00  =5  {
18154  00  =5      BYTE      cmdClass;                     /* The command class */
18155  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 322 

18156  00  =5      BYTE      hourLocalTime;                /* masked byte */
18157  00  =5      BYTE      minuteLocalTime;              /**/
18158  00  =5      BYTE      secondLocalTime;              /**/
18159  00  =5  } ZW_TIME_REPORT_V2_FRAME;
18160  00  =5  
18161  00  =5  /************************************************************/
18162  00  =5  /* Command First Fragment 1byte command class structs */    
18163  00  =5  /************************************************************/
18164  00  =5  typedef struct _ZW_COMMAND_FIRST_FRAGMENT_1BYTE_FRAME_
18165  00  =5  {
18166  00  =5      BYTE      cmdClass;                     /* The command class */
18167  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter datagram_size_1  */
18168  00  =5      BYTE      datagramSize2;                /**/
18169  00  =5      BYTE      properties2;                  /* masked byte */
18170  00  =5      BYTE      payload1;                     
18171  00  =5      BYTE      checksum1;                    /* MSB */
18172  00  =5      BYTE      checksum2;                    /* LSB */
18173  00  =5  } ZW_COMMAND_FIRST_FRAGMENT_1BYTE_FRAME;
18174  00  =5  
18175  00  =5  /************************************************************/
18176  00  =5  /* Command First Fragment 2byte command class structs */    
18177  00  =5  /************************************************************/
18178  00  =5  typedef struct _ZW_COMMAND_FIRST_FRAGMENT_2BYTE_FRAME_
18179  00  =5  {
18180  00  =5      BYTE      cmdClass;                     /* The command class */
18181  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter datagram_size_1  */
18182  00  =5      BYTE      datagramSize2;                /**/
18183  00  =5      BYTE      properties2;                  /* masked byte */
18184  00  =5      BYTE      payload1;                     /* MSB */
18185  00  =5      BYTE      payload2;                     /* LSB */
18186  00  =5      BYTE      checksum1;                    /* MSB */
18187  00  =5      BYTE      checksum2;                    /* LSB */
18188  00  =5  } ZW_COMMAND_FIRST_FRAGMENT_2BYTE_FRAME;
18189  00  =5  
18190  00  =5  /************************************************************/
18191  00  =5  /* Command First Fragment 3byte command class structs */    
18192  00  =5  /************************************************************/
18193  00  =5  typedef struct _ZW_COMMAND_FIRST_FRAGMENT_3BYTE_FRAME_
18194  00  =5  {
18195  00  =5      BYTE      cmdClass;                     /* The command class */
18196  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter datagram_size_1  */
18197  00  =5      BYTE      datagramSize2;                /**/
18198  00  =5      BYTE      properties2;                  /* masked byte */
18199  00  =5      BYTE      payload1;                     /* MSB */
18200  00  =5      BYTE      payload2;                     
18201  00  =5      BYTE      payload3;                     /* LSB */
18202  00  =5      BYTE      checksum1;                    /* MSB */
18203  00  =5      BYTE      checksum2;                    /* LSB */
18204  00  =5  } ZW_COMMAND_FIRST_FRAGMENT_3BYTE_FRAME;
18205  00  =5  
18206  00  =5  /************************************************************/
18207  00  =5  /* Command First Fragment 4byte command class structs */    
18208  00  =5  /************************************************************/
18209  00  =5  typedef struct _ZW_COMMAND_FIRST_FRAGMENT_4BYTE_FRAME_
18210  00  =5  {
18211  00  =5      BYTE      cmdClass;                     /* The command class */
18212  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter datagram_size_1  */
18213  00  =5      BYTE      datagramSize2;                /**/
18214  00  =5      BYTE      properties2;                  /* masked byte */
18215  00  =5      BYTE      payload1;                     /* MSB */
18216  00  =5      BYTE      payload2;                     
18217  00  =5      BYTE      payload3;                     
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 323 

18218  00  =5      BYTE      payload4;                     /* LSB */
18219  00  =5      BYTE      checksum1;                    /* MSB */
18220  00  =5      BYTE      checksum2;                    /* LSB */
18221  00  =5  } ZW_COMMAND_FIRST_FRAGMENT_4BYTE_FRAME;
18222  00  =5  
18223  00  =5  /************************************************************/
18224  00  =5  /* Command Fragment Complete command class structs */       
18225  00  =5  /************************************************************/
18226  00  =5  typedef struct _ZW_COMMAND_FRAGMENT_COMPLETE_FRAME_
18227  00  =5  {
18228  00  =5      BYTE      cmdClass;                     /* The command class */
18229  00  =5      BYTE      cmd_reserved;                 /* The command + parameter reserved */
18230  00  =5      BYTE      properties2;                  /* masked byte */
18231  00  =5  } ZW_COMMAND_FRAGMENT_COMPLETE_FRAME;
18232  00  =5  
18233  00  =5  /************************************************************/
18234  00  =5  /* Command Fragment Request variant group structs */        
18235  00  =5  /************************************************************/
18236  00  =5  typedef struct _VG_COMMAND_FRAGMENT_REQUEST_VG_
18237  00  =5  {
18238  00  =5      BYTE      datagramOffset1;              /**/
18239  00  =5      BYTE      datagramOffset2;              /**/
18240  00  =5  } VG_COMMAND_FRAGMENT_REQUEST_VG;
18241  00  =5  
18242  00  =5  /************************************************************/
18243  00  =5  /* Command Fragment Request 1byte command class structs */  
18244  00  =5  /************************************************************/
18245  00  =5  typedef struct _ZW_COMMAND_FRAGMENT_REQUEST_1BYTE_FRAME_
18246  00  =5  {
18247  00  =5      BYTE      cmdClass;                     /* The command class */
18248  00  =5      BYTE      cmd_reserved;                 /* The command + parameter reserved */
18249  00  =5      BYTE      properties2;                  /* masked byte */
18250  00  =5      BYTE      numberOfOffsets;              /**/
18251  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup1;                /**/
18252  00  =5  } ZW_COMMAND_FRAGMENT_REQUEST_1BYTE_FRAME;
18253  00  =5  
18254  00  =5  /************************************************************/
18255  00  =5  /* Command Fragment Request 2byte command class structs */  
18256  00  =5  /************************************************************/
18257  00  =5  typedef struct _ZW_COMMAND_FRAGMENT_REQUEST_2BYTE_FRAME_
18258  00  =5  {
18259  00  =5      BYTE      cmdClass;                     /* The command class */
18260  00  =5      BYTE      cmd_reserved;                 /* The command + parameter reserved */
18261  00  =5      BYTE      properties2;                  /* masked byte */
18262  00  =5      BYTE      numberOfOffsets;              /**/
18263  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup1;                /**/
18264  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup2;                /**/
18265  00  =5  } ZW_COMMAND_FRAGMENT_REQUEST_2BYTE_FRAME;
18266  00  =5  
18267  00  =5  /************************************************************/
18268  00  =5  /* Command Fragment Request 3byte command class structs */  
18269  00  =5  /************************************************************/
18270  00  =5  typedef struct _ZW_COMMAND_FRAGMENT_REQUEST_3BYTE_FRAME_
18271  00  =5  {
18272  00  =5      BYTE      cmdClass;                     /* The command class */
18273  00  =5      BYTE      cmd_reserved;                 /* The command + parameter reserved */
18274  00  =5      BYTE      properties2;                  /* masked byte */
18275  00  =5      BYTE      numberOfOffsets;              /**/
18276  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup1;                /**/
18277  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup2;                /**/
18278  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup3;                /**/
18279  00  =5  } ZW_COMMAND_FRAGMENT_REQUEST_3BYTE_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 324 

18280  00  =5  
18281  00  =5  /************************************************************/
18282  00  =5  /* Command Fragment Request 4byte command class structs */  
18283  00  =5  /************************************************************/
18284  00  =5  typedef struct _ZW_COMMAND_FRAGMENT_REQUEST_4BYTE_FRAME_
18285  00  =5  {
18286  00  =5      BYTE      cmdClass;                     /* The command class */
18287  00  =5      BYTE      cmd_reserved;                 /* The command + parameter reserved */
18288  00  =5      BYTE      properties2;                  /* masked byte */
18289  00  =5      BYTE      numberOfOffsets;              /**/
18290  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup1;                /**/
18291  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup2;                /**/
18292  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup3;                /**/
18293  00  =5      VG_COMMAND_FRAGMENT_REQUEST_VG variantgroup4;                /**/
18294  00  =5  } ZW_COMMAND_FRAGMENT_REQUEST_4BYTE_FRAME;
18295  00  =5  
18296  00  =5  /************************************************************/
18297  00  =5  /* Command Fragment Wait command class structs */           
18298  00  =5  /************************************************************/
18299  00  =5  typedef struct _ZW_COMMAND_FRAGMENT_WAIT_FRAME_
18300  00  =5  {
18301  00  =5      BYTE      cmdClass;                     /* The command class */
18302  00  =5      BYTE      cmd_reserved;                 /* The command + parameter reserved */
18303  00  =5      BYTE      pendingFragments;             /**/
18304  00  =5  } ZW_COMMAND_FRAGMENT_WAIT_FRAME;
18305  00  =5  
18306  00  =5  /************************************************************/
18307  00  =5  /* Command Subsequent Fragment 1byte command class structs */
18308  00  =5  /************************************************************/
18309  00  =5  typedef struct _ZW_COMMAND_SUBSEQUENT_FRAGMENT_1BYTE_FRAME_
18310  00  =5  {
18311  00  =5      BYTE      cmdClass;                     /* The command class */
18312  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
18313  00  =5      BYTE      datagramSize2;                /**/
18314  00  =5      BYTE      properties2;                  /* masked byte */
18315  00  =5      BYTE      datagramOffset2;              /**/
18316  00  =5      BYTE      payload1;                     
18317  00  =5      BYTE      checksum1;                    /* MSB */
18318  00  =5      BYTE      checksum2;                    /* LSB */
18319  00  =5  } ZW_COMMAND_SUBSEQUENT_FRAGMENT_1BYTE_FRAME;
18320  00  =5  
18321  00  =5  /************************************************************/
18322  00  =5  /* Command Subsequent Fragment 2byte command class structs */
18323  00  =5  /************************************************************/
18324  00  =5  typedef struct _ZW_COMMAND_SUBSEQUENT_FRAGMENT_2BYTE_FRAME_
18325  00  =5  {
18326  00  =5      BYTE      cmdClass;                     /* The command class */
18327  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
18328  00  =5      BYTE      datagramSize2;                /**/
18329  00  =5      BYTE      properties2;                  /* masked byte */
18330  00  =5      BYTE      datagramOffset2;              /**/
18331  00  =5      BYTE      payload1;                     /* MSB */
18332  00  =5      BYTE      payload2;                     /* LSB */
18333  00  =5      BYTE      checksum1;                    /* MSB */
18334  00  =5      BYTE      checksum2;                    /* LSB */
18335  00  =5  } ZW_COMMAND_SUBSEQUENT_FRAGMENT_2BYTE_FRAME;
18336  00  =5  
18337  00  =5  /************************************************************/
18338  00  =5  /* Command Subsequent Fragment 3byte command class structs */
18339  00  =5  /************************************************************/
18340  00  =5  typedef struct _ZW_COMMAND_SUBSEQUENT_FRAGMENT_3BYTE_FRAME_
18341  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 325 

18342  00  =5      BYTE      cmdClass;                     /* The command class */
18343  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
18344  00  =5      BYTE      datagramSize2;                /**/
18345  00  =5      BYTE      properties2;                  /* masked byte */
18346  00  =5      BYTE      datagramOffset2;              /**/
18347  00  =5      BYTE      payload1;                     /* MSB */
18348  00  =5      BYTE      payload2;                     
18349  00  =5      BYTE      payload3;                     /* LSB */
18350  00  =5      BYTE      checksum1;                    /* MSB */
18351  00  =5      BYTE      checksum2;                    /* LSB */
18352  00  =5  } ZW_COMMAND_SUBSEQUENT_FRAGMENT_3BYTE_FRAME;
18353  00  =5  
18354  00  =5  /************************************************************/
18355  00  =5  /* Command Subsequent Fragment 4byte command class structs */
18356  00  =5  /************************************************************/
18357  00  =5  typedef struct _ZW_COMMAND_SUBSEQUENT_FRAGMENT_4BYTE_FRAME_
18358  00  =5  {
18359  00  =5      BYTE      cmdClass;                     /* The command class */
18360  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
18361  00  =5      BYTE      datagramSize2;                /**/
18362  00  =5      BYTE      properties2;                  /* masked byte */
18363  00  =5      BYTE      datagramOffset2;              /**/
18364  00  =5      BYTE      payload1;                     /* MSB */
18365  00  =5      BYTE      payload2;                     
18366  00  =5      BYTE      payload3;                     
18367  00  =5      BYTE      payload4;                     /* LSB */
18368  00  =5      BYTE      checksum1;                    /* MSB */
18369  00  =5      BYTE      checksum2;                    /* LSB */
18370  00  =5  } ZW_COMMAND_SUBSEQUENT_FRAGMENT_4BYTE_FRAME;
18371  00  =5  
18372  00  =5  /************************************************************/
18373  00  =5  /* User Code Get command class structs */                   
18374  00  =5  /************************************************************/
18375  00  =5  typedef struct _ZW_USER_CODE_GET_FRAME_
18376  00  =5  {
18377  00  =5      BYTE      cmdClass;                     /* The command class */
18378  00  =5      BYTE      cmd;                          /* The command */
18379  00  =5      BYTE      userIdentifier;               /**/
18380  00  =5  } ZW_USER_CODE_GET_FRAME;
18381  00  =5  
18382  00  =5  /************************************************************/
18383  00  =5  /* User Code Report command class structs */                
18384  00  =5  /************************************************************/
18385  00  =5  typedef struct _ZW_USER_CODE_REPORT_FRAME_
18386  00  =5  {
18387  00  =5      BYTE      cmdClass;                     /* The command class */
18388  00  =5      BYTE      cmd;                          /* The command */
18389  00  =5      BYTE      userIdentifier;               /**/
18390  00  =5      BYTE      userIdStatus;                 /**/
18391  00  =5      BYTE      userCode1;                    /* MSB */
18392  00  =5      BYTE      userCode2;                    
18393  00  =5      BYTE      userCode3;                    
18394  00  =5      BYTE      userCode4;                    
18395  00  =5      BYTE      userCode5;                    
18396  00  =5      BYTE      userCode6;                    
18397  00  =5      BYTE      userCode7;                    
18398  00  =5      BYTE      userCode8;                    
18399  00  =5      BYTE      userCode9;                    
18400  00  =5      BYTE      userCode10;                   /* LSB */
18401  00  =5  } ZW_USER_CODE_REPORT_FRAME;
18402  00  =5  
18403  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 326 

18404  00  =5  /* User Code Set command class structs */                   
18405  00  =5  /************************************************************/
18406  00  =5  typedef struct _ZW_USER_CODE_SET_FRAME_
18407  00  =5  {
18408  00  =5      BYTE      cmdClass;                     /* The command class */
18409  00  =5      BYTE      cmd;                          /* The command */
18410  00  =5      BYTE      userIdentifier;               /**/
18411  00  =5      BYTE      userIdStatus;                 /**/
18412  00  =5      BYTE      userCode1;                    /* MSB */
18413  00  =5      BYTE      userCode2;                    
18414  00  =5      BYTE      userCode3;                    
18415  00  =5      BYTE      userCode4;                    
18416  00  =5      BYTE      userCode5;                    
18417  00  =5      BYTE      userCode6;                    
18418  00  =5      BYTE      userCode7;                    
18419  00  =5      BYTE      userCode8;                    
18420  00  =5      BYTE      userCode9;                    
18421  00  =5      BYTE      userCode10;                   /* LSB */
18422  00  =5  } ZW_USER_CODE_SET_FRAME;
18423  00  =5  
18424  00  =5  /************************************************************/
18425  00  =5  /* Users Number Get command class structs */                
18426  00  =5  /************************************************************/
18427  00  =5  typedef struct _ZW_USERS_NUMBER_GET_FRAME_
18428  00  =5  {
18429  00  =5      BYTE      cmdClass;                     /* The command class */
18430  00  =5      BYTE      cmd;                          /* The command */
18431  00  =5  } ZW_USERS_NUMBER_GET_FRAME;
18432  00  =5  
18433  00  =5  /************************************************************/
18434  00  =5  /* Users Number Report command class structs */             
18435  00  =5  /************************************************************/
18436  00  =5  typedef struct _ZW_USERS_NUMBER_REPORT_FRAME_
18437  00  =5  {
18438  00  =5      BYTE      cmdClass;                     /* The command class */
18439  00  =5      BYTE      cmd;                          /* The command */
18440  00  =5      BYTE      supportedUsers;               /**/
18441  00  =5  } ZW_USERS_NUMBER_REPORT_FRAME;
18442  00  =5  
18443  00  =5  /************************************************************/
18444  00  =5  /* Version Command Class Get command class structs */       
18445  00  =5  /************************************************************/
18446  00  =5  typedef struct _ZW_VERSION_COMMAND_CLASS_GET_FRAME_
18447  00  =5  {
18448  00  =5      BYTE      cmdClass;                     /* The command class */
18449  00  =5      BYTE      cmd;                          /* The command */
18450  00  =5      BYTE      requestedCommandClass;        /**/
18451  00  =5  } ZW_VERSION_COMMAND_CLASS_GET_FRAME;
18452  00  =5  
18453  00  =5  /************************************************************/
18454  00  =5  /* Version Command Class Report command class structs */    
18455  00  =5  /************************************************************/
18456  00  =5  typedef struct _ZW_VERSION_COMMAND_CLASS_REPORT_FRAME_
18457  00  =5  {
18458  00  =5      BYTE      cmdClass;                     /* The command class */
18459  00  =5      BYTE      cmd;                          /* The command */
18460  00  =5      BYTE      requestedCommandClass;        /**/
18461  00  =5      BYTE      commandClassVersion;          /**/
18462  00  =5  } ZW_VERSION_COMMAND_CLASS_REPORT_FRAME;
18463  00  =5  
18464  00  =5  /************************************************************/
18465  00  =5  /* Version Get command class structs */                     
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 327 

18466  00  =5  /************************************************************/
18467  00  =5  typedef struct _ZW_VERSION_GET_FRAME_
18468  00  =5  {
18469  00  =5      BYTE      cmdClass;                     /* The command class */
18470  00  =5      BYTE      cmd;                          /* The command */
18471  00  =5  } ZW_VERSION_GET_FRAME;
18472  00  =5  
18473  00  =5  /************************************************************/
18474  00  =5  /* Version Report command class structs */                  
18475  00  =5  /************************************************************/
18476  00  =5  typedef struct _ZW_VERSION_REPORT_FRAME_
18477  00  =5  {
18478  00  =5      BYTE      cmdClass;                     /* The command class */
18479  00  =5      BYTE      cmd;                          /* The command */
18480  00  =5      BYTE      zWaveLibraryType;             /**/
18481  00  =5      BYTE      zWaveProtocolVersion;         /**/
18482  00  =5      BYTE      zWaveProtocolSubVersion;      /**/
18483  00  =5      BYTE      applicationVersion;           /**/
18484  00  =5      BYTE      applicationSubVersion;        /**/
18485  00  =5  } ZW_VERSION_REPORT_FRAME;
18486  00  =5  
18487  00  =5  /************************************************************/
18488  00  =5  /* Wake Up Interval Get command class structs */            
18489  00  =5  /************************************************************/
18490  00  =5  typedef struct _ZW_WAKE_UP_INTERVAL_GET_FRAME_
18491  00  =5  {
18492  00  =5      BYTE      cmdClass;                     /* The command class */
18493  00  =5      BYTE      cmd;                          /* The command */
18494  00  =5  } ZW_WAKE_UP_INTERVAL_GET_FRAME;
18495  00  =5  
18496  00  =5  /************************************************************/
18497  00  =5  /* Wake Up Interval Report command class structs */         
18498  00  =5  /************************************************************/
18499  00  =5  typedef struct _ZW_WAKE_UP_INTERVAL_REPORT_FRAME_
18500  00  =5  {
18501  00  =5      BYTE      cmdClass;                     /* The command class */
18502  00  =5      BYTE      cmd;                          /* The command */
18503  00  =5      BYTE      seconds1;                     /* MSB */
18504  00  =5      BYTE      seconds2;                     
18505  00  =5      BYTE      seconds3;                     /* LSB */
18506  00  =5      BYTE      nodeid;                       /**/
18507  00  =5  } ZW_WAKE_UP_INTERVAL_REPORT_FRAME;
18508  00  =5  
18509  00  =5  /************************************************************/
18510  00  =5  /* Wake Up Interval Set command class structs */            
18511  00  =5  /************************************************************/
18512  00  =5  typedef struct _ZW_WAKE_UP_INTERVAL_SET_FRAME_
18513  00  =5  {
18514  00  =5      BYTE      cmdClass;                     /* The command class */
18515  00  =5      BYTE      cmd;                          /* The command */
18516  00  =5      BYTE      seconds1;                     /* MSB */
18517  00  =5      BYTE      seconds2;                     
18518  00  =5      BYTE      seconds3;                     /* LSB */
18519  00  =5      BYTE      nodeid;                       /**/
18520  00  =5  } ZW_WAKE_UP_INTERVAL_SET_FRAME;
18521  00  =5  
18522  00  =5  /************************************************************/
18523  00  =5  /* Wake Up No More Information command class structs */     
18524  00  =5  /************************************************************/
18525  00  =5  typedef struct _ZW_WAKE_UP_NO_MORE_INFORMATION_FRAME_
18526  00  =5  {
18527  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 328 

18528  00  =5      BYTE      cmd;                          /* The command */
18529  00  =5  } ZW_WAKE_UP_NO_MORE_INFORMATION_FRAME;
18530  00  =5  
18531  00  =5  /************************************************************/
18532  00  =5  /* Wake Up Notification command class structs */            
18533  00  =5  /************************************************************/
18534  00  =5  typedef struct _ZW_WAKE_UP_NOTIFICATION_FRAME_
18535  00  =5  {
18536  00  =5      BYTE      cmdClass;                     /* The command class */
18537  00  =5      BYTE      cmd;                          /* The command */
18538  00  =5  } ZW_WAKE_UP_NOTIFICATION_FRAME;
18539  00  =5  
18540  00  =5  /************************************************************/
18541  00  =5  /* Wake Up Interval Capabilities Get V2 command class structs */
18542  00  =5  /************************************************************/
18543  00  =5  typedef struct _ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V2_FRAME_
18544  00  =5  {
18545  00  =5      BYTE      cmdClass;                     /* The command class */
18546  00  =5      BYTE      cmd;                          /* The command */
18547  00  =5  } ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V2_FRAME;
18548  00  =5  
18549  00  =5  /************************************************************/
18550  00  =5  /* Wake Up Interval Capabilities Report V2 command class structs */
18551  00  =5  /************************************************************/
18552  00  =5  typedef struct _ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V2_FRAME_
18553  00  =5  {
18554  00  =5      BYTE      cmdClass;                     /* The command class */
18555  00  =5      BYTE      cmd;                          /* The command */
18556  00  =5      BYTE      minimumWakeUpIntervalSeconds1;/* MSB */
18557  00  =5      BYTE      minimumWakeUpIntervalSeconds2;
18558  00  =5      BYTE      minimumWakeUpIntervalSeconds3;/* LSB */
18559  00  =5      BYTE      maximumWakeUpIntervalSeconds1;/* MSB */
18560  00  =5      BYTE      maximumWakeUpIntervalSeconds2;
18561  00  =5      BYTE      maximumWakeUpIntervalSeconds3;/* LSB */
18562  00  =5      BYTE      defaultWakeUpIntervalSeconds1;/* MSB */
18563  00  =5      BYTE      defaultWakeUpIntervalSeconds2;
18564  00  =5      BYTE      defaultWakeUpIntervalSeconds3;/* LSB */
18565  00  =5      BYTE      wakeUpIntervalStepSeconds1;   /* MSB */
18566  00  =5      BYTE      wakeUpIntervalStepSeconds2;   
18567  00  =5      BYTE      wakeUpIntervalStepSeconds3;   /* LSB */
18568  00  =5  } ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V2_FRAME;
18569  00  =5  
18570  00  =5  /************************************************************/
18571  00  =5  /* Wake Up Interval Get V2 command class structs */         
18572  00  =5  /************************************************************/
18573  00  =5  typedef struct _ZW_WAKE_UP_INTERVAL_GET_V2_FRAME_
18574  00  =5  {
18575  00  =5      BYTE      cmdClass;                     /* The command class */
18576  00  =5      BYTE      cmd;                          /* The command */
18577  00  =5  } ZW_WAKE_UP_INTERVAL_GET_V2_FRAME;
18578  00  =5  
18579  00  =5  /************************************************************/
18580  00  =5  /* Wake Up Interval Report V2 command class structs */      
18581  00  =5  /************************************************************/
18582  00  =5  typedef struct _ZW_WAKE_UP_INTERVAL_REPORT_V2_FRAME_
18583  00  =5  {
18584  00  =5      BYTE      cmdClass;                     /* The command class */
18585  00  =5      BYTE      cmd;                          /* The command */
18586  00  =5      BYTE      seconds1;                     /* MSB */
18587  00  =5      BYTE      seconds2;                     
18588  00  =5      BYTE      seconds3;                     /* LSB */
18589  00  =5      BYTE      nodeid;                       /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 329 

18590  00  =5  } ZW_WAKE_UP_INTERVAL_REPORT_V2_FRAME;
18591  00  =5  
18592  00  =5  /************************************************************/
18593  00  =5  /* Wake Up Interval Set V2 command class structs */         
18594  00  =5  /************************************************************/
18595  00  =5  typedef struct _ZW_WAKE_UP_INTERVAL_SET_V2_FRAME_
18596  00  =5  {
18597  00  =5      BYTE      cmdClass;                     /* The command class */
18598  00  =5      BYTE      cmd;                          /* The command */
18599  00  =5      BYTE      seconds1;                     /* MSB */
18600  00  =5      BYTE      seconds2;                     
18601  00  =5      BYTE      seconds3;                     /* LSB */
18602  00  =5      BYTE      nodeid;                       /**/
18603  00  =5  } ZW_WAKE_UP_INTERVAL_SET_V2_FRAME;
18604  00  =5  
18605  00  =5  /************************************************************/
18606  00  =5  /* Wake Up No More Information V2 command class structs */  
18607  00  =5  /************************************************************/
18608  00  =5  typedef struct _ZW_WAKE_UP_NO_MORE_INFORMATION_V2_FRAME_
18609  00  =5  {
18610  00  =5      BYTE      cmdClass;                     /* The command class */
18611  00  =5      BYTE      cmd;                          /* The command */
18612  00  =5  } ZW_WAKE_UP_NO_MORE_INFORMATION_V2_FRAME;
18613  00  =5  
18614  00  =5  /************************************************************/
18615  00  =5  /* Wake Up Notification V2 command class structs */         
18616  00  =5  /************************************************************/
18617  00  =5  typedef struct _ZW_WAKE_UP_NOTIFICATION_V2_FRAME_
18618  00  =5  {
18619  00  =5      BYTE      cmdClass;                     /* The command class */
18620  00  =5      BYTE      cmd;                          /* The command */
18621  00  =5  } ZW_WAKE_UP_NOTIFICATION_V2_FRAME;
18622  00  =5  
18623  00  =5  /************************************************************/
18624  00  =5  /* Lowpan First Fragment 1byte command class structs */     
18625  00  =5  /************************************************************/
18626  00  =5  typedef struct _ZW_LOWPAN_FIRST_FRAGMENT_1BYTE_FRAME_
18627  00  =5  {
18628  00  =5      BYTE      cmdClass;                     /* The command class */
18629  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
18630  00  =5      BYTE      datagramSize2;                /**/
18631  00  =5      BYTE      datagramTag;                  /**/
18632  00  =5      BYTE      payload1;                     
18633  00  =5  } ZW_LOWPAN_FIRST_FRAGMENT_1BYTE_FRAME;
18634  00  =5  
18635  00  =5  /************************************************************/
18636  00  =5  /* Lowpan First Fragment 2byte command class structs */     
18637  00  =5  /************************************************************/
18638  00  =5  typedef struct _ZW_LOWPAN_FIRST_FRAGMENT_2BYTE_FRAME_
18639  00  =5  {
18640  00  =5      BYTE      cmdClass;                     /* The command class */
18641  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
18642  00  =5      BYTE      datagramSize2;                /**/
18643  00  =5      BYTE      datagramTag;                  /**/
18644  00  =5      BYTE      payload1;                     /* MSB */
18645  00  =5      BYTE      payload2;                     /* LSB */
18646  00  =5  } ZW_LOWPAN_FIRST_FRAGMENT_2BYTE_FRAME;
18647  00  =5  
18648  00  =5  /************************************************************/
18649  00  =5  /* Lowpan First Fragment 3byte command class structs */     
18650  00  =5  /************************************************************/
18651  00  =5  typedef struct _ZW_LOWPAN_FIRST_FRAGMENT_3BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 330 

18652  00  =5  {
18653  00  =5      BYTE      cmdClass;                     /* The command class */
18654  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
18655  00  =5      BYTE      datagramSize2;                /**/
18656  00  =5      BYTE      datagramTag;                  /**/
18657  00  =5      BYTE      payload1;                     /* MSB */
18658  00  =5      BYTE      payload2;                     
18659  00  =5      BYTE      payload3;                     /* LSB */
18660  00  =5  } ZW_LOWPAN_FIRST_FRAGMENT_3BYTE_FRAME;
18661  00  =5  
18662  00  =5  /************************************************************/
18663  00  =5  /* Lowpan First Fragment 4byte command class structs */     
18664  00  =5  /************************************************************/
18665  00  =5  typedef struct _ZW_LOWPAN_FIRST_FRAGMENT_4BYTE_FRAME_
18666  00  =5  {
18667  00  =5      BYTE      cmdClass;                     /* The command class */
18668  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
18669  00  =5      BYTE      datagramSize2;                /**/
18670  00  =5      BYTE      datagramTag;                  /**/
18671  00  =5      BYTE      payload1;                     /* MSB */
18672  00  =5      BYTE      payload2;                     
18673  00  =5      BYTE      payload3;                     
18674  00  =5      BYTE      payload4;                     /* LSB */
18675  00  =5  } ZW_LOWPAN_FIRST_FRAGMENT_4BYTE_FRAME;
18676  00  =5  
18677  00  =5  /************************************************************/
18678  00  =5  /* Lowpan Subsequent Fragment 1byte command class structs */
18679  00  =5  /************************************************************/
18680  00  =5  typedef struct _ZW_LOWPAN_SUBSEQUENT_FRAGMENT_1BYTE_FRAME_
18681  00  =5  {
18682  00  =5      BYTE      cmdClass;                     /* The command class */
18683  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
18684  00  =5      BYTE      datagramSize2;                /**/
18685  00  =5      BYTE      datagramTag;                  /**/
18686  00  =5      BYTE      datagramOffset;               /**/
18687  00  =5      BYTE      payload1;                     
18688  00  =5  } ZW_LOWPAN_SUBSEQUENT_FRAGMENT_1BYTE_FRAME;
18689  00  =5  
18690  00  =5  /************************************************************/
18691  00  =5  /* Lowpan Subsequent Fragment 2byte command class structs */
18692  00  =5  /************************************************************/
18693  00  =5  typedef struct _ZW_LOWPAN_SUBSEQUENT_FRAGMENT_2BYTE_FRAME_
18694  00  =5  {
18695  00  =5      BYTE      cmdClass;                     /* The command class */
18696  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
18697  00  =5      BYTE      datagramSize2;                /**/
18698  00  =5      BYTE      datagramTag;                  /**/
18699  00  =5      BYTE      datagramOffset;               /**/
18700  00  =5      BYTE      payload1;                     /* MSB */
18701  00  =5      BYTE      payload2;                     /* LSB */
18702  00  =5  } ZW_LOWPAN_SUBSEQUENT_FRAGMENT_2BYTE_FRAME;
18703  00  =5  
18704  00  =5  /************************************************************/
18705  00  =5  /* Lowpan Subsequent Fragment 3byte command class structs */
18706  00  =5  /************************************************************/
18707  00  =5  typedef struct _ZW_LOWPAN_SUBSEQUENT_FRAGMENT_3BYTE_FRAME_
18708  00  =5  {
18709  00  =5      BYTE      cmdClass;                     /* The command class */
18710  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
18711  00  =5      BYTE      datagramSize2;                /**/
18712  00  =5      BYTE      datagramTag;                  /**/
18713  00  =5      BYTE      datagramOffset;               /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 331 

18714  00  =5      BYTE      payload1;                     /* MSB */
18715  00  =5      BYTE      payload2;                     
18716  00  =5      BYTE      payload3;                     /* LSB */
18717  00  =5  } ZW_LOWPAN_SUBSEQUENT_FRAGMENT_3BYTE_FRAME;
18718  00  =5  
18719  00  =5  /************************************************************/
18720  00  =5  /* Lowpan Subsequent Fragment 4byte command class structs */
18721  00  =5  /************************************************************/
18722  00  =5  typedef struct _ZW_LOWPAN_SUBSEQUENT_FRAGMENT_4BYTE_FRAME_
18723  00  =5  {
18724  00  =5      BYTE      cmdClass;                     /* The command class */
18725  00  =5      BYTE      cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
18726  00  =5      BYTE      datagramSize2;                /**/
18727  00  =5      BYTE      datagramTag;                  /**/
18728  00  =5      BYTE      datagramOffset;               /**/
18729  00  =5      BYTE      payload1;                     /* MSB */
18730  00  =5      BYTE      payload2;                     
18731  00  =5      BYTE      payload3;                     
18732  00  =5      BYTE      payload4;                     /* LSB */
18733  00  =5  } ZW_LOWPAN_SUBSEQUENT_FRAGMENT_4BYTE_FRAME;
18734  00  =5  
18735  00  =5  /************************************************************/
18736  00  =5  /* Command Zip Packet 1byte command class structs */        
18737  00  =5  /************************************************************/
18738  00  =5  typedef struct _ZW_COMMAND_ZIP_PACKET_1BYTE_FRAME_
18739  00  =5  {
18740  00  =5      BYTE      cmdClass;                     /* The command class */
18741  00  =5      BYTE      cmd;                          /* The command */
18742  00  =5      BYTE      properties1;                  /* masked byte */
18743  00  =5      BYTE      properties2;                  /* masked byte */
18744  00  =5      BYTE      seqNo;                        /**/
18745  00  =5      BYTE      properties3;                  /* masked byte */
18746  00  =5      BYTE      properties4;                  /* masked byte */
18747  00  =5      BYTE      headerExtension1;             
18748  00  =5      BYTE      zWaveCommand1;                
18749  00  =5  } ZW_COMMAND_ZIP_PACKET_1BYTE_FRAME;
18750  00  =5  
18751  00  =5  /************************************************************/
18752  00  =5  /* Command Zip Packet 2byte command class structs */        
18753  00  =5  /************************************************************/
18754  00  =5  typedef struct _ZW_COMMAND_ZIP_PACKET_2BYTE_FRAME_
18755  00  =5  {
18756  00  =5      BYTE      cmdClass;                     /* The command class */
18757  00  =5      BYTE      cmd;                          /* The command */
18758  00  =5      BYTE      properties1;                  /* masked byte */
18759  00  =5      BYTE      properties2;                  /* masked byte */
18760  00  =5      BYTE      seqNo;                        /**/
18761  00  =5      BYTE      properties3;                  /* masked byte */
18762  00  =5      BYTE      properties4;                  /* masked byte */
18763  00  =5      BYTE      headerExtension1;             /* MSB */
18764  00  =5      BYTE      headerExtension2;             /* LSB */
18765  00  =5      BYTE      zWaveCommand1;                /* MSB */
18766  00  =5      BYTE      zWaveCommand2;                /* LSB */
18767  00  =5  } ZW_COMMAND_ZIP_PACKET_2BYTE_FRAME;
18768  00  =5  
18769  00  =5  /************************************************************/
18770  00  =5  /* Command Zip Packet 3byte command class structs */        
18771  00  =5  /************************************************************/
18772  00  =5  typedef struct _ZW_COMMAND_ZIP_PACKET_3BYTE_FRAME_
18773  00  =5  {
18774  00  =5      BYTE      cmdClass;                     /* The command class */
18775  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 332 

18776  00  =5      BYTE      properties1;                  /* masked byte */
18777  00  =5      BYTE      properties2;                  /* masked byte */
18778  00  =5      BYTE      seqNo;                        /**/
18779  00  =5      BYTE      properties3;                  /* masked byte */
18780  00  =5      BYTE      properties4;                  /* masked byte */
18781  00  =5      BYTE      headerExtension1;             /* MSB */
18782  00  =5      BYTE      headerExtension2;             
18783  00  =5      BYTE      headerExtension3;             /* LSB */
18784  00  =5      BYTE      zWaveCommand1;                /* MSB */
18785  00  =5      BYTE      zWaveCommand2;                
18786  00  =5      BYTE      zWaveCommand3;                /* LSB */
18787  00  =5  } ZW_COMMAND_ZIP_PACKET_3BYTE_FRAME;
18788  00  =5  
18789  00  =5  /************************************************************/
18790  00  =5  /* Command Zip Packet 4byte command class structs */        
18791  00  =5  /************************************************************/
18792  00  =5  typedef struct _ZW_COMMAND_ZIP_PACKET_4BYTE_FRAME_
18793  00  =5  {
18794  00  =5      BYTE      cmdClass;                     /* The command class */
18795  00  =5      BYTE      cmd;                          /* The command */
18796  00  =5      BYTE      properties1;                  /* masked byte */
18797  00  =5      BYTE      properties2;                  /* masked byte */
18798  00  =5      BYTE      seqNo;                        /**/
18799  00  =5      BYTE      properties3;                  /* masked byte */
18800  00  =5      BYTE      properties4;                  /* masked byte */
18801  00  =5      BYTE      headerExtension1;             /* MSB */
18802  00  =5      BYTE      headerExtension2;             
18803  00  =5      BYTE      headerExtension3;             
18804  00  =5      BYTE      headerExtension4;             /* LSB */
18805  00  =5      BYTE      zWaveCommand1;                /* MSB */
18806  00  =5      BYTE      zWaveCommand2;                
18807  00  =5      BYTE      zWaveCommand3;                
18808  00  =5      BYTE      zWaveCommand4;                /* LSB */
18809  00  =5  } ZW_COMMAND_ZIP_PACKET_4BYTE_FRAME;
18810  00  =5  
18811  00  =5  /************************************************************/
18812  00  =5  /* Command Command Class Not Supported command class structs */
18813  00  =5  /************************************************************/
18814  00  =5  typedef struct _ZW_COMMAND_COMMAND_CLASS_NOT_SUPPORTED_FRAME_
18815  00  =5  {
18816  00  =5      BYTE      cmdClass;                     /* The command class */
18817  00  =5      BYTE      cmd;                          /* The command */
18818  00  =5      BYTE      properties1;                  /* masked byte */
18819  00  =5      BYTE      offendingCommandClass;        /**/
18820  00  =5      BYTE      offendingCommand;             /**/
18821  00  =5  } ZW_COMMAND_COMMAND_CLASS_NOT_SUPPORTED_FRAME;
18822  00  =5  
18823  00  =5  /************************************************************/
18824  00  =5  /* Capability Get command class structs */                  
18825  00  =5  /************************************************************/
18826  00  =5  typedef struct _ZW_CAPABILITY_GET_FRAME_
18827  00  =5  {
18828  00  =5      BYTE      cmdClass;                     /* The command class */
18829  00  =5      BYTE      cmd;                          /* The command */
18830  00  =5  } ZW_CAPABILITY_GET_FRAME;
18831  00  =5  
18832  00  =5  /************************************************************/
18833  00  =5  /* Capability Report command class structs */               
18834  00  =5  /************************************************************/
18835  00  =5  typedef struct _ZW_CAPABILITY_REPORT_FRAME_
18836  00  =5  {
18837  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 333 

18838  00  =5      BYTE      cmd;                          /* The command */
18839  00  =5      BYTE      capabilityMask1;              /* MSB */
18840  00  =5      BYTE      capabilityMask2;              /* LSB */
18841  00  =5  } ZW_CAPABILITY_REPORT_FRAME;
18842  00  =5  
18843  00  =5  /************************************************************/
18844  00  =5  /* State Get command class structs */                       
18845  00  =5  /************************************************************/
18846  00  =5  typedef struct _ZW_STATE_GET_FRAME_
18847  00  =5  {
18848  00  =5      BYTE      cmdClass;                     /* The command class */
18849  00  =5      BYTE      cmd;                          /* The command */
18850  00  =5      BYTE      capabilityId;                 /**/
18851  00  =5  } ZW_STATE_GET_FRAME;
18852  00  =5  
18853  00  =5  /************************************************************/
18854  00  =5  /* State Report command class structs */                    
18855  00  =5  /************************************************************/
18856  00  =5  typedef struct _ZW_STATE_REPORT_FRAME_
18857  00  =5  {
18858  00  =5      BYTE      cmdClass;                     /* The command class */
18859  00  =5      BYTE      cmd;                          /* The command */
18860  00  =5      BYTE      capabilityId;                 /**/
18861  00  =5      BYTE      state;                        /**/
18862  00  =5  } ZW_STATE_REPORT_FRAME;
18863  00  =5  
18864  00  =5  /************************************************************/
18865  00  =5  /* State Set variant group structs */                       
18866  00  =5  /************************************************************/
18867  00  =5  typedef struct _VG_STATE_SET_VG_
18868  00  =5  {
18869  00  =5      BYTE      capabilityId;                 /**/
18870  00  =5      BYTE      state;                        /**/
18871  00  =5  } VG_STATE_SET_VG;
18872  00  =5  
18873  00  =5  /************************************************************/
18874  00  =5  /* State Set 1byte command class structs */                 
18875  00  =5  /************************************************************/
18876  00  =5  typedef struct _ZW_STATE_SET_1BYTE_FRAME_
18877  00  =5  {
18878  00  =5      BYTE      cmdClass;                     /* The command class */
18879  00  =5      BYTE      cmd;                          /* The command */
18880  00  =5      BYTE      properties1;                  /* masked byte */
18881  00  =5      VG_STATE_SET_VG variantgroup1;                /**/
18882  00  =5  } ZW_STATE_SET_1BYTE_FRAME;
18883  00  =5  
18884  00  =5  /************************************************************/
18885  00  =5  /* State Set 2byte command class structs */                 
18886  00  =5  /************************************************************/
18887  00  =5  typedef struct _ZW_STATE_SET_2BYTE_FRAME_
18888  00  =5  {
18889  00  =5      BYTE      cmdClass;                     /* The command class */
18890  00  =5      BYTE      cmd;                          /* The command */
18891  00  =5      BYTE      properties1;                  /* masked byte */
18892  00  =5      VG_STATE_SET_VG variantgroup1;                /**/
18893  00  =5      VG_STATE_SET_VG variantgroup2;                /**/
18894  00  =5  } ZW_STATE_SET_2BYTE_FRAME;
18895  00  =5  
18896  00  =5  /************************************************************/
18897  00  =5  /* State Set 3byte command class structs */                 
18898  00  =5  /************************************************************/
18899  00  =5  typedef struct _ZW_STATE_SET_3BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 334 

18900  00  =5  {
18901  00  =5      BYTE      cmdClass;                     /* The command class */
18902  00  =5      BYTE      cmd;                          /* The command */
18903  00  =5      BYTE      properties1;                  /* masked byte */
18904  00  =5      VG_STATE_SET_VG variantgroup1;                /**/
18905  00  =5      VG_STATE_SET_VG variantgroup2;                /**/
18906  00  =5      VG_STATE_SET_VG variantgroup3;                /**/
18907  00  =5  } ZW_STATE_SET_3BYTE_FRAME;
18908  00  =5  
18909  00  =5  /************************************************************/
18910  00  =5  /* State Set 4byte command class structs */                 
18911  00  =5  /************************************************************/
18912  00  =5  typedef struct _ZW_STATE_SET_4BYTE_FRAME_
18913  00  =5  {
18914  00  =5      BYTE      cmdClass;                     /* The command class */
18915  00  =5      BYTE      cmd;                          /* The command */
18916  00  =5      BYTE      properties1;                  /* masked byte */
18917  00  =5      VG_STATE_SET_VG variantgroup1;                /**/
18918  00  =5      VG_STATE_SET_VG variantgroup2;                /**/
18919  00  =5      VG_STATE_SET_VG variantgroup3;                /**/
18920  00  =5      VG_STATE_SET_VG variantgroup4;                /**/
18921  00  =5  } ZW_STATE_SET_4BYTE_FRAME;
18922  00  =5  
18923  00  =5  /************************************************************/
18924  00  =5  /* Start Capability Level Change command class structs */   
18925  00  =5  /************************************************************/
18926  00  =5  typedef struct _ZW_START_CAPABILITY_LEVEL_CHANGE_FRAME_
18927  00  =5  {
18928  00  =5      BYTE      cmdClass;                     /* The command class */
18929  00  =5      BYTE      cmd;                          /* The command */
18930  00  =5      BYTE      properties1;                  /* masked byte */
18931  00  =5      BYTE      capabilityId;                 /**/
18932  00  =5      BYTE      startState;                   /**/
18933  00  =5  } ZW_START_CAPABILITY_LEVEL_CHANGE_FRAME;
18934  00  =5  
18935  00  =5  /************************************************************/
18936  00  =5  /* Stop State Change command class structs */               
18937  00  =5  /************************************************************/
18938  00  =5  typedef struct _ZW_STOP_STATE_CHANGE_FRAME_
18939  00  =5  {
18940  00  =5      BYTE      cmdClass;                     /* The command class */
18941  00  =5      BYTE      cmd;                          /* The command */
18942  00  =5      BYTE      capabilityId;                 /**/
18943  00  =5  } ZW_STOP_STATE_CHANGE_FRAME;
18944  00  =5  
18945  00  =5  /************************************************************/
18946  00  =5  /* Schedule Supported Get command class structs */          
18947  00  =5  /************************************************************/
18948  00  =5  typedef struct _ZW_SCHEDULE_SUPPORTED_GET_FRAME_
18949  00  =5  {
18950  00  =5      BYTE      cmdClass;                     /* The command class */
18951  00  =5      BYTE      cmd;                          /* The command */
18952  00  =5  } ZW_SCHEDULE_SUPPORTED_GET_FRAME;
18953  00  =5  
18954  00  =5  /************************************************************/
18955  00  =5  /* Schedule Supported Report variant group structs */       
18956  00  =5  /************************************************************/
18957  00  =5  typedef struct _VG_SCHEDULE_SUPPORTED_REPORT_VG_
18958  00  =5  {
18959  00  =5      BYTE      supportedCc;                  /**/
18960  00  =5      BYTE      properties2;                  /* masked byte */
18961  00  =5  } VG_SCHEDULE_SUPPORTED_REPORT_VG;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 335 

18962  00  =5  
18963  00  =5  /************************************************************/
18964  00  =5  /* Schedule Supported Report 1byte command class structs */ 
18965  00  =5  /************************************************************/
18966  00  =5  typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_FRAME_
18967  00  =5  {
18968  00  =5      BYTE      cmdClass;                     /* The command class */
18969  00  =5      BYTE      cmd;                          /* The command */
18970  00  =5      BYTE      numberOfSupportedScheduleId;  /**/
18971  00  =5      BYTE      properties1;                  /* masked byte */
18972  00  =5      BYTE      numberOfSupportedCc;          /**/
18973  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup1;                /**/
18974  00  =5      BYTE      properties3;                  /* masked byte */
18975  00  =5  } ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_FRAME;
18976  00  =5  
18977  00  =5  /************************************************************/
18978  00  =5  /* Schedule Supported Report 2byte command class structs */ 
18979  00  =5  /************************************************************/
18980  00  =5  typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_FRAME_
18981  00  =5  {
18982  00  =5      BYTE      cmdClass;                     /* The command class */
18983  00  =5      BYTE      cmd;                          /* The command */
18984  00  =5      BYTE      numberOfSupportedScheduleId;  /**/
18985  00  =5      BYTE      properties1;                  /* masked byte */
18986  00  =5      BYTE      numberOfSupportedCc;          /**/
18987  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup1;                /**/
18988  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup2;                /**/
18989  00  =5      BYTE      properties3;                  /* masked byte */
18990  00  =5  } ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_FRAME;
18991  00  =5  
18992  00  =5  /************************************************************/
18993  00  =5  /* Schedule Supported Report 3byte command class structs */ 
18994  00  =5  /************************************************************/
18995  00  =5  typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_FRAME_
18996  00  =5  {
18997  00  =5      BYTE      cmdClass;                     /* The command class */
18998  00  =5      BYTE      cmd;                          /* The command */
18999  00  =5      BYTE      numberOfSupportedScheduleId;  /**/
19000  00  =5      BYTE      properties1;                  /* masked byte */
19001  00  =5      BYTE      numberOfSupportedCc;          /**/
19002  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup1;                /**/
19003  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup2;                /**/
19004  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup3;                /**/
19005  00  =5      BYTE      properties3;                  /* masked byte */
19006  00  =5  } ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_FRAME;
19007  00  =5  
19008  00  =5  /************************************************************/
19009  00  =5  /* Schedule Supported Report 4byte command class structs */ 
19010  00  =5  /************************************************************/
19011  00  =5  typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_FRAME_
19012  00  =5  {
19013  00  =5      BYTE      cmdClass;                     /* The command class */
19014  00  =5      BYTE      cmd;                          /* The command */
19015  00  =5      BYTE      numberOfSupportedScheduleId;  /**/
19016  00  =5      BYTE      properties1;                  /* masked byte */
19017  00  =5      BYTE      numberOfSupportedCc;          /**/
19018  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup1;                /**/
19019  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup2;                /**/
19020  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup3;                /**/
19021  00  =5      VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup4;                /**/
19022  00  =5      BYTE      properties3;                  /* masked byte */
19023  00  =5  } ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 336 

19024  00  =5  
19025  00  =5  /************************************************************/
19026  00  =5  /* Command Schedule Set variant group structs */            
19027  00  =5  /************************************************************/
19028  00  =5  typedef struct _VG_COMMAND_SCHEDULE_SET_1BYTE_VG_
19029  00  =5  {
19030  00  =5      BYTE      cmdLength;                    /**/
19031  00  =5      BYTE      cmdByte1;                     
19032  00  =5  } VG_COMMAND_SCHEDULE_SET_1BYTE_VG;
19033  00  =5  
19034  00  =5  /************************************************************/
19035  00  =5  /* Command Schedule Set variant group structs */            
19036  00  =5  /************************************************************/
19037  00  =5  typedef struct _VG_COMMAND_SCHEDULE_SET_2BYTE_VG_
19038  00  =5  {
19039  00  =5      BYTE      cmdLength;                    /**/
19040  00  =5      BYTE      cmdByte1;                     /* MSB */
19041  00  =5      BYTE      cmdByte2;                     /* LSB */
19042  00  =5  } VG_COMMAND_SCHEDULE_SET_2BYTE_VG;
19043  00  =5  
19044  00  =5  /************************************************************/
19045  00  =5  /* Command Schedule Set variant group structs */            
19046  00  =5  /************************************************************/
19047  00  =5  typedef struct _VG_COMMAND_SCHEDULE_SET_3BYTE_VG_
19048  00  =5  {
19049  00  =5      BYTE      cmdLength;                    /**/
19050  00  =5      BYTE      cmdByte1;                     /* MSB */
19051  00  =5      BYTE      cmdByte2;                     
19052  00  =5      BYTE      cmdByte3;                     /* LSB */
19053  00  =5  } VG_COMMAND_SCHEDULE_SET_3BYTE_VG;
19054  00  =5  
19055  00  =5  /************************************************************/
19056  00  =5  /* Command Schedule Set variant group structs */            
19057  00  =5  /************************************************************/
19058  00  =5  typedef struct _VG_COMMAND_SCHEDULE_SET_4BYTE_VG_
19059  00  =5  {
19060  00  =5      BYTE      cmdLength;                    /**/
19061  00  =5      BYTE      cmdByte1;                     /* MSB */
19062  00  =5      BYTE      cmdByte2;                     
19063  00  =5      BYTE      cmdByte3;                     
19064  00  =5      BYTE      cmdByte4;                     /* LSB */
19065  00  =5  } VG_COMMAND_SCHEDULE_SET_4BYTE_VG;
19066  00  =5  
19067  00  =5  /************************************************************/
19068  00  =5  /* Command Schedule Set 1byte command class structs */      
19069  00  =5  /************************************************************/
19070  00  =5  typedef struct _ZW_COMMAND_SCHEDULE_SET_1BYTE_FRAME_
19071  00  =5  {
19072  00  =5      BYTE      cmdClass;                     /* The command class */
19073  00  =5      BYTE      cmd;                          /* The command */
19074  00  =5      BYTE      scheduleId;                   /**/
19075  00  =5      BYTE      userIdentifier;               /**/
19076  00  =5      BYTE      startYear;                    /**/
19077  00  =5      BYTE      properties1;                  /* masked byte */
19078  00  =5      BYTE      properties2;                  /* masked byte */
19079  00  =5      BYTE      properties3;                  /* masked byte */
19080  00  =5      BYTE      properties4;                  /* masked byte */
19081  00  =5      BYTE      properties5;                  /* masked byte */
19082  00  =5      BYTE      durationByte1;                /* MSB */
19083  00  =5      BYTE      durationByte2;                /* LSB */
19084  00  =5      BYTE      reportsToFollow;              /**/
19085  00  =5      BYTE      numberOfCmdToFollow;          /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 337 

19086  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup1;                /**/
19087  00  =5  } ZW_COMMAND_SCHEDULE_SET_1BYTE_FRAME;
19088  00  =5  
19089  00  =5  /************************************************************/
19090  00  =5  /* Command Schedule Set 2byte command class structs */      
19091  00  =5  /************************************************************/
19092  00  =5  typedef struct _ZW_COMMAND_SCHEDULE_SET_2BYTE_FRAME_
19093  00  =5  {
19094  00  =5      BYTE      cmdClass;                     /* The command class */
19095  00  =5      BYTE      cmd;                          /* The command */
19096  00  =5      BYTE      scheduleId;                   /**/
19097  00  =5      BYTE      userIdentifier;               /**/
19098  00  =5      BYTE      startYear;                    /**/
19099  00  =5      BYTE      properties1;                  /* masked byte */
19100  00  =5      BYTE      properties2;                  /* masked byte */
19101  00  =5      BYTE      properties3;                  /* masked byte */
19102  00  =5      BYTE      properties4;                  /* masked byte */
19103  00  =5      BYTE      properties5;                  /* masked byte */
19104  00  =5      BYTE      durationByte1;                /* MSB */
19105  00  =5      BYTE      durationByte2;                /* LSB */
19106  00  =5      BYTE      reportsToFollow;              /**/
19107  00  =5      BYTE      numberOfCmdToFollow;          /**/
19108  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup1;                /**/
19109  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup2;                /**/
19110  00  =5  } ZW_COMMAND_SCHEDULE_SET_2BYTE_FRAME;
19111  00  =5  
19112  00  =5  /************************************************************/
19113  00  =5  /* Command Schedule Set 3byte command class structs */      
19114  00  =5  /************************************************************/
19115  00  =5  typedef struct _ZW_COMMAND_SCHEDULE_SET_3BYTE_FRAME_
19116  00  =5  {
19117  00  =5      BYTE      cmdClass;                     /* The command class */
19118  00  =5      BYTE      cmd;                          /* The command */
19119  00  =5      BYTE      scheduleId;                   /**/
19120  00  =5      BYTE      userIdentifier;               /**/
19121  00  =5      BYTE      startYear;                    /**/
19122  00  =5      BYTE      properties1;                  /* masked byte */
19123  00  =5      BYTE      properties2;                  /* masked byte */
19124  00  =5      BYTE      properties3;                  /* masked byte */
19125  00  =5      BYTE      properties4;                  /* masked byte */
19126  00  =5      BYTE      properties5;                  /* masked byte */
19127  00  =5      BYTE      durationByte1;                /* MSB */
19128  00  =5      BYTE      durationByte2;                /* LSB */
19129  00  =5      BYTE      reportsToFollow;              /**/
19130  00  =5      BYTE      numberOfCmdToFollow;          /**/
19131  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup1;                /**/
19132  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup2;                /**/
19133  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup3;                /**/
19134  00  =5  } ZW_COMMAND_SCHEDULE_SET_3BYTE_FRAME;
19135  00  =5  
19136  00  =5  /************************************************************/
19137  00  =5  /* Command Schedule Set 4byte command class structs */      
19138  00  =5  /************************************************************/
19139  00  =5  typedef struct _ZW_COMMAND_SCHEDULE_SET_4BYTE_FRAME_
19140  00  =5  {
19141  00  =5      BYTE      cmdClass;                     /* The command class */
19142  00  =5      BYTE      cmd;                          /* The command */
19143  00  =5      BYTE      scheduleId;                   /**/
19144  00  =5      BYTE      userIdentifier;               /**/
19145  00  =5      BYTE      startYear;                    /**/
19146  00  =5      BYTE      properties1;                  /* masked byte */
19147  00  =5      BYTE      properties2;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 338 

19148  00  =5      BYTE      properties3;                  /* masked byte */
19149  00  =5      BYTE      properties4;                  /* masked byte */
19150  00  =5      BYTE      properties5;                  /* masked byte */
19151  00  =5      BYTE      durationByte1;                /* MSB */
19152  00  =5      BYTE      durationByte2;                /* LSB */
19153  00  =5      BYTE      reportsToFollow;              /**/
19154  00  =5      BYTE      numberOfCmdToFollow;          /**/
19155  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup1;                /**/
19156  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup2;                /**/
19157  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup3;                /**/
19158  00  =5      VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup4;                /**/
19159  00  =5  } ZW_COMMAND_SCHEDULE_SET_4BYTE_FRAME;
19160  00  =5  
19161  00  =5  /************************************************************/
19162  00  =5  /* Command Schedule Get command class structs */            
19163  00  =5  /************************************************************/
19164  00  =5  typedef struct _ZW_COMMAND_SCHEDULE_GET_FRAME_
19165  00  =5  {
19166  00  =5      BYTE      cmdClass;                     /* The command class */
19167  00  =5      BYTE      cmd;                          /* The command */
19168  00  =5      BYTE      scheduleId;                   /**/
19169  00  =5  } ZW_COMMAND_SCHEDULE_GET_FRAME;
19170  00  =5  
19171  00  =5  /************************************************************/
19172  00  =5  /* Command Schedule Report variant group structs */         
19173  00  =5  /************************************************************/
19174  00  =5  typedef struct _VG_COMMAND_SCHEDULE_REPORT_1BYTE_VG_
19175  00  =5  {
19176  00  =5      BYTE      cmdLength;                    /**/
19177  00  =5      BYTE      cmdByte1;                     
19178  00  =5  } VG_COMMAND_SCHEDULE_REPORT_1BYTE_VG;
19179  00  =5  
19180  00  =5  /************************************************************/
19181  00  =5  /* Command Schedule Report variant group structs */         
19182  00  =5  /************************************************************/
19183  00  =5  typedef struct _VG_COMMAND_SCHEDULE_REPORT_2BYTE_VG_
19184  00  =5  {
19185  00  =5      BYTE      cmdLength;                    /**/
19186  00  =5      BYTE      cmdByte1;                     /* MSB */
19187  00  =5      BYTE      cmdByte2;                     /* LSB */
19188  00  =5  } VG_COMMAND_SCHEDULE_REPORT_2BYTE_VG;
19189  00  =5  
19190  00  =5  /************************************************************/
19191  00  =5  /* Command Schedule Report variant group structs */         
19192  00  =5  /************************************************************/
19193  00  =5  typedef struct _VG_COMMAND_SCHEDULE_REPORT_3BYTE_VG_
19194  00  =5  {
19195  00  =5      BYTE      cmdLength;                    /**/
19196  00  =5      BYTE      cmdByte1;                     /* MSB */
19197  00  =5      BYTE      cmdByte2;                     
19198  00  =5      BYTE      cmdByte3;                     /* LSB */
19199  00  =5  } VG_COMMAND_SCHEDULE_REPORT_3BYTE_VG;
19200  00  =5  
19201  00  =5  /************************************************************/
19202  00  =5  /* Command Schedule Report variant group structs */         
19203  00  =5  /************************************************************/
19204  00  =5  typedef struct _VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG_
19205  00  =5  {
19206  00  =5      BYTE      cmdLength;                    /**/
19207  00  =5      BYTE      cmdByte1;                     /* MSB */
19208  00  =5      BYTE      cmdByte2;                     
19209  00  =5      BYTE      cmdByte3;                     
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 339 

19210  00  =5      BYTE      cmdByte4;                     /* LSB */
19211  00  =5  } VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG;
19212  00  =5  
19213  00  =5  /************************************************************/
19214  00  =5  /* Command Schedule Report 1byte command class structs */   
19215  00  =5  /************************************************************/
19216  00  =5  typedef struct _ZW_COMMAND_SCHEDULE_REPORT_1BYTE_FRAME_
19217  00  =5  {
19218  00  =5      BYTE      cmdClass;                     /* The command class */
19219  00  =5      BYTE      cmd;                          /* The command */
19220  00  =5      BYTE      scheduleId;                   /**/
19221  00  =5      BYTE      userIdentifier;               /**/
19222  00  =5      BYTE      startYear;                    /**/
19223  00  =5      BYTE      properties1;                  /* masked byte */
19224  00  =5      BYTE      properties2;                  /* masked byte */
19225  00  =5      BYTE      properties3;                  /* masked byte */
19226  00  =5      BYTE      properties4;                  /* masked byte */
19227  00  =5      BYTE      properties5;                  /* masked byte */
19228  00  =5      BYTE      durationByte1;                /* MSB */
19229  00  =5      BYTE      durationByte2;                /* LSB */
19230  00  =5      BYTE      reportsToFollow;              /**/
19231  00  =5      BYTE      numberOfCmdToFollow;          /**/
19232  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup1;                /**/
19233  00  =5  } ZW_COMMAND_SCHEDULE_REPORT_1BYTE_FRAME;
19234  00  =5  
19235  00  =5  /************************************************************/
19236  00  =5  /* Command Schedule Report 2byte command class structs */   
19237  00  =5  /************************************************************/
19238  00  =5  typedef struct _ZW_COMMAND_SCHEDULE_REPORT_2BYTE_FRAME_
19239  00  =5  {
19240  00  =5      BYTE      cmdClass;                     /* The command class */
19241  00  =5      BYTE      cmd;                          /* The command */
19242  00  =5      BYTE      scheduleId;                   /**/
19243  00  =5      BYTE      userIdentifier;               /**/
19244  00  =5      BYTE      startYear;                    /**/
19245  00  =5      BYTE      properties1;                  /* masked byte */
19246  00  =5      BYTE      properties2;                  /* masked byte */
19247  00  =5      BYTE      properties3;                  /* masked byte */
19248  00  =5      BYTE      properties4;                  /* masked byte */
19249  00  =5      BYTE      properties5;                  /* masked byte */
19250  00  =5      BYTE      durationByte1;                /* MSB */
19251  00  =5      BYTE      durationByte2;                /* LSB */
19252  00  =5      BYTE      reportsToFollow;              /**/
19253  00  =5      BYTE      numberOfCmdToFollow;          /**/
19254  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup1;                /**/
19255  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup2;                /**/
19256  00  =5  } ZW_COMMAND_SCHEDULE_REPORT_2BYTE_FRAME;
19257  00  =5  
19258  00  =5  /************************************************************/
19259  00  =5  /* Command Schedule Report 3byte command class structs */   
19260  00  =5  /************************************************************/
19261  00  =5  typedef struct _ZW_COMMAND_SCHEDULE_REPORT_3BYTE_FRAME_
19262  00  =5  {
19263  00  =5      BYTE      cmdClass;                     /* The command class */
19264  00  =5      BYTE      cmd;                          /* The command */
19265  00  =5      BYTE      scheduleId;                   /**/
19266  00  =5      BYTE      userIdentifier;               /**/
19267  00  =5      BYTE      startYear;                    /**/
19268  00  =5      BYTE      properties1;                  /* masked byte */
19269  00  =5      BYTE      properties2;                  /* masked byte */
19270  00  =5      BYTE      properties3;                  /* masked byte */
19271  00  =5      BYTE      properties4;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 340 

19272  00  =5      BYTE      properties5;                  /* masked byte */
19273  00  =5      BYTE      durationByte1;                /* MSB */
19274  00  =5      BYTE      durationByte2;                /* LSB */
19275  00  =5      BYTE      reportsToFollow;              /**/
19276  00  =5      BYTE      numberOfCmdToFollow;          /**/
19277  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup1;                /**/
19278  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup2;                /**/
19279  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup3;                /**/
19280  00  =5  } ZW_COMMAND_SCHEDULE_REPORT_3BYTE_FRAME;
19281  00  =5  
19282  00  =5  /************************************************************/
19283  00  =5  /* Command Schedule Report 4byte command class structs */   
19284  00  =5  /************************************************************/
19285  00  =5  typedef struct _ZW_COMMAND_SCHEDULE_REPORT_4BYTE_FRAME_
19286  00  =5  {
19287  00  =5      BYTE      cmdClass;                     /* The command class */
19288  00  =5      BYTE      cmd;                          /* The command */
19289  00  =5      BYTE      scheduleId;                   /**/
19290  00  =5      BYTE      userIdentifier;               /**/
19291  00  =5      BYTE      startYear;                    /**/
19292  00  =5      BYTE      properties1;                  /* masked byte */
19293  00  =5      BYTE      properties2;                  /* masked byte */
19294  00  =5      BYTE      properties3;                  /* masked byte */
19295  00  =5      BYTE      properties4;                  /* masked byte */
19296  00  =5      BYTE      properties5;                  /* masked byte */
19297  00  =5      BYTE      durationByte1;                /* MSB */
19298  00  =5      BYTE      durationByte2;                /* LSB */
19299  00  =5      BYTE      reportsToFollow;              /**/
19300  00  =5      BYTE      numberOfCmdToFollow;          /**/
19301  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup1;                /**/
19302  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup2;                /**/
19303  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup3;                /**/
19304  00  =5      VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup4;                /**/
19305  00  =5  } ZW_COMMAND_SCHEDULE_REPORT_4BYTE_FRAME;
19306  00  =5  
19307  00  =5  /************************************************************/
19308  00  =5  /* Schedule Remove command class structs */                 
19309  00  =5  /************************************************************/
19310  00  =5  typedef struct _ZW_SCHEDULE_REMOVE_FRAME_
19311  00  =5  {
19312  00  =5      BYTE      cmdClass;                     /* The command class */
19313  00  =5      BYTE      cmd;                          /* The command */
19314  00  =5      BYTE      scheduleId;                   /**/
19315  00  =5  } ZW_SCHEDULE_REMOVE_FRAME;
19316  00  =5  
19317  00  =5  /************************************************************/
19318  00  =5  /* Schedule State Set command class structs */              
19319  00  =5  /************************************************************/
19320  00  =5  typedef struct _ZW_SCHEDULE_STATE_SET_FRAME_
19321  00  =5  {
19322  00  =5      BYTE      cmdClass;                     /* The command class */
19323  00  =5      BYTE      cmd;                          /* The command */
19324  00  =5      BYTE      scheduleId;                   /**/
19325  00  =5      BYTE      scheduleState;                /**/
19326  00  =5  } ZW_SCHEDULE_STATE_SET_FRAME;
19327  00  =5  
19328  00  =5  /************************************************************/
19329  00  =5  /* Schedule State Get command class structs */              
19330  00  =5  /************************************************************/
19331  00  =5  typedef struct _ZW_SCHEDULE_STATE_GET_FRAME_
19332  00  =5  {
19333  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 341 

19334  00  =5      BYTE      cmd;                          /* The command */
19335  00  =5  } ZW_SCHEDULE_STATE_GET_FRAME;
19336  00  =5  
19337  00  =5  /************************************************************/
19338  00  =5  /* Schedule State Report command class structs */           
19339  00  =5  /************************************************************/
19340  00  =5  typedef struct _ZW_SCHEDULE_STATE_REPORT_FRAME_
19341  00  =5  {
19342  00  =5      BYTE      cmdClass;                     /* The command class */
19343  00  =5      BYTE      cmd;                          /* The command */
19344  00  =5      BYTE      numberOfSupportedScheduleId;  /**/
19345  00  =5      BYTE      properties1;                  /* masked byte */
19346  00  =5      BYTE      properties2;                  /* masked byte */
19347  00  =5      BYTE      properties3;                  /* masked byte */
19348  00  =5  } ZW_SCHEDULE_STATE_REPORT_FRAME;
19349  00  =5  
19350  00  =5  /************************************************************/
19351  00  =5  /* Controller Change command class structs */               
19352  00  =5  /************************************************************/
19353  00  =5  typedef struct _ZW_CONTROLLER_CHANGE_FRAME_
19354  00  =5  {
19355  00  =5      BYTE      cmdClass;                     /* The command class */
19356  00  =5      BYTE      cmd;                          /* The command */
19357  00  =5      BYTE      seqNo;                        /**/
19358  00  =5      BYTE      reserved;                     /**/
19359  00  =5      BYTE      mode;                         /**/
19360  00  =5      BYTE      txOptions;                    /**/
19361  00  =5  } ZW_CONTROLLER_CHANGE_FRAME;
19362  00  =5  
19363  00  =5  /************************************************************/
19364  00  =5  /* Controller Change Status 1byte command class structs */  
19365  00  =5  /************************************************************/
19366  00  =5  typedef struct _ZW_CONTROLLER_CHANGE_STATUS_1BYTE_FRAME_
19367  00  =5  {
19368  00  =5      BYTE      cmdClass;                     /* The command class */
19369  00  =5      BYTE      cmd;                          /* The command */
19370  00  =5      BYTE      seqNo;                        /**/
19371  00  =5      BYTE      status;                       /**/
19372  00  =5      BYTE      reserved;                     /**/
19373  00  =5      BYTE      newNodeId;                    /**/
19374  00  =5      BYTE      nodeInfoLength;               /**/
19375  00  =5      BYTE      properties1;                  /* masked byte */
19376  00  =5      BYTE      properties2;                  /* masked byte */
19377  00  =5      BYTE      basicDeviceClass;             /**/
19378  00  =5      BYTE      genericDeviceClass;           /**/
19379  00  =5      BYTE      specificDeviceClass;          /**/
19380  00  =5      BYTE      commandClass1;                
19381  00  =5  } ZW_CONTROLLER_CHANGE_STATUS_1BYTE_FRAME;
19382  00  =5  
19383  00  =5  /************************************************************/
19384  00  =5  /* Controller Change Status 2byte command class structs */  
19385  00  =5  /************************************************************/
19386  00  =5  typedef struct _ZW_CONTROLLER_CHANGE_STATUS_2BYTE_FRAME_
19387  00  =5  {
19388  00  =5      BYTE      cmdClass;                     /* The command class */
19389  00  =5      BYTE      cmd;                          /* The command */
19390  00  =5      BYTE      seqNo;                        /**/
19391  00  =5      BYTE      status;                       /**/
19392  00  =5      BYTE      reserved;                     /**/
19393  00  =5      BYTE      newNodeId;                    /**/
19394  00  =5      BYTE      nodeInfoLength;               /**/
19395  00  =5      BYTE      properties1;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 342 

19396  00  =5      BYTE      properties2;                  /* masked byte */
19397  00  =5      BYTE      basicDeviceClass;             /**/
19398  00  =5      BYTE      genericDeviceClass;           /**/
19399  00  =5      BYTE      specificDeviceClass;          /**/
19400  00  =5      BYTE      commandClass1;                /* MSB */
19401  00  =5      BYTE      commandClass2;                /* LSB */
19402  00  =5  } ZW_CONTROLLER_CHANGE_STATUS_2BYTE_FRAME;
19403  00  =5  
19404  00  =5  /************************************************************/
19405  00  =5  /* Controller Change Status 3byte command class structs */  
19406  00  =5  /************************************************************/
19407  00  =5  typedef struct _ZW_CONTROLLER_CHANGE_STATUS_3BYTE_FRAME_
19408  00  =5  {
19409  00  =5      BYTE      cmdClass;                     /* The command class */
19410  00  =5      BYTE      cmd;                          /* The command */
19411  00  =5      BYTE      seqNo;                        /**/
19412  00  =5      BYTE      status;                       /**/
19413  00  =5      BYTE      reserved;                     /**/
19414  00  =5      BYTE      newNodeId;                    /**/
19415  00  =5      BYTE      nodeInfoLength;               /**/
19416  00  =5      BYTE      properties1;                  /* masked byte */
19417  00  =5      BYTE      properties2;                  /* masked byte */
19418  00  =5      BYTE      basicDeviceClass;             /**/
19419  00  =5      BYTE      genericDeviceClass;           /**/
19420  00  =5      BYTE      specificDeviceClass;          /**/
19421  00  =5      BYTE      commandClass1;                /* MSB */
19422  00  =5      BYTE      commandClass2;                
19423  00  =5      BYTE      commandClass3;                /* LSB */
19424  00  =5  } ZW_CONTROLLER_CHANGE_STATUS_3BYTE_FRAME;
19425  00  =5  
19426  00  =5  /************************************************************/
19427  00  =5  /* Controller Change Status 4byte command class structs */  
19428  00  =5  /************************************************************/
19429  00  =5  typedef struct _ZW_CONTROLLER_CHANGE_STATUS_4BYTE_FRAME_
19430  00  =5  {
19431  00  =5      BYTE      cmdClass;                     /* The command class */
19432  00  =5      BYTE      cmd;                          /* The command */
19433  00  =5      BYTE      seqNo;                        /**/
19434  00  =5      BYTE      status;                       /**/
19435  00  =5      BYTE      reserved;                     /**/
19436  00  =5      BYTE      newNodeId;                    /**/
19437  00  =5      BYTE      nodeInfoLength;               /**/
19438  00  =5      BYTE      properties1;                  /* masked byte */
19439  00  =5      BYTE      properties2;                  /* masked byte */
19440  00  =5      BYTE      basicDeviceClass;             /**/
19441  00  =5      BYTE      genericDeviceClass;           /**/
19442  00  =5      BYTE      specificDeviceClass;          /**/
19443  00  =5      BYTE      commandClass1;                /* MSB */
19444  00  =5      BYTE      commandClass2;                
19445  00  =5      BYTE      commandClass3;                
19446  00  =5      BYTE      commandClass4;                /* LSB */
19447  00  =5  } ZW_CONTROLLER_CHANGE_STATUS_4BYTE_FRAME;
19448  00  =5  
19449  00  =5  /************************************************************/
19450  00  =5  /* Zip Node Solicitation command class structs */           
19451  00  =5  /************************************************************/
19452  00  =5  typedef struct _ZW_ZIP_NODE_SOLICITATION_FRAME_
19453  00  =5  {
19454  00  =5      BYTE      cmdClass;                     /* The command class */
19455  00  =5      BYTE      cmd;                          /* The command */
19456  00  =5      BYTE      reserved;                     /**/
19457  00  =5      BYTE      nodeId;                       /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 343 

19458  00  =5      BYTE      ipv6Address1;                 /* MSB */
19459  00  =5      BYTE      ipv6Address2;                 
19460  00  =5      BYTE      ipv6Address3;                 
19461  00  =5      BYTE      ipv6Address4;                 
19462  00  =5      BYTE      ipv6Address5;                 
19463  00  =5      BYTE      ipv6Address6;                 
19464  00  =5      BYTE      ipv6Address7;                 
19465  00  =5      BYTE      ipv6Address8;                 
19466  00  =5      BYTE      ipv6Address9;                 
19467  00  =5      BYTE      ipv6Address10;                
19468  00  =5      BYTE      ipv6Address11;                
19469  00  =5      BYTE      ipv6Address12;                
19470  00  =5      BYTE      ipv6Address13;                
19471  00  =5      BYTE      ipv6Address14;                
19472  00  =5      BYTE      ipv6Address15;                
19473  00  =5      BYTE      ipv6Address16;                /* LSB */
19474  00  =5  } ZW_ZIP_NODE_SOLICITATION_FRAME;
19475  00  =5  
19476  00  =5  /************************************************************/
19477  00  =5  /* Zip Inv Node Solicitation command class structs */       
19478  00  =5  /************************************************************/
19479  00  =5  typedef struct _ZW_ZIP_INV_NODE_SOLICITATION_FRAME_
19480  00  =5  {
19481  00  =5      BYTE      cmdClass;                     /* The command class */
19482  00  =5      BYTE      cmd;                          /* The command */
19483  00  =5      BYTE      properties1;                  /* masked byte */
19484  00  =5      BYTE      nodeId;                       /**/
19485  00  =5  } ZW_ZIP_INV_NODE_SOLICITATION_FRAME;
19486  00  =5  
19487  00  =5  /************************************************************/
19488  00  =5  /* Zip Node Advertisement command class structs */          
19489  00  =5  /************************************************************/
19490  00  =5  typedef struct _ZW_ZIP_NODE_ADVERTISEMENT_FRAME_
19491  00  =5  {
19492  00  =5      BYTE      cmdClass;                     /* The command class */
19493  00  =5      BYTE      cmd;                          /* The command */
19494  00  =5      BYTE      properties1;                  /* masked byte */
19495  00  =5      BYTE      nodeId;                       /**/
19496  00  =5      BYTE      ipv6Address1;                 /* MSB */
19497  00  =5      BYTE      ipv6Address2;                 
19498  00  =5      BYTE      ipv6Address3;                 
19499  00  =5      BYTE      ipv6Address4;                 
19500  00  =5      BYTE      ipv6Address5;                 
19501  00  =5      BYTE      ipv6Address6;                 
19502  00  =5      BYTE      ipv6Address7;                 
19503  00  =5      BYTE      ipv6Address8;                 
19504  00  =5      BYTE      ipv6Address9;                 
19505  00  =5      BYTE      ipv6Address10;                
19506  00  =5      BYTE      ipv6Address11;                
19507  00  =5      BYTE      ipv6Address12;                
19508  00  =5      BYTE      ipv6Address13;                
19509  00  =5      BYTE      ipv6Address14;                
19510  00  =5      BYTE      ipv6Address15;                
19511  00  =5      BYTE      ipv6Address16;                /* LSB */
19512  00  =5      BYTE      homeId1;                      /* MSB */
19513  00  =5      BYTE      homeId2;                      
19514  00  =5      BYTE      homeId3;                      
19515  00  =5      BYTE      homeId4;                      /* LSB */
19516  00  =5  } ZW_ZIP_NODE_ADVERTISEMENT_FRAME;
19517  00  =5  
19518  00  =5  /************************************************************/
19519  00  =5  /* Association Group Name Get command class structs */      
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 344 

19520  00  =5  /************************************************************/
19521  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_NAME_GET_FRAME_
19522  00  =5  {
19523  00  =5      BYTE      cmdClass;                     /* The command class */
19524  00  =5      BYTE      cmd;                          /* The command */
19525  00  =5      BYTE      groupingIdentifier;           /**/
19526  00  =5  } ZW_ASSOCIATION_GROUP_NAME_GET_FRAME;
19527  00  =5  
19528  00  =5  /************************************************************/
19529  00  =5  /* Association Group Name Report 1byte command class structs */
19530  00  =5  /************************************************************/
19531  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_FRAME_
19532  00  =5  {
19533  00  =5      BYTE      cmdClass;                     /* The command class */
19534  00  =5      BYTE      cmd;                          /* The command */
19535  00  =5      BYTE      groupingIdentifier;           /**/
19536  00  =5      BYTE      lengthOfName;                 /**/
19537  00  =5      BYTE      name1;                        
19538  00  =5  } ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_FRAME;
19539  00  =5  
19540  00  =5  /************************************************************/
19541  00  =5  /* Association Group Name Report 2byte command class structs */
19542  00  =5  /************************************************************/
19543  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_FRAME_
19544  00  =5  {
19545  00  =5      BYTE      cmdClass;                     /* The command class */
19546  00  =5      BYTE      cmd;                          /* The command */
19547  00  =5      BYTE      groupingIdentifier;           /**/
19548  00  =5      BYTE      lengthOfName;                 /**/
19549  00  =5      BYTE      name1;                        /* MSB */
19550  00  =5      BYTE      name2;                        /* LSB */
19551  00  =5  } ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_FRAME;
19552  00  =5  
19553  00  =5  /************************************************************/
19554  00  =5  /* Association Group Name Report 3byte command class structs */
19555  00  =5  /************************************************************/
19556  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_FRAME_
19557  00  =5  {
19558  00  =5      BYTE      cmdClass;                     /* The command class */
19559  00  =5      BYTE      cmd;                          /* The command */
19560  00  =5      BYTE      groupingIdentifier;           /**/
19561  00  =5      BYTE      lengthOfName;                 /**/
19562  00  =5      BYTE      name1;                        /* MSB */
19563  00  =5      BYTE      name2;                        
19564  00  =5      BYTE      name3;                        /* LSB */
19565  00  =5  } ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_FRAME;
19566  00  =5  
19567  00  =5  /************************************************************/
19568  00  =5  /* Association Group Name Report 4byte command class structs */
19569  00  =5  /************************************************************/
19570  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_FRAME_
19571  00  =5  {
19572  00  =5      BYTE      cmdClass;                     /* The command class */
19573  00  =5      BYTE      cmd;                          /* The command */
19574  00  =5      BYTE      groupingIdentifier;           /**/
19575  00  =5      BYTE      lengthOfName;                 /**/
19576  00  =5      BYTE      name1;                        /* MSB */
19577  00  =5      BYTE      name2;                        
19578  00  =5      BYTE      name3;                        
19579  00  =5      BYTE      name4;                        /* LSB */
19580  00  =5  } ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_FRAME;
19581  00  =5  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 345 

19582  00  =5  /************************************************************/
19583  00  =5  /* Association Group Info Get command class structs */      
19584  00  =5  /************************************************************/
19585  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_INFO_GET_FRAME_
19586  00  =5  {
19587  00  =5      BYTE      cmdClass;                     /* The command class */
19588  00  =5      BYTE      cmd;                          /* The command */
19589  00  =5      BYTE      properties1;                  /* masked byte */
19590  00  =5      BYTE      groupingIdentifier;           /**/
19591  00  =5  } ZW_ASSOCIATION_GROUP_INFO_GET_FRAME;
19592  00  =5  
19593  00  =5  /************************************************************/
19594  00  =5  /* Association Group Info Report variant group structs */   
19595  00  =5  /************************************************************/
19596  00  =5  typedef struct _VG_ASSOCIATION_GROUP_INFO_REPORT_VG_
19597  00  =5  {
19598  00  =5      BYTE      groupingIdentifier;           /**/
19599  00  =5      BYTE      mode;                         /**/
19600  00  =5      BYTE      profile1;                     /* MSB */
19601  00  =5      BYTE      profile2;                     /* LSB */
19602  00  =5      BYTE      reserved;                     /**/
19603  00  =5      BYTE      eventCode1;                   /* MSB */
19604  00  =5      BYTE      eventCode2;                   /* LSB */
19605  00  =5  } VG_ASSOCIATION_GROUP_INFO_REPORT_VG;
19606  00  =5  
19607  00  =5  /************************************************************/
19608  00  =5  /* Association Group Info Report 1byte command class structs */
19609  00  =5  /************************************************************/
19610  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_FRAME_
19611  00  =5  {
19612  00  =5      BYTE      cmdClass;                     /* The command class */
19613  00  =5      BYTE      cmd;                          /* The command */
19614  00  =5      BYTE      properties1;                  /* masked byte */
19615  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup1;                /**/
19616  00  =5  } ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_FRAME;
19617  00  =5  
19618  00  =5  /************************************************************/
19619  00  =5  /* Association Group Info Report 2byte command class structs */
19620  00  =5  /************************************************************/
19621  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_FRAME_
19622  00  =5  {
19623  00  =5      BYTE      cmdClass;                     /* The command class */
19624  00  =5      BYTE      cmd;                          /* The command */
19625  00  =5      BYTE      properties1;                  /* masked byte */
19626  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup1;                /**/
19627  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup2;                /**/
19628  00  =5  } ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_FRAME;
19629  00  =5  
19630  00  =5  /************************************************************/
19631  00  =5  /* Association Group Info Report 3byte command class structs */
19632  00  =5  /************************************************************/
19633  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_FRAME_
19634  00  =5  {
19635  00  =5      BYTE      cmdClass;                     /* The command class */
19636  00  =5      BYTE      cmd;                          /* The command */
19637  00  =5      BYTE      properties1;                  /* masked byte */
19638  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup1;                /**/
19639  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup2;                /**/
19640  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup3;                /**/
19641  00  =5  } ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_FRAME;
19642  00  =5  
19643  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 346 

19644  00  =5  /* Association Group Info Report 4byte command class structs */
19645  00  =5  /************************************************************/
19646  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_FRAME_
19647  00  =5  {
19648  00  =5      BYTE      cmdClass;                     /* The command class */
19649  00  =5      BYTE      cmd;                          /* The command */
19650  00  =5      BYTE      properties1;                  /* masked byte */
19651  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup1;                /**/
19652  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup2;                /**/
19653  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup3;                /**/
19654  00  =5      VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup4;                /**/
19655  00  =5  } ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_FRAME;
19656  00  =5  
19657  00  =5  /************************************************************/
19658  00  =5  /* Association Group Command List Get command class structs */
19659  00  =5  /************************************************************/
19660  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_FRAME_
19661  00  =5  {
19662  00  =5      BYTE      cmdClass;                     /* The command class */
19663  00  =5      BYTE      cmd;                          /* The command */
19664  00  =5      BYTE      properties1;                  /* masked byte */
19665  00  =5      BYTE      groupingIdentifier;           /**/
19666  00  =5  } ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_FRAME;
19667  00  =5  
19668  00  =5  /************************************************************/
19669  00  =5  /* Association Group Command List Report 1byte command class structs */
19670  00  =5  /************************************************************/
19671  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_FRAME_
19672  00  =5  {
19673  00  =5      BYTE      cmdClass;                     /* The command class */
19674  00  =5      BYTE      cmd;                          /* The command */
19675  00  =5      BYTE      groupingIdentifier;           /**/
19676  00  =5      BYTE      listLength;                   /**/
19677  00  =5      BYTE      command1;                     
19678  00  =5  } ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_FRAME;
19679  00  =5  
19680  00  =5  /************************************************************/
19681  00  =5  /* Association Group Command List Report 2byte command class structs */
19682  00  =5  /************************************************************/
19683  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_FRAME_
19684  00  =5  {
19685  00  =5      BYTE      cmdClass;                     /* The command class */
19686  00  =5      BYTE      cmd;                          /* The command */
19687  00  =5      BYTE      groupingIdentifier;           /**/
19688  00  =5      BYTE      listLength;                   /**/
19689  00  =5      BYTE      command1;                     /* MSB */
19690  00  =5      BYTE      command2;                     /* LSB */
19691  00  =5  } ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_FRAME;
19692  00  =5  
19693  00  =5  /************************************************************/
19694  00  =5  /* Association Group Command List Report 3byte command class structs */
19695  00  =5  /************************************************************/
19696  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_FRAME_
19697  00  =5  {
19698  00  =5      BYTE      cmdClass;                     /* The command class */
19699  00  =5      BYTE      cmd;                          /* The command */
19700  00  =5      BYTE      groupingIdentifier;           /**/
19701  00  =5      BYTE      listLength;                   /**/
19702  00  =5      BYTE      command1;                     /* MSB */
19703  00  =5      BYTE      command2;                     
19704  00  =5      BYTE      command3;                     /* LSB */
19705  00  =5  } ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_FRAME;
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 347 

19706  00  =5  
19707  00  =5  /************************************************************/
19708  00  =5  /* Association Group Command List Report 4byte command class structs */
19709  00  =5  /************************************************************/
19710  00  =5  typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_FRAME_
19711  00  =5  {
19712  00  =5      BYTE      cmdClass;                     /* The command class */
19713  00  =5      BYTE      cmd;                          /* The command */
19714  00  =5      BYTE      groupingIdentifier;           /**/
19715  00  =5      BYTE      listLength;                   /**/
19716  00  =5      BYTE      command1;                     /* MSB */
19717  00  =5      BYTE      command2;                     
19718  00  =5      BYTE      command3;                     
19719  00  =5      BYTE      command4;                     /* LSB */
19720  00  =5  } ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_FRAME;
19721  00  =5  
19722  00  =5  /************************************************************/
19723  00  =5  /* Device Reset Locally Notification command class structs */
19724  00  =5  /************************************************************/
19725  00  =5  typedef struct _ZW_DEVICE_RESET_LOCALLY_NOTIFICATION_FRAME_
19726  00  =5  {
19727  00  =5      BYTE      cmdClass;                     /* The command class */
19728  00  =5      BYTE      cmd;                          /* The command */
19729  00  =5  } ZW_DEVICE_RESET_LOCALLY_NOTIFICATION_FRAME;
19730  00  =5  
19731  00  =5  /************************************************************/
19732  00  =5  /* Central Scene Supported Get command class structs */     
19733  00  =5  /************************************************************/
19734  00  =5  typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_GET_FRAME_
19735  00  =5  {
19736  00  =5      BYTE      cmdClass;                     /* The command class */
19737  00  =5      BYTE      cmd;                          /* The command */
19738  00  =5  } ZW_CENTRAL_SCENE_SUPPORTED_GET_FRAME;
19739  00  =5  
19740  00  =5  /************************************************************/
19741  00  =5  /* Central Scene Supported Report command class structs */  
19742  00  =5  /************************************************************/
19743  00  =5  typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_FRAME_
19744  00  =5  {
19745  00  =5      BYTE      cmdClass;                     /* The command class */
19746  00  =5      BYTE      cmd;                          /* The command */
19747  00  =5      BYTE      supportedScenes;              /**/
19748  00  =5  } ZW_CENTRAL_SCENE_SUPPORTED_REPORT_FRAME;
19749  00  =5  
19750  00  =5  /************************************************************/
19751  00  =5  /* Central Scene Notification command class structs */      
19752  00  =5  /************************************************************/
19753  00  =5  typedef struct _ZW_CENTRAL_SCENE_NOTIFICATION_FRAME_
19754  00  =5  {
19755  00  =5      BYTE      cmdClass;                     /* The command class */
19756  00  =5      BYTE      cmd;                          /* The command */
19757  00  =5      BYTE      sequenceNumber;               /**/
19758  00  =5      BYTE      properties1;                  /* masked byte */
19759  00  =5      BYTE      sceneNumber;                  /**/
19760  00  =5  } ZW_CENTRAL_SCENE_NOTIFICATION_FRAME;
19761  00  =5  
19762  00  =5  /************************************************************/
19763  00  =5  /* Ip Association Set 1byte command class structs */        
19764  00  =5  /************************************************************/
19765  00  =5  typedef struct _ZW_IP_ASSOCIATION_SET_1BYTE_FRAME_
19766  00  =5  {
19767  00  =5      BYTE      cmdClass;                     /* The command class */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 348 

19768  00  =5      BYTE      cmd;                          /* The command */
19769  00  =5      BYTE      groupingIdentifier;           /**/
19770  00  =5      BYTE      ipv6Address1;                 /* MSB */
19771  00  =5      BYTE      ipv6Address2;                 
19772  00  =5      BYTE      ipv6Address3;                 
19773  00  =5      BYTE      ipv6Address4;                 
19774  00  =5      BYTE      ipv6Address5;                 
19775  00  =5      BYTE      ipv6Address6;                 
19776  00  =5      BYTE      ipv6Address7;                 
19777  00  =5      BYTE      ipv6Address8;                 
19778  00  =5      BYTE      ipv6Address9;                 
19779  00  =5      BYTE      ipv6Address10;                
19780  00  =5      BYTE      ipv6Address11;                
19781  00  =5      BYTE      ipv6Address12;                
19782  00  =5      BYTE      ipv6Address13;                
19783  00  =5      BYTE      ipv6Address14;                
19784  00  =5      BYTE      ipv6Address15;                
19785  00  =5      BYTE      ipv6Address16;                /* LSB */
19786  00  =5      BYTE      endpoint;                     /**/
19787  00  =5      BYTE      properties1;                  /* masked byte */
19788  00  =5      BYTE      resourceName1;                
19789  00  =5  } ZW_IP_ASSOCIATION_SET_1BYTE_FRAME;
19790  00  =5  
19791  00  =5  /************************************************************/
19792  00  =5  /* Ip Association Set 2byte command class structs */        
19793  00  =5  /************************************************************/
19794  00  =5  typedef struct _ZW_IP_ASSOCIATION_SET_2BYTE_FRAME_
19795  00  =5  {
19796  00  =5      BYTE      cmdClass;                     /* The command class */
19797  00  =5      BYTE      cmd;                          /* The command */
19798  00  =5      BYTE      groupingIdentifier;           /**/
19799  00  =5      BYTE      ipv6Address1;                 /* MSB */
19800  00  =5      BYTE      ipv6Address2;                 
19801  00  =5      BYTE      ipv6Address3;                 
19802  00  =5      BYTE      ipv6Address4;                 
19803  00  =5      BYTE      ipv6Address5;                 
19804  00  =5      BYTE      ipv6Address6;                 
19805  00  =5      BYTE      ipv6Address7;                 
19806  00  =5      BYTE      ipv6Address8;                 
19807  00  =5      BYTE      ipv6Address9;                 
19808  00  =5      BYTE      ipv6Address10;                
19809  00  =5      BYTE      ipv6Address11;                
19810  00  =5      BYTE      ipv6Address12;                
19811  00  =5      BYTE      ipv6Address13;                
19812  00  =5      BYTE      ipv6Address14;                
19813  00  =5      BYTE      ipv6Address15;                
19814  00  =5      BYTE      ipv6Address16;                /* LSB */
19815  00  =5      BYTE      endpoint;                     /**/
19816  00  =5      BYTE      properties1;                  /* masked byte */
19817  00  =5      BYTE      resourceName1;                /* MSB */
19818  00  =5      BYTE      resourceName2;                /* LSB */
19819  00  =5  } ZW_IP_ASSOCIATION_SET_2BYTE_FRAME;
19820  00  =5  
19821  00  =5  /************************************************************/
19822  00  =5  /* Ip Association Set 3byte command class structs */        
19823  00  =5  /************************************************************/
19824  00  =5  typedef struct _ZW_IP_ASSOCIATION_SET_3BYTE_FRAME_
19825  00  =5  {
19826  00  =5      BYTE      cmdClass;                     /* The command class */
19827  00  =5      BYTE      cmd;                          /* The command */
19828  00  =5      BYTE      groupingIdentifier;           /**/
19829  00  =5      BYTE      ipv6Address1;                 /* MSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 349 

19830  00  =5      BYTE      ipv6Address2;                 
19831  00  =5      BYTE      ipv6Address3;                 
19832  00  =5      BYTE      ipv6Address4;                 
19833  00  =5      BYTE      ipv6Address5;                 
19834  00  =5      BYTE      ipv6Address6;                 
19835  00  =5      BYTE      ipv6Address7;                 
19836  00  =5      BYTE      ipv6Address8;                 
19837  00  =5      BYTE      ipv6Address9;                 
19838  00  =5      BYTE      ipv6Address10;                
19839  00  =5      BYTE      ipv6Address11;                
19840  00  =5      BYTE      ipv6Address12;                
19841  00  =5      BYTE      ipv6Address13;                
19842  00  =5      BYTE      ipv6Address14;                
19843  00  =5      BYTE      ipv6Address15;                
19844  00  =5      BYTE      ipv6Address16;                /* LSB */
19845  00  =5      BYTE      endpoint;                     /**/
19846  00  =5      BYTE      properties1;                  /* masked byte */
19847  00  =5      BYTE      resourceName1;                /* MSB */
19848  00  =5      BYTE      resourceName2;                
19849  00  =5      BYTE      resourceName3;                /* LSB */
19850  00  =5  } ZW_IP_ASSOCIATION_SET_3BYTE_FRAME;
19851  00  =5  
19852  00  =5  /************************************************************/
19853  00  =5  /* Ip Association Set 4byte command class structs */        
19854  00  =5  /************************************************************/
19855  00  =5  typedef struct _ZW_IP_ASSOCIATION_SET_4BYTE_FRAME_
19856  00  =5  {
19857  00  =5      BYTE      cmdClass;                     /* The command class */
19858  00  =5      BYTE      cmd;                          /* The command */
19859  00  =5      BYTE      groupingIdentifier;           /**/
19860  00  =5      BYTE      ipv6Address1;                 /* MSB */
19861  00  =5      BYTE      ipv6Address2;                 
19862  00  =5      BYTE      ipv6Address3;                 
19863  00  =5      BYTE      ipv6Address4;                 
19864  00  =5      BYTE      ipv6Address5;                 
19865  00  =5      BYTE      ipv6Address6;                 
19866  00  =5      BYTE      ipv6Address7;                 
19867  00  =5      BYTE      ipv6Address8;                 
19868  00  =5      BYTE      ipv6Address9;                 
19869  00  =5      BYTE      ipv6Address10;                
19870  00  =5      BYTE      ipv6Address11;                
19871  00  =5      BYTE      ipv6Address12;                
19872  00  =5      BYTE      ipv6Address13;                
19873  00  =5      BYTE      ipv6Address14;                
19874  00  =5      BYTE      ipv6Address15;                
19875  00  =5      BYTE      ipv6Address16;                /* LSB */
19876  00  =5      BYTE      endpoint;                     /**/
19877  00  =5      BYTE      properties1;                  /* masked byte */
19878  00  =5      BYTE      resourceName1;                /* MSB */
19879  00  =5      BYTE      resourceName2;                
19880  00  =5      BYTE      resourceName3;                
19881  00  =5      BYTE      resourceName4;                /* LSB */
19882  00  =5  } ZW_IP_ASSOCIATION_SET_4BYTE_FRAME;
19883  00  =5  
19884  00  =5  /************************************************************/
19885  00  =5  /* Ip Association Get command class structs */              
19886  00  =5  /************************************************************/
19887  00  =5  typedef struct _ZW_IP_ASSOCIATION_GET_FRAME_
19888  00  =5  {
19889  00  =5      BYTE      cmdClass;                     /* The command class */
19890  00  =5      BYTE      cmd;                          /* The command */
19891  00  =5      BYTE      groupingIdentifier;           /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 350 

19892  00  =5      BYTE      index;                        /**/
19893  00  =5  } ZW_IP_ASSOCIATION_GET_FRAME;
19894  00  =5  
19895  00  =5  /************************************************************/
19896  00  =5  /* Ip Association Report 1byte command class structs */     
19897  00  =5  /************************************************************/
19898  00  =5  typedef struct _ZW_IP_ASSOCIATION_REPORT_1BYTE_FRAME_
19899  00  =5  {
19900  00  =5      BYTE      cmdClass;                     /* The command class */
19901  00  =5      BYTE      cmd;                          /* The command */
19902  00  =5      BYTE      groupingIdentifier;           /**/
19903  00  =5      BYTE      index;                        /**/
19904  00  =5      BYTE      actualNodes;                  /**/
19905  00  =5      BYTE      ipv6Address1;                 /* MSB */
19906  00  =5      BYTE      ipv6Address2;                 
19907  00  =5      BYTE      ipv6Address3;                 
19908  00  =5      BYTE      ipv6Address4;                 
19909  00  =5      BYTE      ipv6Address5;                 
19910  00  =5      BYTE      ipv6Address6;                 
19911  00  =5      BYTE      ipv6Address7;                 
19912  00  =5      BYTE      ipv6Address8;                 
19913  00  =5      BYTE      ipv6Address9;                 
19914  00  =5      BYTE      ipv6Address10;                
19915  00  =5      BYTE      ipv6Address11;                
19916  00  =5      BYTE      ipv6Address12;                
19917  00  =5      BYTE      ipv6Address13;                
19918  00  =5      BYTE      ipv6Address14;                
19919  00  =5      BYTE      ipv6Address15;                
19920  00  =5      BYTE      ipv6Address16;                /* LSB */
19921  00  =5      BYTE      endpoint;                     /**/
19922  00  =5      BYTE      properties1;                  /* masked byte */
19923  00  =5      BYTE      resourceName1;                
19924  00  =5  } ZW_IP_ASSOCIATION_REPORT_1BYTE_FRAME;
19925  00  =5  
19926  00  =5  /************************************************************/
19927  00  =5  /* Ip Association Report 2byte command class structs */     
19928  00  =5  /************************************************************/
19929  00  =5  typedef struct _ZW_IP_ASSOCIATION_REPORT_2BYTE_FRAME_
19930  00  =5  {
19931  00  =5      BYTE      cmdClass;                     /* The command class */
19932  00  =5      BYTE      cmd;                          /* The command */
19933  00  =5      BYTE      groupingIdentifier;           /**/
19934  00  =5      BYTE      index;                        /**/
19935  00  =5      BYTE      actualNodes;                  /**/
19936  00  =5      BYTE      ipv6Address1;                 /* MSB */
19937  00  =5      BYTE      ipv6Address2;                 
19938  00  =5      BYTE      ipv6Address3;                 
19939  00  =5      BYTE      ipv6Address4;                 
19940  00  =5      BYTE      ipv6Address5;                 
19941  00  =5      BYTE      ipv6Address6;                 
19942  00  =5      BYTE      ipv6Address7;                 
19943  00  =5      BYTE      ipv6Address8;                 
19944  00  =5      BYTE      ipv6Address9;                 
19945  00  =5      BYTE      ipv6Address10;                
19946  00  =5      BYTE      ipv6Address11;                
19947  00  =5      BYTE      ipv6Address12;                
19948  00  =5      BYTE      ipv6Address13;                
19949  00  =5      BYTE      ipv6Address14;                
19950  00  =5      BYTE      ipv6Address15;                
19951  00  =5      BYTE      ipv6Address16;                /* LSB */
19952  00  =5      BYTE      endpoint;                     /**/
19953  00  =5      BYTE      properties1;                  /* masked byte */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 351 

19954  00  =5      BYTE      resourceName1;                /* MSB */
19955  00  =5      BYTE      resourceName2;                /* LSB */
19956  00  =5  } ZW_IP_ASSOCIATION_REPORT_2BYTE_FRAME;
19957  00  =5  
19958  00  =5  /************************************************************/
19959  00  =5  /* Ip Association Report 3byte command class structs */     
19960  00  =5  /************************************************************/
19961  00  =5  typedef struct _ZW_IP_ASSOCIATION_REPORT_3BYTE_FRAME_
19962  00  =5  {
19963  00  =5      BYTE      cmdClass;                     /* The command class */
19964  00  =5      BYTE      cmd;                          /* The command */
19965  00  =5      BYTE      groupingIdentifier;           /**/
19966  00  =5      BYTE      index;                        /**/
19967  00  =5      BYTE      actualNodes;                  /**/
19968  00  =5      BYTE      ipv6Address1;                 /* MSB */
19969  00  =5      BYTE      ipv6Address2;                 
19970  00  =5      BYTE      ipv6Address3;                 
19971  00  =5      BYTE      ipv6Address4;                 
19972  00  =5      BYTE      ipv6Address5;                 
19973  00  =5      BYTE      ipv6Address6;                 
19974  00  =5      BYTE      ipv6Address7;                 
19975  00  =5      BYTE      ipv6Address8;                 
19976  00  =5      BYTE      ipv6Address9;                 
19977  00  =5      BYTE      ipv6Address10;                
19978  00  =5      BYTE      ipv6Address11;                
19979  00  =5      BYTE      ipv6Address12;                
19980  00  =5      BYTE      ipv6Address13;                
19981  00  =5      BYTE      ipv6Address14;                
19982  00  =5      BYTE      ipv6Address15;                
19983  00  =5      BYTE      ipv6Address16;                /* LSB */
19984  00  =5      BYTE      endpoint;                     /**/
19985  00  =5      BYTE      properties1;                  /* masked byte */
19986  00  =5      BYTE      resourceName1;                /* MSB */
19987  00  =5      BYTE      resourceName2;                
19988  00  =5      BYTE      resourceName3;                /* LSB */
19989  00  =5  } ZW_IP_ASSOCIATION_REPORT_3BYTE_FRAME;
19990  00  =5  
19991  00  =5  /************************************************************/
19992  00  =5  /* Ip Association Report 4byte command class structs */     
19993  00  =5  /************************************************************/
19994  00  =5  typedef struct _ZW_IP_ASSOCIATION_REPORT_4BYTE_FRAME_
19995  00  =5  {
19996  00  =5      BYTE      cmdClass;                     /* The command class */
19997  00  =5      BYTE      cmd;                          /* The command */
19998  00  =5      BYTE      groupingIdentifier;           /**/
19999  00  =5      BYTE      index;                        /**/
20000  00  =5      BYTE      actualNodes;                  /**/
20001  00  =5      BYTE      ipv6Address1;                 /* MSB */
20002  00  =5      BYTE      ipv6Address2;                 
20003  00  =5      BYTE      ipv6Address3;                 
20004  00  =5      BYTE      ipv6Address4;                 
20005  00  =5      BYTE      ipv6Address5;                 
20006  00  =5      BYTE      ipv6Address6;                 
20007  00  =5      BYTE      ipv6Address7;                 
20008  00  =5      BYTE      ipv6Address8;                 
20009  00  =5      BYTE      ipv6Address9;                 
20010  00  =5      BYTE      ipv6Address10;                
20011  00  =5      BYTE      ipv6Address11;                
20012  00  =5      BYTE      ipv6Address12;                
20013  00  =5      BYTE      ipv6Address13;                
20014  00  =5      BYTE      ipv6Address14;                
20015  00  =5      BYTE      ipv6Address15;                
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 352 

20016  00  =5      BYTE      ipv6Address16;                /* LSB */
20017  00  =5      BYTE      endpoint;                     /**/
20018  00  =5      BYTE      properties1;                  /* masked byte */
20019  00  =5      BYTE      resourceName1;                /* MSB */
20020  00  =5      BYTE      resourceName2;                
20021  00  =5      BYTE      resourceName3;                
20022  00  =5      BYTE      resourceName4;                /* LSB */
20023  00  =5  } ZW_IP_ASSOCIATION_REPORT_4BYTE_FRAME;
20024  00  =5  
20025  00  =5  /************************************************************/
20026  00  =5  /* Ip Association Remove 1byte command class structs */     
20027  00  =5  /************************************************************/
20028  00  =5  typedef struct _ZW_IP_ASSOCIATION_REMOVE_1BYTE_FRAME_
20029  00  =5  {
20030  00  =5      BYTE      cmdClass;                     /* The command class */
20031  00  =5      BYTE      cmd;                          /* The command */
20032  00  =5      BYTE      groupingIdentifier;           /**/
20033  00  =5      BYTE      ipv6Address1;                 /* MSB */
20034  00  =5      BYTE      ipv6Address2;                 
20035  00  =5      BYTE      ipv6Address3;                 
20036  00  =5      BYTE      ipv6Address4;                 
20037  00  =5      BYTE      ipv6Address5;                 
20038  00  =5      BYTE      ipv6Address6;                 
20039  00  =5      BYTE      ipv6Address7;                 
20040  00  =5      BYTE      ipv6Address8;                 
20041  00  =5      BYTE      ipv6Address9;                 
20042  00  =5      BYTE      ipv6Address10;                
20043  00  =5      BYTE      ipv6Address11;                
20044  00  =5      BYTE      ipv6Address12;                
20045  00  =5      BYTE      ipv6Address13;                
20046  00  =5      BYTE      ipv6Address14;                
20047  00  =5      BYTE      ipv6Address15;                
20048  00  =5      BYTE      ipv6Address16;                /* LSB */
20049  00  =5      BYTE      endpoint;                     /**/
20050  00  =5      BYTE      properties1;                  /* masked byte */
20051  00  =5      BYTE      resourceName1;                
20052  00  =5  } ZW_IP_ASSOCIATION_REMOVE_1BYTE_FRAME;
20053  00  =5  
20054  00  =5  /************************************************************/
20055  00  =5  /* Ip Association Remove 2byte command class structs */     
20056  00  =5  /************************************************************/
20057  00  =5  typedef struct _ZW_IP_ASSOCIATION_REMOVE_2BYTE_FRAME_
20058  00  =5  {
20059  00  =5      BYTE      cmdClass;                     /* The command class */
20060  00  =5      BYTE      cmd;                          /* The command */
20061  00  =5      BYTE      groupingIdentifier;           /**/
20062  00  =5      BYTE      ipv6Address1;                 /* MSB */
20063  00  =5      BYTE      ipv6Address2;                 
20064  00  =5      BYTE      ipv6Address3;                 
20065  00  =5      BYTE      ipv6Address4;                 
20066  00  =5      BYTE      ipv6Address5;                 
20067  00  =5      BYTE      ipv6Address6;                 
20068  00  =5      BYTE      ipv6Address7;                 
20069  00  =5      BYTE      ipv6Address8;                 
20070  00  =5      BYTE      ipv6Address9;                 
20071  00  =5      BYTE      ipv6Address10;                
20072  00  =5      BYTE      ipv6Address11;                
20073  00  =5      BYTE      ipv6Address12;                
20074  00  =5      BYTE      ipv6Address13;                
20075  00  =5      BYTE      ipv6Address14;                
20076  00  =5      BYTE      ipv6Address15;                
20077  00  =5      BYTE      ipv6Address16;                /* LSB */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 353 

20078  00  =5      BYTE      endpoint;                     /**/
20079  00  =5      BYTE      properties1;                  /* masked byte */
20080  00  =5      BYTE      resourceName1;                /* MSB */
20081  00  =5      BYTE      resourceName2;                /* LSB */
20082  00  =5  } ZW_IP_ASSOCIATION_REMOVE_2BYTE_FRAME;
20083  00  =5  
20084  00  =5  /************************************************************/
20085  00  =5  /* Ip Association Remove 3byte command class structs */     
20086  00  =5  /************************************************************/
20087  00  =5  typedef struct _ZW_IP_ASSOCIATION_REMOVE_3BYTE_FRAME_
20088  00  =5  {
20089  00  =5      BYTE      cmdClass;                     /* The command class */
20090  00  =5      BYTE      cmd;                          /* The command */
20091  00  =5      BYTE      groupingIdentifier;           /**/
20092  00  =5      BYTE      ipv6Address1;                 /* MSB */
20093  00  =5      BYTE      ipv6Address2;                 
20094  00  =5      BYTE      ipv6Address3;                 
20095  00  =5      BYTE      ipv6Address4;                 
20096  00  =5      BYTE      ipv6Address5;                 
20097  00  =5      BYTE      ipv6Address6;                 
20098  00  =5      BYTE      ipv6Address7;                 
20099  00  =5      BYTE      ipv6Address8;                 
20100  00  =5      BYTE      ipv6Address9;                 
20101  00  =5      BYTE      ipv6Address10;                
20102  00  =5      BYTE      ipv6Address11;                
20103  00  =5      BYTE      ipv6Address12;                
20104  00  =5      BYTE      ipv6Address13;                
20105  00  =5      BYTE      ipv6Address14;                
20106  00  =5      BYTE      ipv6Address15;                
20107  00  =5      BYTE      ipv6Address16;                /* LSB */
20108  00  =5      BYTE      endpoint;                     /**/
20109  00  =5      BYTE      properties1;                  /* masked byte */
20110  00  =5      BYTE      resourceName1;                /* MSB */
20111  00  =5      BYTE      resourceName2;                
20112  00  =5      BYTE      resourceName3;                /* LSB */
20113  00  =5  } ZW_IP_ASSOCIATION_REMOVE_3BYTE_FRAME;
20114  00  =5  
20115  00  =5  /************************************************************/
20116  00  =5  /* Ip Association Remove 4byte command class structs */     
20117  00  =5  /************************************************************/
20118  00  =5  typedef struct _ZW_IP_ASSOCIATION_REMOVE_4BYTE_FRAME_
20119  00  =5  {
20120  00  =5      BYTE      cmdClass;                     /* The command class */
20121  00  =5      BYTE      cmd;                          /* The command */
20122  00  =5      BYTE      groupingIdentifier;           /**/
20123  00  =5      BYTE      ipv6Address1;                 /* MSB */
20124  00  =5      BYTE      ipv6Address2;                 
20125  00  =5      BYTE      ipv6Address3;                 
20126  00  =5      BYTE      ipv6Address4;                 
20127  00  =5      BYTE      ipv6Address5;                 
20128  00  =5      BYTE      ipv6Address6;                 
20129  00  =5      BYTE      ipv6Address7;                 
20130  00  =5      BYTE      ipv6Address8;                 
20131  00  =5      BYTE      ipv6Address9;                 
20132  00  =5      BYTE      ipv6Address10;                
20133  00  =5      BYTE      ipv6Address11;                
20134  00  =5      BYTE      ipv6Address12;                
20135  00  =5      BYTE      ipv6Address13;                
20136  00  =5      BYTE      ipv6Address14;                
20137  00  =5      BYTE      ipv6Address15;                
20138  00  =5      BYTE      ipv6Address16;                /* LSB */
20139  00  =5      BYTE      endpoint;                     /**/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 354 

20140  00  =5      BYTE      properties1;                  /* masked byte */
20141  00  =5      BYTE      resourceName1;                /* MSB */
20142  00  =5      BYTE      resourceName2;                
20143  00  =5      BYTE      resourceName3;                
20144  00  =5      BYTE      resourceName4;                /* LSB */
20145  00  =5  } ZW_IP_ASSOCIATION_REMOVE_4BYTE_FRAME;
20146  00  =5  
20147  00  =5  /************************************************************/
20148  00  =5  /* Antitheft Set 1byte command class structs */             
20149  00  =5  /************************************************************/
20150  00  =5  typedef struct _ZW_ANTITHEFT_SET_1BYTE_FRAME_
20151  00  =5  {
20152  00  =5      BYTE      cmdClass;                     /* The command class */
20153  00  =5      BYTE      cmd;                          /* The command */
20154  00  =5      BYTE      properties1;                  /* masked byte */
20155  00  =5      BYTE      magicCode1;                   
20156  00  =5      BYTE      manufacturerId1;              /* MSB */
20157  00  =5      BYTE      manufacturerId2;              /* LSB */
20158  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20159  00  =5      BYTE      antiTheftHintByte1;           
20160  00  =5  } ZW_ANTITHEFT_SET_1BYTE_FRAME;
20161  00  =5  
20162  00  =5  /************************************************************/
20163  00  =5  /* Antitheft Set 2byte command class structs */             
20164  00  =5  /************************************************************/
20165  00  =5  typedef struct _ZW_ANTITHEFT_SET_2BYTE_FRAME_
20166  00  =5  {
20167  00  =5      BYTE      cmdClass;                     /* The command class */
20168  00  =5      BYTE      cmd;                          /* The command */
20169  00  =5      BYTE      properties1;                  /* masked byte */
20170  00  =5      BYTE      magicCode1;                   /* MSB */
20171  00  =5      BYTE      magicCode2;                   /* LSB */
20172  00  =5      BYTE      manufacturerId1;              /* MSB */
20173  00  =5      BYTE      manufacturerId2;              /* LSB */
20174  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20175  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20176  00  =5      BYTE      antiTheftHintByte2;           /* LSB */
20177  00  =5  } ZW_ANTITHEFT_SET_2BYTE_FRAME;
20178  00  =5  
20179  00  =5  /************************************************************/
20180  00  =5  /* Antitheft Set 3byte command class structs */             
20181  00  =5  /************************************************************/
20182  00  =5  typedef struct _ZW_ANTITHEFT_SET_3BYTE_FRAME_
20183  00  =5  {
20184  00  =5      BYTE      cmdClass;                     /* The command class */
20185  00  =5      BYTE      cmd;                          /* The command */
20186  00  =5      BYTE      properties1;                  /* masked byte */
20187  00  =5      BYTE      magicCode1;                   /* MSB */
20188  00  =5      BYTE      magicCode2;                   
20189  00  =5      BYTE      magicCode3;                   /* LSB */
20190  00  =5      BYTE      manufacturerId1;              /* MSB */
20191  00  =5      BYTE      manufacturerId2;              /* LSB */
20192  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20193  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20194  00  =5      BYTE      antiTheftHintByte2;           
20195  00  =5      BYTE      antiTheftHintByte3;           /* LSB */
20196  00  =5  } ZW_ANTITHEFT_SET_3BYTE_FRAME;
20197  00  =5  
20198  00  =5  /************************************************************/
20199  00  =5  /* Antitheft Set 4byte command class structs */             
20200  00  =5  /************************************************************/
20201  00  =5  typedef struct _ZW_ANTITHEFT_SET_4BYTE_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 355 

20202  00  =5  {
20203  00  =5      BYTE      cmdClass;                     /* The command class */
20204  00  =5      BYTE      cmd;                          /* The command */
20205  00  =5      BYTE      properties1;                  /* masked byte */
20206  00  =5      BYTE      magicCode1;                   /* MSB */
20207  00  =5      BYTE      magicCode2;                   
20208  00  =5      BYTE      magicCode3;                   
20209  00  =5      BYTE      magicCode4;                   /* LSB */
20210  00  =5      BYTE      manufacturerId1;              /* MSB */
20211  00  =5      BYTE      manufacturerId2;              /* LSB */
20212  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20213  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20214  00  =5      BYTE      antiTheftHintByte2;           
20215  00  =5      BYTE      antiTheftHintByte3;           
20216  00  =5      BYTE      antiTheftHintByte4;           /* LSB */
20217  00  =5  } ZW_ANTITHEFT_SET_4BYTE_FRAME;
20218  00  =5  
20219  00  =5  /************************************************************/
20220  00  =5  /* Antitheft Get command class structs */                   
20221  00  =5  /************************************************************/
20222  00  =5  typedef struct _ZW_ANTITHEFT_GET_FRAME_
20223  00  =5  {
20224  00  =5      BYTE      cmdClass;                     /* The command class */
20225  00  =5      BYTE      cmd;                          /* The command */
20226  00  =5  } ZW_ANTITHEFT_GET_FRAME;
20227  00  =5  
20228  00  =5  /************************************************************/
20229  00  =5  /* Antitheft Report 1byte command class structs */          
20230  00  =5  /************************************************************/
20231  00  =5  typedef struct _ZW_ANTITHEFT_REPORT_1BYTE_FRAME_
20232  00  =5  {
20233  00  =5      BYTE      cmdClass;                     /* The command class */
20234  00  =5      BYTE      cmd;                          /* The command */
20235  00  =5      BYTE      antiTheftProtectionStatus;    /**/
20236  00  =5      BYTE      manufacturerId1;              /* MSB */
20237  00  =5      BYTE      manufacturerId2;              /* LSB */
20238  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20239  00  =5      BYTE      antiTheftHintByte1;           
20240  00  =5  } ZW_ANTITHEFT_REPORT_1BYTE_FRAME;
20241  00  =5  
20242  00  =5  /************************************************************/
20243  00  =5  /* Antitheft Report 2byte command class structs */          
20244  00  =5  /************************************************************/
20245  00  =5  typedef struct _ZW_ANTITHEFT_REPORT_2BYTE_FRAME_
20246  00  =5  {
20247  00  =5      BYTE      cmdClass;                     /* The command class */
20248  00  =5      BYTE      cmd;                          /* The command */
20249  00  =5      BYTE      antiTheftProtectionStatus;    /**/
20250  00  =5      BYTE      manufacturerId1;              /* MSB */
20251  00  =5      BYTE      manufacturerId2;              /* LSB */
20252  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20253  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20254  00  =5      BYTE      antiTheftHintByte2;           /* LSB */
20255  00  =5  } ZW_ANTITHEFT_REPORT_2BYTE_FRAME;
20256  00  =5  
20257  00  =5  /************************************************************/
20258  00  =5  /* Antitheft Report 3byte command class structs */          
20259  00  =5  /************************************************************/
20260  00  =5  typedef struct _ZW_ANTITHEFT_REPORT_3BYTE_FRAME_
20261  00  =5  {
20262  00  =5      BYTE      cmdClass;                     /* The command class */
20263  00  =5      BYTE      cmd;                          /* The command */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 356 

20264  00  =5      BYTE      antiTheftProtectionStatus;    /**/
20265  00  =5      BYTE      manufacturerId1;              /* MSB */
20266  00  =5      BYTE      manufacturerId2;              /* LSB */
20267  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20268  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20269  00  =5      BYTE      antiTheftHintByte2;           
20270  00  =5      BYTE      antiTheftHintByte3;           /* LSB */
20271  00  =5  } ZW_ANTITHEFT_REPORT_3BYTE_FRAME;
20272  00  =5  
20273  00  =5  /************************************************************/
20274  00  =5  /* Antitheft Report 4byte command class structs */          
20275  00  =5  /************************************************************/
20276  00  =5  typedef struct _ZW_ANTITHEFT_REPORT_4BYTE_FRAME_
20277  00  =5  {
20278  00  =5      BYTE      cmdClass;                     /* The command class */
20279  00  =5      BYTE      cmd;                          /* The command */
20280  00  =5      BYTE      antiTheftProtectionStatus;    /**/
20281  00  =5      BYTE      manufacturerId1;              /* MSB */
20282  00  =5      BYTE      manufacturerId2;              /* LSB */
20283  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20284  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20285  00  =5      BYTE      antiTheftHintByte2;           
20286  00  =5      BYTE      antiTheftHintByte3;           
20287  00  =5      BYTE      antiTheftHintByte4;           /* LSB */
20288  00  =5  } ZW_ANTITHEFT_REPORT_4BYTE_FRAME;
20289  00  =5  
20290  00  =5  /************************************************************/
20291  00  =5  /* Antitheft Set 1byte V2 command class structs */          
20292  00  =5  /************************************************************/
20293  00  =5  typedef struct _ZW_ANTITHEFT_SET_1BYTE_V2_FRAME_
20294  00  =5  {
20295  00  =5      BYTE      cmdClass;                     /* The command class */
20296  00  =5      BYTE      cmd;                          /* The command */
20297  00  =5      BYTE      properties1;                  /* masked byte */
20298  00  =5      BYTE      magicCode1;                   
20299  00  =5      BYTE      manufacturerId1;              /* MSB */
20300  00  =5      BYTE      manufacturerId2;              /* LSB */
20301  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20302  00  =5      BYTE      antiTheftHintByte1;           
20303  00  =5  } ZW_ANTITHEFT_SET_1BYTE_V2_FRAME;
20304  00  =5  
20305  00  =5  /************************************************************/
20306  00  =5  /* Antitheft Set 2byte V2 command class structs */          
20307  00  =5  /************************************************************/
20308  00  =5  typedef struct _ZW_ANTITHEFT_SET_2BYTE_V2_FRAME_
20309  00  =5  {
20310  00  =5      BYTE      cmdClass;                     /* The command class */
20311  00  =5      BYTE      cmd;                          /* The command */
20312  00  =5      BYTE      properties1;                  /* masked byte */
20313  00  =5      BYTE      magicCode1;                   /* MSB */
20314  00  =5      BYTE      magicCode2;                   /* LSB */
20315  00  =5      BYTE      manufacturerId1;              /* MSB */
20316  00  =5      BYTE      manufacturerId2;              /* LSB */
20317  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20318  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20319  00  =5      BYTE      antiTheftHintByte2;           /* LSB */
20320  00  =5  } ZW_ANTITHEFT_SET_2BYTE_V2_FRAME;
20321  00  =5  
20322  00  =5  /************************************************************/
20323  00  =5  /* Antitheft Set 3byte V2 command class structs */          
20324  00  =5  /************************************************************/
20325  00  =5  typedef struct _ZW_ANTITHEFT_SET_3BYTE_V2_FRAME_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 357 

20326  00  =5  {
20327  00  =5      BYTE      cmdClass;                     /* The command class */
20328  00  =5      BYTE      cmd;                          /* The command */
20329  00  =5      BYTE      properties1;                  /* masked byte */
20330  00  =5      BYTE      magicCode1;                   /* MSB */
20331  00  =5      BYTE      magicCode2;                   
20332  00  =5      BYTE      magicCode3;                   /* LSB */
20333  00  =5      BYTE      manufacturerId1;              /* MSB */
20334  00  =5      BYTE      manufacturerId2;              /* LSB */
20335  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20336  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20337  00  =5      BYTE      antiTheftHintByte2;           
20338  00  =5      BYTE      antiTheftHintByte3;           /* LSB */
20339  00  =5  } ZW_ANTITHEFT_SET_3BYTE_V2_FRAME;
20340  00  =5  
20341  00  =5  /************************************************************/
20342  00  =5  /* Antitheft Set 4byte V2 command class structs */          
20343  00  =5  /************************************************************/
20344  00  =5  typedef struct _ZW_ANTITHEFT_SET_4BYTE_V2_FRAME_
20345  00  =5  {
20346  00  =5      BYTE      cmdClass;                     /* The command class */
20347  00  =5      BYTE      cmd;                          /* The command */
20348  00  =5      BYTE      properties1;                  /* masked byte */
20349  00  =5      BYTE      magicCode1;                   /* MSB */
20350  00  =5      BYTE      magicCode2;                   
20351  00  =5      BYTE      magicCode3;                   
20352  00  =5      BYTE      magicCode4;                   /* LSB */
20353  00  =5      BYTE      manufacturerId1;              /* MSB */
20354  00  =5      BYTE      manufacturerId2;              /* LSB */
20355  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20356  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20357  00  =5      BYTE      antiTheftHintByte2;           
20358  00  =5      BYTE      antiTheftHintByte3;           
20359  00  =5      BYTE      antiTheftHintByte4;           /* LSB */
20360  00  =5  } ZW_ANTITHEFT_SET_4BYTE_V2_FRAME;
20361  00  =5  
20362  00  =5  /************************************************************/
20363  00  =5  /* Antitheft Get V2 command class structs */                
20364  00  =5  /************************************************************/
20365  00  =5  typedef struct _ZW_ANTITHEFT_GET_V2_FRAME_
20366  00  =5  {
20367  00  =5      BYTE      cmdClass;                     /* The command class */
20368  00  =5      BYTE      cmd;                          /* The command */
20369  00  =5  } ZW_ANTITHEFT_GET_V2_FRAME;
20370  00  =5  
20371  00  =5  /************************************************************/
20372  00  =5  /* Antitheft Report 1byte V2 command class structs */       
20373  00  =5  /************************************************************/
20374  00  =5  typedef struct _ZW_ANTITHEFT_REPORT_1BYTE_V2_FRAME_
20375  00  =5  {
20376  00  =5      BYTE      cmdClass;                     /* The command class */
20377  00  =5      BYTE      cmd;                          /* The command */
20378  00  =5      BYTE      antiTheftProtectionStatus;    /**/
20379  00  =5      BYTE      manufacturerId1;              /* MSB */
20380  00  =5      BYTE      manufacturerId2;              /* LSB */
20381  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20382  00  =5      BYTE      antiTheftHintByte1;           
20383  00  =5  } ZW_ANTITHEFT_REPORT_1BYTE_V2_FRAME;
20384  00  =5  
20385  00  =5  /************************************************************/
20386  00  =5  /* Antitheft Report 2byte V2 command class structs */       
20387  00  =5  /************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 358 

20388  00  =5  typedef struct _ZW_ANTITHEFT_REPORT_2BYTE_V2_FRAME_
20389  00  =5  {
20390  00  =5      BYTE      cmdClass;                     /* The command class */
20391  00  =5      BYTE      cmd;                          /* The command */
20392  00  =5      BYTE      antiTheftProtectionStatus;    /**/
20393  00  =5      BYTE      manufacturerId1;              /* MSB */
20394  00  =5      BYTE      manufacturerId2;              /* LSB */
20395  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20396  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20397  00  =5      BYTE      antiTheftHintByte2;           /* LSB */
20398  00  =5  } ZW_ANTITHEFT_REPORT_2BYTE_V2_FRAME;
20399  00  =5  
20400  00  =5  /************************************************************/
20401  00  =5  /* Antitheft Report 3byte V2 command class structs */       
20402  00  =5  /************************************************************/
20403  00  =5  typedef struct _ZW_ANTITHEFT_REPORT_3BYTE_V2_FRAME_
20404  00  =5  {
20405  00  =5      BYTE      cmdClass;                     /* The command class */
20406  00  =5      BYTE      cmd;                          /* The command */
20407  00  =5      BYTE      antiTheftProtectionStatus;    /**/
20408  00  =5      BYTE      manufacturerId1;              /* MSB */
20409  00  =5      BYTE      manufacturerId2;              /* LSB */
20410  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20411  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20412  00  =5      BYTE      antiTheftHintByte2;           
20413  00  =5      BYTE      antiTheftHintByte3;           /* LSB */
20414  00  =5  } ZW_ANTITHEFT_REPORT_3BYTE_V2_FRAME;
20415  00  =5  
20416  00  =5  /************************************************************/
20417  00  =5  /* Antitheft Report 4byte V2 command class structs */       
20418  00  =5  /************************************************************/
20419  00  =5  typedef struct _ZW_ANTITHEFT_REPORT_4BYTE_V2_FRAME_
20420  00  =5  {
20421  00  =5      BYTE      cmdClass;                     /* The command class */
20422  00  =5      BYTE      cmd;                          /* The command */
20423  00  =5      BYTE      antiTheftProtectionStatus;    /**/
20424  00  =5      BYTE      manufacturerId1;              /* MSB */
20425  00  =5      BYTE      manufacturerId2;              /* LSB */
20426  00  =5      BYTE      antiTheftHintNumberBytes;     /**/
20427  00  =5      BYTE      antiTheftHintByte1;           /* MSB */
20428  00  =5      BYTE      antiTheftHintByte2;           
20429  00  =5      BYTE      antiTheftHintByte3;           
20430  00  =5      BYTE      antiTheftHintByte4;           /* LSB */
20431  00  =5  } ZW_ANTITHEFT_REPORT_4BYTE_V2_FRAME;
20432  00  =5  
20433  00  =5  
20434  00  =5  
20435  00  =5  /**********************************************************************/
20436  00  =5  /* Command class structs use to encapsulating other commands          */
20437  00  =5  /* Do not define these commands in ZW_FRAME_COLLECTION_MACRO          */
20438  00  =5  /* Do not include commands defined in ZW_FRAME_COLLECTION_MACRO below */
20439  00  =5  /**********************************************************************/
20440  00  =5  typedef union _ALL_EXCEPT_ENCAP
20441  00  =5  {
20442  00  =5  ZW_FRAME_COLLECTION_MACRO0
20443  00  =5  ZW_FRAME_COLLECTION_MACRO1
20444  00  =5  ZW_FRAME_COLLECTION_MACRO2
20445  00  =5  ZW_FRAME_COLLECTION_MACRO3
20446  00  =5  } ALL_EXCEPT_ENCAP;
20447  00  =5  
20448  00  =5  typedef struct _ZW_MULTI_COMMAND_ENCAP_FRAME_
20449  00  =5  {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 359 

20450  00  =5    BYTE        cmdClass;            /* The command class */
20451  00  =5    BYTE        cmd;                 /* The command */
20452  00  =5    BYTE        numberOfCommands;
20453  00  =5    BYTE        commandLength;
20454  00  =5    ALL_EXCEPT_ENCAP     encapFrame;
20455  00  =5  } ZW_MULTI_COMMAND_ENCAP_FRAME;
20456  00  =5  
20457  00  =5  typedef struct _ZW_COMPOSITE_CMD_ENCAP_FRAME_
20458  00  =5  {
20459  00  =5    BYTE        cmdClass;            /* The command class */
20460  00  =5    BYTE        cmd;                 /* The command */
20461  00  =5    BYTE        endPointMask1;       /* End point mask 1 */
20462  00  =5    BYTE        endPointMask2;       /* End point mask 2 */
20463  00  =5    ALL_EXCEPT_ENCAP     encapFrame;
20464  00  =5  } ZW_COMPOSITE_CMD_ENCAP_FRAME;
20465  00  =5  
20466  00  =5  typedef struct _ZW_COMPOSITE_REPLY_ENCAP_FRAME_
20467  00  =5  {
20468  00  =5    BYTE        cmdClass;            /* The command class */
20469  00  =5    BYTE        cmd;                 /* The command */
20470  00  =5    BYTE        endPoint;            /* Bit7-5=Reserved and Bit0-4=End Point */
20471  00  =5    ALL_EXCEPT_ENCAP     encapFrame;
20472  00  =5  } ZW_COMPOSITE_REPLY_ENCAP_FRAME;
20473  00  =5  
20474  00  =5  typedef struct _ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME_
20475  00  =5  {
20476  00  =5    BYTE        cmdClass;            /* The command class */
20477  00  =5    BYTE        cmd;                 /* The command */
20478  00  =5    BYTE        instance;            /* The instance to access */
20479  00  =5    ALL_EXCEPT_ENCAP     encapFrame;
20480  00  =5  } ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME;
20481  00  =5  
20482  00  =5  typedef struct _ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME_
20483  00  =5  {
20484  00  =5      BYTE      cmdClass;                     /* The command class */
20485  00  =5      BYTE      cmd;                          /* The command */
20486  00  =5      BYTE      properties1;                  /* masked byte */
20487  00  =5      BYTE      properties2;                  /* masked byte */
20488  00  =5    ALL_EXCEPT_ENCAP     encapFrame;
20489  00  =5  } ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME;
20490  00  =5  
20491  00  =5  typedef struct _ZW_SECURITY_MESSAGE_ENCAP_FRAME_
20492  00  =5  {
20493  00  =5    BYTE        cmdClass;            /* The command class */
20494  00  =5    BYTE        cmd;                 /* The command */
20495  00  =5    BYTE        initVectorByte1;     /* The initialization vector byte 1 (MSB) */
20496  00  =5    BYTE        initVectorByte2;     /* The initialization vector byte 2  */
20497  00  =5    BYTE        initVectorByte3;     /* The initialization vector byte 3 */
20498  00  =5    BYTE        initVectorByte4;     /* The initialization vector byte 4 */
20499  00  =5    BYTE        initVectorByte5;     /* The initialization vector byte 5 */
20500  00  =5    BYTE        initVectorByte6;     /* The initialization vector byte 6 */
20501  00  =5    BYTE        initVectorByte7;     /* The initialization vector byte 7 */
20502  00  =5    BYTE        initVectorByte8;     /* The initialization vector byte 8 (LSB) */
20503  00  =5    BYTE        securityEncapMessage[29];
20504  00  =5    BYTE        receiverNonceIdent;
20505  00  =5    BYTE        messageAuthenticationCodeByte1; /* The Authentication code byte 1 (MSB) */
20506  00  =5    BYTE        messageAuthenticationCodeByte2; /* The Authentication code byte 2 */
20507  00  =5    BYTE        messageAuthenticationCodeByte3; /* The Authentication code byte 3 */
20508  00  =5    BYTE        messageAuthenticationCodeByte4; /* The Authentication code byte 4 */
20509  00  =5    BYTE        messageAuthenticationCodeByte5; /* The Authentication code byte 5 */
20510  00  =5    BYTE        messageAuthenticationCodeByte6; /* The Authentication code byte 6 */
20511  00  =5    BYTE        messageAuthenticationCodeByte7; /* The Authentication code byte 7 */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 360 

20512  00  =5    BYTE        messageAuthenticationCodeByte8; /* The Authentication code byte 8 (LSB) */
20513  00  =5  } ZW_SECURITY_MESSAGE_ENCAP_FRAME;
20514  00  =5  
20515  00  =5  /************************************************************/
20516  00  =5  /* Union of all command classes                             */
20517  00  =5  /************************************************************/
20518  00  =5  typedef union _ZW_APPLICATION_TX_BUFFER_
20519  00  =5  {
20520  00  =5    ZW_MULTI_COMMAND_ENCAP_FRAME           ZW_MultiCommandEncapFrame;
20521  00  =5    ZW_COMPOSITE_CMD_ENCAP_FRAME           ZW_CompositeCmdEncapFrame;
20522  00  =5    ZW_COMPOSITE_REPLY_ENCAP_FRAME         ZW_CompositeReplyEncapFrame;
20523  00  =5    ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME      ZW_MultiInstanceCmdEncapFrame;
20524  00  =5    ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME    ZW_MultiChannelCmdEncapV2Frame;
20525  00  =5  ZW_FRAME_COLLECTION_MACRO0
20526  00  =5  ZW_FRAME_COLLECTION_MACRO1
20527  00  =5  ZW_FRAME_COLLECTION_MACRO2
20528  00  =5  ZW_FRAME_COLLECTION_MACRO3
20529  00  =5  } ZW_APPLICATION_TX_BUFFER;
20530  00  =5  
20531  00  =5  /************************************************************/
20532  00  =5  /* Union of all command classes with room for a full        */
20533  00  =5  /* meta data frame                                          */
20534  00  =5  /************************************************************/
20535  00  =5  typedef union _ZW_APPLICATION_META_TX_BUFFER_
20536  00  =5  {
20537  00  =5    ZW_MULTI_COMMAND_ENCAP_FRAME           ZW_MultiCommandEncapFrame;
20538  00  =5    ZW_COMPOSITE_CMD_ENCAP_FRAME           ZW_CompositeCmdEncapFrame;
20539  00  =5    ZW_COMPOSITE_REPLY_ENCAP_FRAME         ZW_CompositeReplyEncapFrame;
20540  00  =5    ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME      ZW_MultiInstanceCmdEncapFrame;
20541  00  =5    ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME    ZW_MultiChannelCmdEncapV2Frame;
20542  00  =5  ZW_FRAME_COLLECTION_MACRO0
20543  00  =5  ZW_FRAME_COLLECTION_MACRO1
20544  00  =5  ZW_FRAME_COLLECTION_MACRO2
20545  00  =5  ZW_FRAME_COLLECTION_MACRO3
20546  00  =5    BYTE                                    bPadding[META_DATA_MAX_DATA_SIZE];
20547  00  =5  } ZW_APPLICATION_META_TX_BUFFER;
20548  00  =5  
20549  00  =5  
20550  00  =5  #endif
  46      =4  
  47      =4  /* ZW_GetProtocolStatus return value masks */
  48      =4  #define ZW_PROTOCOL_STATUS_ROUTING  0x01
  49      =4  #define ZW_PROTOCOL_STATUS_SUC      0x02
  50      =4  
  51      =4  /* ZW_LIBRARY_TYPEs one of these defines are returned when requesting */
  52      =4  /* Library type */
  53      =4  #define ZW_LIB_CONTROLLER_STATIC  0x01
  54      =4  #define ZW_LIB_CONTROLLER         0x02
  55      =4  #define ZW_LIB_SLAVE_ENHANCED     0x03
  56      =4  #define ZW_LIB_SLAVE              0x04
  57      =4  #define ZW_LIB_INSTALLER          0x05
  58      =4  #define ZW_LIB_SLAVE_ROUTING      0x06
  59      =4  #define ZW_LIB_CONTROLLER_BRIDGE  0x07
  60      =4  #define ZW_LIB_DUT                0x08
  61      =4  
  62      =4  #if defined(ZW020x) || defined(ZW030x)
  63      =4  /* the input parameters */
  64      =4  #define ZW_INT0     0x00
  65      =4  #define ZW_INT1     0x01
  66      =4  
  67      =4  /*This bit mask used as paramters for the API ZW_SetSleepMode to indicate which interrupt to mask out*/
  68      =4  #define ZW_INT_MASK_EXT1       0x02
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 361 

  69      =4  
  70      =4  #endif
  71      =4  
  72      =4  
  73      =4  /* Z-Wave Library Chip type */
  74      =4  
  75      =4  #ifdef ZW020x
  79      =4  
  80      =4  #ifdef ZW030x
  81      =4  #ifdef ZW020x
  85      =4  #define ZW_CHIP_TYPE              3
  86      =4  #define ZW_CHIP_REVISION          1
  87      =4  #endif
  88      =4  
  89      =4  #ifdef ZW030x
  90      =4  /*The valid vlaues of teh ApplicationRfNotify API*/
  91      =4  #define ZW_RF_TX_MODE       1   /*RF switch from Rx to Tx mode, the modualtor is satrted and the PA is on*
             -/
  92      =4  #define ZW_RF_RX_MODE       2   /*RF switch from Tx to Rx mode, the demodulator is started*/
  93      =4  #define ZW_RF_PA_ON         4   /*RF is in Tx mode, the PA is turned on*/
  94      =4  #define ZW_RF_PA_OFF        8   /*RF is in Tx mode, the PA is turned off   */
  95      =4  #endif
  96      =4  
  97      =4  /****************************************************************************/
  98      =4  /*                     EXPORTED TYPES and DEFINITIONS                       */
  99      =4  /****************************************************************************/
 100      =4  
 101      =4  /* Node type structure used in ApplicationNodeInformation */
 102      =4  typedef struct _APPL_NODE_TYPE_
 103      =4  {
 104      =4    BYTE generic;
 105      =4    BYTE specific;
 106      =4  } APPL_NODE_TYPE;
 107      =4  
 108      =4  
 109      =4  /* valid powerlevel values used in ZW_RF_POWERLEVEL_SET and ZW_RF_POWERLEVEL_GET */
 110      =4  enum
 111      =4  {
 112      =4    normalPower = 0,
 113      =4    minus1dBm,
 114      =4    minus2dBm,
 115      =4    minus3dBm,
 116      =4    minus4dBm,
 117      =4    minus5dBm,
 118      =4    minus6dBm,
 119      =4    minus7dBm,
 120      =4    minus8dBm,
 121      =4    minus9dBm,
 122      =4    miniumPower = minus9dBm
 123      =4  };
 124      =4  
 125      =4  
 126      =4  /*===============================   ZW_Poll   ================================
 127      =4  **    Z-Wave low level poll function.
 128      =4  **    This function must be called while waiting on HW ready states and
 129      =4  **    when executing time consuming functions.
 130      =4  **
 131      =4  **    Not to lose RF receive data the time limit is 3/4 bit time, which is
 132      =4  **    around 70 usec at 9600 bps (500 clockcycles). Interrupt must not be
 133      =4  **    disabled more than 1/12 bit time which is around 8 usec (40 clock cycles).
 134      =4  **
 135      =4  **
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 362 

 136      =4  ** void       RET Nothing
 137      =4  ** ZW_Poll( void );  IN  Nothing
 138      =4  **--------------------------------------------------------------------------*/
 139      =4  #define ZW_POLL() ZW_Poll()
 140      =4  
 141      =4  
 142      =4  /*===============================   ZW_Version   ============================
 143      =4  **    Copy Z-Wave basis version from code memory (Flash) to data memory (SRAM)
 144      =4  **    destintaion should be in XDATA
 145      =4  ** extern void         RET  Nothing
 146      =4  ** ZW_Version(
 147      =4  ** XBYTE *buffer);      IN Destination pointer in RAM
 148      =4  **--------------------------------------------------------------------------*/
 149      =4  #define ZW_VERSION(buf) ZW_Version(buf)
 150      =4  
 151      =4  
 152      =4  /*============================   ZW_Type_Library   ===========================
 153      =4  ** Get Z-Wave library type
 154      =4  **
 155      =4  ** extern BYTE            RET  Z-Wave library type (ZW_LIB_xxxx)
 156      =4  ** ZW_Type_Library(void);
 157      =4  **--------------------------------------------------------------------------*/
 158      =4  #define ZW_TYPE_LIBRARY() ZW_Type_Library()
 159      =4  
 160      =4  
 161      =4  /*===========================   SendNodeInformation   =======================
 162      =4  **    Create and transmit a node informations frame
 163      =4  **
 164      =4  ** void                           RET  FALSE if transmitter queue overflow
 165      =4  ** SendNodeInformation(
 166      =4  ** BYTE node                      IN  Destination Node ID (0xff = broadcast)
 167      =4  ** BYTE txOptions,                IN  Transmit option flags
 168      =4  ** void (*completedFunc)(BYTE));  IN  Transmit completed call back function
 169      =4  **--------------------------------------------------------------------------*/
 170      =4  #define ZW_SEND_NODE_INFO(node,option,func) ZW_SendNodeInformation(node,option,func)
 171      =4  
 172      =4  
 173      =4  /*===============================   ZW_SetRFReceiveMode   ===================
 174      =4  **    Initialize the Z-Wave RF chip.
 175      =4  **    Mode on:  Set the RF chip in receive mode and starts the data sampling.
 176      =4  **    Mode off: Set the RF chip in power down mode.
 177      =4  **
 178      =4  ** BYTE           RET TRUE if operation was executed successfully, FALSE if not
 179      =4  ** ZW_SetRFReceiveMode(
 180      =4  ** BYTE mode );   IN  TRUE: On; FALSE: Off mode
 181      =4  **--------------------------------------------------------------------------*/
 182      =4  #define ZW_SET_RX_MODE(mode) ZW_SetRFReceiveMode(mode)
 183      =4  
 184      =4  
 185      =4  /*===============================   ZW_Random   =============================
 186      =4  **  Pseudo-random number function
 187      =4  **
 188      =4  **--------------------------------------------------------------------------*/
 189      =4  #define ZW_RANDOM() ZW_Random()
 190      =4  
 191      =4  
 192      =4  /*======================   ZW_RFPowerlevelRediscoverySet  ======================
 193      =4  **    Set the powerlevel used when doing neighbour discovery
 194      =4  **
 195      =4  **          normalPower - Max power possible
 196      =4  **          minus1dBm   - normalPower - 1dB
 197      =4  **          minus2dBm   - normalPower - 2dB
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 363 

 198      =4  **          minus3dBm   - normalPower - 3dB
 199      =4  **          minus4dBm   - normalPower - 4dB
 200      =4  **          minus5dBm   - normalPower - 5dB
 201      =4  **          minus6dBm   - normalPower - 6dB
 202      =4  **          minus7dBm   - normalPower - 7dB
 203      =4  **          minus8dBm   - normalPower - 8dB
 204      =4  **          minus9dBm   - normalPower - 9dB
 205      =4  **
 206      =4  **--------------------------------------------------------------------------*/
 207      =4  #define ZW_RF_POWER_LEVEL_REDISCOVERY_SET(POWERLEVEL)  ZW_RFPowerlevelRediscoverySet(POWERLEVEL)
 208      =4  
 209      =4  
 210      =4  /*==========================   ZW_RFPowerLevelSet  ==========================
 211      =4  **    Set the powerlevel used in RF transmitting.
 212      =4  **    Valid powerlevel values are :
 213      =4  **
 214      =4  **          normalPower - Max power possible
 215      =4  **          minus1dBm   - normalPower - 1dB
 216      =4  **          minus2dBm   - normalPower - 2dB
 217      =4  **          minus3dBm   - normalPower - 3dB
 218      =4  **          minus4dBm   - normalPower - 4dB
 219      =4  **          minus5dBm   - normalPower - 5dB
 220      =4  **          minus6dBm   - normalPower - 6dB
 221      =4  **          minus7dBm   - normalPower - 7dB
 222      =4  **          minus8dBm   - normalPower - 8dB
 223      =4  **          minus9dBm   - normalPower - 9dB
 224      =4  **
 225      =4  **--------------------------------------------------------------------------*/
 226      =4  #define ZW_RF_POWERLEVEL_SET(POWERLEVEL) ZW_RFPowerLevelSet(POWERLEVEL)
 227      =4  
 228      =4  
 229      =4  /*==========================   ZW_RFPowerLevelGet  ==========================
 230      =4  **    Get the current powerlevel used in RF transmitting.
 231      =4  **    Possible powerlevel return values are :
 232      =4  **
 233      =4  **          normalPower - Max power possible
 234      =4  **          minus1dBm   - normalPower - 1dB
 235      =4  **          minus2dBm   - normalPower - 2dB
 236      =4  **          minus3dBm   - normalPower - 3dB
 237      =4  **          minus4dBm   - normalPower - 4dB
 238      =4  **          minus5dBm   - normalPower - 5dB
 239      =4  **          minus6dBm   - normalPower - 6dB
 240      =4  **          minus7dBm   - normalPower - 7dB
 241      =4  **          minus8dBm   - normalPower - 8dB
 242      =4  **          minus9dBm   - normalPower - 9dB
 243      =4  **
 244      =4  **--------------------------------------------------------------------------*/
 245      =4  #define ZW_RF_POWERLEVEL_GET() ZW_RFPowerLevelGet()
 246      =4  
 247      =4  
 248      =4  /*==========================   ZW_SEND_TEST_FRAME  ==========================
 249      =4  **    Send a test frame to specified nodeID, power is previously
 250      =4  **    set by calling ZW_RF_POWERLEVEL_SET.
 251      =4  **    Valid power index values are :
 252      =4  **
 253      =4  **          normalPower - Max power possible
 254      =4  **          minus1dBm   - normalPower - 1dB
 255      =4  **          minus2dBm   - normalPower - 2dB
 256      =4  **          minus3dBm   - normalPower - 3dB
 257      =4  **          minus4dBm   - normalPower - 4dB
 258      =4  **          minus5dBm   - normalPower - 5dB
 259      =4  **          minus6dBm   - normalPower - 6dB
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 364 

 260      =4  **          minus7dBm   - normalPower - 7dB
 261      =4  **          minus8dBm   - normalPower - 8dB
 262      =4  **          minus9dBm   - normalPower - 9dB
 263      =4  **
 264      =4  **--------------------------------------------------------------------------*/
 265      =4  #define ZW_SEND_TEST_FRAME(nodeID, power, func) ZW_SendTestFrame(nodeID, power, func)
 266      =4  
 267      =4  
 268      =4  /*===========================   ZW_GetProtocolStatus   ==========================
 269      =4  **    Reprort the status of the protocol
 270      =4  **   The function return a mask telling which protocol function is currently running
 271      =4  **   possible MASK values:
 272      =4  **   ZW_PROTOCOL_STATUS_ROUTING:    protocol is analysing the routing table.
 273      =4  **   ZW_PROTOCOL_STATUS_SUC:        SUC is sending pending updates.
 274      =4  **
 275      =4  **   return value of ZERO means protocol is idle.
 276      =4  **--------------------------------------------------------------------------*/
 277      =4  #define ZW_GET_PROTOCOL_STATUS()   ZW_GetProtocolStatus()
 278      =4  
 279      =4  
 280      =4  #if defined(ZW020x) || defined(ZW030x)
 281      =4  /*===============================   ZW_SET_EXT_INT_LEVEL   =========================================
 282      =4  **    Set the trigger level for external interrupt 0 or 1
 283      =4  **---------------------------------------------------------------------------------------------*/
 284      =4  #define ZW_SET_EXT_INT_LEVEL(SRC, TRIGGER_LEVEL)  ZW_SetExtIntLevel(SRC, TRIGGER_LEVEL)
 285      =4  #endif
 286      =4  
 287      =4  
 288      =4  /*============================= ZW_WATCHDOG_ENABLE =========================================
 289      =4  **  Enable the watch dog.
 290      =4  **  parameters:
 291      =4  **----------------------------------------------------------------------------*/
 292      =4  #define ZW_WATCHDOG_ENABLE  ZW_WatchDogEnable()
 293      =4  
 294      =4  
 295      =4  /*============================= ZW_WATCHDOG_DISABLE =========================================
 296      =4  **  Disable the watch dog.
 297      =4  **  parameters:
 298      =4  **----------------------------------------------------------------------------*/
 299      =4  #define ZW_WATCHDOG_DISABLE ZW_WatchDogDisable()
 300      =4  
 301      =4  
 302      =4  /*============================= ZW_WATCHDOG_KICK =========================================
 303      =4  **  Kick the watch dog to restarted.
 304      =4  **  parameters:
 305      =4  **----------------------------------------------------------------------------*/
 306      =4  #define ZW_WATCHDOG_KICK  ZW_WatchDogKick()
 307      =4  
 308      =4  /*============================   ZW_SET_PROMISCUOUS_MODE   ======================
 309      =4  **
 310      =4  **  Function description.
 311      =4  **   Enable / disable the installer library promiscuous mode.
 312      =4  **   When promiscuous mode is enabled, all application layer frames will be passed
 313      =4  **   to the application layer regardless if the frames are addressed to another node.
 314      =4  **   When promiscuous mode is disabled, only application frames addressed to the node will be passed
 315      =4  **   to the application layer.
 316      =4  **
 317      =4  **  Side effects:
 318      =4  **
 319      =4  **--------------------------------------------------------------------------*/
 320      =4  #define ZW_SET_PROMISCUOUS_MODE(state)   ZW_SetPromiscuousMode(state)
 321      =4  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 365 

 322      =4  
 323      =4  /*============================== ZW_GetRandomWord ===========================
 324      =4  **    Get a true random word
 325      =4  **
 326      =4  **  Side effects:
 327      =4  **
 328      =4  **--------------------------------------------------------------------------*/
 329      =4  #define ZW_GET_RANDOM_WORD(randomWord, bResetRadio)   ZW_GetRandomWord(randomWord, bResetRadio)
 330      =4  
 331      =4  
 332      =4  /****************************************************************************/
 333      =4  /*                              EXPORTED DATA                               */
 334      =4  /****************************************************************************/
 335      =4  
 336      =4  /*==============================   ApplicationInitHW   ======================
 337      =4  **    Initialize non Z-Wave used hardware.
 338      =4  **    Called by the Z-Wave main function doing system startup
 339      =4  **
 340      =4  **    This is an application function
 341      =4  **
 342      =4  **--------------------------------------------------------------------------*/
 343      =4  extern  BYTE        /*RET TRUE if HW initialized */
 344      =4  ApplicationInitHW(
 345      =4    BYTE bWakeupReason  /* Reason for the powerup of the chip */
 346      =4  );
 347      =4  
 348      =4  
 349      =4  /* bWakeupReason can have the following values */
 350      =4  #define ZW_WAKEUP_RESET   0   /* Woken up by reset or external int */
 351      =4  #define ZW_WAKEUP_WUT     1   /* Woken up by the WUT timer */
 352      =4  #define ZW_WAKEUP_SENSOR  2   /* Woken up by a wakeup beam */
 353      =4  
 354      =4  
 355      =4  
 356      =4  /*==========================   ApplicationInitSW   ==========================
 357      =4  **    Initialize application software
 358      =4  **    Called by the Z-Wave main function doing system startup
 359      =4  **
 360      =4  **--------------------------------------------------------------------------*/
 361      =4  extern  BYTE        /*RET TRUE if application software initialized */
 362      =4  ApplicationInitSW(
 363      =4    void);            /* IN Nothing */
 364      =4  
 365      =4  
 366      =4  /*===========================   ApplicationPoll   ===========================
 367      =4  **    Application poll Function.
 368      =4  **    Called from the Z-Wave main loop.
 369      =4  **
 370      =4  **--------------------------------------------------------------------------*/
 371      =4  extern  void           /*RET Nothing */
 372      =4  ApplicationPoll(void); /* IN Nothing */
 373      =4  
 374      =4  
 375      =4  /*===========================   ApplicationTestPoll   ===========================
 376      =4  **    Application poll Function.
 377      =4  **    Called from the Z-Wave main loop when test mode is active.
 378      =4  **
 379      =4  **--------------------------------------------------------------------------*/
 380      =4  extern  void               /*RET Nothing */
 381      =4  ApplicationTestPoll(void); /* IN Nothing */
 382      =4  
 383      =4  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 366 

 384      =4  #ifndef ZW_CONTROLLER_BRIDGE
 385      =4   /*===========================   ApplicationCommandHandler   =================
 386      =4  **    The Application command handler function will be called from the Z-Wave
 387      =4  **    command handler when an application command or request has been received.
 388      =4  **
 389      =4  **--------------------------------------------------------------------------*/
 390      =4  extern  void    /*RET Nothing  */
 391      =4  ApplicationCommandHandler(
 392      =4    BYTE  rxStatus,                   /* IN  Frame header info */
 393      =4  #if defined(ZW_CONTROLLER) && !defined(ZW_CONTROLLER_STATIC) && !defined(ZW_CONTROLLER_BRIDGE)
 396      =4    BYTE  sourceNode,                 /* IN  Command sender Node ID */
 397      =4    ZW_APPLICATION_TX_BUFFER *pCmd,   /* IN  Payload from the received frame, the union */
 398      =4                                      /*      should be used to access the fields */
 399      =4    BYTE   cmdLength);                /* IN  Number of command bytes including the command */
 400      =4  #endif  /* ZW_CONTROLLER_BRIDGE */
 401      =4  
 402      =4  
 403      =4  #ifdef ZW030x
 404      =4  /*===========================   ApplicationRfNotify   ===========================
 405      =4  **    Notify the application when the radio switch state
 406      =4  **    Called from the Z-Wave PROTOCOL When radio switch from Rx to Tx or from Tx to Rx
 407      =4  **    or when the modulator PA (Power Amplifier) turn on/off
 408      =4  **
 409      =4  **    IN state of the RF, the available values is as follow:
 410      =4  **       ZW_RF_TX_MODE: The RF switch from the Rx to Tx mode, the modualtor is started and PA is on
 411      =4  **       ZW_RF_PA_ON: The RF in the Tx mode, the modualtor PA is turned on
 412      =4  **       ZW_RF_PA_OFF: the Rf in the Tx mode, the modulator PA is turned off
 413      =4  **       ZW_RF_RX_MODE: The RF switch from Tx to Rx mode, the demodulator is started.
 414      =4  **---------------------------------------------------------------------------------*/
 415      =4  extern  void          /*RET Nothing */
 416      =4  ApplicationRfNotify(
 417      =4    BYTE rfState);
 418      =4  #endif
 419      =4  
 420      =4  
 421      =4  /*============================================================================
 422      =4  **    Defines for ApplicationNodeInformation field deviceOptionMask
 423      =4  **--------------------------------------------------------------------------*/
 424      =4  #define APPLICATION_NODEINFO_NOT_LISTENING            0x00
 425      =4  #define APPLICATION_NODEINFO_LISTENING                0x01
 426      =4  #define APPLICATION_NODEINFO_OPTIONAL_FUNCTIONALITY   0x02
 427      =4  #define APPLICATION_FREQ_LISTENING_MODE_1000ms        0x10
 428      =4  #ifdef ZW030x
 429      =4  #define APPLICATION_FREQ_LISTENING_MODE_250ms         0x20
 430      =4  #endif
 431      =4  
 432      =4  
 433      =4  /*==========================   ApplicationNodeInformation   =================
 434      =4  **    Request Application Node information.
 435      =4  **    Called by the the Z-Wave application layer before transmitting a
 436      =4  **    "Node Information" frame.
 437      =4  **
 438      =4  **--------------------------------------------------------------------------*/
 439      =4  extern  void                /*RET Nothing */
 440      =4  ApplicationNodeInformation(
 441      =4    BYTE      *deviceOptionsMask,  /*OUT Bitmask with application options     */
 442      =4    APPL_NODE_TYPE *nodeType, /*OUT Generic and Specific Device Type          */
 443      =4    BYTE      **nodeParm,     /*OUT Device parameter buffer pointer           */
 444      =4    BYTE      *parmLength);   /*OUT Number of Device parameter bytes          */
 445      =4  
 446      =4  
 447      =4  /****************************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 367 

 448      =4  /*                           EXPORTED FUNCTIONS                             */
 449      =4  /*                 Implemented within the Z-Wave modules                    */
 450      =4  /****************************************************************************/
 451      =4  
 452      =4  /*===============================   ZW_Poll   ================================
 453      =4  **    Z-Wave low level poll function.
 454      =4  **    This function must be called while waiting on HW ready states and
 455      =4  **    when executing time consuming functions.
 456      =4  **
 457      =4  **    Not to lose RF receive data the time limit is 3/4 bit time, which is
 458      =4  **    around 70 usec at 9600 bps (500 clockcycles). Interrupt must not be
 459      =4  **    disabled more than 1/12 bit time which is around 8 usec (40 clock cycles).
 460      =4  **
 461      =4  **
 462      =4  **--------------------------------------------------------------------------*/
 463      =4  extern void  /*RET Nothing  */
 464      =4  ZW_Poll( void );    /* IN Nothing */
 465      =4  
 466      =4  
 467      =4  #ifndef ZW_SNIFFER
 468      =4  /*===============================   ZW_SetRFReceiveMode   ===================
 469      =4  **    Initialize the Z-Wave RF chip.
 470      =4  **    Mode on:  Set the RF chip in receive mode and starts the data sampling.
 471      =4  **    Mode off: Set the RF chip in power down mode.
 472      =4  **
 473      =4  **--------------------------------------------------------------------------*/
 474      =4  extern BYTE         /*RET TRUE if operation was executed successfully, FALSE if not */
 475      =4  ZW_SetRFReceiveMode(
 476      =4    BYTE mode);       /* IN TRUE: On; FALSE: Off mode */
 477      =4  #endif
 478      =4  
 479      =4  
 480      =4  /*===========================   ZW_SendNodeInformation   ====================
 481      =4  **    Create and transmit a node information broadcast frame
 482      =4  **    RET  FALSE if transmitter queue overflow
 483      =4  **--------------------------------------------------------------------------*/
 484      =4  extern BYTE                    /*RET  FALSE if transmitter queue overflow   */
 485      =4  ZW_SendNodeInformation(
 486      =4    BYTE destNode,                 /*IN  Destination Node ID  */
 487      =4    BYTE txOptions,                /*IN  Transmit option flags         */
 488      =4    VOID_CALLBACKFUNC(completedFunc)(BYTE));  /*IN  Transmit completed call back function  */
 489      =4  
 490      =4  
 491      =4  /*===============================   ZW_Random   =============================
 492      =4  **  Pseudo-random number function
 493      =4  **
 494      =4  **--------------------------------------------------------------------------*/
 495      =4  extern BYTE /*RET Random number */
 496      =4  ZW_Random(void);    /*IN Nothing */
 497      =4  
 498      =4  
 499      =4  /*===============================   ZW_Version   ============================
 500      =4  **    Copy Z-Wave basis version from code memory (Flash) to data memory (SRAM)
 501      =4  **    destintaion should be in XDATA
 502      =4  **    Returns the
 503      =4  **--------------------------------------------------------------------------*/
 504      =4  extern BYTE      /*RET Library type ZW_LIB_xxx  */
 505      =4  ZW_Version(
 506      =4    XBYTE *dst);   /* IN Destination pointer in RAM */
 507      =4  
 508      =4  
 509      =4  /*============================   ZW_Type_Library   ===========================
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 368 

 510      =4  ** Get Z-Wave library type
 511      =4  **
 512      =4  **    Side effects:
 513      =4  **
 514      =4  **--------------------------------------------------------------------------*/
 515      =4  extern BYTE      /*RET  Z-Wave library type (ZW_LIB_xxxx) */
 516      =4  ZW_Type_Library(void);
 517      =4  
 518      =4  
 519      =4  #if defined(ZW020x) || defined(ZW030x)
 520      =4  /*======================   ZW_RFPowerlevelRediscoverySet  ======================
 521      =4  **    Set the powerlevel used when doing neighbour discovery
 522      =4  **
 523      =4  **          normalPower - Max power possible
 524      =4  **          minus1dBm   - normalPower - 1dB
 525      =4  **          minus2dBm   - normalPower - 2dB
 526      =4  **          minus3dBm   - normalPower - 3dB
 527      =4  **          minus4dBm   - normalPower - 4dB
 528      =4  **          minus5dBm   - normalPower - 5dB
 529      =4  **          minus6dBm   - normalPower - 6dB
 530      =4  **          minus7dBm   - normalPower - 7dB
 531      =4  **          minus8dBm   - normalPower - 8dB
 532      =4  **          minus9dBm   - normalPower - 9dB
 533      =4  **
 534      =4  **--------------------------------------------------------------------------*/
 535      =4  void
 536      =4  ZW_RFPowerlevelRediscoverySet(
 537      =4    BYTE bNewPower);
 538      =4  
 539      =4  
 540      =4  /*==========================   ZW_RFPowerLevelSet  ==========================
 541      =4  **    Set the powerlevel used in RF transmitting.
 542      =4  **    Valid powerlevel values are :
 543      =4  **
 544      =4  **       normalPower : Max power possible
 545      =4  **       minus2dBm    - normalPower - 2dB
 546      =4  **       minus4dBm    - normalPower - 4dB
 547      =4  **       minus6dBm    - normalPower - 6dB
 548      =4  **       minus8dBm    - normalPower - 8dB
 549      =4  **       minus10dBm   - normalPower - 10dB
 550      =4  **       minus12dBm   - normalPower - 12dB
 551      =4  **       minus14dBm   - normalPower - 14dB
 552      =4  **       minus16dBm   - normalPower - 16dB
 553      =4  **       minus18dBm   - normalPower - 18dB
 554      =4  **
 555      =4  **--------------------------------------------------------------------------*/
 556      =4  #endif
 557      =4  BYTE                /*RET The powerlevel set */
 558      =4  ZW_RFPowerLevelSet(
 559      =4    BYTE powerLevel); /* IN Powerlevel to set */
 560      =4  
 561      =4  
 562      =4  #if defined(ZW020x) || defined(ZW030x)
 563      =4  /*==========================   ZW_RFPowerLevelGet  ==========================
 564      =4  **    Get the current powerlevel used in RF transmitting.
 565      =4  **    Possible powerlevel return values are :
 566      =4  **
 567      =4  **       normalPower : Max power possible
 568      =4  **       minus2dBm    - normalPower - 2dB
 569      =4  **       minus4dBm    - normalPower - 4dB
 570      =4  **       minus6dBm    - normalPower - 6dB
 571      =4  **       minus8dBm    - normalPower - 8dB
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 369 

 572      =4  **       minus10dBm   - normalPower - 10dB
 573      =4  **       minus12dBm   - normalPower - 12dB
 574      =4  **       minus14dBm   - normalPower - 14dB
 575      =4  **       minus16dBm   - normalPower - 16dB
 576      =4  **       minus18dBm   - normalPower - 18dB
 577      =4  **
 578      =4  **--------------------------------------------------------------------------*/
 579      =4  #endif
 580      =4  BYTE                /*RET The current powerlevel */
 581      =4  ZW_RFPowerLevelGet(
 582      =4    void);            /* IN Nothing */
 583      =4  
 584      =4  
 585      =4  #if defined(ZW020x) || defined(ZW030x)
 586      =4  /*===========================   ZW_SendTestFrame   ==========================
 587      =4  **    Send a test frame to specified nodeID, powerlevel is previously
 588      =4  **    set by calling ZW_RFPowerLevelSet.
 589      =4  **    Valid powerLevel index values are :
 590      =4  **
 591      =4  **       normalPower : Max power possible
 592      =4  **       minus2dBm    - normalPower - 2dB
 593      =4  **       minus4dBm    - normalPower - 4dB
 594      =4  **       minus6dBm    - normalPower - 6dB
 595      =4  **       minus8dBm    - normalPower - 8dB
 596      =4  **       minus10dBm   - normalPower - 10dB
 597      =4  **       minus12dBm   - normalPower - 12dB
 598      =4  **       minus14dBm   - normalPower - 14dB
 599      =4  **       minus16dBm   - normalPower - 16dB
 600      =4  **       minus18dBm   - normalPower - 18dB
 601      =4  **
 602      =4  **--------------------------------------------------------------------------*/
 603      =4  #endif
 604      =4  BYTE               /*RET FALSE if transmitter busy else TRUE */
 605      =4  ZW_SendTestFrame(
 606      =4    BYTE nodeID,     /* IN nodeID to transmit to */
 607      =4    BYTE powerLevel, /* IN powerlevel index */
 608      =4    VOID_CALLBACKFUNC(func)(BYTE txStatus)); /* Call back function called when done */
 609      =4  
 610      =4  
 611      =4  /*===========================   ZW_GetProtocolStatus   ==========================
 612      =4  **    Reprort the status of the protocol
 613      =4  **   The function return a mask telling which protocol function is currently running
 614      =4  **   possible MASK values:
 615      =4  **   ZW_PROTOCOL_STATUS_ROUTING:    protocol is analysing the routing table.
 616      =4  **   ZW_PROTOCOL_STATUS_SUC:        SUC is sending pending updates.
 617      =4  **
 618      =4  **   return value of ZERO means protocol is idle.
 619      =4  **--------------------------------------------------------------------------*/
 620      =4  BYTE
 621      =4  ZW_GetProtocolStatus(void);
 622      =4  
 623      =4  
 624      =4  #if defined(ZW020x) || defined(ZW030x)
 625      =4  /*===============================   ZW_SetExtIntLevel   =========================================
 626      =4  **    Set the trigger level for external interrupt 0 or 1
 627      =4  **---------------------------------------------------------------------------------------------*/
 628      =4  void
 629      =4  ZW_SetExtIntLevel(
 630      =4    BYTE intSrc,        /*IN: The interrupt src to set its level ZW_INT0 or ZW_INT1*/
 631      =4    BOOL triggerLevel); /*IN: The trigger level of the interrupt source, TRUE active high/rising edge,*/
 632      =4                        /*     FALSE active low faling edge*/
 633      =4  #endif
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 370 

 634      =4  
 635      =4  
 636      =4  /*============================= ZW_WatchDogEnable() =========================================
 637      =4  **  Enable the watch dog.
 638      =4  **  parameters:
 639      =4  **----------------------------------------------------------------------------*/
 640      =4  void
 641      =4  ZW_WatchDogEnable();
 642      =4  
 643      =4  
 644      =4  /*============================= ZW_WatchDogDisable() =========================================
 645      =4  **  Disable the watch dog.
 646      =4  **  parameters:
 647      =4  **----------------------------------------------------------------------------*/
 648      =4  void
 649      =4  ZW_WatchDogDisable();
 650      =4  
 651      =4  
 652      =4  /*============================= ZW_WatchDogKick() =========================================
 653      =4  **  Kick the watchdog to restarted.
 654      =4  **  parameters:
 655      =4  **----------------------------------------------------------------------------*/
 656      =4  void
 657      =4  ZW_WatchDogKick();
 658      =4  
 659      =4  /*============================   ZW_SetPromiscuousMode   ======================
 660      =4  **
 661      =4  **  Function description.
 662      =4  **   Enable / disable the installer library promiscuous mode.
 663      =4  **   When promiscuous mode is enabled, all application layer frames will be passed
 664      =4  **   to the application layer regardless if the frames are addressed to another node.
 665      =4  **   When promiscuous mode is disabled, only application frames addressed to the node will be passed
 666      =4  **   to the application layer.
 667      =4  **
 668      =4  **  Side effects:
 669      =4  **
 670      =4  **--------------------------------------------------------------------------*/
 671      =4  void                /*Nothing */
 672      =4  ZW_SetPromiscuousMode(
 673      =4    BOOL state);     /* IN TRUE to enable the promiscuous mode, FALSE to disable it.*/
 674      =4  
 675      =4  
 676      =4  /*============================== ZW_GetRandomWord ===========================
 677      =4  **  Get a true random word
 678      =4  **  Makes use of the RF receiver to generate random numbers.
 679      =4  **
 680      =4  **  Side effects:
 681      =4  **
 682      =4  **--------------------------------------------------------------------------*/
 683      =4  BOOL                /*RET TRUE if possible to generate random number */
 684      =4  ZW_GetRandomWord(   /*    FALSE if RF not powered down */
 685      =4    BYTE *randomWord, /*OUT Pointer to BYTE[2] where the 2 random bytes should be placed */
 686      =4    BOOL bResetRadio);/* IN TRUE if RF should be reinitialized for Z-Wave usage after random generation. */
 687      =4                      /*    If RF needs to be in Receive then ZW_SetRFReceiveMode */
 688      =4                      /*    should be called afterwards */
 689      =4  
 690      =4  
 691      =4  /*===========================   ZW_ExploreRequestInclusion   =================
 692      =4  **    Transmit a request for inclusion via a explore frame.
 693      =4  **
 694      =4  **
 695      =4  **    Side effects:
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 371 

 696      =4  **
 697      =4  **--------------------------------------------------------------------------*/
 698      =4  /* TODO - Unify ZW_ExploreRequestInclusion and setlearnMode - Let protocol handle */
 699      =4  /* the inclusion - ZW_ExploreRequestInclusion should internally call SetLearnMode not let App do it */
 700      =4  BYTE
 701      =4  ZW_ExploreRequestInclusion();
 702      =4  
 703      =4  
 704      =4  #endif /* _ZW_BASIS_API_H_ */
 705      =4  
  44      =3  
  45      =3  
  46      =3  /****************************************************************************/
  47      =3  /*                     EXPORTED TYPES and DEFINITIONS                       */
  48      =3  /****************************************************************************/
  49      =3  
  50      =3  /* ApplicationcSlaveUpdate status */
  51      =3  #define UPDATE_STATE_NODE_INFO_RECEIVED     0x84
  52      =3  
  53      =3  
  54      =3  /* Defines used to handle inclusion and exclusion of node */
  55      =3  #define ASSIGN_COMPLETE           0x00
  56      =3  #define ASSIGN_NODEID_DONE        0x01  /*Node ID have been assigned*/
  57      =3  #define ASSIGN_RANGE_INFO_UPDATE  0x02  /*Node is doing Neighbor discovery*/
  58      =3  
  59      =3  /* Mode parameters to ZW_SetLearnMode */
  60      =3  #define ZW_SET_LEARN_MODE_DISABLE           0x00
  61      =3  #define ZW_SET_LEARN_MODE_CLASSIC           0x01
  62      =3  #define ZW_SET_LEARN_MODE_NWI               0x02
  63      =3  
  64      =3  /*===========================   ZW_SetLearnMode   ===========================
  65      =3  **    Enable/Disable home/node ID learn mode.
  66      =3  **    When learn mode is enabled, received "Assign ID's Command" are handled:
  67      =3  **    If the current stored ID's are zero, the received ID's will be stored.
  68      =3  **    If the received ID's are zero the stored ID's will be set to zero.
  69      =3  **
  70      =3  **    The learnFunc is called when the received assign command has been handled.
  71      =3  **    The returned parameter is the learned Node ID.
  72      =3  **
  73      =3  ** void           RET  Nothing
  74      =3  ** ZW_SetLearnMode(
  75      =3  ** BYTE mode,                IN  learnMode bitmask
  76      =3  ** void (*learnFunc)(BYTE)); IN  Node learn call back function.
  77      =3  **--------------------------------------------------------------------------*/
  78      =3  #define ZW_SET_LEARN_MODE(mode, func) ZW_SetLearnMode(mode, func)
  79      =3  
  80      =3  
  81      =3  /*===========================   ZW_SetDefault   ================================
  82      =3  **    Remove all Nodes and timers from the EEPROM memory.
  83      =3  **    Reset the homeID and nodeID
  84      =3  **    Side effects:
  85      =3  **
  86      =3  **--------------------------------------------------------------------------*/
  87      =3  #define ZW_SET_DEFAULT     ZW_SetDefault
  88      =3  
  89      =3  
  90      =3  /****************************************************************************/
  91      =3  /*                              EXPORTED DATA                               */
  92      =3  /****************************************************************************/
  93      =3  
  94      =3  /****************************************************************************/
  95      =3  /*                           EXPORTED FUNCTIONS                             */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 372 

  96      =3  /*                 Implemented within the application moduls                */
  97      =3  /****************************************************************************/
  98      =3  
  99      =3  /*============================   ZW_SUPPORT9600_ONLY   ======================
 100      =3  **    Function description
 101      =3  **     If ZW_SUPPORT9600ONLY(TRUE) node will report as 9600 baud only.
 102      =3  **      This function should only be called from ApplicationInitSW
 103      =3  **      RETURNS TRUE if successfull, FALSE if not.
 104      =3  **    Side effects:
 105      =3  **      If TRUE communication to this node will always be 9.6kbit
 106      =3  **--------------------------------------------------------------------------*/
 107      =3  #define ZW_SUPPORT9600_ONLY(val) ZW_Support9600Only(val)
 108      =3  
 109      =3  /*==========================   ZW_Support9600Only   =========================
 110      =3  **    Function description
 111      =3  **      If bValue is TRUE this node will only support 9600 Baud RF
 112      =3  **
 113      =3  **
 114      =3  **--------------------------------------------------------------------------*/
 115      =3  BOOL                   /*RET  TRUE if succesfull, FALSE if node is Listening*/
 116      =3  ZW_Support9600Only(
 117      =3    BOOL bValue);         /*IN TRUE enable 9600 only*/
 118      =3  
 119      =3  
 120      =3  /****************************************************************************/
 121      =3  /*                           EXPORTED FUNCTIONS                             */
 122      =3  /*                 Implemented within the Z-Wave slave modules              */
 123      =3  /****************************************************************************/
 124      =3  
 125      =3  
 126      =3  /*===========================   ZW_SetLearnMode   ===========================
 127      =3  **    Enable/Disable home/node ID learn mode.
 128      =3  **    When learn mode is enabled, received "Assign ID's Command" are handled:
 129      =3  **    If the current stored ID's are zero, the received ID's will be stored.
 130      =3  **    If the received ID's are zero the stored ID's will be set to zero.
 131      =3  **
 132      =3  **    The learnFunc is called when the received assign command has been handled.
 133      =3  **
 134      =3  **--------------------------------------------------------------------------*/
 135      =3  extern void         /*RET  Nothing        */
 136      =3  ZW_SetLearnMode(
 137      =3    BYTE mode,                                       /* IN  learnMode bitmask */
 138      =3    VOID_CALLBACKFUNC(learnFunc)(BYTE bStatus, BYTE nodeID));  /*IN  Node learn call back function. */
 139      =3  
 140      =3  
 141      =3  /*===========================   ZW_SetDefault   ================================
 142      =3  **    Reset the slave to its default state.
 143      =3  **    Delete all routes in routing slave
 144      =3  **    Reset the homeID and nodeID
 145      =3  **    Side effects:
 146      =3  **
 147      =3  **--------------------------------------------------------------------------*/
 148      =3  void           /*RET  Nothing        */
 149      =3  ZW_SetDefault(void);
 150      =3  
 151      =3  #endif /* _ZW_SLAVE_API_H_ */
 152      =3  
  45      =2  
  46      =2  /****************************************************************************/
  47      =2  /*                     EXPORTED TYPES and DEFINITIONS                       */
  48      =2  /****************************************************************************/
  49      =2  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 373 

  50      =2  
  51      =2  /* ZW_REQUEST_NETWORK_UPDATE callback values */
  52      =2  #define ZW_ROUTE_UPDATE_DONE      0x00
  53      =2  #define ZW_ROUTE_UPDATE_ABORT     0x01
  54      =2  #define ZW_ROUTE_UPDATE_WAIT      0x02
  55      =2  #define ZW_ROUTE_UPDATE_DISABLED  0x03
  56      =2  
  57      =2  
  58      =2  /*==================   ZW_REQUEST_NEW_ROUTE_DESTINATIONS ====================
  59      =2  **    Request new destinations for return routes.
  60      =2  **      list = pointer to array of node ids
  61      =2  **      len = length of nodeID array (Max len =
  62      =2  **            ZW_MAX_RETURN_ROUTE_DESTINATIONS
  63      =2  **      func = callback, called with status when operation is done.
  64      =2  **             status can be one of the following:
  65      =2  **
  66      =2  **    ZW_ROUTE_UPDATE_DONE      - The update process is ended successfully.
  67      =2  **    ZW_ROUTE_UPDATE_ABORT     - The update process aborted because of error.
  68      =2  **    ZW_ROUTE_UPDATE_WAIT      - The SUC node is busy.
  69      =2  **    ZW_ROUTE_UPDATE_DISABLED  - The SUC functionality is disabled.
  70      =2  **
  71      =2  **--------------------------------------------------------------------------*/
  72      =2  #define ZW_REQUEST_NEW_ROUTE_DESTINATIONS(list,len,func) ZW_RequestNewRouteDestinations(list,len,func)
  73      =2  
  74      =2  
  75      =2  /*==================   ZW_REQUEST_NEW_ROUTE_DESTINATIONS ====================
  76      =2  ** This function request network update from the Static Update Controller
  77      =2  **  Callback status will be one of following
  78      =2  **    ZW_ROUTE_UPDATE_DONE      - The update process is ended successfully.
  79      =2  **    ZW_ROUTE_UPDATE_ABORT     - The update process aborted because of error.
  80      =2  **    ZW_ROUTE_UPDATE_WAIT      - The SUC node is busy.
  81      =2  **    ZW_ROUTE_UPDATE_DISABLED  - The SUC functionality is disabled.
  82      =2  
  83      =2  ------------------------------------------------------------------------*/
  84      =2  #define ZW_REQUEST_NETWORK_UPDATE(FUNC) ZW_RequestNetWorkUpdate(FUNC)
  85      =2  
  86      =2  
  87      =2  /*============================   ZW_RediscoveryNeeded   ======================
  88      =2  **    Function description
  89      =2  **      Application want a rediscovery, but is lost.
  90      =2  **      Try to ask the nodeID supplied for help.
  91      =2  **      Callback function returns:
  92      =2  **          ZW_ROUTE_LOST_FAILED  - if node nodeid is unable to help
  93      =2  **          ZW_ROUTE_LOST_ACCEPT  - if node nodeid contacted the controller.
  94      =2  **          ZW_ROUTE_UPDATE_DONE  - the rediscovery ended successfully.
  95      =2  **          ZW_ROUTE_UPDATE_ABORT - the node nodeid did not answer.
  96      =2  **    Side effects:
  97      =2  **
  98      =2  **--------------------------------------------------------------------------*/
  99      =2  #define ZW_REDISCOVERY_NEEDED(nodeid,func) ZW_RediscoveryNeeded(nodeid,func)
 100      =2  
 101      =2  
 102      =2  /*====================  ZW_IS_NODE_WITHIN_DIRECT_RANGE =====================
 103      =2  **    Test if ReturnRouted indicate that bNodeID is within direct range.
 104      =2  **
 105      =2  **--------------------------------------------------------------------------*/
 106      =2  #define ZW_IS_NODE_WITHIN_DIRECT_RANGE(nid) ZW_IsNodeWithinDirectRange(nid)
 107      =2  
 108      =2  
 109      =2  /* SerialAPI only used state - used when ZW_RequestNodeInfo transmit fails */
 110      =2  /* It is then assumed that the destination node did not receive the request. */
 111      =2  #define UPDATE_STATE_NODE_INFO_REQ_FAILED   0x81
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 374 

 112      =2  
 113      =2  /*============================   ZW_RequestNodeInfo   ======================
 114      =2  **    Function description.
 115      =2  **     Request a node to send it's node information.
 116      =2  **     Function return TRUE if the request is send, else it return FALSE.
 117      =2  **     FUNC is a callback function, which is called with the status of the
 118      =2  **     Request nodeinformation frame transmission.
 119      =2  **     If a node sends its node info, ApplicationSlaveUpdate will be called
 120      =2  **     with UPDATE_STATE_NODE_INFO_RECEIVED as status together with the received
 121      =2  **     nodeinformation.
 122      =2  **
 123      =2  **    Side effects:
 124      =2  **
 125      =2  **--------------------------------------------------------------------------*/
 126      =2  #define ZW_REQUEST_NODE_INFO(NODEID, FUNC)  ZW_RequestNodeInfo(NODEID, FUNC)
 127      =2  
 128      =2  
 129      =2  /*============================   ZW_GetSUCNodeID  ===========================
 130      =2  **    Function description
 131      =2  **    This function gets the nodeID of the current Static Update Controller
 132      =2  **    if ZERO then no SUC is available
 133      =2  **
 134      =2  **--------------------------------------------------------------------------*/
 135      =2  #define ZW_GET_SUC_NODEID()  ZW_GetSUCNodeID()
 136      =2  
 137      =2  
 138      =2  /****************************************************************************/
 139      =2  /*                           EXPORTED FUNCTIONS                             */
 140      =2  /*                 Implemented within the Z-Wave moduls                     */
 141      =2  /****************************************************************************/
 142      =2  
 143      =2  /*======================  ZW_AreNodeWithinDirectRange   ======================
 144      =2  **    Test if ReturnRouted indicate that bNodeID is within direct range.
 145      =2  **
 146      =2  **--------------------------------------------------------------------------*/
 147      =2  BOOL                          /*RET TRUE if neighbours, FALSE if not*/
 148      =2  ZW_IsNodeWithinDirectRange(
 149      =2    BYTE bNodeID);              /*IN nodeID to check*/
 150      =2  
 151      =2  
 152      =2  /*=======================   ZW_RequestNewRouteDestinations   =================
 153      =2  **    Request new destinations for return routes.
 154      =2  **
 155      =2  **    Side effects:
 156      =2  **
 157      =2  **--------------------------------------------------------------------------*/
 158      =2  BOOL                                                /*RET TRUE if SUC/SIS exist FALSE if not*/
 159      =2  ZW_RequestNewRouteDestinations(
 160      =2    BYTE_P destList,                                  /*IN Pointer to new destinations*/
 161      =2    BYTE destListLen,                                 /*IN len of buffer */
 162      =2    VOID_CALLBACKFUNC(completedFunc)(BYTE txStatus)); /* IN callback function called when completed*/
 163      =2  
 164      =2  /*----------------------------------------------------------------------------
 165      =2   This function resquest network update from the Static Update Controller
 166      =2  ----------------------------------------------------------------------------*/
 167      =2  BYTE                      /* RET: True; SUC is known to the controller,  */
 168      =2                            /*      FALSE; SUC not known to the controller */
 169      =2  ZW_RequestNetWorkUpdate(
 170      =2    VOID_CALLBACKFUNC(completedFunc)(BYTE txStatus)); /* IN call back function indicates of the update suces
             -sed or failed*/
 171      =2  
 172      =2  /*============================   ZW_RediscoveryNeeded   ======================
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 375 

 173      =2  **    Function description
 174      =2  **      Application thinks that a rediscovery is needed.
 175      =2  **      Try to reach the nodeID supplied
 176      =2  **    Side effects:
 177      =2  **
 178      =2  **--------------------------------------------------------------------------*/
 179      =2  BYTE                                                /*RET TRUE if success*/
 180      =2  ZW_RediscoveryNeeded(
 181      =2    BYTE bNodeID,                                     /*IN nodeID to ask for help*/
 182      =2    VOID_CALLBACKFUNC(completedFunc)(BYTE txStatus));  /*IN callback function*/
 183      =2  
 184      =2  
 185      =2  /*============================   ZW_RequestNodeInfo   ======================
 186      =2  **    Function description.
 187      =2  **     Request a node to send it's node information.
 188      =2  **     Function return TRUE if the request is send, else it return FALSE.
 189      =2  **     FUNC is a callback function, which is called with the status of the
 190      =2  **     Request nodeinformation frame transmission.
 191      =2  **     If a node sends its node info, ApplicationSlaveUpdate will be called
 192      =2  **     with UPDATE_STATE_NODE_INFO_RECEIVED as status together with the received
 193      =2  **     nodeinformation.
 194      =2  **
 195      =2  **    Side effects:
 196      =2  **
 197      =2  **--------------------------------------------------------------------------*/
 198      =2  BOOL                      /*RET FALSE if transmitter busy */
 199      =2  ZW_RequestNodeInfo(
 200      =2    BYTE nodeID,                     /*IN: node id of the node to request node info from it.*/
 201      =2    VOID_CALLBACKFUNC(completedFunc)(BYTE)); /* IN Callback function */
 202      =2  
 203      =2  
 204      =2  /*============================   ZW_GetSUCNodeID  ===========================
 205      =2  **    Function description
 206      =2  **    This function gets the nodeID of the current Static Update Controller
 207      =2  **    if ZERO then no SUC is available
 208      =2  **
 209      =2  **--------------------------------------------------------------------------*/
 210      =2  BYTE                    /*RET nodeID on SUC, if ZERO -> no SUC */
 211      =2  ZW_GetSUCNodeID(void);  /* IN Nothing */
 212      =2  
 213      =2  
 214      =2  #endif /* _ZW_SLAVE_ROUTING_API_H_ */
 215      =2  
  45      =1  
  46      =1  
  47      =1  /****************************************************************************/
  48      =1  /*                     EXPORTED TYPES and DEFINITIONS                       */
  49      =1  /****************************************************************************/
  50      =1  
  51      =1  #endif  /* _ZW_SLAVE_32_API_H_ */
  52      =1  
  42          #elif defined(ZW_SLAVE_ROUTING)
  47          
  48          /* Allows data storage of application data even after reset */
  49          #if defined(ZW020x) || defined(ZW030x)
  50            #include <ZW_non_zero.h>
   1      =1  /*******************************  ZW_non_zero.H  *******************************
   2      =1   *           #######
   3      =1   *           ##  ##
   4      =1   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =1   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =1   *            ##  #  ######  ##  ##   ####   ##  ##   ####
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 376 

   7      =1   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =1   *          #######   ####   ##  ##  #####       ##  #####
   9      =1   *                                           #####
  10      =1   *          Z-Wave, the wireless language.
  11      =1   *
  12      =1   *              Copyright (c) 2001
  13      =1   *              Zensys A/S
  14      =1   *              Denmark
  15      =1   *
  16      =1   *              All Rights Reserved
  17      =1   *
  18      =1   *    This source file is subject to the terms and conditions of the
  19      =1   *    Zensys Software License Agreement which restricts the manner
  20      =1   *    in which it may be used.
  21      =1   *
  22      =1   *---------------------------------------------------------------------------
  23      =1   *
  24      =1   * Description: This module define an address range in XRAM reserved for uninitialized variables.
  25      =1   *
  26      =1   * Author:   Samer Seoud
  27      =1   *
  28      =1   * Last Changed By:  $Author: jsi $
  29      =1   * Revision:         $Revision: 24742 $
  30      =1   * Last Changed:     $Date: 2013-03-01 14:53:18 +0100 (fr, 01 mar 2013) $
  31      =1   *
  32      =1   ****************************************************************************/
  33      =1  #ifndef _NON_ZERO_H_
  34      =1  #define _NON_ZERO_H_
  35      =1  
  36      =1  /****************************************************************************/
  37      =1  /*                              INCLUDE FILES                               */
  38      =1  /****************************************************************************/
  39      =1  
  40      =1  /****************************************************************************/
  41      =1  /*                     EXPORTED TYPES and DEFINITIONS                       */
  42      =1  /****************************************************************************/
  43      =1  
  44      =1  #define XDATA_LENGTH  0x800
  45      =1  #if defined(ZW020x) || defined(ZW030x)
  46      =1  #define NON_ZERO_SIZE    24
  47      =1  #endif /* ZW020x , ZW030x*/
  48      =1  
  49      =1  #define NON_ZERO_START_ADDR   (XDATA_LENGTH-NON_ZERO_SIZE)
  50      =1  #endif /* _NON_ZERO_H_ */
  51          #endif
  52          
  53          #include <ZW_pindefs.h>
   1      =1  /*******************************  ZW_PINDEFS.H  *******************************
   2      =1   *           #######
   3      =1   *           ##  ##
   4      =1   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =1   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =1   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =1   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =1   *          #######   ####   ##  ##  #####       ##  #####
   9      =1   *                                           #####
  10      =1   *          Z-Wave, the wireless lauguage.
  11      =1   *
  12      =1   *              Copyright (c) 2001
  13      =1   *              Zensys A/S
  14      =1   *              Denmark
  15      =1   *
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 377 

  16      =1   *              All Rights Reserved
  17      =1   *
  18      =1   *    This source file is subject to the terms and conditions of the
  19      =1   *    Zensys Software License Agreement which restricts the manner
  20      =1   *    in which it may be used.
  21      =1   *
  22      =1   *---------------------------------------------------------------------------
  23      =1   *
  24      =1   * Description: In/Out definitions for the ZW0102 based Z-Wave Standard Module
  25      =1   *
  26      =1   * Author:   Ivar Jeppesen
  27      =1   *
  28      =1   * Last Changed By:  $Author: sse $
  29      =1   * Revision:         $Revision: 8506 $
  30      =1   * Last Changed:     $Date: 2007-01-29 14:46:27 +0100 (ma, 29 jan 2007) $
  31      =1   *
  32      =1   ****************************************************************************/
  33      =1  #ifndef _ZW_PINDEFS_H_
  34      =1  #define _ZW_PINDEFS_H_
  35      =1  
  36      =1  /****************************************************************************/
  37      =1  /*                              INCLUDE FILES                               */
  38      =1  /****************************************************************************/
  39      =1  
  40      =1  
  41      =1  /****************************************************************************/
  42      =1  /*                     EXPORTED TYPES and DEFINITIONS                       */
  43      =1  /****************************************************************************/
  44      =1  
  45      =1  #ifdef __C51__
  46      =1  /* Macros for I/O Port controlling */
  47      =1  
  48      =1  /* Set I/O pin as input:
  49      =1   *    pin     - Z-Wave pin name
  50      =1   *    pullup  - if not zero activate the internal pullup resistor
  51      =1   */
  52      =1  #if defined(ZW020x) || defined(ZW030x)
  53      =1  #define PIN_IN(pin, pullup)  {pin##DDR |= (1<<pin);(pullup? (pin##PULL &= ~(1<<pin)): (pin##PULL |= (1<<pi
             -n)));}
  54      =1  #endif
  55      =1  #ifdef ZW010x
  58      =1  
  59      =1  /* Set I/O pin as output:
  60      =1   *    pin     - Z-Wave pin name
  61      =1   */
  62      =1  #if defined(ZW020x) || defined(ZW030x)
  63      =1   /*disable the pullup when setting a pin to output*/
  64      =1   /*Fix to#01263 disable the PULL up when seeting an IO to an output*/
  65      =1  #define PIN_OUT(pin)  {(pin##DDR &= ~(1<<pin));(pin##PULL |= (1<<pin));}
  66      =1  #endif
  67      =1  
  68      =1  #ifdef ZW010x
  71      =1  
  72      =1  /* Read pin value:
  73      =1   *    pin     - Z-Wave pin name
  74      =1   */
  75      =1  #define PIN_GET(pin)  (pin##Port & (1<<pin))
  76      =1  
  77      =1  /* Set output pin to 1:
  78      =1   *    pin     - Z-Wave pin name
  79      =1   */
  80      =1  #define PIN_ON(pin) (pin##Port |= (1<<pin))
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 378 

  81      =1  
  82      =1  /* Set output pin to 0:
  83      =1   *    pin     - Z-Wave pin name
  84      =1   */
  85      =1  #define PIN_OFF(pin) (pin##Port &= ~(1<<pin))
  86      =1  
  87      =1  /* Toggle output pin:
  88      =1   *    pin     - Z-Wave pin name
  89      =1   */
  90      =1  #define PIN_TOGGLE(pin) (pin##Port ^= (1<<pin))
  91      =1  
  92      =1  /* Button pressed */
  93      =1  #define BUTTON_PRESSED() ((PIN_GET(Button))?0:1)
  94      =1  
  95      =1  #endif
  96      =1  #ifdef ZW010x
 312      =1  
 313      =1  #if defined(ZW020x) || defined(ZW030x)
 314      =1  /*
 315      =1  #define BUTTON1_PIN     TXDpin
 316      =1  #define BUTTON1_PINPort TXDpinPort
 317      =1  #define BUTTON1_PINDDR  TXDpinDDR
 318      =1  #define BUTTON1_PINPULL TXDpinPULL
 319      =1  */
 320      =1  /* Z-Wave Button - INT1 */
 321      =1  #define ButtonPort  P1
 322      =1  #define ButtonDDR   P1DIR
 323      =1  #define ButtonPULL  P1PULLUP
 324      =1  #define Button      7
 325      =1  
 326      =1  /* Z-Wave Connector */
 327      =1  
 328      =1  /* Pin no. 20 */
 329      =1  #define ZEROXpinPort  P0
 330      =1  #define ZEROXpinDDR   P0DIR
 331      =1  #define ZEROXpinPULL   P0PULLUP
 332      =1  #define ZEROXpin      0
 333      =1  
 334      =1  /* Pin no. 19 */
 335      =1  #define TRIACpinPort  P0
 336      =1  #define TRIACpinDDR   P0DIR
 337      =1  #define TRIACpinPULL   P0PULLUP
 338      =1  #define TRIACpin      1
 339      =1  
 340      =1  /* Pin no. 20 */
 341      =1  #define ADC0Port  P0
 342      =1  #define ADC0DDR   P0DIR
 343      =1  #define ADC0PULL   P0PULLUP
 344      =1  #define ADC0      0
 345      =1  
 346      =1  /* Pin no. 19 */
 347      =1  #define ADC1Port  P0
 348      =1  #define ADC1DDR   P0DIR
 349      =1  #define ADC1PULL   P0PULLUP
 350      =1  #define ADC1      1
 351      =1  
 352      =1  /* Pin no. 18 */
 353      =1  #define TXDpinPort  P1
 354      =1  #define TXDpinDDR   P1DIR
 355      =1  #define TXDpinPULL   P1PULLUP
 356      =1  #define TXDpin      0
 357      =1  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 379 

 358      =1  /* Pin no. 17 */
 359      =1  #define RXDpinPort  P1
 360      =1  #define RXDpinDDR   P1DIR
 361      =1  #define RXDpinPULL   P1PULLUP
 362      =1  #define RXDpin      1
 363      =1  
 364      =1  /* Pin no. 18 */
 365      =1  #define ADC2Port  P1
 366      =1  #define ADC2DDR   P1DIR
 367      =1  #define ADC2PULL   P1PULLUP
 368      =1  #define ADC2      0
 369      =1  
 370      =1  /* Pin no. 17 */
 371      =1  #define ADC3Port  P1
 372      =1  #define ADC3DDR   P1DIR
 373      =1  #define ADC3PULL   P1PULLUP
 374      =1  #define ADC3      1
 375      =1  
 376      =1  
 377      =1  /* Pin no. 10 */
 378      =1  #define MISOPort  P1
 379      =1  #define MISODDR   P1DIR
 380      =1  #define MISOPULL   P1PULLUP
 381      =1  #define MISO      2
 382      =1  
 383      =1  /* Pin no. 9 */
 384      =1  #define MOSIPort  P1
 385      =1  #define MOSIDDR   P1DIR
 386      =1  #define MOSIPULL   P1PULLUP
 387      =1  #define MOSI      3
 388      =1  
 389      =1  /* Pin no. 7 */
 390      =1  #define SCKPort  P1
 391      =1  #define SCKDDR   P1DIR
 392      =1  #define SCKPULL   P1PULLUP
 393      =1  #define SCK      4
 394      =1  
 395      =1  /* Pin no. 6 */
 396      =1  #define SSNPort  P1
 397      =1  #define SSNDDR   P1DIR
 398      =1  #define SSNPULL   P1PULLUP
 399      =1  #define SSN      5
 400      =1  
 401      =1  
 402      =1  /* Pin no. 5 */
 403      =1  #define INT0pinPort P1
 404      =1  #define INT0pinDDR  P1DIR
 405      =1  #define INT0pinPULL  P1PULLUP
 406      =1  #define INT0pin     6
 407      =1  
 408      =1  /* Pin no. 5 */
 409      =1  #define PWMPort P1
 410      =1  #define PWMDDR  P1DIR
 411      =1  #define PWMPULL  P1PULLUP
 412      =1  #define PWM     6
 413      =1  
 414      =1  /* Pin no. 5 */
 415      =1  #define INT1pinPort P1
 416      =1  #define INT1pinDDR  P1DIR
 417      =1  #define INT1pinPULL  P1PULLUP
 418      =1  #define INT1pin     7
 419      =1  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 380 

 420      =1  #endif /*ZW020x*/
 421      =1  #endif /* _ZW_PINDEFS_H_ */
 422      =1  
  54          #include <ZW_evaldefs.h>
   1      =1  /*******************************  ZW_EVALDEFS.H  *******************************
   2      =1   *           #######
   3      =1   *           ##  ##
   4      =1   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =1   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =1   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =1   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =1   *          #######   ####   ##  ##  #####       ##  #####
   9      =1   *                                           #####
  10      =1   *          Z-Wave, the wireless lauguage.
  11      =1   *
  12      =1   *              Copyright (c) 2001
  13      =1   *              Zensys A/S
  14      =1   *              Denmark
  15      =1   *
  16      =1   *              All Rights Reserved
  17      =1   *
  18      =1   *    This source file is subject to the terms and conditions of the
  19      =1   *    Zensys Software License Agreement which restricts the manner
  20      =1   *    in which it may be used.
  21      =1   *
  22      =1   *---------------------------------------------------------------------------
  23      =1   *
  24      =1   * Description: IO definitions for the Z-Wave Evaluation board
  25      =1   *
  26      =1   * Author:   Ivar Jeppesen
  27      =1   *
  28      =1   * Last Changed By:  $Author: sse $
  29      =1   * Revision:         $Revision: 8556 $
  30      =1   * Last Changed:     $Date: 2007-01-31 10:24:50 +0100 (on, 31 jan 2007) $
  31      =1   *
  32      =1   ****************************************************************************/
  33      =1  #ifndef _ZW_EVALDEFS_H_
  34      =1  #define _ZW_EVALDEFS_H_
  35      =1  
  36      =1  /****************************************************************************/
  37      =1  /*                              INCLUDE FILES                               */
  38      =1  /****************************************************************************/
  39      =1  
  40      =1  
  41      =1  /****************************************************************************/
  42      =1  /*                     EXPORTED TYPES and DEFINITIONS                       */
  43      =1  /****************************************************************************/
  44      =1  
  45      =1  /* Evaluation board LEDs */
  46      =1  
  47      =1  /* Turn LED on/off
  48      =1   *  led - LED number
  49      =1   */
  50      =1  #if defined (ZW010x) || defined(ZW020x) || defined(ZW030x)
  51      =1  
  52      =1  #define LED_ON(led)   PIN_OFF(LED##led)
  53      =1  #define LED_OFF(led)  PIN_ON(LED##led)
  54      =1  
  55      =1  #define LED_TOGGLE(led) PIN_TOGGLE(LED##led)
  56      =1  #endif
  57      =1  
  58      =1  /* LED number       Z-Wave Device pin */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 381 

  59      =1  
  60      =1  #ifdef ZW010x
  78      =1  
  79      =1  #if defined(ZW020x) || defined(ZW030x)
  80      =1  #define LED1Port    ZEROXpinPort
  81      =1  #define LED1DDR     ZEROXpinDDR
  82      =1  #define LED1PULL    ZEROXpinPULL
  83      =1  #define LED1        ZEROXpin
  84      =1  
  85      =1  #define LED2Port    PWMPort
  86      =1  #define LED2DDR     PWMDDR
  87      =1  #define LED2PULL    PWMPULL
  88      =1  #define LED2        PWM
  89      =1  
  90      =1  #define LED3Port    TRIACpinPort
  91      =1  #define LED3DDR     TRIACpinDDR
  92      =1  #define LED3PULL    TRIACpinPULL
  93      =1  #define LED3        TRIACpin
  94      =1  
  95      =1  #endif /*ZW020x*/
  96      =1  
  97      =1  #endif /* _ZW_EVALDEFS_H_ */
  55          
  56          #include <eeprom.h>
   1      =1  /********************************  EEPROM.H  ********************************
   2      =1   *           #######
   3      =1   *           ##  ##
   4      =1   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =1   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =1   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =1   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =1   *          #######   ####   ##  ##  #####       ##  #####
   9      =1   *                                           #####
  10      =1   *          Z-Wave, the wireless lauguage.
  11      =1   *
  12      =1   *              Copyright (c) 2001
  13      =1   *              Zensys A/S
  14      =1   *              Denmark
  15      =1   *
  16      =1   *              All Rights Reserved
  17      =1   *
  18      =1   *    This source file is subject to the terms and conditions of the
  19      =1   *    Zensys Software License Agreement which restricts the manner
  20      =1   *    in which it may be used.
  21      =1   *
  22      =1   *---------------------------------------------------------------------------
  23      =1   *
  24      =1   * Description: Internal EEPROM address definitions
  25      =1   *
  26      =1   * Author:   Peter Shorty
  27      =1   *
  28      =1   * Last Changed By:  $Author: iza $
  29      =1   * Revision:         $Revision: 21352 $
  30      =1   * Last Changed:     $Date: 2011-09-23 10:59:46 +0200 (fr, 23 sep 2011) $
  31      =1   *
  32      =1   ****************************************************************************/
  33      =1  #ifndef _EEPROM_H_
  34      =1  #define _EEPROM_H_
  35      =1  
  36      =1  /****************************************************************************/
  37      =1  /*                              INCLUDE FILES                               */
  38      =1  /****************************************************************************/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 382 

  39      =1  #include <Switch3.h>
   1      =2  /******************************* filename *******************************
   2      =2   *           #######
   3      =2   *           ##  ##
   4      =2   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =2   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =2   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =2   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =2   *          #######   ####   ##  ##  #####       ##  #####
   9      =2   *                                           #####
  10      =2   *          Z-Wave, the wireless language.
  11      =2   *
  12      =2   *              Copyright (c) 2001
  13      =2   *              Zensys A/S
  14      =2   *              Denmark
  15      =2   *
  16      =2   *              All Rights Reserved
  17      =2   *
  18      =2   *    This source file is subject to the terms and conditions of the
  19      =2   *    Zensys Software License Agreement which restricts the manner
  20      =2   *    in which it may be used.
  21      =2   *
  22      =2   *---------------------------------------------------------------------------
  23      =2   *
  24      =2   * Description:
  25      =2   *
  26      =2   * Author:   Thomas Kristensen
  27      =2   *
  28      =2   * Last Changed By:  $Author: iza $
  29      =2   * Revision:         $Revision: 23076 $
  30      =2   * Last Changed:     $Date: 2012-07-05 14:21:34 +0200 (to, 05 jul 2012) $
  31      =2   *
  32      =2   ****************************************************************************/
  33      =2  #ifndef _BIN_SENSOR_H_
  34      =2  #define _BIN_SENSOR_H_
  35      =2  /****************************************************************************/
  36      =2  /*                              INCLUDE FILES                               */
  37      =2  /****************************************************************************/
  38      =2  
  39      =2  
  40      =2  /****************************************************************************/
  41      =2  /*                     EXPORTED TYPES and DEFINITIONS                       */
  42      =2  /****************************************************************************/
  43      =2  #if defined(__ICCAVR__) || defined(__C51__)
  44      =2  
  45      =2  /* Offsets into frame received */
  46      =2  #define OFFSET_CLASSCMD                       0x00
  47      =2  #define OFFSET_CMD                            0x01
  48      =2  #define OFFSET_PARAM_1                        0x02
  49      =2  #define OFFSET_PARAM_2                        0x03
  50      =2  #define OFFSET_PARAM_3                        0x04
  51      =2  #define OFFSET_PARAM_4                        0x05
  52      =2  #define OFFSET_PARAM_5                        0x06
  53      =2  #define OFFSET_PARAM_6                        0x07
  54      =2  
  55      =2  /* How many classes do we belong to */
  56      =2  #ifdef BATTERY
  61      =2  #define CLASS_MEMBERSHIP_COUNT  5
  62      =2  #endif
  63      =2  
  64      =2  
  65      =2  typedef struct s_nodeInfo_
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 383 

  66      =2  {
  67      =2     BYTE memberClass[CLASS_MEMBERSHIP_COUNT];  /* Command class membership */
  68      =2  } t_nodeInfo;
  69      =2  
  70      =2  typedef struct s_nodeStatus_ {
  71      =2    BYTE status;    /* Sensor report status    */
  72      =2    BYTE level;     /* Reported sensor level   */
  73      =2    BYTE onValue;   /* Destination node BASIC_SET on level */
  74      =2    BYTE onTime;    /* Destination node on time (after sensor go off) */
  75      =2  } t_nodeStatus;
  76      =2  
  77      =2  #if defined(ZW020x) || defined(ZW030x)
  78      =2  #define SENSOR_ACTIVATED() (PIN_GET(INT1pin)? FALSE : TRUE)
  79      =2  #endif /* ZW020x */
  80      =2  
  81      =2  /* Default values */
  82      =2  
  83      =2  #define MAGIC_VALUE                 0x42
  84      =2  
  85      =2  /* Application states */
  86      =2  /* IDLE AND EXECUTE states are required by the battery libraray */ 
  87      =2  
  88      =2  typedef enum {
  89      =2    STATE_APPL_IDLE = 0,    /* Application is idle = doing nothing - allow powerdown */
  90      =2    STATE_HEAL_LOST,        /* HEAL: Device is Lost, unable to contact SUC */
  91      =2    STATE_HEAL_ASSOCIATED_FAIL, /* HEAL: Unable to contact an associated Node, contact SUC */
  92      =2    STATE_BASIC_CMD,            /* Button was pressed, node is sending a Basic Set to
  93      =2                                               associated nodes (if they exist) or a Basic Report broadcast 
             -*/
  94      =2    STATE_BASIC_CMD_START,      /* Button was pressed, start sending a Basic Set to
  95      =2                                               associated nodes or broadcast Basic Report */
  96      =2    STATE_KEEP_ALIVE,           /* Button was pressed, start sending a Basic Set to
  97      =2                                               associated nodes or broadcast Basic Report */
  98      =2    STATE_LEARN_MODE,           /* Button was held down, keep node alive for an extended
  99      =2                                               period to accept messages */
 100      =2    STATE_LEARN_MODE_START,     /* Button was pressed, device is in learn mode */
 101      =2    STATE_CHECK_INPUT,          /* Button was pressed, put device in learn mode */
 102      =2    STATE_EXECUTE,              /* Polling the button and the sensor */
 103      =2    STATE_WAKEUP_NOTIFICATION_START,  /* Waiting for a callback or other operation to finish, power down is pr
             -ohibited */
 104      =2    STATE_WAKEUP_NOTIFICATION,
 105      =2    STATE_COMMAND_HANDLER,
 106      =2    STATE_WAIT_FOR_BUTTON_RELEASE, /*Stay here until button is released*/
 107      =2    STATE_BASIC_CMD_WAIT            /* Delay basic set to see if a triple press is performed */
 108      =2  }AppState_Typedef;
 109      =2  
 110      =2  
 111      =2  /* TO#2024 fix, changed timeout from 5 to 8 seconds */
 112      =2  #define WATCHDOG_TIMEOUT              8 /* If state lasts longer it should restart timer at safe location 
             -*/
 113      =2  
 114      =2  /* Sensor bounce count determines how many consecutive */
 115      =2  /* "Sensor activated" or "Sensor deactivated" messages must */
 116      =2  /* be received before a change is triggered by sending off */
 117      =2  /* a binary sensor report. */
 118      =2  #define DEFAULT_SENSORBOUNCECOUNT 5
 119      =2  
 120      =2  /* PowerDownTimeout determines the number of seconds */
 121      =2  /* the sensor is kept alive between powerdowns.      */
 122      =2  /* The default is one second, which is probably      */
 123      =2  /* too little if you are routing in your network.    */
 124      =2  #define BIN_POWERDOWNTIMEOUT    (DEFAULT_POWERDOWNTIMEOUT + DEFAULT_KEEPALIVETIMEOUT)
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 384 

 125      =2  
 126      =2  /* KeepAliveTimeout determines the number of seconds */
 127      =2  /* the sensor is kept alive when the button is       */
 128      =2  /* activated for more than KEEPALIVEACTIVATEPERIOD   */
 129      =2  /* seconds. This can be used when installing the     */
 130      =2  /* sensor in a network.                              */
 131      =2  /* Default keepalive is 30 seconds. */
 132      =2  #define BIN_KEEPALIVETIMEOUT    (DEFAULT_KEEPALIVETIMEOUT + 5)
 133      =2  
 134      =2  #define TIME_DELAY_BASIC_SET      100
 135      =2  
 136      =2  #endif /* defined(__ICCAVR__) || defined(__C51__) */
 137      =2  
 138      =2  /****************************************************************************/
 139      =2  /*                              EXPORTED DATA                               */
 140      =2  /****************************************************************************/
 141      =2  extern ZW_APPLICATION_TX_BUFFER txBuf;
 142      =2  extern BYTE myNodeID;
 143      =2  extern BYTE myHomeID[4];
 144      =2  extern BYTE currentState;
 145      =2  extern BYTE nextState;
 146      =2  extern BOOL keepAliveActive;
 147      =2  extern BYTE masterNodeID;
 148      =2  
 149      =2  /****************************************************************************/
 150      =2  /*                           EXPORTED FUNCTIONS                             */
 151      =2  /****************************************************************************/
 152      =2  
 153      =2  void StartWatchdog( void );
 154      =2  void StopWatchdog( void );
 155      =2  
 156      =2  #endif /*_BATTERY_SENSOR_H_*/
  40      =1  
  41      =1  /****************************************************************************/
  42      =1  /*                     EXPORTED TYPES and DEFINITIONS                       */
  43      =1  /****************************************************************************/
  44      =1  
  45      =1  /* EEPROM address definitions */
  46      =1  
  47      =1  /* EEPROM binary battery sensor node layout */
  48      =1  #define EEOFFSET_SENSOR_LEVEL             0x00
  49      =1  #define EEOFFSET_SENSOR_STATUS            EEOFFSET_SENSOR_LEVEL + 1
  50      =1  #define EEOFFSET_SENSOR_ONVALUE           EEOFFSET_SENSOR_STATUS + 1
  51      =1  #define EEOFFSET_SENSOR_ONTIME            EEOFFSET_SENSOR_ONVALUE + 1
  52      =1  
  53      =1  #define EEOFFSET_POWERDOWNTIMEOUT         EEOFFSET_SENSOR_ONTIME + 1
  54      =1  #define EEOFFSET_KEEPALIVETIMEOUT         EEOFFSET_POWERDOWNTIMEOUT + 1
  55      =1  #define EEOFFSET_KEEPALIVEACTIVATETIMEOUT EEOFFSET_KEEPALIVETIMEOUT + 1
  56      =1  #define EEOFFSET_WAKEUP_COUNT_1           EEOFFSET_KEEPALIVEACTIVATETIMEOUT + 1
  57      =1  #define EEOFFSET_WAKEUP_COUNT_2           EEOFFSET_WAKEUP_COUNT_1 + 1
  58      =1  #define EEOFFSET_WAKEUP_COUNT_3           EEOFFSET_WAKEUP_COUNT_2 + 1
  59      =1  #define EEOFFSET_WAKEUP_COUNT_4           EEOFFSET_WAKEUP_COUNT_3 + 1
  60      =1  
  61      =1  #define EEOFFSET_MASTER_NODEID            EEOFFSET_WAKEUP_COUNT_4 + 1
  62      =1  #define EEOFFSET_SLEEP_PERIOD_1           EEOFFSET_MASTER_NODEID + 1
  63      =1  #define EEOFFSET_SLEEP_PERIOD_2           EEOFFSET_SLEEP_PERIOD_1 + 1
  64      =1  #define EEOFFSET_SLEEP_PERIOD_3           EEOFFSET_SLEEP_PERIOD_2 + 1
  65      =1  #define EEOFFSET_RTC_TIMER_HANDLE         EEOFFSET_SLEEP_PERIOD_3 + 1
  66      =1  
  67      =1  #ifdef ZW_SELF_HEAL
  68      =1  #define EEOFFSET_LOST_COUNTER             EEOFFSET_RTC_TIMER_HANDLE + 1
  69      =1  #define EEOFFSET_COMMON_END               EEOFFSET_LOST_COUNTER
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 385 

  70      =1  #else
  73      =1  
  74      =1  #define EEOFFSET_LERN_MODE      EEOFFSET_COMMON_END + 1 
  75      =1  #define EEOFFSET_MAGIC                    EEOFFSET_LERN_MODE + 1  /* MAGIC */
  76      =1  
  77      =1  #define EEOFFSET_ASSOCIATION_START        EEOFFSET_MAGIC + 1
  78      =1  #define EEOFFSET_ASSOCIATION_MAGIC        EEOFFSET_ASSOCIATION_START + ASSOCIATION_SIZE
  79      =1  
  80      =1  #define EEOFFSET_TRANSPORT_SETTINGS_START EEOFFSET_ASSOCIATION_MAGIC + 1
  81      =1  #define EEOFFSET_TRANSPORT_SETTINGS_SIZE  TRANSPORT_EEPROM_SETTINGS_SIZE
  82      =1  
  83      =1  #endif /* _EEPROM_H_ */
  57          #include <ZW_uart_api.h>
   1      =1  /*******************************  ZW_UART_API.H  ****************************
   2      =1   *           #######
   3      =1   *           ##  ##
   4      =1   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =1   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =1   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =1   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =1   *          #######   ####   ##  ##  #####       ##  #####
   9      =1   *                                           #####
  10      =1   *          Z-Wave, the wireless language.
  11      =1   *
  12      =1   *              Copyright (c) 2001
  13      =1   *              Zensys A/S
  14      =1   *              Denmark
  15      =1   *
  16      =1   *              All Rights Reserved
  17      =1   *
  18      =1   *    This source file is subject to the terms and conditions of the
  19      =1   *    Zensys Software License Agreement which restricts the manner
  20      =1   *    in which it may be used.
  21      =1   *
  22      =1   *---------------------------------------------------------------------------
  23      =1   *
  24      =1   * Description: Interface driver for the built-in UART.
  25      =1   *
  26      =1   * Author:   Ivar Jeppesen
  27      =1   *
  28      =1   * Last Changed By:  $Author: tro $
  29      =1   * Revision:         $Revision: 19478 $
  30      =1   * Last Changed:     $Date: 2010-11-23 14:17:15 +0100 (ti, 23 nov 2010) $
  31      =1   *
  32      =1   ****************************************************************************/
  33      =1  #ifndef _ZW_UART_API_H_
  34      =1  #define _ZW_UART_API_H_
  35      =1  /****************************************************************************/
  36      =1  /*                              INCLUDE FILES                               */
  37      =1  /****************************************************************************/
  38      =1  
  39      =1  /****************************************************************************/
  40      =1  /*                     EXPORTED TYPES and DEFINITIONS                       */
  41      =1  /****************************************************************************/
  42      =1  /* Z-Wave API macroes */
  43      =1  /*===============================   UART_Init   =============================
  44      =1  **  Initializes the MCU's integrated UART.
  45      =1  **  Enables transmit and receive, selects 8 databits and
  46      =1  **  sets the specified baudrate.
  47      =1  **
  48      =1  **  IN  Baud Rate / 100 (e.g. 96, 1152 (9600, 115200))
  49      =1  **--------------------------------------------------------------------------*/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 386 

  50      =1  #define ZW_UART_INIT(baud)      UART_Init(baud)
  51      =1  
  52      =1  #define ZW_UART_SEND_BYTE(bData) UART_SendByte(bData)
  53      =1  /*===============================   ZW_UART_REC_BYTE =========================
  54      =1  **  Receive a byte over the UART
  55      =1  **
  56      =1  **    Side effects: Wait until data received
  57      =1  **
  58      =1  **--------------------------------------------------------------------------*/
  59      =1  #define ZW_UART_REC_BYTE        (UART_RecByte())
  60      =1  
  61      =1  /*===============================   UART_RecStatus   ========================
  62      =1  **  Read the UART receive data status
  63      =1  **
  64      =1  **    Side effects:
  65      =1  **
  66      =1  **--------------------------------------------------------------------------*/
  67      =1  #define ZW_UART_REC_STATUS      (UART_RecStatus())
  68      =1  
  69      =1  /*===============================   UART_SendNum   ==========================
  70      =1  **  Converts a byte to a two-byte hexadecimal ASCII representation,
  71      =1  **  and transmits it over the UART.
  72      =1  **
  73      =1  **    Side effects:
  74      =1  **
  75      =1  **--------------------------------------------------------------------------*/
  76      =1  #define ZW_UART_SEND_NUM(bData)  UART_SendNum(bData)
  77      =1  /*===============================   UART_SendStr   ==========================
  78      =1  **  Transmit a null terminated string over the UART.
  79      =1  **  The null data is not transmitted.
  80      =1  **
  81      =1  **    Side effects:
  82      =1  **
  83      =1  **--------------------------------------------------------------------------*/
  84      =1  #define ZW_UART_SEND_STRING(str)  UART_SendStr(str)
  85      =1  
  86      =1  #define ZW_UART_SEND_NL         (UART_SendNL())
  87      =1  /*===============================   UART_SendStatus   ========================
  88      =1  **  Read the UART send data status
  89      =1  **
  90      =1  **  RET TRUE if transmitter busy
  91      =1  **
  92      =1  **--------------------------------------------------------------------------*/
  93      =1  #define ZW_UART_SEND_STATUS     (UART_SendStatus())
  94      =1  
  95      =1  #if defined(ZW020x) || defined(ZW030x)
  96      =1  #define ZW_UART_CLEAR_RX    UART_ClearRx()
  97      =1  #define ZW_UART_CLEAR_TX    UART_ClearTx()
  98      =1  #define ZW_UART_READ        UART_Read()
  99      =1  #define ZW_UART_WRITE(TXBYTE)  UART_Write(TXBYTE)
 100      =1  #define ZW_UART_ENABLE           (UART_Enable())
 101      =1  #define ZW_UART_DISABLE           (UART_Disable())
 102      =1  #define ZW_UART_TX_FIRED       (UART_TxFired())
 103      =1  #endif
 104      =1  
 105      =1  /* Macroes for debug output */
 106      =1  #if defined(ZW020x) || defined(ZW030x)
 107      =1  #define ZW_DEBUG_BAUD_RATE    1152
 108      =1  #endif
 109      =1  #ifdef ZW_DEBUG
 110      =1  #define ZW_DEBUG_INIT(baud)       UART_Init(baud)
 111      =1  #define ZW_DEBUG_SEND_BYTE(bData) UART_SendByte(bData)
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 387 

 112      =1  #define ZW_DEBUG_SEND_STRING(str) UART_SendStr(str)
 113      =1  #define ZW_DEBUG_SEND_NUM(bData)  UART_SendNum(bData)
 114      =1  #define ZW_DEBUG_SEND_NL()        UART_SendNL()
 115      =1  #else
 122      =1  
 123      =1  /****************************************************************************/
 124      =1  /*                           EXPORTED FUNCTIONS                             */
 125      =1  /****************************************************************************/
 126      =1  
 127      =1  
 128      =1  /*===============================   UART_Init   =============================
 129      =1  **  Initializes the MCU's integrated UART.
 130      =1  **  Enables transmit and receive, selects 8 databits and
 131      =1  **  sets the specified baudrate.
 132      =1  **
 133      =1  **
 134      =1  **--------------------------------------------------------------------------*/
 135      =1  extern  void      /*RET Nothing */
 136      =1  UART_Init(
 137      =1  WORD baudRate);   /*IN  Baud Rate / 100 (e.g. 96, 1152 (9600, 115200)) */
 138      =1  
 139      =1  /*===============================   UART_RecStatus   ========================
 140      =1  **  Read the UART receive data status
 141      =1  **
 142      =1  **    Side effects:
 143      =1  **
 144      =1  **--------------------------------------------------------------------------*/
 145      =1  extern  BYTE            /*RET TRUE if data received */
 146      =1  UART_RecStatus(void);   /*IN  Nothing */
 147      =1  
 148      =1  /*===============================   UART_RecByte   ==========================
 149      =1  **  Receive a byte over the UART
 150      =1  **
 151      =1  **    Side effects: Wait until data received
 152      =1  **
 153      =1  **--------------------------------------------------------------------------*/
 154      =1  extern  BYTE          /*RET received data */
 155      =1  UART_RecByte(void);   /*IN  Nothing */
 156      =1  
 157      =1  /*===============================   UART_SendStatus   ========================
 158      =1  **  Read the UART send data status
 159      =1  **
 160      =1  **    Side effects:
 161      =1  **
 162      =1  **--------------------------------------------------------------------------*/
 163      =1  extern  BYTE            /*RET TRUE if transmitter busy */
 164      =1  UART_SendStatus(void);  /*IN  Nothing */
 165      =1  
 166      =1  /*===============================   UART_SendByte   =========================
 167      =1  **  Transmit a byte over the UART.
 168      =1  **
 169      =1  **    Side effects: Destroy scratch registers
 170      =1  **                  Wait until data register is free.
 171      =1  **
 172      =1  **--------------------------------------------------------------------------*/
 173      =1  extern  void          /*RET Nothing */
 174      =1  UART_SendByte(
 175      =1  BYTE bData);           /*IN bData to send */
 176      =1  
 177      =1  /*===============================   UART_SendNum   ==========================
 178      =1  **  Converts a byte to a two-byte hexadecimal ASCII representation,
 179      =1  **  and transmits it over the UART.
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 388 

 180      =1  **
 181      =1  **    Side effects:
 182      =1  **
 183      =1  **--------------------------------------------------------------------------*/
 184      =1  extern  void          /*RET Nothing */
 185      =1  UART_SendNum(
 186      =1  BYTE bData);           /*IN bData to send */
 187      =1  
 188      =1  /*===============================   UART_SendStr   ==========================
 189      =1  **  Transmit a null terminated string over the UART.
 190      =1  **  The null data is not transmitted.
 191      =1  **
 192      =1  **    Side effects:
 193      =1  **
 194      =1  **--------------------------------------------------------------------------*/
 195      =1  extern  void          /*RET Nothing */
 196      =1  UART_SendStr(
 197      =1  BYTE_P str);          /*IN String pointer */
 198      =1  
 199      =1  /*===============================   UART_SendNL   ===========================
 200      =1  **  Transmit CR + LF over the UART.
 201      =1  **
 202      =1  **    Side effects:
 203      =1  **
 204      =1  **--------------------------------------------------------------------------*/
 205      =1  extern  void          /*RET Nothing */
 206      =1  UART_SendNL(void);    /*IN Nothing */
 207      =1  
 208      =1  #if defined(ZW020x) || defined(ZW030x)
 209      =1  /*===============================   UART_ClearRx   ========================
 210      =1  **  Clear the UART Rx indication flag
 211      =1  **
 212      =1  **    Side effects:
 213      =1  **--------------------------------------------------------------------------*/
 214      =1  void
 215      =1  UART_ClearRx();
 216      =1  /*===============================   UART_ClearTx   ========================
 217      =1  **  Clear the UART Tx Done indication flag
 218      =1  **
 219      =1  **    Side effects:
 220      =1  **--------------------------------------------------------------------------*/
 221      =1  void
 222      =1  UART_ClearTx();
 223      =1  /*===============================   UART_ReadRx   ========================
 224      =1  **  Read the content of the UART receive register
 225      =1  **
 226      =1  **    Side effects:
 227      =1  **--------------------------------------------------------------------------*/
 228      =1  
 229      =1  BYTE    /*RET: the content of the receive register*/
 230      =1  UART_Read();
 231      =1  
 232      =1  /*===============================   UART_WriteTx   ========================
 233      =1  **  Write a byte to UART Transmit register
 234      =1  **    Side effects:
 235      =1  **--------------------------------------------------------------------------*/
 236      =1  void
 237      =1  UART_Write(
 238      =1    BYTE txByte);  /*IN: a byte to write to the UART transmit register.*/
 239      =1  
 240      =1  
 241      =1  /*===============================   UART_Enable   ========================
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 389 

 242      =1  **  Enabel the UART.
 243      =1  **    Side effects:
 244      =1  **--------------------------------------------------------------------------*/
 245      =1  void
 246      =1  UART_Enable(void);
 247      =1  
 248      =1  /*===============================   UART_Disable   ========================
 249      =1  **  Enabel the UART.
 250      =1  **    Side effects:
 251      =1  **--------------------------------------------------------------------------*/
 252      =1  void
 253      =1  UART_Disable(void);
 254      =1  
 255      =1  /*===============================   UART_TxFired   ========================
 256      =1  **  This funtion check if the UART has sent a byte.
 257      =1  **    Side effects:
 258      =1  **--------------------------------------------------------------------------*/
 259      =1  BOOL              /*Return TRUE if the UART is done with sending a byte else retrun FALSE.*/
 260      =1  UART_TxFired(void);
 261      =1  
 262      =1  #endif /*ZW020x*/
 263      =1  #endif /* _ZW_UART_API_H_ */
  58          
  59          #ifdef BATTERY
  62          
  63          #include <self_heal.h>
   1      =1  /******************************* self_heal.h *******************************
   2      =1   *           #######
   3      =1   *           ##  ##
   4      =1   *           #  ##    ####   #####    #####  ##  ##   #####
   5      =1   *             ##    ##  ##  ##  ##  ##      ##  ##  ##
   6      =1   *            ##  #  ######  ##  ##   ####   ##  ##   ####
   7      =1   *           ##  ##  ##      ##  ##      ##   #####      ##
   8      =1   *          #######   ####   ##  ##  #####       ##  #####
   9      =1   *                                           #####
  10      =1   *          Z-Wave, the wireless language.
  11      =1   *
  12      =1   *              Copyright (c) 2006
  13      =1   *              Zensys A/S
  14      =1   *              Denmark
  15      =1   *
  16      =1   *              All Rights Reserved
  17      =1   *
  18      =1   *    This source file is subject to the terms and conditions of the
  19      =1   *    Zensys Software License Agreement which restricts the manner
  20      =1   *    in which it may be used.
  21      =1   *
  22      =1   *---------------------------------------------------------------------------
  23      =1   *
  24      =1   * Description: Implements functions that make is easy to support
  25      =1   *              self-heal Operated Nodes
  26      =1   *
  27      =1   * Author:   Jonas Roum-Møller
  28      =1   *
  29      =1   * Last Changed By:  $Author: iza $
  30      =1   * Revision:         $Revision: 21351 $
  31      =1   * Last Changed:     $Date: 2011-09-23 10:57:12 +0200 (fr, 23 sep 2011) $
  32      =1   *
  33      =1   ****************************************************************************/
  34      =1  #ifndef _SELF_HEAL_H_
  35      =1  #define _SELF_HEAL_H_
  36      =1  
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 390 

  37      =1  /****************************************************************************/
  38      =1  /*                              INCLUDE FILES                               */
  39      =1  /****************************************************************************/
  40      =1  /****************************************************************************/
  41      =1  /*                      PRIVATE TYPES and DEFINITIONS                       */
  42      =1  /****************************************************************************/
  43      =1  /* Recovery states */
  44      =1  #define HEAL_NONE                 0x00  /* No recovery operation in progress */
  45      =1  #define HEAL_SUC                  0x01  /* Next timeout - try talking to SUC if available */
  46      =1  #define HEAL_WAKEUPNODE           0x02  /* Next timeout - try talking to wakeupnode */
  47      =1  #define HEAL_GENERAL              0x03  /* Next timeout - try talking to SearchNodeID */
  48      =1  
  49      =1  /* DEFAULT_LOST_COUNTER_MAX is used to determine when the node */
  50      =1  /* has lost the ability to communicate with it's wakeup */
  51      =1  /* notification node. The value specifies how many failed */
  52      =1  /* attempts is allowed, before the node starts yelling for help . */
  53      =1  #define DEFAULT_LOST_COUNTER_MAX      3
  54      =1  
  55      =1  #define REDISCOVERY_TIMEOUT 100 /* 100 x 10ms */
  56      =1  
  57      =1  
  58      =1  /* Network Update timings */
  59      =1  /* Default 30 minutes between "Network Update Request"s */
  60      =1  #define DEFAULT_NETWORK_UPDATE_COUNT 7 // 30 //IZ:Fix TO# 02957 
  61      =1  /* Minimum 30 minutes between "Network Update Request"s */
  62      =1  #define NETWORK_UPDATE_MIN_COUNT  DEFAULT_NETWORK_UPDATE_COUNT
  63      =1  /* Maximum 180 minutes between "Network Update Request"s */
  64      =1  #define NETWORK_UPDATE_MAX_COUNT  19 // 180 //IZ:Fix TO# 02957 
  65      =1  
  66      =1  
  67      =1  /****************************************************************************/
  68      =1  /*                              EXPORTED DATA                               */
  69      =1  /****************************************************************************/
  70      =1  
  71      =1  extern BYTE currentHealMode;
  72      =1  extern BYTE networkUpdateTimerHandle;
  73      =1  
  74      =1  /* Data that must be maintained after powerdown */
  75      =1  extern XBYTE networkUpdateDownCount ;
  76      =1  extern XBYTE networkUpdateFailureCount;
  77      =1  #if defined (ZW020x) || defined(ZW030x)
  78      =1  extern XBYTE lostCount;
  79      =1  #endif
  80      =1  #ifdef ZW010x
  83      =1  /****************************************************************************/
  84      =1  /*                            PRIVATE FUNCTIONS                             */
  85      =1  /****************************************************************************/
  86      =1  
  87      =1  
  88      =1  
  89      =1  
  90      =1  /****************************************************************************/
  91      =1  /*                           EXPORTED FUNCTIONS                             */
  92      =1  /****************************************************************************/
  93      =1  void SetDefaultNetworkUpdateConfiguration( void );
  94      =1  void VerifyAssociatedTransmit(BYTE txStatus, BYTE attemptedNodeId);
  95      =1  BOOL VerifyLostCount( void );
  96      =1  void UpdateNetworkUpdateCount( BOOL reset );
  97      =1  void UpdateNetworkUpdateCountOneMinute( void );
  98      =1  void HealComplete( BOOL success );
  99      =1  void AskNodeForHelp(BYTE NodeID);
 100      =1  void UpdateLostCounter(BYTE txStatus);
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 391 

 101      =1  BYTE ZW_GetSUCNodeID( void );
 102      =1  void CancelRediscoveryTimer( void );
 103      =1  
 104      =1  
 105      =1  #endif /*_SELF_HEAL_H_*/
  64          
  65          
  66          /****************************************************************************/
  67          /*                      PRIVATE TYPES and DEFINITIONS                       */
  68          /****************************************************************************/
  69          
  70          /* Data that must be maintained after powerdown */
  71          #if defined (ZW020x) || defined(ZW030x)
  72          XBYTE networkUpdateDownCount    _at_ (NON_ZERO_START_ADDR);
  73          XBYTE networkUpdateFailureCount _at_ (NON_ZERO_START_ADDR + sizeof(BYTE));
  74          XBYTE lostCount                 _at_ (NON_ZERO_START_ADDR + 2*sizeof(BYTE));
  75          #endif
  76          #ifdef ZW010x
  81          
  82          #ifndef BATTERY
  83          BYTE networkUpdateTimerHandle = 0xFF;
  84          #endif
  85          
  86          BYTE searchNodeID;
  87          BYTE rediscoveryTimerHandle = 0xFF;
  88          
  89          BYTE oneMinute = 60;
  90          BOOL abortHeal = FALSE;
  91          
  92          void callbackDelayNextAskNodeForHelp( void );
  93          
  94          /****************************************************************************/
  95          /*                              EXPORTED DATA                               */
  96          /****************************************************************************/
  97          BYTE currentHealMode = HEAL_NONE;
  98          
  99          /****************************************************************************/
 100          /*                            PRIVATE FUNCTIONS                             */
 101          /****************************************************************************/
 102          
 103          /*============================   callbackAskNodeForHelp   ======================
 104          **    Function description
 105          **
 106          **
 107          **    Side effects:
 108          **
 109          **--------------------------------------------------------------------------*/
 110          void                   /*RET  Nothing       */
 111          callbackAskNodeForHelp(
 112          BYTE txStatus)        /*IN   Transmission result           */
 113          {
 114   1        ZW_DEBUG_SEND_BYTE('H');
 115   1        ZW_DEBUG_SEND_BYTE('m');
 116   1        ZW_DEBUG_SEND_NUM(currentHealMode);
 117   1      
 118   1        LED_ON(3);
 119   1      
 120   1        if (txStatus == ZW_ROUTE_UPDATE_DONE)
 121   1        {
 122   2          HealComplete(TRUE);
 123   2        }
 124   1        else /* txStatus == ZW_ROUTE_LOST_FAILED */
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 392 

 125   1        {
 126   2          ZW_DEBUG_SEND_BYTE('H');
 127   2          ZW_DEBUG_SEND_BYTE('m');
 128   2          ZW_DEBUG_SEND_BYTE('1');
 129   2          if (currentHealMode == HEAL_SUC)
 130   2          {
 131   3            /* We've asked the SUC but gotten no help or a bad response. */
 132   3            /* Now we try the WakeupNode if it's defined. */
 133   3            if (masterNodeID != 0xFF)
 134   3            {
 135   4              currentHealMode = HEAL_WAKEUPNODE;
 136   4              searchNodeID = masterNodeID;
 137   4            }
 138   3            else
 139   3            {
 140   4              currentHealMode = HEAL_GENERAL;
 141   4              searchNodeID = 1;
 142   4            }
 143   3          }
 144   2          else if (currentHealMode == HEAL_WAKEUPNODE)
 145   2          {
 146   3            /* No help from the wakeupnode so go into general */
 147   3            /* recovery mode where all nodes from nodeid 1 to ZW_MAX_NODES is */
 148   3            /* asked for help. */
 149   3            currentHealMode = HEAL_GENERAL;
 150   3            searchNodeID = 1;
 151   3          }
 152   2          else if (currentHealMode == HEAL_GENERAL)
 153   2          {
 154   3          ZW_DEBUG_SEND_BYTE('H');
 155   3          ZW_DEBUG_SEND_BYTE('m');
 156   3          ZW_DEBUG_SEND_BYTE('2');
 157   3          ZW_DEBUG_SEND_BYTE('n');
 158   3          ZW_DEBUG_SEND_NUM(searchNodeID);
 159   3            searchNodeID++;
 160   3            searchNodeID = (searchNodeID == myNodeID ? searchNodeID + 1 : searchNodeID);
 161   3      
 162   3            if (searchNodeID > ZW_MAX_NODES)
 163   3            {
 164   4              ZW_DEBUG_SEND_BYTE('H');
 165   4              ZW_DEBUG_SEND_BYTE('m');
 166   4              ZW_DEBUG_SEND_BYTE('M');
 167   4              /* We have reached the end of the line. Apparently there are no */
 168   4              /* nodes available at all and the recovery has failed. */
 169   4              /* Reset everything. */
 170   4              searchNodeID = 1;
 171   4              HealComplete(FALSE);
 172   4              currentHealMode = HEAL_NONE;
 173   4              currentState = STATE_APPL_IDLE;
 174   4              nextState = STATE_APPL_IDLE;
 175   4            }
 176   3          }
 177   2      
 178   2          /* Delay 1 second before calling ZW_RediscoveryNeeded again. */
 179   2          if (currentHealMode != HEAL_NONE)
 180   2          {
 181   3                ZW_DEBUG_SEND_BYTE('H');
 182   3          ZW_DEBUG_SEND_BYTE('m');
 183   3          ZW_DEBUG_SEND_BYTE('N');
 184   3             if(rediscoveryTimerHandle != 0xFF)
 185   3             {
 186   4               ZW_DEBUG_SEND_BYTE('f');
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 393 

 187   4               ZW_DEBUG_SEND_NUM(rediscoveryTimerHandle);
 188   4               ZW_TIMER_CANCEL(rediscoveryTimerHandle);
 189   4               rediscoveryTimerHandle = 0xFF;
 190   4             }
 191   3             StartWatchdog();
 192   3             rediscoveryTimerHandle = ZW_TIMER_START(callbackDelayNextAskNodeForHelp, REDISCOVERY_TIMEOUT, TIMER
             -_ONE_TIME);
 193   3             ZW_DEBUG_SEND_NUM(rediscoveryTimerHandle);
 194   3          }
 195   2        }
 196   1      }
 197          
 198          
 199          /*============================   AskNodeForHelp   ======================
 200          **    Function description
 201          **    Sends a ZW_RediscoveryNeeded message to the specified nodeid.
 202          **
 203          **    Side effects:
 204          **
 205          **--------------------------------------------------------------------------*/
 206          void                   /*RET  Nothing       */
 207          AskNodeForHelp(
 208          BYTE NodeID)           /*IN   ID of node where ZW_RediscoveryNeeded will be sent to. */
 209          {
 210   1        ZW_DEBUG_SEND_BYTE('H');
 211   1        ZW_DEBUG_SEND_BYTE('3');
 212   1        ZW_DEBUG_SEND_BYTE(' ');
 213   1        ZW_DEBUG_SEND_NUM(NodeID);
 214   1        ZW_DEBUG_SEND_BYTE(' ');
 215   1      
 216   1        if (!ZW_REDISCOVERY_NEEDED(NodeID, callbackAskNodeForHelp))
 217   1        {
 218   2          ZW_DEBUG_SEND_BYTE('H');
 219   2          ZW_DEBUG_SEND_BYTE('3');
 220   2          ZW_DEBUG_SEND_BYTE('f');
 221   2      
 222   2          HealComplete(FALSE);
 223   2        }
 224   1      }
 225          
 226          /*============================   cbDelayNextAskNodeForHelp   ======================
 227          **    Function description
 228          **    The purpose of this timer callback function is to delay execution
 229          **    of ZW_RediscoveryNeeded.
 230          **
 231          **    Side effects:
 232          **
 233          **--------------------------------------------------------------------------*/
 234          void                   /*RET  Nothing       */
 235          callbackDelayNextAskNodeForHelp( void )
 236          {
 237   1        ZW_DEBUG_SEND_BYTE('H');
 238   1        ZW_DEBUG_SEND_BYTE('5');
 239   1        LED_OFF(3);
 240   1        /* TO#2053 Do not cancel an expired timer */
 241   1        rediscoveryTimerHandle = 0xFF;
 242   1      
 243   1        AskNodeForHelp(searchNodeID);
 244   1      }
 245          
 246          
 247          
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 394 

 248          /****************************************************************************/
 249          /*                           EXPORTED FUNCTIONS                             */
 250          /****************************************************************************/
 251          
 252          
 253          /*============================   SetDefaultNetworkUpdateConfiguration   ======================
 254          **    Function resets configuration to default values.
 255          **
 256          **    Side effects:
 257          **
 258          **--------------------------------------------------------------------------*/
 259          void                   /*RET  Nothing       */
 260          SetDefaultNetworkUpdateConfiguration( void )
 261          {
 262   1        lostCount = 0;
 263   1        networkUpdateDownCount = DEFAULT_NETWORK_UPDATE_COUNT;
 264   1      }
 265          
 266          /*============================   UpdateLostCounter   ======================
 267          **    The "Lost Counter" is used to keep track of whether the sensor
 268          **    can communicate with other nodes in the network. On each successful
 269          **    transmission, the lost counter is reset to 0, otherwise it is
 270          **    incremented.
 271          **    Side effects:
 272          **
 273          **--------------------------------------------------------------------------*/
 274          void                   /*RET  Nothing       */
 275          UpdateLostCounter(
 276          BYTE txStatus)           /*IN   Transmission result           */
 277          {
 278   1      
 279   1        ZW_DEBUG_SEND_BYTE('H');
 280   1        ZW_DEBUG_SEND_BYTE('0');
 281   1      
 282   1        if (txStatus != ZW_ROUTE_UPDATE_DONE)
 283   1        {
 284   2          ZW_DEBUG_SEND_BYTE('H');
 285   2          ZW_DEBUG_SEND_BYTE('f');
 286   2      
 287   2          lostCount++;
 288   2      
 289   2          /* It's not important to know exactly how many times our comms have failed*/
 290   2          /* it's enough to know that the threshold has been passed - hence this */
 291   2          /* adjustment to the passed parameter before saving it. */
 292   2          if (lostCount > DEFAULT_LOST_COUNTER_MAX)
 293   2          {
 294   3            lostCount = DEFAULT_LOST_COUNTER_MAX + 1;
 295   3          }
 296   2        }
 297   1        else
 298   1        {
 299   2          ZW_DEBUG_SEND_BYTE('H');
 300   2          ZW_DEBUG_SEND_BYTE('s');
 301   2          /* Default signals that everything is ok and "Lost Count" is reset to 0 */
 302   2          lostCount = 0;
 303   2        }
 304   1        VerifyLostCount();
 305   1      }
 306          
 307          /*===========================   GetRandomNodeTime   ===========================
 308           *
 309           *  Function description
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 395 

 310           *    Get a pseudo-random time
 311           *
 312           *  Side effects:
 313           *
 314           *--------------------------------------------------------------------------*/
 315          static BYTE                    /*RET A pseudo random nodeID */
 316          GetRandomNetUpdateCount( void ) /* IN Nothing */
 317          {
 318   1      # if 0    // IZ:Fix TO# 02957 
 353   1        register BYTE delay,result;
 354   1      
 355   1        delay = ZW_Random();
 356   1        result = NETWORK_UPDATE_MIN_COUNT + delay % (NETWORK_UPDATE_MAX_COUNT - NETWORK_UPDATE_MIN_COUNT); 
 357   1      
 358   1        ZW_DEBUG_SEND_BYTE('_');
 359   1        ZW_DEBUG_SEND_BYTE('N');
 360   1        ZW_DEBUG_SEND_BYTE('r');
 361   1        ZW_DEBUG_SEND_NUM(delay);
 362   1        ZW_DEBUG_SEND_BYTE(' ');
 363   1        ZW_DEBUG_SEND_BYTE('N');
 364   1        ZW_DEBUG_SEND_BYTE('d');
 365   1        ZW_DEBUG_SEND_NUM(result);
 366   1        ZW_DEBUG_SEND_BYTE('_');
 367   1      
 368   1        return result;  
 369   1      #endif
 370   1      }
 371          
 372          
 373          /*===========================   VerifyAssociatedTransmitCallback    ==================
 374           *
 375           *  Function description
 376           *    If ZW_RequestNewRouteDestinations failed, try to find the SUC
 377           *
 378           *  Side effects:
 379           *
 380           *--------------------------------------------------------------------------*/
 381          void                    /*RET nothing */
 382          VerifyAssociatedTransmitCallback( BYTE SUCStatus) /* IN SUCStatus  */
 383          {
 384   1        if (SUCStatus == ZW_ROUTE_UPDATE_ABORT)
 385   1        {
 386   2         lostCount++;
 387   2        ZW_DEBUG_SEND_BYTE('V');
 388   2        ZW_DEBUG_SEND_BYTE('A');
 389   2        ZW_DEBUG_SEND_NUM(SUCStatus);
 390   2      
 391   2         VerifyLostCount();
 392   2        } else if ( SUCStatus == ZW_ROUTE_UPDATE_DONE){
 393   2          currentState = STATE_APPL_IDLE;
 394   2        }
 395   1      }
 396          
 397          
 398          /*===========================   VerifyAssociatedTransmit    ==================
 399           *
 400           *  Function description
 401           *    Verify the status of the transmit to an associated node, if failed
 402           *    request new Return Routes for the destinations listed in pDestList.
 403           *    As ZW_REQUEST_NEW_ROUTE_DESTINATIONS erase return route for destinations
 404           *    not in pDestList then we have to list all the Destinations we need
 405           *    Return routes for.
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 396 

 406           *    As the usage of this function could potentially result in new
 407           *    Return Routes being requested after every transmit to a dead node it
 408           *    is advised only to call this after several tries have been made.
 409           *
 410           *  Side effects:
 411           *    If txStatus indicates failed transmit then new Destination Return Route
 412           *    are requested for all node listed in pDestList.
 413           *
 414           *
 415           *--------------------------------------------------------------------------*/
 416          void                      /*RET nothing */
 417          VerifyAssociatedTransmit(
 418            BYTE txStatus,
 419            BYTE attemptedNodeId   /* IN transmit status , the node id of the attempted transmit */
 420          )
 421          {
 422   1        if (txStatus != TRANSMIT_COMPLETE_OK)
 423   1        {
 424   2          ZW_DEBUG_SEND_BYTE('V');
 425   2          ZW_DEBUG_SEND_BYTE('f');
 426   2          ZW_DEBUG_SEND_NUM(txStatus);
 427   2      
 428   2          currentState = STATE_HEAL_ASSOCIATED_FAIL;
 429   2          nextState = STATE_APPL_IDLE;
 430   2          ZW_REQUEST_NEW_ROUTE_DESTINATIONS(&attemptedNodeId,1,VerifyAssociatedTransmitCallback);
 431   2        }
 432   1      }
 433          
 434          
 435          
 436          
 437          /*============================   UpdateLostCounterCallback   ======================
 438          **
 439          **    Side effects:
 440          **
 441          **--------------------------------------------------------------------------*/
 442          void                   /*RET  Nothing       */
 443          UpdateNetworkUpdateCountCallback(BYTE txStatus )           /*IN   Nothing           */
 444          {
 445   1         if (txStatus == ZW_ROUTE_UPDATE_ABORT)
 446   1         {
 447   2           ZW_DEBUG_SEND_BYTE('N');
 448   2           ZW_DEBUG_SEND_BYTE('f');
 449   2           ZW_DEBUG_SEND_NUM(lostCount);
 450   2           lostCount++;
 451   2           VerifyLostCount();
 452   2         } else {
 453   2           lostCount = 0;
 454   2         }
 455   1      
 456   1      }
 457          
 458          /*============================   UpdateLostCounterOneMinute   ======================
 459          **
 460          **    Side effects:
 461          **
 462          **--------------------------------------------------------------------------*/
 463          void                   /*RET  Nothing       */
 464          UpdateNetworkUpdateCountOneMinute(void )           /*IN   Nothing           */
 465          {
 466   1        oneMinute--;
 467   1        if(oneMinute <= 0)
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 397 

 468   1          {
 469   2           ZW_DEBUG_SEND_BYTE('T');
 470   2           ZW_DEBUG_SEND_BYTE('m');
 471   2           oneMinute = 60;
 472   2           UpdateNetworkUpdateCount( FALSE );
 473   2          }
 474   1      }
 475          
 476          /*========================   UpdateNetworkUpdateCount   ===================
 477          **
 478          **    Side effects:
 479          **
 480          **--------------------------------------------------------------------------*/
 481          void                   /*RET  Nothing       */
 482          UpdateNetworkUpdateCount( BOOL reset )           /*IN   BOOL, reset if true, else increment           */
 483          {
 484   1        if(reset || myNodeID == 0)
 485   1        {
 486   2            ZW_DEBUG_SEND_BYTE(' ');
 487   2              ZW_DEBUG_SEND_BYTE('E');
 488   2              ZW_DEBUG_SEND_BYTE('N');
 489   2              ZW_DEBUG_SEND_BYTE('D');
 490   2              /* We have reached the end of the line. Apparently there are no */
 491   2              /* nodes available at all and the recovery has failed. */
 492   2              /* Reset everything. */
 493   2              searchNodeID = 1;
 494   2              HealComplete(FALSE);
 495   2              currentHealMode = HEAL_NONE;
 496   2              currentState = STATE_APPL_IDLE;
 497   2              nextState = STATE_APPL_IDLE;
 498   2      
 499   2      
 500   2      ////    networkUpdateDownCount = GetRandomNetUpdateCount();
 501   2        } else {
 502   2          /* Update network rediscovery count down time */
 503   2          networkUpdateDownCount = networkUpdateDownCount - 1;
 504   2          ZW_DEBUG_SEND_BYTE('T');
 505   2          ZW_DEBUG_SEND_BYTE('n');
 506   2          ZW_DEBUG_SEND_NUM(networkUpdateDownCount);
 507   2      
 508   2          if (networkUpdateDownCount <= 0)
 509   2          {
 510   3            ZW_DEBUG_SEND_BYTE('T');
 511   3            ZW_DEBUG_SEND_BYTE('k');
 512   3      
 513   3            networkUpdateDownCount = GetRandomNetUpdateCount();
 514   3            ZW_REQUEST_NETWORK_UPDATE(UpdateNetworkUpdateCountCallback);
 515   3          }
 516   2        }
 517   1      
 518   1      }
 519          
 520          /*============================   VerifyLostCount   ======================
 521          **    Function description
 522          **    Start Self Healing
 523          **
 524          **    Side effects:
 525          **
 526          **--------------------------------------------------------------------------*/
 527          BOOL                   /*RET  BOOL       */
 528          VerifyLostCount( void )
 529          {
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 398 

 530   1          /* We are already doing something about it */
 531   1          if(currentHealMode != HEAL_NONE)
 532   1          {
 533   2            return TRUE;
 534   2          }
 535   1          ZW_DEBUG_SEND_BYTE('V');
 536   1          ZW_DEBUG_SEND_BYTE('l');
 537   1          ZW_DEBUG_SEND_BYTE(' ');
 538   1          ZW_DEBUG_SEND_NUM(lostCount);
 539   1          ZW_DEBUG_SEND_BYTE(' ');
 540   1      
 541   1          /* Check if the sensor has exceeded the "Lost Counter" limit and take action */
 542   1          if (lostCount >= DEFAULT_LOST_COUNTER_MAX)
 543   1          {
 544   2      //    currentState = STATE_HEAL_LOST;
 545   2      //    nextState = STATE_APPL_IDLE;
 546   2            ZW_DEBUG_SEND_BYTE('H');
 547   2            ZW_DEBUG_SEND_BYTE('7');
 548   2            ZW_DEBUG_SEND_BYTE('S');
 549   2            ZW_DEBUG_SEND_BYTE('s');
 550   2            ZW_DEBUG_SEND_NUM(currentState);
 551   2            ZW_DEBUG_SEND_BYTE('n');
 552   2            ZW_DEBUG_SEND_NUM(nextState);
 553   2      
 554   2            /* At least the last DEFAULT_LOST_COUNTER_MAX wake up notifications has failed */
 555   2            /* Try to recover from this situation */
 556   2      #ifdef BATTERY
 559   2            /* The node is lost - start healing */
 560   2            /* First, if there is a SUC in the network, try to contact it. */
 561   2            if (ZW_GetSUCNodeID() != 0)
 562   2            {
 563   3              ZW_DEBUG_SEND_BYTE('H');
 564   3              ZW_DEBUG_SEND_BYTE('8');
 565   3              currentHealMode = HEAL_SUC;
 566   3              AskNodeForHelp(ZW_GetSUCNodeID());
 567   3            }
 568   2      //      else /* TO#1950 - Dont do lost if no SUC */
 569   2      //      {
 570   2      //        ZW_DEBUG_SEND_BYTE('H');
 571   2      //        ZW_DEBUG_SEND_BYTE('1');
 572   2      //        ZW_DEBUG_SEND_BYTE('0');
 573   2      //        currentHealMode = HEAL_NONE;
 574   2      //        HealComplete(FALSE);
 575   2      //      }
 576   2            return TRUE;
 577   2          }
 578   1          else
 579   1          {
 580   2              return FALSE;
 581   2          }
 582   1      }
 583          
 584          
 585          
 586          
 587          /*============================   HealComplete   ======================
 588          **    Function description
 589          **    Self healing process complete.
 590          **
 591          **    Side effects:
 592          **
 593          **--------------------------------------------------------------------------*/
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 399 

 594          void                   /*RET  Nothing       */
 595          HealComplete( BOOL success )
 596          {
 597   1        ZW_DEBUG_SEND_BYTE('H');
 598   1        ZW_DEBUG_SEND_BYTE('6');
 599   1        ZW_DEBUG_SEND_BYTE(' ');
 600   1        ZW_DEBUG_SEND_BYTE((success == TRUE ? 's' : 'f'));
 601   1        ZW_DEBUG_SEND_BYTE(' ');
 602   1        LED_OFF(3);
 603   1        UpdateLostCounter((success == TRUE ? ZW_ROUTE_UPDATE_DONE : ZW_ROUTE_LOST_FAILED));
 604   1      
 605   1        // We found the SUC - ask for updates
 606   1        if(success)
 607   1        {
 608   2          ZW_REQUEST_NETWORK_UPDATE(UpdateNetworkUpdateCountCallback);
 609   2        }
 610   1      #ifdef BATTERY
 613   1      
 614   1        currentState = STATE_APPL_IDLE;
 615   1      
 616   1      #ifdef BATTERY
 619   1      }
 620          
 621          
 622          void                   /*RET  Nothing       */
 623          CancelRediscoveryTimer()
 624          {
 625   1        if(rediscoveryTimerHandle != 0xFF)
 626   1        {
 627   2          ZW_TIMER_CANCEL(rediscoveryTimerHandle);
 628   2        }
 629   1        ZW_DEBUG_SEND_BYTE('H');
 630   1        ZW_DEBUG_SEND_BYTE('7');
 631   1      }
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 400 

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _callbackAskNodeForHelp (BEGIN)
                                           ; SOURCE LINE # 111
                 R     MOV     DPTR,#txStatus
                       MOV     A,R7
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 115
                       MOV     R7,#06DH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 116
                 R     MOV     DPTR,#currentHealMode
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 118
                       ANL     P0,#0FDH
                                           ; SOURCE LINE # 120
                 R     MOV     DPTR,#txStatus
                       MOVX    A,@DPTR
                 R     xJNZ    ?C0001
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
                 R     SETB    ?HealComplete?BIT
                 R     JMP     HealComplete
                                           ; SOURCE LINE # 123
             ?C0001:
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 126
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 127
                       MOV     R7,#06DH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 128
                       MOV     R7,#031H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 129
                 R     MOV     DPTR,#currentHealMode
                       MOVX    A,@DPTR
                       MOV     R7,A
                 R     xJNE    A,#01H,?C0003
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 133
                 E     MOV     DPTR,#masterNodeID
                       MOVX    A,@DPTR
                       MOV     R6,A
                       CPL     A
                 R     MOV     DPTR,#currentHealMode
                 R     xJZ     ?C0054
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
                       MOV     A,#02H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 136
                       INC     DPTR
                       MOV     A,R6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 401 

                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
                 R     xJMP    ?C0006
             ?C0003:
                                           ; SOURCE LINE # 144
                       MOV     A,R7
                 R     xJNE    A,#02H,?C0007
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 149
                 R     MOV     DPTR,#currentHealMode
             ?C0054:
                       MOV     A,#03H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
                       INC     DPTR
                       MOV     A,#01H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
                 R     xJMP    ?C0006
             ?C0007:
                                           ; SOURCE LINE # 152
                 R     MOV     DPTR,#currentHealMode
                       MOVX    A,@DPTR
                       XRL     A,#03H
                 R     xJNZ    ?C0006
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 155
                       MOV     R7,#06DH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 156
                       MOV     R7,#032H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 157
                       MOV     R7,#06EH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 158
                 R     MOV     DPTR,#searchNodeID
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 159
                 R     MOV     DPTR,#searchNodeID
                       MOVX    A,@DPTR
                       INC     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
                 E     MOV     DPTR,#myNodeID
                       MOVX    A,@DPTR
                       MOV     R7,A
                 R     MOV     DPTR,#searchNodeID
                       MOVX    A,@DPTR
                       MOV     R6,A
                 R     xJNE    A,AR7,?C0010
                       INC     A
                       MOV     R7,A
                 R     xJMP    ?C0011
             ?C0010:
                       MOV     R7,AR6
             ?C0011:
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 402 

                 R     MOV     DPTR,#searchNodeID
                       MOV     A,R7
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
                       SETB    C
                       SUBB    A,#0E8H
                 R     xJLT    ?C0006
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 165
                       MOV     R7,#06DH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 166
                       MOV     R7,#04DH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 170
                 R     MOV     DPTR,#searchNodeID
                       MOV     A,#01H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
                 R     CLR     ?HealComplete?BIT
                 R     CALL    HealComplete
                                           ; SOURCE LINE # 172
                       CLR     A
                 R     MOV     DPTR,#currentHealMode
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
                 E     MOV     DPTR,#currentState
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
                 E     MOV     DPTR,#nextState
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
             ?C0006:
                                           ; SOURCE LINE # 179
                 R     MOV     DPTR,#currentHealMode
                       MOVX    A,@DPTR
                 R     xJZ     ?C0015
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 182
                       MOV     R7,#06DH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 183
                       MOV     R7,#04EH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 184
                 R     MOV     DPTR,#rediscoveryTimerHandle
                       MOVX    A,@DPTR
                       CPL     A
                 R     xJZ     ?C0014
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 186
                       MOV     R7,#066H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 187
                 R     MOV     DPTR,#rediscoveryTimerHandle
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 403 

                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 188
                 R     MOV     DPTR,#rediscoveryTimerHandle
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _TimerCancel
                                           ; SOURCE LINE # 189
                 R     MOV     DPTR,#rediscoveryTimerHandle
                       MOV     A,#0FFH
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
             ?C0014:
                                           ; SOURCE LINE # 191
                 E     CALL    StartWatchdog
                                           ; SOURCE LINE # 192
                 R     MOV     R6,#HIGH callbackDelayNextAskNodeForHelp
                 R     MOV     R7,#LOW callbackDelayNextAskNodeForHelp
                       CLR     A
                       MOV     R3,A
                       MOV     R5,#064H
                 E     CALL    _TimerStart
                 R     MOV     DPTR,#rediscoveryTimerHandle
                       MOV     A,R7
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
             ?C0015:
                       RET     
             ; FUNCTION _callbackAskNodeForHelp (END)

             ; FUNCTION _AskNodeForHelp (BEGIN)
                                           ; SOURCE LINE # 207
                 R     MOV     DPTR,#NodeID
                       MOV     A,R7
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 211
                       MOV     R7,#033H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 212
                       MOV     R7,#020H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 213
                 R     MOV     DPTR,#NodeID
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 214
                       MOV     R7,#020H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 216
                 R     MOV     DPTR,#NodeID
                       MOVX    A,@DPTR
                       MOV     R7,A
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 404 

                 R     MOV     R4,#HIGH _callbackAskNodeForHelp
                 R     MOV     R5,#LOW _callbackAskNodeForHelp
                 E     CALL    _ZW_RediscoveryNeeded
                       MOV     A,R7
                 R     xJNZ    ?C0017
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 218
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 219
                       MOV     R7,#033H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 220
                       MOV     R7,#066H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 222
                 R     CLR     ?HealComplete?BIT
                 R     CALL    HealComplete
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
             ?C0017:
                       RET     
             ; FUNCTION _AskNodeForHelp (END)

             ; FUNCTION callbackDelayNextAskNodeForHelp (BEGIN)
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 237
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 238
                       MOV     R7,#035H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 239
                       ORL     P0,#02H
                                           ; SOURCE LINE # 241
                 R     MOV     DPTR,#rediscoveryTimerHandle
                       MOV     A,#0FFH
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 243
                 R     MOV     DPTR,#searchNodeID
                       MOVX    A,@DPTR
                       MOV     R7,A
                 R     JMP     _AskNodeForHelp
             ; FUNCTION callbackDelayNextAskNodeForHelp (END)

             ; FUNCTION SetDefaultNetworkUpdateConfiguration (BEGIN)
                                           ; SOURCE LINE # 260
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 262
                       CLR     A
                       MOV     DPTR,#lostCount
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 263
                       MOV     DPTR,#networkUpdateDownCount
                       MOV     A,#07H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 264
                       RET     
             ; FUNCTION SetDefaultNetworkUpdateConfiguration (END)

             ; FUNCTION _UpdateLostCounter (BEGIN)
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 405 

                                           ; SOURCE LINE # 275
                 R     MOV     DPTR,#txStatus
                       MOV     A,R7
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 279
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 280
                       MOV     R7,#030H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 282
                 R     MOV     DPTR,#txStatus
                       MOVX    A,@DPTR
                 R     xJZ     ?C0020
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 285
                       MOV     R7,#066H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 287
                       MOV     DPTR,#lostCount
                       MOVX    A,@DPTR
                       INC     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
                       MOVX    A,@DPTR
                       SETB    C
                       SUBB    A,#03H
                 R     xJLT    ?C0022
                                           ; SOURCE LINE # 293
                                           ; SOURCE LINE # 294
                       MOV     A,#04H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 296
                 R     xJMP    ?C0022
             ?C0020:
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 300
                       MOV     R7,#073H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 302
                       CLR     A
                       MOV     DPTR,#lostCount
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
             ?C0022:
                                           ; SOURCE LINE # 304
                 R     JMP     VerifyLostCount
             ; FUNCTION _UpdateLostCounter (END)

             ; FUNCTION GetRandomNetUpdateCount (BEGIN)
                                           ; SOURCE LINE # 316
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 355
                 E     CALL    ZW_Random
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 406 

                 R     MOV     DPTR,#delay
                       MOV     A,R7
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 356
                       MOV     B,#0CH
                       DIV     AB
                       MOV     A,B
                       ADD     A,#07H
                       INC     DPTR
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 358
                       MOV     R7,#05FH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 359
                       MOV     R7,#04EH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 360
                       MOV     R7,#072H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 361
                 R     MOV     DPTR,#delay
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 362
                       MOV     R7,#020H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 363
                       MOV     R7,#04EH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 364
                       MOV     R7,#064H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 365
                 R     MOV     DPTR,#result
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 366
                       MOV     R7,#05FH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 368
                 R     MOV     DPTR,#result
                       MOVX    A,@DPTR
                       MOV     R7,A
                                           ; SOURCE LINE # 370
             ?C0024:
                       RET     
             ; FUNCTION GetRandomNetUpdateCount (END)

             ; FUNCTION _VerifyAssociatedTransmitCallback (BEGIN)
                                           ; SOURCE LINE # 382
                 R     MOV     DPTR,#SUCStatus
                       MOV     A,R7
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 383
                                           ; SOURCE LINE # 384
                 R     xJNE    R7,#01H,?C0025
                                           ; SOURCE LINE # 385
                                           ; SOURCE LINE # 386
                       MOV     DPTR,#lostCount
                       MOVX    A,@DPTR
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 407 

                       INC     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 387
                       MOV     R7,#056H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 388
                       MOV     R7,#041H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 389
                 R     MOV     DPTR,#SUCStatus
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 391
                 R     JMP     VerifyLostCount
                                           ; SOURCE LINE # 392
             ?C0025:
                 R     MOV     DPTR,#SUCStatus
                       MOVX    A,@DPTR
                 R     xJNZ    ?C0028
                                           ; SOURCE LINE # 393
                 E     MOV     DPTR,#currentState
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 394
                                           ; SOURCE LINE # 395
             ?C0028:
                       RET     
             ; FUNCTION _VerifyAssociatedTransmitCallback (END)

             ; FUNCTION _VerifyAssociatedTransmit (BEGIN)
                                           ; SOURCE LINE # 417
                 R     MOV     DPTR,#attemptedNodeId
                       MOV     A,R5
                       MOVX    @DPTR,A
                 R     MOV     DPTR,#txStatus
                       MOV     A,R7
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 421
                                           ; SOURCE LINE # 422
                 R     xJZ     ?C0030
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 424
                       MOV     R7,#056H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 425
                       MOV     R7,#066H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 426
                 R     MOV     DPTR,#txStatus
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 428
                 E     MOV     DPTR,#currentState
                       MOV     A,#02H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 429
                       CLR     A
                 E     MOV     DPTR,#nextState
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 430
                       MOV     R3,#01H
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 408 

                 R     MOV     R2,#HIGH attemptedNodeId
                 R     MOV     R1,#LOW attemptedNodeId
                 E     MOV     DPTR,#?_ZW_RequestNewRouteDestinations?BYTE+04H
                 R     MOV     A,#HIGH _VerifyAssociatedTransmitCallback
                       MOVX    @DPTR,A
                       INC     DPTR
                 R     MOV     A,#LOW _VerifyAssociatedTransmitCallback
                       MOVX    @DPTR,A
                       MOV     R5,#01H
                 E     CALL    _ZW_RequestNewRouteDestinations
                                           ; SOURCE LINE # 431
                                           ; SOURCE LINE # 432
             ?C0030:
                       RET     
             ; FUNCTION _VerifyAssociatedTransmit (END)

             ; FUNCTION _UpdateNetworkUpdateCountCallback (BEGIN)
                                           ; SOURCE LINE # 443
;---- Variable 'txStatus' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 444
                                           ; SOURCE LINE # 445
                       MOV     A,R7
                 R     xJNE    A,#01H,?C0031
                                           ; SOURCE LINE # 446
                                           ; SOURCE LINE # 447
                       MOV     R7,#04EH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 448
                       MOV     R7,#066H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 449
                       MOV     DPTR,#lostCount
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 450
                       MOV     DPTR,#lostCount
                       MOVX    A,@DPTR
                       INC     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 451
                 R     JMP     VerifyLostCount
                                           ; SOURCE LINE # 452
             ?C0031:
                                           ; SOURCE LINE # 453
                       CLR     A
                       MOV     DPTR,#lostCount
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 454
                                           ; SOURCE LINE # 456
             ?C0033:
                       RET     
             ; FUNCTION _UpdateNetworkUpdateCountCallback (END)

             ; FUNCTION UpdateNetworkUpdateCountOneMinute (BEGIN)
                                           ; SOURCE LINE # 464
                                           ; SOURCE LINE # 465
                                           ; SOURCE LINE # 466
                 R     MOV     DPTR,#oneMinute
                       MOVX    A,@DPTR
                       DEC     A
                       MOVX    @DPTR,A
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 409 

                                           ; SOURCE LINE # 467
                       MOVX    A,@DPTR
                       SETB    C
                       SUBB    A,#00H
                 R     xJGE    ?C0035
                                           ; SOURCE LINE # 468
                                           ; SOURCE LINE # 469
                       MOV     R7,#054H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 470
                       MOV     R7,#06DH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 471
                 R     MOV     DPTR,#oneMinute
                       MOV     A,#03CH
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 472
                 R     CLR     ?UpdateNetworkUpdateCount?BIT
                 R     CALL    UpdateNetworkUpdateCount
                                           ; SOURCE LINE # 473
                                           ; SOURCE LINE # 474
             ?C0035:
                       RET     
             ; FUNCTION UpdateNetworkUpdateCountOneMinute (END)

             ; FUNCTION UpdateNetworkUpdateCount (BEGIN)
                                           ; SOURCE LINE # 482
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 484
                 R     xJB     reset,?C0037
                 E     MOV     DPTR,#myNodeID
                       MOVX    A,@DPTR
                 R     xJNZ    ?C0036
             ?C0037:
                                           ; SOURCE LINE # 485
                                           ; SOURCE LINE # 486
                       MOV     R7,#020H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 487
                       MOV     R7,#045H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 488
                       MOV     R7,#04EH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 489
                       MOV     R7,#044H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 493
                 R     MOV     DPTR,#searchNodeID
                       MOV     A,#01H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 494
                 R     CLR     ?HealComplete?BIT
                 R     CALL    HealComplete
                                           ; SOURCE LINE # 495
                       CLR     A
                 R     MOV     DPTR,#currentHealMode
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 496
                 E     MOV     DPTR,#currentState
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 497
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 410 

                 E     MOV     DPTR,#nextState
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 501
                       RET     
             ?C0036:
                                           ; SOURCE LINE # 503
                       MOV     DPTR,#networkUpdateDownCount
                       MOVX    A,@DPTR
                       DEC     A
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 504
                       MOV     R7,#054H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 505
                       MOV     R7,#06EH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 506
                       MOV     DPTR,#networkUpdateDownCount
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 508
                       MOV     DPTR,#networkUpdateDownCount
                       MOVX    A,@DPTR
                       SETB    C
                       SUBB    A,#00H
                 R     xJGE    ?C0040
                                           ; SOURCE LINE # 509
                                           ; SOURCE LINE # 510
                       MOV     R7,#054H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 511
                       MOV     R7,#06BH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 513
                 R     CALL    GetRandomNetUpdateCount
                       MOV     DPTR,#networkUpdateDownCount
                       MOV     A,R7
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 514
                 R     MOV     R6,#HIGH _UpdateNetworkUpdateCountCallback
                 R     MOV     R7,#LOW _UpdateNetworkUpdateCountCallback
                 E     CALL    _ZW_RequestNetWorkUpdate
                                           ; SOURCE LINE # 515
                                           ; SOURCE LINE # 516
                                           ; SOURCE LINE # 518
             ?C0040:
                       RET     
             ; FUNCTION UpdateNetworkUpdateCount (END)

             ; FUNCTION VerifyLostCount (BEGIN)
                                           ; SOURCE LINE # 528
                                           ; SOURCE LINE # 529
                                           ; SOURCE LINE # 531
                 R     MOV     DPTR,#currentHealMode
                       MOVX    A,@DPTR
                 R     xJZ     ?C0041
                                           ; SOURCE LINE # 532
                                           ; SOURCE LINE # 533
                       SETB    C
                       RET     
                                           ; SOURCE LINE # 534
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 411 

             ?C0041:
                                           ; SOURCE LINE # 535
                       MOV     R7,#056H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 536
                       MOV     R7,#06CH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 537
                       MOV     R7,#020H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 538
                       MOV     DPTR,#lostCount
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 539
                       MOV     R7,#020H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 542
                       MOV     DPTR,#lostCount
                       MOVX    A,@DPTR
                       CLR     C
                       SUBB    A,#03H
                 R     xJLT    ?C0043
                                           ; SOURCE LINE # 543
                                           ; SOURCE LINE # 546
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 547
                       MOV     R7,#037H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 548
                       MOV     R7,#053H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 549
                       MOV     R7,#073H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 550
                 E     MOV     DPTR,#currentState
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 551
                       MOV     R7,#06EH
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 552
                 E     MOV     DPTR,#nextState
                       MOVX    A,@DPTR
                       MOV     R7,A
                 E     CALL    _UART_SendNum
                                           ; SOURCE LINE # 561
                 E     CALL    ZW_GetSUCNodeID
                       MOV     A,R7
                 R     xJZ     ?C0044
                                           ; SOURCE LINE # 562
                                           ; SOURCE LINE # 563
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 564
                       MOV     R7,#038H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 565
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 412 

                 R     MOV     DPTR,#currentHealMode
                       MOV     A,#01H
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 566
                 E     CALL    ZW_GetSUCNodeID
                 R     CALL    _AskNodeForHelp
                                           ; SOURCE LINE # 567
             ?C0044:
                                           ; SOURCE LINE # 576
                       SETB    C
                       RET     
                                           ; SOURCE LINE # 577
             ?C0043:
                                           ; SOURCE LINE # 579
                                           ; SOURCE LINE # 580
                       CLR     C
                                           ; SOURCE LINE # 581
                                           ; SOURCE LINE # 582
             ?C0042:
                       RET     
             ; FUNCTION VerifyLostCount (END)

             ; FUNCTION HealComplete (BEGIN)
                                           ; SOURCE LINE # 595
                                           ; SOURCE LINE # 596
                                           ; SOURCE LINE # 597
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 598
                       MOV     R7,#036H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 599
                       MOV     R7,#020H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 600
                       MOV     R7,#066H
                 R     xJNB    success,?C0046
                       MOV     R7,#073H
             ?C0046:
             ?C0047:
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 601
                       MOV     R7,#020H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 602
                       ORL     P0,#02H
                                           ; SOURCE LINE # 603
                       MOV     R7,#04H
                 R     xJNB    success,?C0048
                       MOV     R7,#00H
             ?C0048:
             ?C0049:
                 R     CALL    _UpdateLostCounter
                                           ; SOURCE LINE # 606
                 R     xJNB    success,?C0050
                                           ; SOURCE LINE # 607
                                           ; SOURCE LINE # 608
                 R     MOV     R6,#HIGH _UpdateNetworkUpdateCountCallback
                 R     MOV     R7,#LOW _UpdateNetworkUpdateCountCallback
                 E     CALL    _ZW_RequestNetWorkUpdate
                                           ; SOURCE LINE # 609
             ?C0050:
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 413 

                                           ; SOURCE LINE # 614
                       CLR     A
                 E     MOV     DPTR,#currentState
                       MOVX    @DPTR,A
                                           ; SOURCE LINE # 619
                       RET     
             ; FUNCTION HealComplete (END)

             ; FUNCTION CancelRediscoveryTimer (BEGIN)
                                           ; SOURCE LINE # 623
                                           ; SOURCE LINE # 624
                                           ; SOURCE LINE # 625
                 R     MOV     DPTR,#rediscoveryTimerHandle
                       MOVX    A,@DPTR
                       MOV     R7,A
                       CPL     A
                 R     xJZ     ?C0052
                                           ; SOURCE LINE # 626
                                           ; SOURCE LINE # 627
                 E     CALL    _TimerCancel
                                           ; SOURCE LINE # 628
             ?C0052:
                                           ; SOURCE LINE # 629
                       MOV     R7,#048H
                 E     CALL    _UART_SendByte
                                           ; SOURCE LINE # 630
                       MOV     R7,#037H
                 E     JMP     _UART_SendByte
             ; FUNCTION CancelRediscoveryTimer (END)

C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 414 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_APPLICATION_META_TX_BUFFER. . . . .  TYPEDEF  -----  UNION    -----  48
  ZW_MultiCommandEncapFrame. . . . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_CompositeCmdEncapFrame. . . . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_CompositeReplyEncapFrame. . . . .  MEMBER   -----  STRUCT   0000H  41
  ZW_MultiInstanceCmdEncapFrame. . . .  MEMBER   -----  STRUCT   0000H  41
  ZW_MultiChannelCmdEncapV2Frame . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_Common. . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AlarmReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AlarmReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_AlarmReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AlarmReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_AlarmSetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmTypeSupportedReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_AlarmTypeSupportedReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_AlarmTypeSupportedReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_NotificationGetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationReport1byteV3Frame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_NotificationReport2byteV3Frame. .  MEMBER   -----  STRUCT   0000H  11
  ZW_NotificationReport3byteV3Frame. .  MEMBER   -----  STRUCT   0000H  12
  ZW_NotificationReport4byteV3Frame. .  MEMBER   -----  STRUCT   0000H  13
  ZW_NotificationSetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedGetV3Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_NotificationSupportedReport1byteV  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedReport2byteV  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationSupportedReport3byteV  MEMBER   -----  STRUCT   0000H  6
  ZW_NotificationSupportedReport4byteV  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EventSupportedReport1byteV3Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EventSupportedReport2byteV3Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EventSupportedReport3byteV3Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedReport4byteV3Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ApplicationBusyFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ApplicationRejectedRequestFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandConfigurationGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandConfigurationReport1byteFr  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationReport2byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationReport3byteFr  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandConfigurationReport4byteFr  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandConfigurationSet1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandConfigurationSet2byteFrame  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationSet3byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationSet4byteFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandRecordsSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandRecordsSupportedReportFrame MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 415 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AssociationReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationSpecificGroupGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationSpecificGroupReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_AvContentBrowseMdByLetterGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdByLetterReportFr  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountReport  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdReportFrame MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusReportFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoReportFrame. . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_BasicWindowCoveringStartLevelChan  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicWindowCoveringStopLevelChang  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BatteryGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BatteryReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmLogGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmLogReportFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmLogSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmStatusReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 416 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ChimneyFanAlarmTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanBoostTimeGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanBoostTimeReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanBoostTimeSetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanDefaultSetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanMinSpeedSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSetupGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSetupReport1byteFrame .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupReport2byteFrame .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupReport3byteFrame .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupReport4byteFrame .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSetupSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSpeedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSpeedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSpeedSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStartTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStartTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStartTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStateGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStateReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStateSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStatusReport1byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStatusReport2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ChimneyFanStatusReport3byteFrame.  MEMBER   -----  STRUCT   0000H  9
  ZW_ChimneyFanStatusReport4byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ChimneyFanStopTempGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTempReport1byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempReport2byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempReport3byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempReport4byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTempSet1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempSet2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempSet3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempSet4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTimeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTimeReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStopTimeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleChangedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 417 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ScheduleChangedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleOverrideGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleOverrideReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleOverrideSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ScheduleSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ClockGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ClockReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ClockSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationBulkGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ConfigurationBulkReport1byteV2VGr  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkReport2byteV2VGr  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkReport3byteV2VGr  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkReport4byteV2VGr  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkReport1byteV2FrameMEMBER   -----  STRUCT   0000H  11
  ZW_ConfigurationBulkReport2byteV2FrameMEMBER   -----  STRUCT   0000H  15
  ZW_ConfigurationBulkReport3byteV2FrameMEMBER   -----  STRUCT   0000H  19
  ZW_ConfigurationBulkReport4byteV2FrameMEMBER   -----  STRUCT   0000H  23
  VG_ConfigurationBulkSet1byteV2VGroup  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkSet2byteV2VGroup  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkSet3byteV2VGroup  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkSet4byteV2VGroup  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkSet1byteV2Frame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ConfigurationBulkSet2byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ConfigurationBulkSet3byteV2Frame.  MEMBER   -----  STRUCT   0000H  18
  ZW_ConfigurationBulkSet4byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_ConfigurationGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteV2Frame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteV2Frame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteV2Frame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferGroupFrame  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferGroupName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferGroupName4  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferSceneFrame  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferSceneName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferSceneName4  MEMBER   -----  STRUCT   0000H  8
  ZW_DcpListRemoveFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  VG_DcpListSetVGroup. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 418 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_DcpListSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  28
  ZW_DcpListSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_DcpListSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_DcpListSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  34
  ZW_DcpListSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_DcpEventStatusGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DcpEventStatusReportFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_DcpListGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_DcpListReportVGroup . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  29
  ZW_DcpListReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_DcpListReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  33
  ZW_DcpListReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  35
  ZW_DoorLockLoggingRecordsSupportedGe  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockLoggingRecordsSupportedRe  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordGetFrame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordReport1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_RecordReport2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_RecordReport3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_RecordReport4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_DoorLockConfigurationGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportFrame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DoorLockConfigurationGetV2Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportV2Frame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EnergyProductionReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EnergyProductionReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EnergyProductionReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareMdGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_FirmwareUpdateMdReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestGetFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareMdGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport2byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdReport3byteV2Frame MEMBER   -----  STRUCT   0000H  9
  ZW_FirmwareUpdateMdReport4byteV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_FirmwareUpdateMdRequestGetV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportV2Fr  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 419 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_FirmwareUpdateMdStatusReportV2FrameMEMBER   -----  STRUCT   0000H  3
  ZW_GeographicLocationGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_GeographicLocationReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GeographicLocationSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GroupingNameGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_GroupingNameReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_GroupingNameSetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_HailFrame . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlBypassSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_HrvControlModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvControlModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvControlModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvControlVentilationRateGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlVentilationRateReportFr  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlVentilationRateSetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvStatusReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvStatusReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_HrvStatusSupportedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvStatusSupportedReport1byteFrame MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusSupportedReport2byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_HrvStatusSupportedReport3byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusSupportedReport4byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_IndicatorGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IndicatorReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IndicatorSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IpConfigurationGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReleaseFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationRenewFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReportFrame. . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpConfigurationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_LanguageGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LanguageReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LanguageSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LockGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LockReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_LockSetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ManufacturerSpecificGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ManufacturerSpecificGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceSpecificGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DeviceSpecificReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_DeviceSpecificReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DeviceSpecificReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_DeviceSpecificReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterPulseGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterPulseReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 420 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterTblTablePointAdmNoSet1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoSet2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoSet3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet4byteFr  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportVGroup. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportFrame MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportVGroup .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteFrameMEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteFrameMEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteFrameMEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteFrameMEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetFrame. .  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportVGroup MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportV2VGroup. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportV2VGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteV2F  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteV2F  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteV2F  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteV2F  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetV2Frame.  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportV2VGr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 421 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblPushConfigurationGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblPushConfigurationReportFr  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterTblPushConfigurationSetFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterReport1byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterReport2byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterReport3byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterReport4byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterGetV3Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV3Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV3Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MoveToPositionGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MoveToPositionReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MoveToPositionSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGetV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGroupingsG  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelAssociationGroupingsR  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationRemove1byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationRemove2byt  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationRemove3byt  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationRemove4byt  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelAssociationReport1byt  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelAssociationReport2byt  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiChannelAssociationReport3byt  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiChannelAssociationReport4byt  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiChannelAssociationSet1byteV2  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationSet2byteV2  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationSet3byteV2  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationSet4byteV2  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelCapabilityGetV2Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 422 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV2Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV2V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiChannelCapabilityGetV3Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV3Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV3V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV3Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceAssociationGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationRemove1by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationRemove2by  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationRemove3by  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationRemove4by  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceAssociationReport1by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiInstanceAssociationReport2by  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiInstanceAssociationReport3by  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiInstanceAssociationReport4by  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiInstanceAssociationSet1byteF  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationSet2byteF  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationSet3byteF  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationSet4byteF  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeInfoCachedGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeInfoCachedReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeInfoCachedReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeInfoCachedReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  18
  ZW_NodeInfoCachedReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_NodeListGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NodeListReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeListReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_NodeListReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_NodeListReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_LearnModeSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LearnModeSetStatusFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 423 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_NodeInformationSendFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkUpdateRequestFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkUpdateRequestStatusFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_DefaultSetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DefaultSetCompleteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveStatusFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeAddFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeAddStatus1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_NodeAddStatus2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeAddStatus3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_NodeAddStatus4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeRemoveFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeRemoveStatusFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FailedNodeReplaceFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_FailedNodeReplaceStatusFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeNeighborUpdateRequestFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNeighborUpdateStatusFrame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteAssignFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ReturnRouteAssignCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNamingNodeLocationReportFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationSetFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameReportFrame . .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeNameSetFrame. . . .  MEMBER   -----  STRUCT   0000H  19
  ZW_PowerlevelGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelTestNodeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelTestNodeReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PowerlevelTestNodeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_CmdEncapsulation1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CmdEncapsulation2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CmdEncapsulation3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CmdEncapsulation4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PrepaymentBalanceGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_PrepaymentBalanceReportFrame. . .  MEMBER   -----  STRUCT   0000H  22
  ZW_PrepaymentSupportedGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PrepaymentSupportedReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryGet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryGet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietaryReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietarySet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietarySet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietarySet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietarySet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProtectionGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 424 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ProtectionEcGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionEcReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcSetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSupportedGetV2Frame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionSupportedReportV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ProtectionTimeoutGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionTimeoutReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionTimeoutSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblRemove1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_RateTblRemove2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblRemove3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_RateTblRemove4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_RateTblSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblActiveRateGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblActiveRateReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblCurrentDataGetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  VG_RateTblCurrentDataReportVGroup. .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblCurrentDataReport1byteFrame MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblCurrentDataReport2byteFrame MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblCurrentDataReport3byteFrame MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblCurrentDataReport4byteFrame MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblHistoricalDataGetFrame . .  MEMBER   -----  STRUCT   0000H  21
  VG_RateTblHistoricalDataReportVGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblHistoricalDataReport1byteF  MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblHistoricalDataReport2byteF  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblHistoricalDataReport3byteF  MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblHistoricalDataReport4byteF  MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationActivateFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationGet  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationRep  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationConfigurationSet  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActivationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SceneActuatorConfGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneActuatorConfReportFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActuatorConfSetFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_SceneControllerConfGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneControllerConfReportFrame. .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneControllerConfSetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockEnableAllSetFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportFrameMEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 425 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ScheduleEntryLockYearDayReportFrameMEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV2F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV2F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV2F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV2Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV3Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV3F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV3F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV3F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV3Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV3F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV3Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockDailyRepeatingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockDailyRepeatingRe  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockDailyRepeatingSe  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenAttributesGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ScreenAttributesGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenMdReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_ScreenMdReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_ScreenMdReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_ScreenMdGetV2Frame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_ScreenMdReport2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ScreenMdReport3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_ScreenMdReport4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_SecurityPanelModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 426 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SecurityPanelModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandClassSecurityPanelZoneSens  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SecurityPanelZoneSensorInstalledG  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneSensorStateGetFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorStateRepor  MEMBER   -----  STRUCT   0000H  7
  ZW_SecurityPanelZoneNumberSupportedG  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelZoneStateGetFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneStateReportFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSupportedReportF  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeGetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeReportFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkKeySet2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NetworkKeySet4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkKeyVerifyFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedReport1b  MEMBER   -----  STRUCT   0000H  6
  ZW_SecurityCommandsSupportedReport2b  MEMBER   -----  STRUCT   0000H  8
  ZW_SecurityCommandsSupportedReport3b  MEMBER   -----  STRUCT   0000H  10
  ZW_SecurityCommandsSupportedReport4b  MEMBER   -----  STRUCT   0000H  12
  ZW_SecurityMessageEncapsulation1byte  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulation2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulation3byte  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulation4byte  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityNonceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityNonceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SecuritySchemeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeInheritFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSupportedGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorAlarmSupportedReport1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSupportedReport2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorAlarmSupportedReport3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorAlarmSupportedReport4byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedGetSensorV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorTriggerLevelReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorTriggerLevelReport2byteFrame MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 427 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SensorTriggerLevelReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet1byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelSet2byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelSet3byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet4byteFrame .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV2Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV3Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV3Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV3Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV3Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV4Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV4Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV4Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV4Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV4Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV5Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV5Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV5Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV5Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV5Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelGetV6Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV6Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV6Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV6Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV6Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorAlarmSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorAlarmSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  VG_SimpleAvControlSetVGroup. . . . .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 428 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SimpleAvControlSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SimpleAvControlSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_SimpleAvControlSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  14
  ZW_SimpleAvControlSupportedGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_SimpleAvControlSupportedReport1by  MEMBER   -----  STRUCT   0000H  4
  ZW_SimpleAvControlSupportedReport2by  MEMBER   -----  STRUCT   0000H  5
  ZW_SimpleAvControlSupportedReport3by  MEMBER   -----  STRUCT   0000H  6
  ZW_SimpleAvControlSupportedReport4by  MEMBER   -----  STRUCT   0000H  7
  ZW_SwitchAllGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOffFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOnFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchAllSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinarySetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelStartLevelChangeF  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStopLevelChangeFr  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  5
  ZW_SwitchMultilevelStopLevelChangeV2  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV3Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  6
  ZW_SwitchMultilevelStopLevelChangeV3  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedGetV3FrameMEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedReportV3  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleBinarySetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelSetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelStartLevelC  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleMultilevelStopLevelCh  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblRemove1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_TariffTblRemove2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_TariffTblRemove3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TariffTblRemove4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_TariffTblSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierSet1byteFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierSet2byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierSet3byteFrame. .  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierSet4byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_TariffTblCostGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_TariffTblCostReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_TariffTblGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_TariffTblReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblSupplierReport1byteFrame  MEMBER   -----  STRUCT   0000H  19
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 429 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_TariffTblSupplierReport2byteFrame  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierReport3byteFrame  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierReport4byteFrame  MEMBER   -----  STRUCT   0000H  22
  ZW_ThermostatFanModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV3Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV3Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV3Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanStateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanStateReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingStatusReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingModeReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingRelayStatusGetFr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingRelayStatusRepor  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointGetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointReport1b  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointReport2b  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointReport3b  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointReport4b  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingSetpointSet1byte  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointSet2byte  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointSet3byte  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointSet4byte  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingStatusGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingStatusSetFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingTimedOffSetFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatModeGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 430 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatModeSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateGetFrame.  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportFrameMEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingSu  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  6
  VG_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  13
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  18
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  23
  ZW_ThermostatSetbackGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetbackReportFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetbackSetFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointGetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeParametersGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeParametersReportFrame . . . .  MEMBER   -----  STRUCT   0000H  9
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 431 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_TimeParametersSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DateGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_DateGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeOffsetSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandFirstFragment1byteFrame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_CommandFirstFragment2byteFrame. .  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFirstFragment3byteFrame. .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandFirstFragment4byteFrame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentCompleteFrame. . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandFragmentRequestVGroup. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandFragmentRequest1byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_CommandFragmentRequest2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFragmentRequest3byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentRequest4byteFrame.  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandFragmentWaitFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandSubsequentFragment1byteFrameMEMBER   -----  STRUCT   0000H  8
  ZW_CommandSubsequentFragment2byteFrameMEMBER   -----  STRUCT   0000H  9
  ZW_CommandSubsequentFragment3byteFrameMEMBER   -----  STRUCT   0000H  10
  ZW_CommandSubsequentFragment4byteFrameMEMBER   -----  STRUCT   0000H  11
  ZW_UserCodeGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_UserCodeReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UserCodeSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UsersNumberGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_UsersNumberReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassReportFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_VersionGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_VersionReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_WakeUpIntervalGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesReportV  MEMBER   -----  STRUCT   0000H  14
  ZW_WakeUpIntervalGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LowpanFirstFragment1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LowpanFirstFragment2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanFirstFragment3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanFirstFragment4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment1byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanSubsequentFragment2byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanSubsequentFragment3byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment4byteFrame MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  9
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 432 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_CommandZipPacket2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandZipPacket3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_CommandZipPacket4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_CommandCommandClassNotSupportedFr  MEMBER   -----  STRUCT   0000H  5
  ZW_CapabilityGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CapabilityReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_StateGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_StateReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_StateSetVGroup. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_StateSet1byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_StateSet2byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_StateSet3byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_StateSet4byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_StartCapabilityLevelChangeFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_StopStateChangeFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleSupportedGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_ScheduleSupportedReportVGroup . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleSupportedReport1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_ScheduleSupportedReport2byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleSupportedReport3byteFrame  MEMBER   -----  STRUCT   0000H  12
  ZW_ScheduleSupportedReport4byteFrame  MEMBER   -----  STRUCT   0000H  14
  VG_CommandScheduleSet1byteVGroup . .  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleSet2byteVGroup . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleSet3byteVGroup . .  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleSet4byteVGroup . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  34
  ZW_CommandScheduleGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport1byteVGroup.  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleReport2byteVGroup.  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport3byteVGroup.  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleReport4byteVGroup.  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleReport1byteFrame .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleReport2byteFrame .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleReport3byteFrame .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleReport4byteFrame .  MEMBER   -----  STRUCT   0000H  34
  ZW_ScheduleRemoveFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleStateSetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleStateGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleStateReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeStatus1byteFrame.  MEMBER   -----  STRUCT   0000H  13
  ZW_ControllerChangeStatus2byteFrame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ControllerChangeStatus3byteFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ControllerChangeStatus4byteFrame.  MEMBER   -----  STRUCT   0000H  16
  ZW_ZipNodeSolicitationFrame. . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_ZipInvNodeSolicitationFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ZipNodeAdvertisementFrame . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupNameGetFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupNameReport1byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupNameReport2byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupNameReport3byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupNameReport4byteFr  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationGroupInfoGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  VG_AssociationGroupInfoReportVGroup.  MEMBER   -----  STRUCT   0000H  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 433 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AssociationGroupInfoReport1byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_AssociationGroupInfoReport2byteFr  MEMBER   -----  STRUCT   0000H  17
  ZW_AssociationGroupInfoReport3byteFr  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupInfoReport4byteFr  MEMBER   -----  STRUCT   0000H  31
  ZW_AssociationGroupCommandListGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceResetLocallyNotificationFrameMEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_CentralSceneNotificationFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_IpAssociationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_IpAssociationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  26
  ZW_IpAssociationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpAssociationRemove1byteFrame . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationRemove2byteFrame . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationRemove3byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationRemove4byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_AntitheftSet1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet1byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetV2Frame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  10
  bPadding . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  48
ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 434 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0012H  5
_ZW_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SIMPLE_AV_CONTROL_SET_2BYTE_FRAME_  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  itemId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  itemId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
_ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REP  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SENSOR_ALARM_SUPPORTED_REPORT_2BYT  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SECURITY_COMMANDS_SUPPORTED_GET_FRAMETYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_F  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_RATE_TBL_ACTIVE_RATE_GET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_PROTECTION_SUPPORTED_REPORT_V2_FRA  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  localProtectionState1. . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  localProtectionState2. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rfProtectionState1 . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rfProtectionState2 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_PROTECTION_EC_GET_V2_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_NODE_INFORMATION_SEND_FRAME_ . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  destinationNodeId. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  txOptions. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 435 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG_* TAG *  -----  STRUCT   -----  2
  multiChannelNodeId . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_STATUS_SUPPORTED_GET_V2_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_HISTORICAL_DATA_REPORT_3B  TYPEDEF  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
ZW_HAIL_FRAME. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_DCP_LIST_SET_VG_ . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CONFIGURATION_SET_4BYTE_V2_FRAME_.  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  configurationValue4. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_CONFIGURATION_BULK_REPORT_2BYTE_V2  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  4
_ZW_SCHEDULE_CHANGED_GET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_STOP_TEMP_SET_4BYTE_FRAMETYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 436 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CHIMNEY_FAN_MIN_SPEED_REPORT_FRAME.  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_ALARM_STATUS_GET_FRAME.  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_BATTERY_GET_FRAME_ . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ALARM_REPORT_2BYTE_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  numberOfEventParameters. . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
_ZW_DATE_GET_FRAME_. . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SIMPLE_AV_CONTROL_SET_3BYTE_FRAME_  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  itemId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  itemId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
_ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REP  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 437 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SENSOR_ALARM_SUPPORTED_REPORT_3BYT  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG.  TYPEDEF  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  historicalValue1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  historicalValue2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  historicalValue3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalValue4 . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_NODE_REMOVE_STATUS_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_NODE_ADD_STATUS_1BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
_ZW_FAILED_NODE_REMOVE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_NETWORK_UPDATE_REQUEST_FRAME_. . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_TBL_HISTORICAL_DATA_REPORT_4B  TYPEDEF  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 438 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
_ZW_INDICATOR_REPORT_FRAME_. . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_DCP_LIST_SUPPORTED_REPORT_FRAME_ .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  dcpListSize. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  freeDcpListEntries . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_CONFIGURATION_BULK_REPORT_3BYTE_V2  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  4
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000FH  4
ZW_CONFIGURATION_GET_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_AV_CONTENT_SEARCH_MD_REPORT_FRAME_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_EVENT_SUPPORTED_REPORT_1BYTE_V3_FRAMETYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ALARM_REPORT_3BYTE_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  numberOfEventParameters. . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  eventParameter3. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
ZW_CONTROLLER_CHANGE_STATUS_1BYTE_FRAME TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 439 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
ZW_WAKE_UP_INTERVAL_REPORT_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_TARIFF_TBL_SUPPLIER_REPORT_1BYTE_F  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
_ZW_SWITCH_TOGGLE_BINARY_REPORT_FRAME_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SIMPLE_AV_CONTROL_SET_4BYTE_FRAME_  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  itemId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  itemId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 440 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_ALARM_SUPPORTED_REPORT_4BYT  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATIN  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  weekDayBitmask . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationHour . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_SCENE_CONTROLLER_CONF_REPORT_FRAME.  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_PROTECTION_SUPPORTED_GET_V2_FRAME_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_NODE_ADD_STATUS_2BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BY  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
VG_METER_TBL_CURRENT_DATA_REPORT_VG. .  TYPEDEF  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 441 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  currentValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  currentValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CONFIGURATION_BULK_REPORT_4BYTE_V2  * TAG *  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  4
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000FH  4
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  4
ZW_CHIMNEY_FAN_MIN_SPEED_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_EVENT_SUPPORTED_REPORT_2BYTE_V3_FRAMETYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_ALARM_REPORT_4BYTE_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  numberOfEventParameters. . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  eventParameter3. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  eventParameter4. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
ZW_CONTROLLER_CHANGE_STATUS_2BYTE_FRAME TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_TARIFF_TBL_SUPPLIER_REPORT_2BYTE_F  * TAG *  -----  STRUCT   -----  20
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 442 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
ZW_SWITCH_TOGGLE_MULTILEVEL_REPORT_FRAMETYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPOR  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_NODE_ADD_STATUS_3BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 443 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BY  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BY  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_INDICATOR_GET_FRAME_ . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_DCP_LIST_SUPPORTED_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SCHEDULE_OVERRIDE_SET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  overrideState. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_AV_CONTENT_SEARCH_MD_GET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_COMMAND_RECORDS_SUPPORTED_REPORT_F  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  freeCommandRecords1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  freeCommandRecords2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  maxCommandRecords1 . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  maxCommandRecords2 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_EVENT_SUPPORTED_REPORT_3BYTE_V3_FRAMETYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 444 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
DWORD. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
ZW_CONTROLLER_CHANGE_STATUS_3BYTE_FRAME TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
ZW_WAKE_UP_INTERVAL_GET_V2_FRAME . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_COMMAND_FRAGMENT_REQUEST_VG_ . . .  * TAG *  -----  STRUCT   -----  2
  datagramOffset1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_HEATING_SETPOINT_SET_1B  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_TARIFF_TBL_SUPPLIER_REPORT_3BYTE_F  * TAG *  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 445 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  supplierCharacter3 . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
_ZW_SWITCH_TOGGLE_BINARY_GET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SECURITY_PANEL_MODE_SET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCENE_CONTROLLER_CONF_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_NODE_ADD_STATUS_4BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandClass4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
_ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BY  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 446 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BY  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_MOVE_TO_POSITION_SET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_PUSH_CONFIGURATION_REPOR  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  pushDataset1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  pushDataset2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  pushDataset3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  intervalMonths . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  intervalDays . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  intervalHours. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  intervalMinutes. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  pushNodeId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
ZW_METER_TBL_STATUS_DEPTH_GET_FRAME. .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusEventLogDepth. . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_FIRMWARE_UPDATE_MD_GET_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_BASIC_REPORT_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_EVENT_SUPPORTED_REPORT_4BYTE_V3_FRAMETYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_NOTIFICATION_SUPPORTED_GET_V3_FRAME_* TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CONTROLLER_CHANGE_STATUS_4BYTE_FRAME TYPEDEF  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 447 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandClass4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
_VG_COMMAND_SCHEDULE_SET_1BYTE_VG_ . .  * TAG *  -----  STRUCT   -----  2
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_VERSION_COMMAND_CLASS_REPORT_FRAME.  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  requestedCommandClass. . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandClassVersion. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_THERMOSTAT_OPERATING_LOGGING_SUPPOR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_MODE_SET_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_HEATING_SETPOINT_SET_2B  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_TARIFF_TBL_SUPPLIER_REPORT_4BYTE_F  * TAG *  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 448 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  supplierCharacter3 . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  supplierCharacter4 . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
ZW_SWITCH_TOGGLE_MULTILEVEL_GET_FRAME.  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SECURITY_COMMANDS_SUPPORTED_REPORT  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandClassSupport1 . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandClassMark . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassControl1 . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SCREEN_MD_REPORT_1BYTE_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
_ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_F  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BY  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 449 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BY  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandClass4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_DOOR_LOCK_OPERATION_SET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  doorLockMode . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CHIMNEY_FAN_START_TEMP_SET_1BYTE_F  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ASSOCIATION_REMOVE_1BYTE_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_COMMAND_RECORDS_SUPPORTED_GET_FRAME_* TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
_VG_COMMAND_SCHEDULE_SET_2BYTE_VG_ . .  * TAG *  -----  STRUCT   -----  3
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_OPERATING_LOGGING_SUPPOR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_THERMOSTAT_HEATING_SETPOINT_SET_3B  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SWITCH_MULTILEVEL_REPORT_V2_FRAME_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 450 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SECURITY_COMMANDS_SUPPORTED_REPORT  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandClassSupport1 . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandClassSupport2 . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassMark . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassControl1 . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClassControl2 . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SCREEN_MD_REPORT_2BYTE_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_  * TAG *  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BY  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandClass4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_METER_TBL_PUSH_CONFIGURATION_GET_F  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_TABLE_ID_GET_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_METER_TBL_STATUS_REPORT_VG_. . . .  * TAG *  -----  STRUCT   -----  8
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_MANUFACTURER_SPECIFIC_REPORT_V2_FR  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 451 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  productTypeId1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  productTypeId2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  productId1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  productId2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_HRV_STATUS_SUPPORTED_GET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CONFIGURATION_REPORT_1BYTE_FRAME_.  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CHIMNEY_FAN_START_TEMP_SET_2BYTE_F  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_BASIC_GET_FRAME . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_REMOVE_2BYTE_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_ASSOCIATION_GROUPINGS_REPORT_FRAME.  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedGroupings . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_ALARM_SET_V2_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
t_nodeStatus . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  onValue. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  onTime . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_VG_COMMAND_SCHEDULE_SET_3BYTE_VG_ . .  * TAG *  -----  STRUCT   -----  4
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  cmdByte3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_CAPABILITY_REPORT_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  capabilityMask1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  capabilityMask2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_VERSION_COMMAND_CLASS_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 452 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  requestedCommandClass. . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_OPERATING_LOGGING_SUPPOR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_HEATING_SETPOINT_SET_4B  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SWITCH_MULTILEVEL_REPORT_V3_FRAME_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SECURITY_COMMANDS_SUPPORTED_REPORT  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandClassSupport1 . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandClassSupport2 . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassSupport3 . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassMark . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClassControl1 . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandClassControl2 . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandClassControl3 . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_SCREEN_MD_REPORT_3BYTE_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
ZW_IP_CONFIGURATION_SET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipAddress1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipAddress2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipAddress3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipAddress4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  subnetMask1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  subnetMask2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  subnetMask3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  subnetMask4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 453 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  gateway1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  gateway2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  gateway3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  gateway4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  dns11. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  dns12. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  dns13. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  dns14. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  dns21. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  dns22. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  dns23. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  dns24. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
_ZW_CONFIGURATION_REPORT_2BYTE_FRAME_.  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CHIMNEY_FAN_START_TEMP_SET_3BYTE_F  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_ASSOCIATION_REMOVE_3BYTE_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
STATE_WAIT_FOR_BUTTON_RELEASE. . . . .  E_CONST  -----  U_CHAR   -----  1
_VG_COMMAND_SCHEDULE_SET_4BYTE_VG_ . .  * TAG *  -----  STRUCT   -----  5
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  cmdByte3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  cmdByte4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_OPERATING_LOGGING_SUPPOR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SWITCH_MULTILEVEL_GET_V2_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SECURITY_COMMANDS_SUPPORTED_REPORT  * TAG *  -----  STRUCT   -----  12
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 454 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandClassSupport1 . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandClassSupport2 . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassSupport3 . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassSupport4 . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClassMark . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandClassControl1 . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandClassControl2 . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  commandClassControl3 . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassControl4 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_SCREEN_MD_REPORT_4BYTE_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  32
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  7
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
ZW_REMOTE_ASSOCIATION_ACTIVATE_FRAME .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MANUFACTURER_SPECIFIC_GET_V2_FRAME_ * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_DCP_LIST_REMOVE_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_CONFIGURATION_REPORT_3BYTE_FRAME_.  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CHIMNEY_FAN_START_TEMP_SET_4BYTE_F  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CHIMNEY_FAN_SPEED_SET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 455 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_ALARM_LOG_SET_FRAME . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  message. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_ASSOCIATION_REMOVE_4BYTE_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_ASSOCIATION_GROUPINGS_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CAPABILITY_GET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_VERSION_REPORT_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zWaveLibraryType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zWaveProtocolVersion . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zWaveProtocolSubVersion. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  applicationVersion . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  applicationSubVersion. . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V2_F  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SWITCH_MULTILEVEL_GET_V3_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SC  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_FRAME TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_RETURN_ROUTE_DELETE_COMPLETE_FRAME.  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_FAILED_NODE_REMOVE_STATUS_FRAME . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 456 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_NETWORK_UPDATE_REQUEST_STATUS_FRAME  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_GEOGRAPHIC_LOCATION_SET_FRAME_ . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  longitudeDegrees . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  latitudeDegrees. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V2  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_DOOR_LOCK_CONFIGURATION_REPORT_V2_F  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  operationType. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CONFIGURATION_REPORT_4BYTE_FRAME_.  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  configurationValue4. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_AV_MATCH_ITEM_TO_RENDERER_MD_REPOR  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ALARM_TYPE_SUPPORTED_GET_V2_FRAME_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ANTITHEFT_SET_1BYTE_V2_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 457 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V2_F  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_FAN_STATE_REPORT_FRAME_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SC  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SECURITY_MESSAGE_ENCAPSULATION_1BY  * TAG *  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   000FH  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0016H  1
_ZW_RATE_TBL_REMOVE_1BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_GET_V2_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 458 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_LOCK_REPORT_FRAME_ . . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  lockState. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_HRV_CONTROL_MODE_SUPPORTED_GET_FRA  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V2  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_CHIMNEY_FAN_STATE_REPORT_FRAME_. .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ANTITHEFT_SET_2BYTE_V2_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_VERSION_GET_FRAME_ . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V2_F  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_THERMOSTAT_OPERATING_STATE_REPORT_V  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 459 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SECURITY_MESSAGE_ENCAPSULATION_2BY  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0017H  1
_ZW_RATE_TBL_REMOVE_2BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_RETURN_ROUTE_DELETE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_GET_V3_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V2  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_TBL_REPORT_V2_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetSupported1. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 460 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  datasetSupported2. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  datasetSupported3. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  datasetHistorySupported1 . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  datasetHistorySupported2 . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  datasetHistorySupported3 . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dataHistorySupported1. . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  dataHistorySupported2. . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  dataHistorySupported3. . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
ZW_METER_PULSE_REPORT_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  pulseCount1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  pulseCount2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  pulseCount3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  pulseCount4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_HRV_STATUS_SUPPORTED_REPORT_1BYTE_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_HRV_CONTROL_BYPASS_REPORT_FRAME_ .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bypass . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V2  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_DOOR_LOCK_CONFIGURATION_GET_V2_FRAME TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_AV_MATCH_ITEM_TO_RENDERER_MD_GET_F  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_ANTITHEFT_SET_3BYTE_V2_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  magicCode3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 461 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
_ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V2_F  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_THERMOSTAT_FAN_STATE_GET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SENSOR_ALARM_REPORT_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sourceNodeId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorState. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SECURITY_MESSAGE_ENCAPSULATION_3BY  * TAG *  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0015H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 462 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0017H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0018H  1
_ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_F  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_RATE_TBL_REMOVE_3BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateParameterSetId3. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_PROTECTION_EC_SET_V2_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_MULTI_INSTANCE_ASSOCIATION_GET_FRAME TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V2  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_LOCK_GET_FRAME_. . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_HRV_STATUS_SUPPORTED_REPORT_2BYTE_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V2  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_CHIMNEY_FAN_STATE_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 463 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_CHIMNEY_FAN_ALARM_STATUS_SET_FRAME.  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  message. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
t_nodeInfo . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  5
  memberClass. . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  5
ZW_ANTITHEFT_SET_4BYTE_V2_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  magicCode3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  magicCode4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  antiTheftHintByte4 . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_ANTITHEFT_GET_FRAME_ . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_STATE_SET_VG_. . . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_COMMAND_FIRST_FRAGMENT_1BYTE_FRAME_ * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_THERMOSTAT_SETPOINT_GET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_OPERATING_STATE_GET_V2_F  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_GET_V2_F  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 464 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SECURITY_MESSAGE_ENCAPSULATION_4BY  * TAG *  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  commandByte4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0017H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0018H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0019H  1
_ZW_RATE_TBL_REMOVE_4BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateParameterSetId3. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateParameterSetId4. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V2  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterIdCharacter3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_F  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_PULSE_GET_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_HRV_STATUS_SUPPORTED_REPORT_3BYTE_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_HRV_CONTROL_BYPASS_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 465 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CONFIGURATION_BULK_SET_1BYTE_V2_FR  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  4
_ZW_BASIC_WINDOW_COVERING_STOP_LEVEL_C  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_REPO  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ASSOCIATION_GET_V2_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
rediscoveryTimerHandle . . . . . . . .  PUBLIC   XDATA  U_CHAR   0000H  1
currentHealMode. . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0001H  1
currentState . . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
_ZW_COMMAND_FIRST_FRAGMENT_2BYTE_FRAME_ * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SENSOR_BINARY_REPORT_V2_FRAME . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorValue. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SENSOR_ALARM_GET_FRAME_. . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_PROPRIETARY_REPORT_1BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V2  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 466 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterIdCharacter3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterIdCharacter4. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_HRV_STATUS_SUPPORTED_REPORT_4BYTE_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CONFIGURATION_BULK_SET_2BYTE_V2_FR  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  4
ZW_CLOCK_REPORT_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minute . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_CHIMNEY_FAN_MIN_SPEED_SET_FRAME . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_AV_TAGGING_MD_REPORT_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SECURITY_MESSAGE_ENCAP_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  48
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initVectorByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initVectorByte2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initVectorByte3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initVectorByte4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initVectorByte5. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initVectorByte6. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initVectorByte7. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initVectorByte8. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  securityEncapMessage . . . . . . . .  MEMBER   -----  ARRAY    000AH  29
  receiverNonceIdent . . . . . . . . .  MEMBER   -----  U_CHAR   0027H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0028H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0029H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   002AH  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   002BH  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   002CH  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   002DH  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   002EH  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   002FH  1
_ZW_WAKE_UP_NO_MORE_INFORMATION_FRAME_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_COMMAND_FIRST_FRAGMENT_3BYTE_FRAME_ * TAG *  -----  STRUCT   -----  9
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 467 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_SWITCH_TOGGLE_MULTILEVEL_STOP_LEVE  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALL  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfSensors. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCREEN_ATTRIBUTES_REPORT_FRAME_. .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfCharactersPerLine. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sizeOfLineBuffer . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numericalPresentationOfACharacter. .  MEMBER   -----  U_CHAR   0005H  1
_ZW_PROPRIETARY_REPORT_2BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_INSTANCE_REPORT_V2_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
_ZW_METER_REPORT_1BYTE_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_INDICATOR_SET_FRAME_ . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 468 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CONFIGURATION_BULK_SET_3BYTE_V2_FR  * TAG *  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  4
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  4
ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_GET_  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ALARM_TYPE_SUPPORTED_REPORT_1BYTE_V  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ALARM_REPORT_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
EADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_ZW_COMPOSITE_REPLY_ENCAP_FRAME_ . . .  * TAG *  -----  STRUCT   -----  41
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  endPoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0003H  38
ZW_WAKE_UP_INTERVAL_SET_V2_FRAME . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_COMMAND_FIRST_FRAGMENT_4BYTE_FRAME_ * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_TIME_REPORT_FRAME_ . . . . . . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_TARIFF_TBL_SUPPLIER_SET_1BYTE_FRAME_* TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 469 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
_ZW_SWITCH_TOGGLE_BINARY_SET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_GET_V2_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_BINARY_GET_V2_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCENE_CONTROLLER_CONF_SET_FRAME . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_PROPRIETARY_REPORT_3BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_PROPRIETARY_GET_1BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_INSTANCE_REPORT_V3_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 470 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
_ZW_METER_REPORT_1BYTE_V3_FRAME_ . . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_METER_REPORT_2BYTE_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_METER_TBL_CURRENT_DATA_GET_V2_FRAME_* TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datasetRequested1. . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datasetRequested2. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetRequested3. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_1  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_CONFIGURATION_BULK_SET_4BYTE_V2_FR  * TAG *  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  4
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  4
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0012H  4
ZW_CLOCK_GET_FRAME . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_ALARM_TEMP_GET_FRAME_.  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_AV_TAGGING_MD_GET_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_RE  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ALARM_TYPE_SUPPORTED_REPORT_2BYTE_V  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 471 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_SETBACK_REPORT_FRAME . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  setbackState . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_TARIFF_TBL_SUPPLIER_SET_2BYTE_FRAME_* TAG *  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
ZW_SWITCH_TOGGLE_MULTILEVEL_SET_FRAME.  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_GET_V3_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_TRIGGER_LEVEL_GET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_NETWORK_KEY_VERIFY_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALL  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SCREEN_ATTRIBUTES_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_F  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 472 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_REMOTE_ASSOCIATION_CONFIGURATION_R  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  localGroupingIdentifier. . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  remoteNodeid . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  remoteGroupingIdentifier . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_PROPRIETARY_REPORT_4BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_PROPRIETARY_GET_2BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
_ZW_MULTI_INSTANCE_GET_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
_ZW_METER_REPORT_2BYTE_V3_FRAME_ . . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 473 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_METER_REPORT_3BYTE_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  previousMeterValue3. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_2  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V2_F  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  firmwareId1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  firmwareId2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_CTRL_REPLICATION_TRANSFER_SCENE_FR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_APPLICATION_REJECTED_REQUEST_FRAME_ * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_ALARM_TYPE_SUPPORTED_REPORT_3BYTE_V  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_ALARM_GET_FRAME . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
P0_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
searchNodeID . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0002H  1
_ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPO  * TAG *  -----  STRUCT   -----  14
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 474 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  minimumWakeUpIntervalSeconds1. . . .  MEMBER   -----  U_CHAR   0002H  1
  minimumWakeUpIntervalSeconds2. . . .  MEMBER   -----  U_CHAR   0003H  1
  minimumWakeUpIntervalSeconds3. . . .  MEMBER   -----  U_CHAR   0004H  1
  maximumWakeUpIntervalSeconds1. . . .  MEMBER   -----  U_CHAR   0005H  1
  maximumWakeUpIntervalSeconds2. . . .  MEMBER   -----  U_CHAR   0006H  1
  maximumWakeUpIntervalSeconds3. . . .  MEMBER   -----  U_CHAR   0007H  1
  defaultWakeUpIntervalSeconds1. . . .  MEMBER   -----  U_CHAR   0008H  1
  defaultWakeUpIntervalSeconds2. . . .  MEMBER   -----  U_CHAR   0009H  1
  defaultWakeUpIntervalSeconds3. . . .  MEMBER   -----  U_CHAR   000AH  1
  wakeUpIntervalStepSeconds1 . . . . .  MEMBER   -----  U_CHAR   000BH  1
  wakeUpIntervalStepSeconds2 . . . . .  MEMBER   -----  U_CHAR   000CH  1
  wakeUpIntervalStepSeconds3 . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_TIME_GET_FRAME_. . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_F  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
VG_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  usageTodayHours. . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  usageTodayMinutes. . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  usageYesterdayHours. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  usageYesterdayMinutes. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_TARIFF_TBL_SUPPLIER_SET_3BYTE_FRAME_* TAG *  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  supplierCharacter3 . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
_ZW_SENSOR_MULTILEVEL_GET_V4_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_PROPRIETARY_GET_3BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 475 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_NODE_INFO_CACHED_GET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
_ZW_MULTI_INSTANCE_GET_V3_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4  * TAG *  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
_ZW_METER_REPORT_3BYTE_V3_FRAME_ . . .  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  previousMeterValue3. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
_ZW_METER_REPORT_4BYTE_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 476 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  meterValue4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  previousMeterValue3. . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  previousMeterValue4. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_METER_TBL_PUSH_CONFIGURATION_SET_F  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  pushDataset1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  pushDataset2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  pushDataset3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  intervalMonths . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  intervalDays . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  intervalHours. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  intervalMinutes. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  pushNodeId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
_VG_METER_TBL_HISTORICAL_DATA_REPORT_VG_* TAG *  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  historicalValue1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  historicalValue2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  historicalValue3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalValue4 . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_3  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_GROUPING_NAME_REPORT_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupingName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  groupingName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  groupingName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  groupingName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  groupingName5. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  groupingName6. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  groupingName7. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  groupingName8. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  groupingName9. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  groupingName10 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  groupingName11 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  groupingName12 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  groupingName13 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  groupingName14 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  groupingName15 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  groupingName16 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
ZW_CRC_16_ENCAP_1BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 477 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  command. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_BASIC_SET_FRAME . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_GE  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ALARM_TYPE_SUPPORTED_REPORT_4BYTE_V  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
P1_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
P0_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
_callbackAskNodeForHelp. . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  txStatus . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
STATE_WAKEUP_NOTIFICATION_START. . . .  E_CONST  -----  U_CHAR   -----  1
STATE_APPL_IDLE. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_ANTITHEFT_REPORT_1BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_F  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_THERMOSTAT_SETBACK_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1B  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_TARIFF_TBL_SUPPLIER_SET_4BYTE_FRAME_* TAG *  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 478 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  supplierCharacter3 . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  supplierCharacter4 . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_GET_V5_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_REMOTE_ASSOCIATION_CONFIGURATION_G  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  localGroupingIdentifier. . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_RATE_TBL_GET_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_PROPRIETARY_GET_4BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
_ZW_METER_REPORT_4BYTE_V3_FRAME_ . . .  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 479 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  meterValue4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  previousMeterValue3. . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  previousMeterValue4. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_4  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CRC_16_ENCAP_2BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  command. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_ASSOCIATION_REPORT_1BYTE_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
FL . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
P1_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
ZW_ANTITHEFT_REPORT_2BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SCHEDULE_STATE_REPORT_FRAME_ . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 480 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_F  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2B  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SWITCH_MULTILEVEL_SET_V2_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
VG_SIMPLE_AV_CONTROL_SET_VG. . . . . .  TYPEDEF  -----  STRUCT   -----  2
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  command2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_GET_V6_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_POWERLEVEL_TEST_NODE_REPORT_FRAME_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  testNodeid . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  statusOfOperation. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  testFrameCount1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  testFrameCount2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_  * TAG *  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0010H  2
ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 481 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_GROUPING_NAME_GET_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CRC_16_ENCAP_3BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  command. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_CONFIGURATION_SET_1BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_ASSOCIATION_REPORT_2BYTE_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
P1_2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
STATE_BASIC_CMD_WAIT . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_ANTITHEFT_REPORT_3BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ZIP_NODE_SOLICITATION_FRAME_ . . .  * TAG *  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 482 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
_ZW_COMMAND_SCHEDULE_GET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_STOP_STATE_CHANGE_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_F  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3B  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SWITCH_MULTILEVEL_SET_V3_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REP  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_PROTECTION_REPORT_V2_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_PREPAYMENT_SUPPORTED_REPORT_FRAME_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_TBL_STATUS_DATE_GET_V2_FRAME.  TYPEDEF  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 483 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_METER_TBL_STATUS_SUPPORTED_REPORT_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedOperatingStatus1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  supportedOperatingStatus2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  supportedOperatingStatus3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  statusEventLogDepth. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_CRC_16_ENCAP_4BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  command. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_CONFIGURATION_SET_2BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_ASSOCIATION_REPORT_3BYTE_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeid3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
P1_3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
ZW_ANTITHEFT_REPORT_4BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  10
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 484 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte4 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_IP_ASSOCIATION_REMOVE_1BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
_ZW_SCHEDULE_STATE_GET_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4B  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_FAN_MODE_REPORT_V2_FRAME_* TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V2_F  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SCREEN_MD_GET_FRAME_ . . . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 485 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REP  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_RATE_TBL_CURRENT_DATA_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datasetRequested1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetRequested2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  datasetRequested3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_POWERLEVEL_TEST_NODE_GET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
  meterPointAdmNumberCharacter4. . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CONFIGURATION_SET_3BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_1BYTE  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_BASIC_WINDOW_COVERING_START_LEVEL_C  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 486 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_ASSOCIATION_REPORT_4BYTE_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeid3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeid4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
P1_4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
ZW_COMPOSITE_CMD_ENCAP_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  42
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  endPointMask1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  endPointMask2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0004H  38
ZW_IP_ASSOCIATION_REMOVE_2BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
_ZW_ASSOCIATION_GROUP_NAME_GET_FRAME_.  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_COMMAND_SUBSEQUENT_FRAGMENT_1BYTE_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_THERMOSTAT_FAN_MODE_REPORT_V3_FRAME_* TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 487 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_FRAMETYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V3_F  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V2_F  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SENSOR_TRIGGER_LEVEL_REPORT_1BYTE_F  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_PROTECTION_GET_V2_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_PREPAYMENT_SUPPORTED_GET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_METER_TBL_STATUS_SUPPORTED_GET_FRA  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_HRV_CONTROL_VENTILATION_RATE_REPOR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 488 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ventilationRate. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_DOOR_LOCK_CONFIGURATION_SET_V2_FRAME TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  operationType. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CONFIGURATION_SET_4BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  configurationValue4. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_2BYTE  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_TimerStart. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
P1_5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
ZW_IP_ASSOCIATION_REMOVE_3BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
_ZW_COMMAND_SUBSEQUENT_FRAGMENT_2BYTE_  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 489 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_COMMAND_FRAGMENT_COMPLETE_FRAME_ .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_FAN_MODE_GET_V2_FRAME_.  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SWITCH_TOGGLE_MULTILEVEL_START_LEVE  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V4_F  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V3_F  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V2_F  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SENSOR_TRIGGER_LEVEL_REPORT_2BYTE_F  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_RATE_TBL_REPORT_1BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 490 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
ZW_NODE_INFO_CACHED_REPORT_1BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nonSecureCommandClass1 . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  securityScheme0Mark1 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  securityScheme0Mark2 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  securityScheme0CommandClass1 . . . .  MEMBER   -----  U_CHAR   000DH  1
VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG TYPEDEF  -----  STRUCT   -----  2
  multiInstanceNodeId. . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  instance . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_MULTI_CHANNEL_END_POINT_REPORT_V2_F  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_MULTI_CHANNEL_ASSOCIATION_GET_V2_FR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE  TYPEDEF  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 491 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
_ZW_LOCK_SET_FRAME_. . . . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  lockState. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_DCP_LIST_GET_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_STATE_SET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_3BYTE  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
P1_6 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
abortHeal. . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0000H  1
ZW_IP_ASSOCIATION_REMOVE_4BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
ZW_WAKE_UP_INTERVAL_REPORT_FRAME . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_COMMAND_SUBSEQUENT_FRAGMENT_3BYTE_  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 492 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_THERMOSTAT_FAN_MODE_GET_V3_FRAME_.  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V5_F  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V4_F  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V3_F  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V2_F  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SENSOR_TRIGGER_LEVEL_REPORT_3BYTE_F  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_RATE_TBL_REPORT_2BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 493 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
ZW_NODE_INFO_CACHED_REPORT_2BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nonSecureCommandClass1 . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nonSecureCommandClass2 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  securityScheme0Mark1 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  securityScheme0Mark2 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  securityScheme0CommandClass1 . . . .  MEMBER   -----  U_CHAR   000EH  1
  securityScheme0CommandClass2 . . . .  MEMBER   -----  U_CHAR   000FH  1
ZW_MULTI_CHANNEL_END_POINT_REPORT_V3_F  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE  TYPEDEF  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 494 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
_ZW_HRV_CONTROL_VENTILATION_RATE_GET_F  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_HRV_CONTROL_BYPASS_SET_FRAME_. . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bypass . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_4BYTE  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_NOTIFICATION_GET_V3_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
P1_7 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
ZW_MULTI_COMMAND_ENCAP_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  42
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCommands . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0004H  38
_ZW_DEVICE_RESET_LOCALLY_NOTIFICATION_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_COMMAND_ZIP_PACKET_1BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  headerExtension1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  zWaveCommand1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_COMMAND_SUBSEQUENT_FRAGMENT_4BYTE_  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  payload4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 495 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V6_F  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V5_F  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V4_F  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V3_F  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SENSOR_TRIGGER_LEVEL_REPORT_4BYTE_F  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  triggerValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_RATE_TBL_REPORT_3BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateCharacter3 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 496 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
ZW_NODE_INFO_CACHED_REPORT_3BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nonSecureCommandClass1 . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nonSecureCommandClass2 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nonSecureCommandClass3 . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  securityScheme0Mark1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  securityScheme0Mark2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  securityScheme0CommandClass1 . . . .  MEMBER   -----  U_CHAR   000FH  1
  securityScheme0CommandClass2 . . . .  MEMBER   -----  U_CHAR   0010H  1
  securityScheme0CommandClass3 . . . .  MEMBER   -----  U_CHAR   0011H  1
ZW_MULTI_CHANNEL_END_POINT_GET_V2_FRAME TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_STATUS_REPORT_1BYTE_V2_F  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
_ZW_HRV_STATUS_GET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
PADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FAH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
_APPL_NODE_TYPE_ . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  generic. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  specific . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPO  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  listLength . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_COMMAND_SCHEDULE_REPORT_1BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 497 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
ZW_COMMAND_ZIP_PACKET_2BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  headerExtension1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  headerExtension2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  zWaveCommand1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  zWaveCommand2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
ZW_WAKE_UP_INTERVAL_GET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_HEATING_MODE_REPORT_FRAME TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_HEATING_STATUS_REPORT_F  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_F  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_TARIFF_TBL_REMOVE_1BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SWITCH_MULTILEVEL_START_LEVEL_CHAN  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V6_F  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 498 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V5_F  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V4_F  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_RATE_TBL_REPORT_4BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  27
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateCharacter3 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  rateCharacter4 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
_ZW_RATE_TBL_CURRENT_DATA_REPORT_1BYTE  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 499 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
ZW_RETURN_ROUTE_ASSIGN_COMPLETE_FRAME.  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NODE_INFO_CACHED_REPORT_4BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nonSecureCommandClass1 . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nonSecureCommandClass2 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nonSecureCommandClass3 . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nonSecureCommandClass4 . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  securityScheme0Mark1 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  securityScheme0Mark2 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  securityScheme0CommandClass1 . . . .  MEMBER   -----  U_CHAR   0010H  1
  securityScheme0CommandClass2 . . . .  MEMBER   -----  U_CHAR   0011H  1
  securityScheme0CommandClass3 . . . .  MEMBER   -----  U_CHAR   0012H  1
  securityScheme0CommandClass4 . . . .  MEMBER   -----  U_CHAR   0013H  1
ZW_MULTI_CHANNEL_END_POINT_GET_V3_FRAME TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_MULTI_CHANNEL_END_POINT_FIND_V2_FR  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_TBL_STATUS_REPORT_2BYTE_V2_F  * TAG *  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
_ZW_FIRMWARE_MD_REPORT_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  firmwareId1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  firmwareId2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_FIRMWARE_UPDATE_MD_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 500 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ENERGY_PRODUCTION_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_VG_CONFIGURATION_BULK_REPORT_1BYTE_V2  * TAG *  -----  STRUCT   -----  1
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPO  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  listLength . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  command2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_COMMAND_SCHEDULE_REPORT_2BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
ZW_START_CAPABILITY_LEVEL_CHANGE_FRAME  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startState . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_COMMAND_COMMAND_CLASS_NOT_SUPPORTED  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  offendingCommandClass. . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  offendingCommand . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_COMMAND_ZIP_PACKET_3BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  headerExtension1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  headerExtension2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 501 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  headerExtension3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  zWaveCommand1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  zWaveCommand2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  zWaveCommand3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
_ZW_TARIFF_TBL_REMOVE_2BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SWITCH_MULTILEVEL_START_LEVEL_CHAN  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  stepSize . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V6_F  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V5_F  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SCREEN_MD_REPORT_1BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
_ZW_RATE_TBL_CURRENT_DATA_REPORT_2BYTE  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 502 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_PROPRIETARY_SET_1BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_CHANNEL_END_POINT_FIND_V3_FR  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_TBL_STATUS_REPORT_3BYTE_V2_F  * TAG *  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0016H  8
ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAM  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_VG_CONFIGURATION_BULK_REPORT_2BYTE_V2  * TAG *  -----  STRUCT   -----  2
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CLOCK_SET_FRAME . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minute . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_CHIMNEY_FAN_SETUP_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_REMOVE_1BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPO  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  listLength . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  command2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  command3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 503 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  lengthOfName . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  name1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_COMMAND_SCHEDULE_REPORT_3BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
ZW_COMMAND_ZIP_PACKET_4BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  headerExtension1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  headerExtension2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  headerExtension3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  headerExtension4 . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  zWaveCommand1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  zWaveCommand2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  zWaveCommand3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  zWaveCommand4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_USER_CODE_REPORT_FRAME_. . . . . .  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdStatus . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  userCode3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  userCode4. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  userCode5. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  userCode6. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  userCode7. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userCode8. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCode9. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode10 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_THERMOSTAT_HEATING_STATUS_GET_FRAME_* TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_HEATING_MODE_GET_FRAME .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 504 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_TARIFF_TBL_REMOVE_3BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateParameterSetId3. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SWITCH_MULTILEVEL_REPORT_FRAME_. .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SWITCH_BINARY_REPORT_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V6_F  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SCREEN_MD_REPORT_2BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
_ZW_RATE_TBL_CURRENT_DATA_REPORT_3BYTE  * TAG *  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
_ZW_PROPRIETARY_SET_2BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 505 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_RETURN_ROUTE_ASSIGN_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sourceNodeId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  destinationNodeId. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
_ZW_METER_TBL_STATUS_REPORT_4BYTE_V2_F  * TAG *  -----  STRUCT   -----  38
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0016H  8
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001EH  8
ZW_METER_TBL_TABLE_ID_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_MANUFACTURER_SPECIFIC_REPORT_FRAME_ * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  productTypeId1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  productTypeId2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  productId1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  productId2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_IP_CONFIGURATION_RENEW_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_HRV_CONTROL_MODE_REPORT_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_FIRMWARE_MD_GET_V2_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_DCP_LIST_REPORT_1BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 506 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dcpId. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAM  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sceneName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_VG_CONFIGURATION_BULK_REPORT_3BYTE_V2  * TAG *  -----  STRUCT   -----  3
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameter3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CHIMNEY_FAN_DEFAULT_SET_FRAME_ . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_AV_CONTENT_BROWSE_MD_REPORT_FRAME_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_REMOVE_2BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
_ZW_IP_ASSOCIATION_GET_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPO  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  listLength . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 507 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  command2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  command3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  command4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  lengthOfName . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  name1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  name2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_COMMAND_SCHEDULE_REPORT_4BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
ZW_SCHEDULE_SUPPORTED_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_TARIFF_TBL_REMOVE_4BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateParameterSetId3. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateParameterSetId4. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SCREEN_MD_REPORT_3BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 508 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  numberOfSlotsWeekDay . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfSlotsYearDay . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_RATE_TBL_CURRENT_DATA_REPORT_4BYTE  * TAG *  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
_ZW_PROPRIETARY_SET_3BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
ZW_IP_CONFIGURATION_RELEASE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_DCP_LIST_REPORT_2BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  31
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dcpId. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 509 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAM  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sceneName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sceneName3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_VG_CONFIGURATION_BULK_REPORT_4BYTE_V2  * TAG *  -----  STRUCT   -----  4
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameter3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameter4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ASSOCIATION_REMOVE_3BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_NOTIFICATION_REPORT_1BYTE_V3_FRAME_ * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  v1AlarmLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
normalPower. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  lengthOfName . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  name1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  name2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  name3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_ZIP_NODE_ADVERTISEMENT_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 510 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  homeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  homeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  homeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  homeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
ZW_LOWPAN_FIRST_FRAGMENT_1BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_USER_CODE_GET_FRAME_ . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_SETBACK_SET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  setbackState . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SWITCH_MULTILEVEL_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SWITCH_BINARY_GET_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SCREEN_MD_REPORT_4BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  31
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 511 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  7
ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSlotsWeekDay . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfSlotsYearDay . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSlotsDailyRepeating. . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SCENE_ACTUATOR_CONF_REPORT_FRAME_.  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_REMOTE_ASSOCIATION_CONFIGURATION_S  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  localGroupingIdentifier. . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  remoteNodeid . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  remoteGroupingIdentifier . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_PROPRIETARY_SET_4BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_SET_1BY  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
_ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
_ZW_METER_TBL_TABLE_CAPABILITY_GET_V2_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_MANUFACTURER_SPECIFIC_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_HRV_CONTROL_MODE_GET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_DOOR_LOCK_OPERATION_REPORT_V2_FRAME_* TAG *  -----  STRUCT   -----  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 512 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  doorLockMode . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  doorCondition. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_DCP_LIST_REPORT_3BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  33
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dcpId. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0010H  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAM  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sceneName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sceneName3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sceneName4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_AV_CONTENT_BROWSE_MD_GET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_REMOVE_4BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 513 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_NOTIFICATION_REPORT_2BYTE_V3_FRAME_ * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  v1AlarmLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
networkUpdateDownCount . . . . . . . .  PUBLIC   XDATA  U_CHAR   07E8H  1
ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  lengthOfName . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  name1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  name2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  name3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  name4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_LOWPAN_FIRST_FRAGMENT_2BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_USERS_NUMBER_REPORT_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedUsers . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_SETPOINT_SET_1BYTE_FRAME_* TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_MODE_REPORT_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_PROTECTION_TIMEOUT_REPORT_V2_FRAME.  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  timeout. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_SET_2BY  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 514 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
_ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4  * TAG *  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0010H  2
ZW_HRV_STATUS_REPORT_1BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_GROUPING_NAME_SET_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupingName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  groupingName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  groupingName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  groupingName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  groupingName5. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  groupingName6. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  groupingName7. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  groupingName8. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  groupingName9. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  groupingName10 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  groupingName11 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  groupingName12 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  groupingName13 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  groupingName14 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  groupingName15 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  groupingName16 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
_ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_F  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_FR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 515 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_DOOR_LOCK_CONFIGURATION_REPORT_FRAME TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  operationType. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_DCP_LIST_REPORT_4BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  35
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dcpId. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0010H  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0012H  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   0021H  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   0022H  1
ZW_CHIMNEY_FAN_STOP_TIME_REPORT_FRAME.  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  time . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_NOTIFICATION_REPORT_3BYTE_V3_FRAME_ * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  v1AlarmLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 516 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  eventParameter3. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
IE_1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
ZW_ANTITHEFT_SET_1BYTE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_LOWPAN_FIRST_FRAGMENT_3BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_SETPOINT_SET_2BYTE_FRAME_* TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SECURITY_MESSAGE_ENCAPSULATION_NON  * TAG *  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   000FH  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0015H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 517 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0016H  1
ZW_SECURITY_PANEL_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedModeBitMask1. . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  supportedModeBitMask2. . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
VG_SCREEN_MD_REPORT_1BYTE_V2_VG. . . .  TYPEDEF  -----  STRUCT   -----  4
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SCENE_ACTUATOR_CONF_GET_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_SET_3BY  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
ZW_METER_GET_FRAME . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_HISTORICAL_DATA_GET_V2_FR  TYPEDEF  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  historicalDatasetRequested1. . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalDatasetRequested2. . . . .  MEMBER   -----  U_CHAR   0004H  1
  historicalDatasetRequested3. . . . .  MEMBER   -----  U_CHAR   0005H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_1B  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 518 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_HRV_STATUS_REPORT_2BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_FR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_ENERGY_PRODUCTION_REPORT_1BYTE_FRAME TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_DOOR_LOCK_OPERATION_GET_V2_FRAME_.  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_BOOST_TIME_REPORT_FRAME_* TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  time . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_ASSOCIATION_SET_1BYTE_V2_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_NOTIFICATION_REPORT_4BYTE_V3_FRAME_ * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  v1AlarmLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  eventParameter3. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  eventParameter4. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
STATE_WAKEUP_NOTIFICATION. . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_ANTITHEFT_SET_2BYTE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0007H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 519 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_ASSOCIATION_GROUP_INFO_GET_FRAME_.  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCHEDULE_STATE_SET_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleState. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCHEDULE_REMOVE_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_LOWPAN_FIRST_FRAGMENT_4BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_USERS_NUMBER_GET_FRAME_. . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_SETPOINT_SET_3BYTE_FRAME_* TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_THERMOSTAT_OPERATING_STATE_REPORT_F  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_MODE_GET_V2_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_TARIFF_TBL_REPORT_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  tariffValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  tariffValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  tariffValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 520 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  tariffValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SENSOR_ALARM_SET_1BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SECURITY_MESSAGE_ENCAPSULATION_NON  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0017H  1
VG_SCREEN_MD_REPORT_2BYTE_V2_VG. . . .  TYPEDEF  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_PROTECTION_TIMEOUT_GET_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_POWERLEVEL_TEST_NODE_SET_FRAME_. .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  testNodeid . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  powerLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  testFrameCount1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  testFrameCount2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_SET_4BY  * TAG *  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 521 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
_ZW_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
_ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_FR  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_TBL_REPORT_FRAME_. . . . . .  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetSupported1. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  datasetSupported2. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  datasetSupported3. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  datasetHistorySupported1 . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  datasetHistorySupported2 . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  datasetHistorySupported3 . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dataHistorySupported1. . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  dataHistorySupported2. . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  dataHistorySupported3. . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_2B  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_HRV_STATUS_REPORT_3BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_FR  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_ENERGY_PRODUCTION_REPORT_2BYTE_FRAME TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 522 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_DOOR_LOCK_CONFIGURATION_GET_FRAME .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_STOP_TIME_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_SETUP_REPORT_1BYTE_FRAME TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_ASSOCIATION_SET_2BYTE_V2_FRAME. . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_ANTITHEFT_SET_3BYTE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  magicCode3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
_ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_FR  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSupportedCc. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_STATE_REPORT_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_TIME_OFFSET_REPORT_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 523 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  monthStartDst. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dayStartDst. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourStartDst . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  monthEndDst. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dayEndDst. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  hourEndDst . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
_ZW_THERMOSTAT_SETPOINT_SET_4BYTE_FRAME_* TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SENSOR_ALARM_SET_2BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SECURITY_MESSAGE_ENCAPSULATION_NON  * TAG *  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0011H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 524 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0017H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0018H  1
ZW_SECURITY_PANEL_MODE_SUPPORTED_GET_F  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
VG_SCREEN_MD_REPORT_3BYTE_V2_VG. . . .  TYPEDEF  -----  STRUCT   -----  6
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  character3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_PROTECTION_SET_V2_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
_ZW_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
_ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_FR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_3B  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_HRV_STATUS_REPORT_4BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 525 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_FR  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_ENERGY_PRODUCTION_REPORT_3BYTE_FRAME TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_RECORD_GET_FRAME_. . . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_SETUP_REPORT_2BYTE_FRAME TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_CHIMNEY_FAN_BOOST_TIME_GET_FRAME_.  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_SET_3BYTE_V2_FRAME. . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_COMMAND_CONFIGURATION_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 526 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
STATE_HEAL_LOST. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_ANTITHEFT_SET_4BYTE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  magicCode3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  magicCode4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  antiTheftHintByte4 . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_IP_ASSOCIATION_REPORT_1BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  actualNodes. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
ZW_ZIP_INV_NODE_SOLICITATION_FRAME . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_FR  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSupportedCc. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 527 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_THERMOSTAT_OPERATING_STATE_GET_FRAME TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_GET_FRAME_* TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_FAN_MODE_SET_V2_FRAME_.  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_TARIFF_TBL_GET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_ALARM_SET_3BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_SECURITY_MESSAGE_ENCAPSULATION_NON  * TAG *  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  commandByte4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0017H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0018H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0019H  1
VG_SCREEN_MD_REPORT_4BYTE_V2_VG. . . .  TYPEDEF  -----  STRUCT   -----  7
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 528 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  character3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  character4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
_ZW_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  1
VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2  TYPEDEF  -----  STRUCT   -----  2
  multiChannelNodeId . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_FR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterIdCharacter3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_4B  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
  meterPointAdmNumberCharacter4. . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_ENERGY_PRODUCTION_REPORT_4BYTE_FRAME TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_DCP_EVENT_STATUS_REPORT_FRAME . . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 529 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_CHIMNEY_FAN_SETUP_REPORT_3BYTE_FRAME TYPEDEF  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startTemperature3. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopTemperature3 . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  alarmTemperatureValue3 . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
ZW_CHIMNEY_FAN_ALARM_TEMP_SET_1BYTE_FR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ASSOCIATION_SET_4BYTE_V2_FRAME. . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_ASSOCIATION_GET_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
miniumPower. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_IP_ASSOCIATION_REPORT_2BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  actualNodes. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 530 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
_ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_FR  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSupportedCc. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_STATE_GET_FRAME . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_TIME_OFFSET_GET_V2_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_FAN_MODE_SET_V3_FRAME_.  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_ALARM_SET_4BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_SENSOR_TRIGGER_LEVEL_SET_1BYTE_FRAME TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SENSOR_BINARY_REPORT_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 531 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  sensorValue. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  1
_ZW_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  1
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  1
_ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_FR  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterIdCharacter3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterIdCharacter4. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_HRV_CONTROL_VENTILATION_RATE_SET_F  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  ventilationRate. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_SETUP_REPORT_4BYTE_FRAME TYPEDEF  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startTemperature3. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startTemperature4. . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopTemperature3 . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopTemperature4 . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  alarmTemperatureValue3 . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  alarmTemperatureValue4 . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
ZW_CHIMNEY_FAN_ALARM_TEMP_SET_2BYTE_FR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 532 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  group. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_NOTIFICATION_SET_V3_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
GetRandomNetUpdateCount. . . . . . . .  STATIC   CODE   PROC     0000H  -----
  delay. . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  result . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME. . .  TYPEDEF  -----  STRUCT   -----  41
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  instance . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0003H  38
ZW_IP_ASSOCIATION_REPORT_3BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  actualNodes. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
_ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_FR  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSupportedCc. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 533 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_WAKE_UP_NOTIFICATION_V2_FRAME_ . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_TRIGGER_LEVEL_SET_2BYTE_FRAME TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SECURITY_PANEL_ZONE_NUMBER_SUPPORT  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_RATE_TBL_HISTORICAL_DATA_GET_FRAME_ * TAG *  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetRequested1. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  datasetRequested2. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  datasetRequested3. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
_ZW_RATE_TBL_SET_1BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 534 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
_ZW_MULTI_INSTANCE_REPORT_FRAME_ . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  instances. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG TYPEDEF  -----  STRUCT   -----  2
  multiInstanceNodeId. . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  instance . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  1
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  1
_ZW_METER_REPORT_1BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  meterType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_METER_TBL_HISTORICAL_DATA_REPORT_1  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_F  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_DCP_EVENT_STATUS_GET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 535 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_CHIMNEY_FAN_ALARM_TEMP_SET_3BYTE_FR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
ZW_IP_ASSOCIATION_REPORT_4BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  27
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  actualNodes. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  resourceName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
ZW_WAKE_UP_INTERVAL_SET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SENSOR_MULTILEVEL_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 536 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_SENSOR_TRIGGER_LEVEL_SET_3BYTE_FRAME TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  triggerValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SENSOR_BINARY_GET_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_RATE_TBL_SET_2BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
_ZW_NODE_LIST_GET_FRAME_ . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_REPORT_2BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  meterType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 537 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_METER_TBL_HISTORICAL_DATA_REPORT_2  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_METER_TBL_CURRENT_DATA_GET_FRAME_.  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datasetRequested1. . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datasetRequested2. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetRequested3. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_DEVICE_SPECIFIC_GET_V2_FRAME_. . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_LANGUAGE_REPORT_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  language1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  language2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  language3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  country1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  country2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CHIMNEY_FAN_ALARM_TEMP_SET_4BYTE_FR  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V2_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
callbackDelayNextAskNodeForHelp. . . .  PUBLIC   CODE   PROC     0000H  -----
masterNodeID . . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
ZW_CENTRAL_SCENE_SUPPORTED_REPORT_FRAME TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedScenes. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 538 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
ZW_DATE_REPORT_V2_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SENSOR_TRIGGER_LEVEL_SET_4BYTE_FRAME TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  triggerValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  triggerValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_RATE_TBL_SET_3BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateCharacter3 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 539 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
ZW_NODE_NEIGHBOR_UPDATE_STATUS_FRAME .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_INSTANCE_GET_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_REPORT_3BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  meterType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_METER_TBL_HISTORICAL_DATA_REPORT_3  * TAG *  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_FRAME TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  firmwareId1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  firmwareId2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE  TYPEDEF  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
ZW_COMMAND_SCHEDULE_SET_1BYTE_FRAME. .  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 540 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
ZW_LOWPAN_SUBSEQUENT_FRAGMENT_1BYTE_FR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_HEATING_STATUS_SET_FRAME_* TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_HEATING_MODE_SET_FRAME .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SIMPLE_AV_CONTROL_REPORT_FRAME_. .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V2  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_RATE_TBL_SET_4BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  27
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateCharacter3 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  rateCharacter4 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 541 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
ZW_LEARN_MODE_SET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_METER_REPORT_4BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  meterType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  meterValue4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_METER_TBL_HISTORICAL_DATA_REPORT_4  * TAG *  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
_ZW_LANGUAGE_GET_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_RECORD_REPORT_1BYTE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 542 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCodeLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_CONFIGURATION_GET_V2_FRAME_. . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_VG_CONFIGURATION_BULK_SET_1BYTE_V2_VG_ * TAG *  -----  STRUCT   -----  1
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
ZW_CHIMNEY_FAN_STOP_TEMP_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_COMMAND_CONFIGURATION_REPORT_1BYTE_  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_CENTRAL_SCENE_SUPPORTED_GET_FRAME .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
ZW_COMMAND_SCHEDULE_SET_2BYTE_FRAME. .  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 543 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_LOWPAN_SUBSEQUENT_FRAGMENT_2BYTE_FR  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_DATE_GET_V2_FRAME . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_TIME_PARAMETERS_REPORT_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourUtc. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteUtc. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondUtc. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1B  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V3  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_POWERLEVEL_REPORT_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  powerLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  timeout. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NODE_NAMING_NODE_LOCATION_REPORT_FR  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeLocationChar1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeLocationChar2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeLocationChar3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeLocationChar4. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeLocationChar5. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeLocationChar6. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nodeLocationChar7. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nodeLocationChar8. . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nodeLocationChar9. . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nodeLocationChar10 . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nodeLocationChar11 . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  nodeLocationChar12 . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  nodeLocationChar13 . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  nodeLocationChar14 . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  nodeLocationChar15 . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 544 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  nodeLocationChar16 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
_VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG_* TAG *  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  currentValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  currentValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_RECORD_REPORT_2BYTE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCodeLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_VG_CONFIGURATION_BULK_SET_2BYTE_V2_VG_ * TAG *  -----  STRUCT   -----  2
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_REPORT_1BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_COMMAND_CONFIGURATION_REPORT_2BYTE_  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_CENTRAL_SCENE_NOTIFICATION_FRAME. .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneNumber. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE  TYPEDEF  -----  STRUCT   -----  31
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 545 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  7
ZW_COMMAND_SCHEDULE_SET_3BYTE_FRAME. .  TYPEDEF  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
ZW_LOWPAN_SUBSEQUENT_FRAGMENT_3BYTE_FR  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_USER_CODE_SET_FRAME_ . . . . . . .  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdStatus . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  userCode3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  userCode4. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  userCode5. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  userCode6. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  userCode7. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userCode8. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCode9. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode10 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2B  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SWITCH_MULTILEVEL_SET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SWITCH_BINARY_SET_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  switchValue. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SIMPLE_AV_CONTROL_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 546 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SECURITY_SCHEME_INHERIT_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedSecuritySchemes . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYT  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
ZW_HRV_CONTROL_MODE_SET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_RECORD_REPORT_3BYTE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCodeLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  userCode3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
_ZW_DCP_LIST_SET_1BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  28
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 547 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
_VG_CONFIGURATION_BULK_SET_3BYTE_V2_VG_ * TAG *  -----  STRUCT   -----  3
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameter3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_ASSOCIATION_REPORT_2BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_COMMAND_CONFIGURATION_REPORT_3BYTE_  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
VerifyLostCount. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ZW_COMMAND_SCHEDULE_SET_4BYTE_FRAME. .  TYPEDEF  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
ZW_LOWPAN_SUBSEQUENT_FRAGMENT_4BYTE_FR  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 548 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  payload4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_TIME_PARAMETERS_GET_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3B  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SWITCH_ALL_OFF_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_RATE_TBL_HISTORICAL_DATA_REPORT_1BY  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
ZW_PROTECTION_REPORT_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  protectionState. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_POWERLEVEL_GET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_NODE_NAMING_NODE_LOCATION_GET_FRAME  TYPEDEF  -----  STRUCT   -----  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 549 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYT  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
_ZW_METER_TBL_STATUS_DEPTH_GET_V2_FRAME_* TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusEventLogDepth. . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_TBL_STATUS_DATE_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
ZW_RECORD_REPORT_4BYTE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCodeLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  userCode3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  userCode4. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
_ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTE  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maxRecordsStored . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_DCP_LIST_SET_2BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 550 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
_VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG_ * TAG *  -----  STRUCT   -----  4
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameter3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameter4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ASSOCIATION_REPORT_3BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeid3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_COMMAND_CONFIGURATION_REPORT_4BYTE_  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandByte4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_COMMON_FRAME. . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 551 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4B  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_FAN_MODE_REPORT_FRAME_.  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SWITCH_ALL_ON_FRAME_ . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_FRAME TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_NETWORK_KEY_SET_1BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  networkKeyByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SCENE_ACTUATOR_CONF_SET_FRAME_ . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_RATE_TBL_HISTORICAL_DATA_REPORT_2BY  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 552 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_NODE_NEIGHBOR_UPDATE_REQUEST_FRAME_ * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NODE_LIST_REPORT_1BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeListControllerId . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeListData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_MULTI_INSTANCE_ASSOCIATION_GROUPING  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedGroupings . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYT  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
ZW_DEVICE_SPECIFIC_REPORT_1BYTE_V2_FRAMETYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 553 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  deviceIdData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_DOOR_LOCK_OPERATION_SET_V2_FRAME_.  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  doorLockMode . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_DCP_LIST_SET_3BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  32
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000FH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
_ZW_CHIMNEY_FAN_MODE_REPORT_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_ASSOCIATION_REPORT_4BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeid3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeid4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_THERMOSTAT_MODE_SET_V2_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_FRAME TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 554 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_NETWORK_KEY_SET_2BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  networkKeyByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  networkKeyByte2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_RE  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  eventParameters. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_RE  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V2  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_RATE_TBL_HISTORICAL_DATA_REPORT_3BY  TYPEDEF  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
ZW_PROTECTION_TIMEOUT_SET_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  timeout. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_PROTECTION_GET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_NODE_LIST_REPORT_2BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 555 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeListControllerId . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeListData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeListData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYT  * TAG *  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
ZW_METER_RESET_V2_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
ZW_DEVICE_SPECIFIC_REPORT_2BYTE_V2_FRAMETYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  deviceIdData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deviceIdData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_DOOR_LOCK_CONFIGURATION_SET_FRAME .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  operationType. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTE  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_DCP_LIST_SET_4BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 556 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000FH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   0021H  1
ZW_CHIMNEY_FAN_STOP_TIME_SET_FRAME . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  time . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_1BYTE  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ASSOCIATION_GROUPINGS_REPORT_V2_FR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedGroupings . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_COMMAND_FRAGMENT_REQUEST_1BYTE_FRA  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfOffsets. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0004H  2
_ZW_THERMOSTAT_FAN_MODE_GET_FRAME_ . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SWITCH_ALL_REPORT_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_FRAME TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 557 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_NETWORK_KEY_SET_3BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  networkKeyByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  networkKeyByte2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  networkKeyByte3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V3  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_RATE_TBL_HISTORICAL_DATA_REPORT_4BY  TYPEDEF  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
_ZW_NODE_NAMING_NODE_NAME_REPORT_FRAME_ * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeNameChar1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeNameChar2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeNameChar3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeNameChar4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeNameChar5. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeNameChar6. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nodeNameChar7. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nodeNameChar8. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nodeNameChar9. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nodeNameChar10 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nodeNameChar11 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  nodeNameChar12 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  nodeNameChar13 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  nodeNameChar14 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  nodeNameChar15 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  nodeNameChar16 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
_ZW_FAILED_NODE_REPLACE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 558 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  txOptions. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_NODE_LIST_REPORT_3BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeListControllerId . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeListData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeListData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeListData3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_MULTI_INSTANCE_ASSOCIATION_GROUPING  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_RESET_V3_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
VG_METER_TBL_STATUS_REPORT_V2_VG . . .  TYPEDEF  -----  STRUCT   -----  8
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE  TYPEDEF  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
ZW_DEVICE_SPECIFIC_REPORT_3BYTE_V2_FRAMETYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  deviceIdData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deviceIdData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deviceIdData3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CONFIGURATION_REPORT_1BYTE_V2_FRAME  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 559 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_2BYTE  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CHIMNEY_FAN_MODE_GET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_BOOST_TIME_SET_FRAME_.  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  time . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ALL_EXCEPT_ENCAP. . . . . . . . . . .  * TAG *  -----  UNION    -----  38
  ZW_Common. . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AlarmReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AlarmReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_AlarmReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AlarmReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_AlarmSetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmTypeSupportedReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_AlarmTypeSupportedReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_AlarmTypeSupportedReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_NotificationGetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationReport1byteV3Frame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_NotificationReport2byteV3Frame. .  MEMBER   -----  STRUCT   0000H  11
  ZW_NotificationReport3byteV3Frame. .  MEMBER   -----  STRUCT   0000H  12
  ZW_NotificationReport4byteV3Frame. .  MEMBER   -----  STRUCT   0000H  13
  ZW_NotificationSetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedGetV3Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_NotificationSupportedReport1byteV  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedReport2byteV  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationSupportedReport3byteV  MEMBER   -----  STRUCT   0000H  6
  ZW_NotificationSupportedReport4byteV  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EventSupportedReport1byteV3Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EventSupportedReport2byteV3Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EventSupportedReport3byteV3Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedReport4byteV3Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ApplicationBusyFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ApplicationRejectedRequestFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandConfigurationGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandConfigurationReport1byteFr  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationReport2byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationReport3byteFr  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandConfigurationReport4byteFr  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandConfigurationSet1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandConfigurationSet2byteFrame  MEMBER   -----  STRUCT   0000H  9
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 560 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_CommandConfigurationSet3byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationSet4byteFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandRecordsSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandRecordsSupportedReportFrame MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationSpecificGroupGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationSpecificGroupReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_AvContentBrowseMdByLetterGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdByLetterReportFr  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountReport  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdReportFrame MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusReportFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoReportFrame. . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_BasicWindowCoveringStartLevelChan  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicWindowCoveringStopLevelChang  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 561 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_BatteryGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BatteryReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmLogGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmLogReportFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmLogSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmStatusReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanBoostTimeGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanBoostTimeReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanBoostTimeSetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanDefaultSetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanMinSpeedSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSetupGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSetupReport1byteFrame .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupReport2byteFrame .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupReport3byteFrame .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupReport4byteFrame .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSetupSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSpeedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSpeedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSpeedSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStartTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStartTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStartTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStateGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStateReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStateSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStatusReport1byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStatusReport2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ChimneyFanStatusReport3byteFrame.  MEMBER   -----  STRUCT   0000H  9
  ZW_ChimneyFanStatusReport4byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ChimneyFanStopTempGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 562 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ChimneyFanStopTempReport1byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempReport2byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempReport3byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempReport4byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTempSet1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempSet2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempSet3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempSet4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTimeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTimeReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStopTimeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleChangedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleChangedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleOverrideGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleOverrideReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleOverrideSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ScheduleSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ClockGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ClockReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ClockSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationBulkGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ConfigurationBulkReport1byteV2VGr  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkReport2byteV2VGr  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkReport3byteV2VGr  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkReport4byteV2VGr  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkReport1byteV2FrameMEMBER   -----  STRUCT   0000H  11
  ZW_ConfigurationBulkReport2byteV2FrameMEMBER   -----  STRUCT   0000H  15
  ZW_ConfigurationBulkReport3byteV2FrameMEMBER   -----  STRUCT   0000H  19
  ZW_ConfigurationBulkReport4byteV2FrameMEMBER   -----  STRUCT   0000H  23
  VG_ConfigurationBulkSet1byteV2VGroup  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkSet2byteV2VGroup  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkSet3byteV2VGroup  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkSet4byteV2VGroup  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkSet1byteV2Frame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ConfigurationBulkSet2byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ConfigurationBulkSet3byteV2Frame.  MEMBER   -----  STRUCT   0000H  18
  ZW_ConfigurationBulkSet4byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_ConfigurationGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteV2Frame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteV2Frame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteV2Frame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 563 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_CtrlReplicationTransferGroupFrame  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferGroupName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferGroupName4  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferSceneFrame  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferSceneName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferSceneName4  MEMBER   -----  STRUCT   0000H  8
  ZW_DcpListRemoveFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  VG_DcpListSetVGroup. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  28
  ZW_DcpListSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_DcpListSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_DcpListSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  34
  ZW_DcpListSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_DcpEventStatusGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DcpEventStatusReportFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_DcpListGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_DcpListReportVGroup . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  29
  ZW_DcpListReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_DcpListReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  33
  ZW_DcpListReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  35
  ZW_DoorLockLoggingRecordsSupportedGe  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockLoggingRecordsSupportedRe  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordGetFrame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordReport1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_RecordReport2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_RecordReport3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_RecordReport4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_DoorLockConfigurationGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportFrame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DoorLockConfigurationGetV2Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportV2Frame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EnergyProductionReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EnergyProductionReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EnergyProductionReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareMdGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_FirmwareUpdateMdReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 564 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_FirmwareUpdateMdRequestGetFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareMdGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport2byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdReport3byteV2Frame MEMBER   -----  STRUCT   0000H  9
  ZW_FirmwareUpdateMdReport4byteV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_FirmwareUpdateMdRequestGetV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportV2FrameMEMBER   -----  STRUCT   0000H  3
  ZW_GeographicLocationGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_GeographicLocationReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GeographicLocationSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GroupingNameGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_GroupingNameReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_GroupingNameSetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_HailFrame . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlBypassSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_HrvControlModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvControlModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvControlModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvControlVentilationRateGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlVentilationRateReportFr  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlVentilationRateSetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvStatusReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvStatusReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_HrvStatusSupportedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvStatusSupportedReport1byteFrame MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusSupportedReport2byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_HrvStatusSupportedReport3byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusSupportedReport4byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_IndicatorGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IndicatorReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IndicatorSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IpConfigurationGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReleaseFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationRenewFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReportFrame. . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpConfigurationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_LanguageGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LanguageReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LanguageSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LockGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LockReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 565 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_LockSetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ManufacturerSpecificGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ManufacturerSpecificGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceSpecificGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DeviceSpecificReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_DeviceSpecificReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DeviceSpecificReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_DeviceSpecificReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterPulseGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterPulseReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoSet2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoSet3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet4byteFr  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportVGroup. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportFrame MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportVGroup .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteFrameMEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteFrameMEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteFrameMEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteFrameMEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetFrame. .  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportVGroup MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportV2VGroup. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 566 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterTblStatusSupportedReportV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportV2VGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteV2F  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteV2F  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteV2F  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteV2F  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetV2Frame.  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportV2VGr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblPushConfigurationGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblPushConfigurationReportFr  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterTblPushConfigurationSetFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterReport1byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterReport2byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterReport3byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterReport4byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterGetV3Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV3Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV3Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MoveToPositionGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MoveToPositionReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MoveToPositionSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGetV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGroupingsG  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelAssociationGroupingsR  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationRemove1byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationRemove2byt  MEMBER   -----  STRUCT   0000H  10
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 567 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MultiChannelAssociationRemove3byt  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationRemove4byt  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelAssociationReport1byt  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelAssociationReport2byt  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiChannelAssociationReport3byt  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiChannelAssociationReport4byt  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiChannelAssociationSet1byteV2  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationSet2byteV2  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationSet3byteV2  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationSet4byteV2  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelCapabilityGetV2Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV2Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV2V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiChannelCapabilityGetV3Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV3Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV3V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV3Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceAssociationGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationRemove1by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationRemove2by  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationRemove3by  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationRemove4by  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceAssociationReport1by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiInstanceAssociationReport2by  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiInstanceAssociationReport3by  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiInstanceAssociationReport4by  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiInstanceAssociationSet1byteF  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationSet2byteF  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationSet3byteF  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationSet4byteF  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 568 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_NodeInfoCachedGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeInfoCachedReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeInfoCachedReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeInfoCachedReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  18
  ZW_NodeInfoCachedReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_NodeListGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NodeListReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeListReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_NodeListReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_NodeListReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_LearnModeSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LearnModeSetStatusFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeInformationSendFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkUpdateRequestFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkUpdateRequestStatusFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_DefaultSetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DefaultSetCompleteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveStatusFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeAddFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeAddStatus1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_NodeAddStatus2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeAddStatus3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_NodeAddStatus4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeRemoveFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeRemoveStatusFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FailedNodeReplaceFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_FailedNodeReplaceStatusFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeNeighborUpdateRequestFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNeighborUpdateStatusFrame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteAssignFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ReturnRouteAssignCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNamingNodeLocationReportFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationSetFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameReportFrame . .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeNameSetFrame. . . .  MEMBER   -----  STRUCT   0000H  19
  ZW_PowerlevelGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelTestNodeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelTestNodeReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PowerlevelTestNodeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_CmdEncapsulation1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CmdEncapsulation2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CmdEncapsulation3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CmdEncapsulation4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PrepaymentBalanceGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_PrepaymentBalanceReportFrame. . .  MEMBER   -----  STRUCT   0000H  22
  ZW_PrepaymentSupportedGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PrepaymentSupportedReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryGet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 569 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ProprietaryGet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietaryReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietarySet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietarySet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietarySet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietarySet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProtectionGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionEcReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcSetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSupportedGetV2Frame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionSupportedReportV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ProtectionTimeoutGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionTimeoutReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionTimeoutSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblRemove1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_RateTblRemove2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblRemove3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_RateTblRemove4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_RateTblSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblActiveRateGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblActiveRateReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblCurrentDataGetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  VG_RateTblCurrentDataReportVGroup. .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblCurrentDataReport1byteFrame MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblCurrentDataReport2byteFrame MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblCurrentDataReport3byteFrame MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblCurrentDataReport4byteFrame MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblHistoricalDataGetFrame . .  MEMBER   -----  STRUCT   0000H  21
  VG_RateTblHistoricalDataReportVGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblHistoricalDataReport1byteF  MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblHistoricalDataReport2byteF  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblHistoricalDataReport3byteF  MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblHistoricalDataReport4byteF  MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationActivateFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationGet  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationRep  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationConfigurationSet  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActivationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 570 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SceneActuatorConfGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneActuatorConfReportFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActuatorConfSetFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_SceneControllerConfGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneControllerConfReportFrame. .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneControllerConfSetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockEnableAllSetFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportFrameMEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportFrameMEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV2F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV2F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV2F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV2Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV3Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV3F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV3F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV3F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV3Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV3F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV3Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockDailyRepeatingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockDailyRepeatingRe  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockDailyRepeatingSe  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenAttributesGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ScreenAttributesGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenMdReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_ScreenMdReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 571 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ScreenMdReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_ScreenMdGetV2Frame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_ScreenMdReport2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ScreenMdReport3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_ScreenMdReport4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_SecurityPanelModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandClassSecurityPanelZoneSens  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SecurityPanelZoneSensorInstalledG  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneSensorStateGetFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorStateRepor  MEMBER   -----  STRUCT   0000H  7
  ZW_SecurityPanelZoneNumberSupportedG  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelZoneStateGetFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneStateReportFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSupportedReportF  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeGetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeReportFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkKeySet2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NetworkKeySet4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkKeyVerifyFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedReport1b  MEMBER   -----  STRUCT   0000H  6
  ZW_SecurityCommandsSupportedReport2b  MEMBER   -----  STRUCT   0000H  8
  ZW_SecurityCommandsSupportedReport3b  MEMBER   -----  STRUCT   0000H  10
  ZW_SecurityCommandsSupportedReport4b  MEMBER   -----  STRUCT   0000H  12
  ZW_SecurityMessageEncapsulation1byte  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulation2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulation3byte  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulation4byte  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityNonceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityNonceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SecuritySchemeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeInheritFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSupportedGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorAlarmSupportedReport1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSupportedReport2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorAlarmSupportedReport3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorAlarmSupportedReport4byteFr  MEMBER   -----  STRUCT   0000H  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 572 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SensorBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedGetSensorV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorTriggerLevelReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorTriggerLevelReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet1byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelSet2byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelSet3byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet4byteFrame .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV2Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV3Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV3Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV3Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV3Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV4Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV4Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV4Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV4Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV4Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV5Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV5Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV5Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV5Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV5Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelGetV6Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV6Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV6Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV6Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV6Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 573 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorAlarmSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorAlarmSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  VG_SimpleAvControlSetVGroup. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SimpleAvControlSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_SimpleAvControlSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  14
  ZW_SimpleAvControlSupportedGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_SimpleAvControlSupportedReport1by  MEMBER   -----  STRUCT   0000H  4
  ZW_SimpleAvControlSupportedReport2by  MEMBER   -----  STRUCT   0000H  5
  ZW_SimpleAvControlSupportedReport3by  MEMBER   -----  STRUCT   0000H  6
  ZW_SimpleAvControlSupportedReport4by  MEMBER   -----  STRUCT   0000H  7
  ZW_SwitchAllGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOffFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOnFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchAllSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinarySetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelStartLevelChangeF  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStopLevelChangeFr  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  5
  ZW_SwitchMultilevelStopLevelChangeV2  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV3Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  6
  ZW_SwitchMultilevelStopLevelChangeV3  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedGetV3FrameMEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedReportV3  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleBinarySetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelSetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelStartLevelC  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleMultilevelStopLevelCh  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblRemove1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_TariffTblRemove2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_TariffTblRemove3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 574 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_TariffTblRemove4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_TariffTblSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierSet1byteFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierSet2byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierSet3byteFrame. .  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierSet4byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_TariffTblCostGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_TariffTblCostReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_TariffTblGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_TariffTblReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblSupplierReport1byteFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierReport2byteFrame  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierReport3byteFrame  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierReport4byteFrame  MEMBER   -----  STRUCT   0000H  22
  ZW_ThermostatFanModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV3Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV3Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV3Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanStateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanStateReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingStatusReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingModeReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingRelayStatusGetFr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingRelayStatusRepor  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointGetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointReport1b  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointReport2b  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointReport3b  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointReport4b  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingSetpointSet1byte  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointSet2byte  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointSet3byte  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointSet4byte  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingStatusGetFrame .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 575 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatHeatingStatusSetFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingTimedOffSetFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatModeGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateGetFrame.  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportFrameMEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingSu  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  6
  VG_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  13
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  18
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  23
  ZW_ThermostatSetbackGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetbackReportFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetbackSetFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointGetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 576 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatSetpointReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeParametersGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeParametersReportFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_TimeParametersSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DateGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_DateGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeOffsetSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandFirstFragment1byteFrame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_CommandFirstFragment2byteFrame. .  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFirstFragment3byteFrame. .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandFirstFragment4byteFrame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentCompleteFrame. . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandFragmentRequestVGroup. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandFragmentRequest1byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_CommandFragmentRequest2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFragmentRequest3byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentRequest4byteFrame.  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandFragmentWaitFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandSubsequentFragment1byteFrameMEMBER   -----  STRUCT   0000H  8
  ZW_CommandSubsequentFragment2byteFrameMEMBER   -----  STRUCT   0000H  9
  ZW_CommandSubsequentFragment3byteFrameMEMBER   -----  STRUCT   0000H  10
  ZW_CommandSubsequentFragment4byteFrameMEMBER   -----  STRUCT   0000H  11
  ZW_UserCodeGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_UserCodeReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UserCodeSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UsersNumberGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_UsersNumberReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassReportFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_VersionGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_VersionReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_WakeUpIntervalGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesReportV  MEMBER   -----  STRUCT   0000H  14
  ZW_WakeUpIntervalGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 577 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_WakeUpIntervalSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LowpanFirstFragment1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LowpanFirstFragment2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanFirstFragment3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanFirstFragment4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment1byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanSubsequentFragment2byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanSubsequentFragment3byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment4byteFrame MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandZipPacket3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_CommandZipPacket4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_CommandCommandClassNotSupportedFr  MEMBER   -----  STRUCT   0000H  5
  ZW_CapabilityGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CapabilityReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_StateGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_StateReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_StateSetVGroup. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_StateSet1byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_StateSet2byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_StateSet3byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_StateSet4byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_StartCapabilityLevelChangeFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_StopStateChangeFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleSupportedGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_ScheduleSupportedReportVGroup . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleSupportedReport1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_ScheduleSupportedReport2byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleSupportedReport3byteFrame  MEMBER   -----  STRUCT   0000H  12
  ZW_ScheduleSupportedReport4byteFrame  MEMBER   -----  STRUCT   0000H  14
  VG_CommandScheduleSet1byteVGroup . .  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleSet2byteVGroup . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleSet3byteVGroup . .  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleSet4byteVGroup . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  34
  ZW_CommandScheduleGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport1byteVGroup.  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleReport2byteVGroup.  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport3byteVGroup.  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleReport4byteVGroup.  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleReport1byteFrame .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleReport2byteFrame .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleReport3byteFrame .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleReport4byteFrame .  MEMBER   -----  STRUCT   0000H  34
  ZW_ScheduleRemoveFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleStateSetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleStateGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleStateReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeStatus1byteFrame.  MEMBER   -----  STRUCT   0000H  13
  ZW_ControllerChangeStatus2byteFrame.  MEMBER   -----  STRUCT   0000H  14
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 578 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ControllerChangeStatus3byteFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ControllerChangeStatus4byteFrame.  MEMBER   -----  STRUCT   0000H  16
  ZW_ZipNodeSolicitationFrame. . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_ZipInvNodeSolicitationFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ZipNodeAdvertisementFrame . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupNameGetFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupNameReport1byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupNameReport2byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupNameReport3byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupNameReport4byteFr  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationGroupInfoGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  VG_AssociationGroupInfoReportVGroup.  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupInfoReport1byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_AssociationGroupInfoReport2byteFr  MEMBER   -----  STRUCT   0000H  17
  ZW_AssociationGroupInfoReport3byteFr  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupInfoReport4byteFr  MEMBER   -----  STRUCT   0000H  31
  ZW_AssociationGroupCommandListGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceResetLocallyNotificationFrameMEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_CentralSceneNotificationFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_IpAssociationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_IpAssociationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  26
  ZW_IpAssociationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpAssociationRemove1byteFrame . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationRemove2byteFrame . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationRemove3byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationRemove4byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_AntitheftSet1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet1byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetV2Frame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  10
_ZW_COMMAND_FRAGMENT_REQUEST_2BYTE_FRA  * TAG *  -----  STRUCT   -----  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 579 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfOffsets. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0004H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
_ZW_THERMOSTAT_HEATING_SETPOINT_GET_FR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_TARIFF_TBL_SET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  tariffValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  tariffValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  tariffValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  tariffValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_FRAME TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_NETWORK_KEY_SET_4BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  networkKeyByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  networkKeyByte2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  networkKeyByte3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  networkKeyByte4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SECURITY_PANEL_ZONE_STATE_REPORT_F  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zoneState. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_GE  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_GE  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
VG_RATE_TBL_CURRENT_DATA_REPORT_VG . .  TYPEDEF  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  currentValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  currentValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_LEARN_MODE_SET_STATUS_FRAME_ . . .  * TAG *  -----  STRUCT   -----  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 580 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_NODE_LIST_REPORT_4BYTE_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeListControllerId . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeListData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeListData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeListData3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeListData4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE  TYPEDEF  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
ZW_DEVICE_SPECIFIC_REPORT_4BYTE_V2_FRAMETYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  deviceIdData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deviceIdData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deviceIdData3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deviceIdData4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_CTRL_REPLICATION_TRANSFER_GROUP_FR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_CONFIGURATION_REPORT_2BYTE_V2_FRAME  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 581 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_SCHEDULE_REPORT_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  switchpoint01. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  switchpoint02. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  switchpoint03. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  switchpoint11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  switchpoint12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  switchpoint13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  switchpoint21. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  switchpoint22. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  switchpoint23. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  switchpoint31. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  switchpoint32. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  switchpoint33. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  switchpoint41. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  switchpoint42. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  switchpoint43. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  switchpoint51. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  switchpoint52. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  switchpoint53. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  switchpoint61. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  switchpoint62. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  switchpoint63. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  switchpoint71. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  switchpoint72. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  switchpoint73. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  switchpoint81. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  switchpoint82. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  switchpoint83. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
_ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_3BYTE  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_CHIMNEY_FAN_STATUS_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_SETUP_SET_1BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
_ZW_ASSOCIATION_GROUPINGS_GET_V2_FRAME_ * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 582 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_COMMAND_FRAGMENT_REQUEST_3BYTE_FRA  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfOffsets. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0004H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
_ZW_TIME_OFFSET_SET_V2_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  monthStartDst. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dayStartDst. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourStartDst . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  monthEndDst. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dayEndDst. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  hourEndDst . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
ZW_SWITCH_ALL_GET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SECURITY_NONCE_REPORT_FRAME_ . . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  nonceByte1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nonceByte2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nonceByte3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nonceByte4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nonceByte5 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nonceByte6 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nonceByte7 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nonceByte8 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_SECURITY_PANEL_ZONE_TYPE_REPORT_FRAMETYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zoneType . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_NODE_NAMING_NODE_NAME_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_STATUS_REPORT_1BYTE_FRAME_* TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
ZW_CONFIGURATION_REPORT_3BYTE_V2_FRAME  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 583 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_4BYTE  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CHIMNEY_FAN_START_TEMP_GET_FRAME_.  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_SETUP_SET_2BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
ZW_BASIC_TARIFF_INFO_REPORT_FRAME. . .  TYPEDEF  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  e1RateConsumptionRegister1 . . . . .  MEMBER   -----  U_CHAR   0004H  1
  e1RateConsumptionRegister2 . . . . .  MEMBER   -----  U_CHAR   0005H  1
  e1RateConsumptionRegister3 . . . . .  MEMBER   -----  U_CHAR   0006H  1
  e1RateConsumptionRegister4 . . . . .  MEMBER   -----  U_CHAR   0007H  1
  e1TimeForNextRateHours . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  e1TimeForNextRateMinutes . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  e1TimeForNextRateSeconds . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  e2RateConsumptionRegister1 . . . . .  MEMBER   -----  U_CHAR   000CH  1
  e2RateConsumptionRegister2 . . . . .  MEMBER   -----  U_CHAR   000DH  1
  e2RateConsumptionRegister3 . . . . .  MEMBER   -----  U_CHAR   000EH  1
  e2RateConsumptionRegister4 . . . . .  MEMBER   -----  U_CHAR   000FH  1
ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  42
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0004H  38
ZW_IP_ASSOCIATION_SET_1BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  22
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 584 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
_ZW_CONTROLLER_CHANGE_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  txOptions. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_COMMAND_FRAGMENT_WAIT_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  pendingFragments . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_COMMAND_FRAGMENT_REQUEST_4BYTE_FRA  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfOffsets. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0004H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
_ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SWITCH_MULTILEVEL_START_LEVEL_CHAN  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SECURITY_PANEL_ZONE_STATE_GET_FRAME_* TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3_  * TAG *  -----  STRUCT   -----  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 585 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NODE_ADD_FRAME. . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  txOptions. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2  TYPEDEF  -----  STRUCT   -----  2
  multiChannelNodeId . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_STATUS_REPORT_2BYTE_FRAME_* TAG *  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
_ZW_FIRMWARE_MD_REPORT_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  firmwareId1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  firmwareId2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
VG_DCP_LIST_REPORT_VG. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CONFIGURATION_REPORT_4BYTE_V2_FRAME  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  configurationValue4. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SCHEDULE_GET_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_SETUP_SET_3BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 586 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startTemperature3. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopTemperature3 . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  alarmTemperatureValue3 . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
EGPT . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SetDefaultNetworkUpdateConfiguration .  PUBLIC   CODE   PROC     0000H  -----
ZW_IP_ASSOCIATION_SET_2BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
_ZW_SECURITY_NONCE_GET_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SECURITY_PANEL_ZONE_TYPE_GET_FRAME.  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_PREPAYMENT_BALANCE_REPORT_FRAME_ .  * TAG *  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  balanceValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  balanceValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  balanceValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  balanceValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  debt1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  debt2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  debt3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 587 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  debt4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  emerCredit1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  emerCredit2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  emerCredit3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  emerCredit4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  debtRecoveryPercentage . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
_ZW_DEFAULT_SET_COMPLETE_FRAME_. . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_SUPPORTED_REPORT_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_TBL_STATUS_REPORT_3BYTE_FRAME_* TAG *  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0016H  8
ZW_CHIMNEY_FAN_SETUP_SET_4BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startTemperature3. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startTemperature4. . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopTemperature3 . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopTemperature4 . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  alarmTemperatureValue3 . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  alarmTemperatureValue4 . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
ZW_BASIC_TARIFF_INFO_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ESPI . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
DWORD_P. . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 588 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_IP_ASSOCIATION_SET_3BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
ZW_THERMOSTAT_HEATING_TIMED_OFF_SET_FR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  minutes. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  hours. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V3  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SECURITY_SCHEME_REPORT_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedSecuritySchemes . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  weekDayBitmask . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  durationHour . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
VG_MULTI_INSTANCE_ASSOCIATION_SET_VG .  TYPEDEF  -----  STRUCT   -----  2
  multiInstanceNodeId. . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  instance . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_SUPPORTED_REPORT_V3_FRAME . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scaleSupported . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_TBL_STATUS_REPORT_4BYTE_FRAME_* TAG *  -----  STRUCT   -----  38
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 589 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0016H  8
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001EH  8
_ZW_FIRMWARE_MD_GET_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_IP_ASSOCIATION_SET_4BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
_ZW_THERMOSTAT_SETPOINT_GET_V2_FRAME_.  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SECURITY_PANEL_MODE_REPORT_FRAME_.  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V2  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 590 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSlotsWeekDay . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfSlotsYearDay . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCENE_ACTIVATION_SET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_PREPAYMENT_BALANCE_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_SUPPORTED_GET_V2_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_LANGUAGE_SET_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  language1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  language2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  language3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  country1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  country2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SCHEDULE_OVERRIDE_REPORT_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  overrideState. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_CHIMNEY_FAN_STATUS_REPORT_1BYTE_FR  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_APPLICATION_TX_BUFFER_ . . . . . .  * TAG *  -----  UNION    -----  42
  ZW_MultiCommandEncapFrame. . . . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_CompositeCmdEncapFrame. . . . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_CompositeReplyEncapFrame. . . . .  MEMBER   -----  STRUCT   0000H  41
  ZW_MultiInstanceCmdEncapFrame. . . .  MEMBER   -----  STRUCT   0000H  41
  ZW_MultiChannelCmdEncapV2Frame . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_Common. . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AlarmReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AlarmReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_AlarmReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AlarmReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_AlarmSetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmTypeSupportedReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_AlarmTypeSupportedReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 591 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AlarmTypeSupportedReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_NotificationGetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationReport1byteV3Frame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_NotificationReport2byteV3Frame. .  MEMBER   -----  STRUCT   0000H  11
  ZW_NotificationReport3byteV3Frame. .  MEMBER   -----  STRUCT   0000H  12
  ZW_NotificationReport4byteV3Frame. .  MEMBER   -----  STRUCT   0000H  13
  ZW_NotificationSetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedGetV3Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_NotificationSupportedReport1byteV  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedReport2byteV  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationSupportedReport3byteV  MEMBER   -----  STRUCT   0000H  6
  ZW_NotificationSupportedReport4byteV  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EventSupportedReport1byteV3Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EventSupportedReport2byteV3Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EventSupportedReport3byteV3Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedReport4byteV3Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ApplicationBusyFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ApplicationRejectedRequestFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandConfigurationGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandConfigurationReport1byteFr  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationReport2byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationReport3byteFr  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandConfigurationReport4byteFr  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandConfigurationSet1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandConfigurationSet2byteFrame  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationSet3byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationSet4byteFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandRecordsSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandRecordsSupportedReportFrame MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 592 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AssociationSet2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationSpecificGroupGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationSpecificGroupReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_AvContentBrowseMdByLetterGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdByLetterReportFr  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountReport  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdReportFrame MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusReportFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoReportFrame. . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_BasicWindowCoveringStartLevelChan  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicWindowCoveringStopLevelChang  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BatteryGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BatteryReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmLogGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmLogReportFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmLogSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmStatusReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanBoostTimeGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanBoostTimeReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanBoostTimeSetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanDefaultSetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanMinSpeedSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSetupGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSetupReport1byteFrame .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupReport2byteFrame .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupReport3byteFrame .  MEMBER   -----  STRUCT   0000H  18
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 593 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ChimneyFanSetupReport4byteFrame .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSetupSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSpeedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSpeedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSpeedSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStartTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStartTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStartTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStateGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStateReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStateSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStatusReport1byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStatusReport2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ChimneyFanStatusReport3byteFrame.  MEMBER   -----  STRUCT   0000H  9
  ZW_ChimneyFanStatusReport4byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ChimneyFanStopTempGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTempReport1byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempReport2byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempReport3byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempReport4byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTempSet1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempSet2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempSet3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempSet4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTimeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTimeReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStopTimeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleChangedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleChangedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleOverrideGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleOverrideReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleOverrideSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ScheduleSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ClockGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ClockReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ClockSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 594 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ConfigurationBulkGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ConfigurationBulkReport1byteV2VGr  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkReport2byteV2VGr  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkReport3byteV2VGr  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkReport4byteV2VGr  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkReport1byteV2FrameMEMBER   -----  STRUCT   0000H  11
  ZW_ConfigurationBulkReport2byteV2FrameMEMBER   -----  STRUCT   0000H  15
  ZW_ConfigurationBulkReport3byteV2FrameMEMBER   -----  STRUCT   0000H  19
  ZW_ConfigurationBulkReport4byteV2FrameMEMBER   -----  STRUCT   0000H  23
  VG_ConfigurationBulkSet1byteV2VGroup  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkSet2byteV2VGroup  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkSet3byteV2VGroup  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkSet4byteV2VGroup  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkSet1byteV2Frame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ConfigurationBulkSet2byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ConfigurationBulkSet3byteV2Frame.  MEMBER   -----  STRUCT   0000H  18
  ZW_ConfigurationBulkSet4byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_ConfigurationGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteV2Frame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteV2Frame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteV2Frame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferGroupFrame  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferGroupName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferGroupName4  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferSceneFrame  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferSceneName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferSceneName4  MEMBER   -----  STRUCT   0000H  8
  ZW_DcpListRemoveFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  VG_DcpListSetVGroup. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  28
  ZW_DcpListSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_DcpListSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_DcpListSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  34
  ZW_DcpListSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_DcpEventStatusGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DcpEventStatusReportFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_DcpListGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_DcpListReportVGroup . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  29
  ZW_DcpListReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_DcpListReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  33
  ZW_DcpListReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  35
  ZW_DoorLockLoggingRecordsSupportedGe  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockLoggingRecordsSupportedRe  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordGetFrame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordReport1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_RecordReport2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  15
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 595 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_RecordReport3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_RecordReport4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_DoorLockConfigurationGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportFrame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DoorLockConfigurationGetV2Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportV2Frame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EnergyProductionReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EnergyProductionReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EnergyProductionReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareMdGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_FirmwareUpdateMdReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestGetFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareMdGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport2byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdReport3byteV2Frame MEMBER   -----  STRUCT   0000H  9
  ZW_FirmwareUpdateMdReport4byteV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_FirmwareUpdateMdRequestGetV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportV2FrameMEMBER   -----  STRUCT   0000H  3
  ZW_GeographicLocationGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_GeographicLocationReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GeographicLocationSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GroupingNameGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_GroupingNameReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_GroupingNameSetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_HailFrame . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlBypassSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_HrvControlModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvControlModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvControlModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 596 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_HrvControlVentilationRateGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlVentilationRateReportFr  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlVentilationRateSetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvStatusReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvStatusReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_HrvStatusSupportedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvStatusSupportedReport1byteFrame MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusSupportedReport2byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_HrvStatusSupportedReport3byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusSupportedReport4byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_IndicatorGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IndicatorReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IndicatorSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IpConfigurationGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReleaseFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationRenewFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReportFrame. . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpConfigurationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_LanguageGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LanguageReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LanguageSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LockGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LockReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_LockSetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ManufacturerSpecificGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ManufacturerSpecificGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceSpecificGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DeviceSpecificReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_DeviceSpecificReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DeviceSpecificReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_DeviceSpecificReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterPulseGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterPulseReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoSet2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoSet3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet4byteFr  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportVGroup. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportFrame MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportVGroup .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteFrameMEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteFrameMEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteFrameMEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteFrameMEMBER   -----  STRUCT   0000H  34
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 597 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterTblHistoricalDataGetFrame. .  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportVGroup MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportV2VGroup. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportV2VGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteV2F  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteV2F  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteV2F  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteV2F  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetV2Frame.  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportV2VGr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblPushConfigurationGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblPushConfigurationReportFr  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterTblPushConfigurationSetFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterReport1byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterReport2byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 598 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterReport3byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterReport4byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterGetV3Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV3Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV3Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MoveToPositionGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MoveToPositionReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MoveToPositionSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGetV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGroupingsG  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelAssociationGroupingsR  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationRemove1byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationRemove2byt  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationRemove3byt  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationRemove4byt  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelAssociationReport1byt  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelAssociationReport2byt  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiChannelAssociationReport3byt  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiChannelAssociationReport4byt  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiChannelAssociationSet1byteV2  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationSet2byteV2  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationSet3byteV2  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationSet4byteV2  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelCapabilityGetV2Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV2Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV2V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiChannelCapabilityGetV3Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV3Frame .  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 599 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  VG_MultiChannelEndPointFindReportV3V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV3Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceAssociationGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationRemove1by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationRemove2by  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationRemove3by  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationRemove4by  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceAssociationReport1by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiInstanceAssociationReport2by  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiInstanceAssociationReport3by  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiInstanceAssociationReport4by  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiInstanceAssociationSet1byteF  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationSet2byteF  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationSet3byteF  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationSet4byteF  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeInfoCachedGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeInfoCachedReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeInfoCachedReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeInfoCachedReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  18
  ZW_NodeInfoCachedReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_NodeListGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NodeListReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeListReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_NodeListReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_NodeListReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_LearnModeSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LearnModeSetStatusFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeInformationSendFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkUpdateRequestFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkUpdateRequestStatusFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_DefaultSetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DefaultSetCompleteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveStatusFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeAddFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeAddStatus1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_NodeAddStatus2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeAddStatus3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_NodeAddStatus4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeRemoveFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeRemoveStatusFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FailedNodeReplaceFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_FailedNodeReplaceStatusFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeNeighborUpdateRequestFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNeighborUpdateStatusFrame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteAssignFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 600 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ReturnRouteAssignCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNamingNodeLocationReportFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationSetFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameReportFrame . .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeNameSetFrame. . . .  MEMBER   -----  STRUCT   0000H  19
  ZW_PowerlevelGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelTestNodeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelTestNodeReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PowerlevelTestNodeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_CmdEncapsulation1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CmdEncapsulation2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CmdEncapsulation3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CmdEncapsulation4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PrepaymentBalanceGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_PrepaymentBalanceReportFrame. . .  MEMBER   -----  STRUCT   0000H  22
  ZW_PrepaymentSupportedGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PrepaymentSupportedReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryGet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryGet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietaryReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietarySet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietarySet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietarySet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietarySet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProtectionGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionEcReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcSetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSupportedGetV2Frame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionSupportedReportV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ProtectionTimeoutGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionTimeoutReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionTimeoutSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblRemove1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_RateTblRemove2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblRemove3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_RateTblRemove4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_RateTblSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  27
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 601 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_RateTblActiveRateGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblActiveRateReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblCurrentDataGetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  VG_RateTblCurrentDataReportVGroup. .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblCurrentDataReport1byteFrame MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblCurrentDataReport2byteFrame MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblCurrentDataReport3byteFrame MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblCurrentDataReport4byteFrame MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblHistoricalDataGetFrame . .  MEMBER   -----  STRUCT   0000H  21
  VG_RateTblHistoricalDataReportVGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblHistoricalDataReport1byteF  MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblHistoricalDataReport2byteF  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblHistoricalDataReport3byteF  MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblHistoricalDataReport4byteF  MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationActivateFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationGet  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationRep  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationConfigurationSet  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActivationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SceneActuatorConfGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneActuatorConfReportFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActuatorConfSetFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_SceneControllerConfGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneControllerConfReportFrame. .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneControllerConfSetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockEnableAllSetFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportFrameMEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportFrameMEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV2F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV2F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV2F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV2Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV3Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV3Frame  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 602 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ScheduleEntryLockTimeOffsetGetV3F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV3F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV3F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV3Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV3F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV3Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockDailyRepeatingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockDailyRepeatingRe  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockDailyRepeatingSe  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenAttributesGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ScreenAttributesGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenMdReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_ScreenMdReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_ScreenMdReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_ScreenMdGetV2Frame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_ScreenMdReport2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ScreenMdReport3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_ScreenMdReport4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_SecurityPanelModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandClassSecurityPanelZoneSens  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SecurityPanelZoneSensorInstalledG  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneSensorStateGetFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorStateRepor  MEMBER   -----  STRUCT   0000H  7
  ZW_SecurityPanelZoneNumberSupportedG  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelZoneStateGetFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneStateReportFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSupportedReportF  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeGetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeReportFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkKeySet2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NetworkKeySet4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 603 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_NetworkKeyVerifyFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedReport1b  MEMBER   -----  STRUCT   0000H  6
  ZW_SecurityCommandsSupportedReport2b  MEMBER   -----  STRUCT   0000H  8
  ZW_SecurityCommandsSupportedReport3b  MEMBER   -----  STRUCT   0000H  10
  ZW_SecurityCommandsSupportedReport4b  MEMBER   -----  STRUCT   0000H  12
  ZW_SecurityMessageEncapsulation1byte  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulation2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulation3byte  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulation4byte  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityNonceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityNonceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SecuritySchemeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeInheritFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSupportedGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorAlarmSupportedReport1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSupportedReport2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorAlarmSupportedReport3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorAlarmSupportedReport4byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedGetSensorV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorTriggerLevelReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorTriggerLevelReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet1byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelSet2byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelSet3byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet4byteFrame .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV2Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV3Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV3Frame MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 604 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SensorMultilevelReport3byteV3Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV3Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV4Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV4Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV4Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV4Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV4Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV5Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV5Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV5Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV5Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV5Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelGetV6Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV6Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV6Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV6Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV6Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorAlarmSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorAlarmSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  VG_SimpleAvControlSetVGroup. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SimpleAvControlSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_SimpleAvControlSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  14
  ZW_SimpleAvControlSupportedGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_SimpleAvControlSupportedReport1by  MEMBER   -----  STRUCT   0000H  4
  ZW_SimpleAvControlSupportedReport2by  MEMBER   -----  STRUCT   0000H  5
  ZW_SimpleAvControlSupportedReport3by  MEMBER   -----  STRUCT   0000H  6
  ZW_SimpleAvControlSupportedReport4by  MEMBER   -----  STRUCT   0000H  7
  ZW_SwitchAllGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOffFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOnFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchAllSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinarySetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 605 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SwitchMultilevelSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelStartLevelChangeF  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStopLevelChangeFr  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  5
  ZW_SwitchMultilevelStopLevelChangeV2  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV3Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  6
  ZW_SwitchMultilevelStopLevelChangeV3  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedGetV3FrameMEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedReportV3  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleBinarySetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelSetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelStartLevelC  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleMultilevelStopLevelCh  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblRemove1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_TariffTblRemove2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_TariffTblRemove3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TariffTblRemove4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_TariffTblSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierSet1byteFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierSet2byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierSet3byteFrame. .  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierSet4byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_TariffTblCostGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_TariffTblCostReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_TariffTblGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_TariffTblReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblSupplierReport1byteFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierReport2byteFrame  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierReport3byteFrame  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierReport4byteFrame  MEMBER   -----  STRUCT   0000H  22
  ZW_ThermostatFanModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 606 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatFanModeGetV3Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV3Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV3Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanStateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanStateReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingStatusReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingModeReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingRelayStatusGetFr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingRelayStatusRepor  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointGetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointReport1b  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointReport2b  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointReport3b  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointReport4b  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingSetpointSet1byte  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointSet2byte  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointSet3byte  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointSet4byte  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingStatusGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingStatusSetFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingTimedOffSetFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatModeGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateGetFrame.  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportFrameMEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingSu  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 607 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  VG_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  13
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  18
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  23
  ZW_ThermostatSetbackGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetbackReportFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetbackSetFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointGetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeParametersGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeParametersReportFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_TimeParametersSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DateGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_DateGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeOffsetSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandFirstFragment1byteFrame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_CommandFirstFragment2byteFrame. .  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFirstFragment3byteFrame. .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandFirstFragment4byteFrame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentCompleteFrame. . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandFragmentRequestVGroup. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandFragmentRequest1byteFrame.  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 608 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_CommandFragmentRequest2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFragmentRequest3byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentRequest4byteFrame.  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandFragmentWaitFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandSubsequentFragment1byteFrameMEMBER   -----  STRUCT   0000H  8
  ZW_CommandSubsequentFragment2byteFrameMEMBER   -----  STRUCT   0000H  9
  ZW_CommandSubsequentFragment3byteFrameMEMBER   -----  STRUCT   0000H  10
  ZW_CommandSubsequentFragment4byteFrameMEMBER   -----  STRUCT   0000H  11
  ZW_UserCodeGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_UserCodeReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UserCodeSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UsersNumberGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_UsersNumberReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassReportFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_VersionGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_VersionReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_WakeUpIntervalGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesReportV  MEMBER   -----  STRUCT   0000H  14
  ZW_WakeUpIntervalGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LowpanFirstFragment1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LowpanFirstFragment2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanFirstFragment3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanFirstFragment4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment1byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanSubsequentFragment2byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanSubsequentFragment3byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment4byteFrame MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandZipPacket3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_CommandZipPacket4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_CommandCommandClassNotSupportedFr  MEMBER   -----  STRUCT   0000H  5
  ZW_CapabilityGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CapabilityReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_StateGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_StateReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_StateSetVGroup. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_StateSet1byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_StateSet2byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_StateSet3byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_StateSet4byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_StartCapabilityLevelChangeFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_StopStateChangeFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleSupportedGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_ScheduleSupportedReportVGroup . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleSupportedReport1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_ScheduleSupportedReport2byteFrame  MEMBER   -----  STRUCT   0000H  10
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 609 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ScheduleSupportedReport3byteFrame  MEMBER   -----  STRUCT   0000H  12
  ZW_ScheduleSupportedReport4byteFrame  MEMBER   -----  STRUCT   0000H  14
  VG_CommandScheduleSet1byteVGroup . .  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleSet2byteVGroup . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleSet3byteVGroup . .  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleSet4byteVGroup . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  34
  ZW_CommandScheduleGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport1byteVGroup.  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleReport2byteVGroup.  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport3byteVGroup.  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleReport4byteVGroup.  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleReport1byteFrame .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleReport2byteFrame .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleReport3byteFrame .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleReport4byteFrame .  MEMBER   -----  STRUCT   0000H  34
  ZW_ScheduleRemoveFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleStateSetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleStateGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleStateReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeStatus1byteFrame.  MEMBER   -----  STRUCT   0000H  13
  ZW_ControllerChangeStatus2byteFrame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ControllerChangeStatus3byteFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ControllerChangeStatus4byteFrame.  MEMBER   -----  STRUCT   0000H  16
  ZW_ZipNodeSolicitationFrame. . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_ZipInvNodeSolicitationFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ZipNodeAdvertisementFrame . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupNameGetFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupNameReport1byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupNameReport2byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupNameReport3byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupNameReport4byteFr  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationGroupInfoGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  VG_AssociationGroupInfoReportVGroup.  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupInfoReport1byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_AssociationGroupInfoReport2byteFr  MEMBER   -----  STRUCT   0000H  17
  ZW_AssociationGroupInfoReport3byteFr  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupInfoReport4byteFr  MEMBER   -----  STRUCT   0000H  31
  ZW_AssociationGroupCommandListGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceResetLocallyNotificationFrameMEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_CentralSceneNotificationFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_IpAssociationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_IpAssociationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  24
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 610 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_IpAssociationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  26
  ZW_IpAssociationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpAssociationRemove1byteFrame . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationRemove2byteFrame . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationRemove3byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationRemove4byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_AntitheftSet1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet1byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetV2Frame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  10
ZW_ANTITHEFT_GET_V2_FRAME. . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SECURITY_SCHEME_GET_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedSecuritySchemes . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V3  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_DEFAULT_SET_FRAME . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 611 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_MOVE_TO_POSITION_REPORT_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_SUPPORTED_GET_V3_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V2  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_TABLE_CAPABILITY_GET_FRA  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_DOOR_LOCK_OPERATION_REPORT_FRAME_.  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  doorLockMode . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  doorCondition. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CHIMNEY_FAN_STATUS_REPORT_2BYTE_FR  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ETRI . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
BYTE . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
STATE_CHECK_INPUT. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
VG_COMMAND_SCHEDULE_REPORT_1BYTE_VG. .  TYPEDEF  -----  STRUCT   -----  2
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_MODE_REPORT_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SECURITY_PANEL_MODE_GET_FRAME_ . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_F  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_FAILED_NODE_REPLACE_STATUS_FRAME. .  TYPEDEF  -----  STRUCT   -----  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 612 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
VG_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
ZW_SCHEDULE_OVERRIDE_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_STATUS_REPORT_3BYTE_FR  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_CHIMNEY_FAN_START_TEMP_REPORT_1BYTE  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_COMMAND_CONFIGURATION_SET_1BYTE_FRAMETYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_GetSUCNodeID. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_ZW_RequestNetWorkUpdate . . . . . . .  EXTERN   CODE   PROC     -----  -----
VG_COMMAND_SCHEDULE_REPORT_2BYTE_VG. .  TYPEDEF  -----  STRUCT   -----  3
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
VG_SCHEDULE_SUPPORTED_REPORT_VG. . . .  TYPEDEF  -----  STRUCT   -----  2
  supportedCc. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_STATE_SET_1BYTE_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  2
ZW_WAKE_UP_NO_MORE_INFORMATION_V2_FRAME TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_TIME_PARAMETERS_SET_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 613 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourUtc. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteUtc. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondUtc. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_F  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SENSOR_BINARY_SUPPORTED_GET_SENSOR  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SECURITY_PANEL_ZONE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameters1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
VG_SCREEN_MD_REPORT_1BYTE_VG . . . . .  TYPEDEF  -----  STRUCT   -----  4
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCREEN_ATTRIBUTES_REPORT_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfCharactersPerLine. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sizeOfLineBuffer . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numericalPresentationOfACharacter. .  MEMBER   -----  U_CHAR   0005H  1
  screenTimeout. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_POWERLEVEL_SET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  powerLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  timeout. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NODE_NAMING_NODE_LOCATION_SET_FRAME  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeLocationChar1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeLocationChar2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeLocationChar3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeLocationChar4. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeLocationChar5. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeLocationChar6. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nodeLocationChar7. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nodeLocationChar8. . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nodeLocationChar9. . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nodeLocationChar10 . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nodeLocationChar11 . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  nodeLocationChar12 . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  nodeLocationChar13 . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 614 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  nodeLocationChar14 . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  nodeLocationChar15 . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  nodeLocationChar16 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
VG_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
ZW_MOVE_TO_POSITION_GET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_HISTORICAL_DATA_GET_FRAME  TYPEDEF  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  historicalDatasetRequested1. . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalDatasetRequested2. . . . .  MEMBER   -----  U_CHAR   0004H  1
  historicalDatasetRequested3. . . . .  MEMBER   -----  U_CHAR   0005H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
_ZW_IP_CONFIGURATION_REPORT_FRAME_ . .  * TAG *  -----  STRUCT   -----  27
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipAddress1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipAddress2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipAddress3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipAddress4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  subnetMask1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  subnetMask2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  subnetMask3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  subnetMask4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  gateway1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  gateway2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  gateway3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  gateway4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  dns11. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  dns12. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  dns13. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  dns14. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  dns21. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  dns22. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  dns23. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  dns24. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  leasetime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  leasetime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  leasetime3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  leasetime4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 615 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_DOOR_LOCK_OPERATION_GET_FRAME_ . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_STATUS_REPORT_4BYTE_FR  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_CHIMNEY_FAN_START_TEMP_REPORT_2BYTE  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_ASSOCIATION_SET_1BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_COMMAND_CONFIGURATION_SET_2BYTE_FRAMETYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
VG_COMMAND_SCHEDULE_REPORT_3BYTE_VG. .  TYPEDEF  -----  STRUCT   -----  4
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  cmdByte3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_STATE_SET_2BYTE_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
ZW_TIME_REPORT_V2_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_MODE_GET_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 616 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SENSOR_ALARM_SUPPORTED_GET_FRAME_.  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
VG_SCREEN_MD_REPORT_2BYTE_VG . . . . .  TYPEDEF  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_NODE_REMOVE_FRAME . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedGroupings . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CONFIGURATION_BULK_GET_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_CHIMNEY_FAN_START_TEMP_REPORT_3BYTE  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CHIMNEY_FAN_ALARM_LOG_REPORT_FRAME_ * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmEvent1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmEvent2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmEvent3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  alarmEvent4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  alarmEvent5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_ASSOCIATION_SET_2BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_COMMAND_CONFIGURATION_SET_3BYTE_FRAMETYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 617 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_ALARM_GET_V2_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG. .  TYPEDEF  -----  STRUCT   -----  5
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  cmdByte3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  cmdByte4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_STATE_SET_3BYTE_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
VG_SCREEN_MD_REPORT_3BYTE_VG . . . . .  TYPEDEF  -----  STRUCT   -----  6
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  character3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SCREEN_ATTRIBUTES_GET_V2_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V2  TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
ZW_PROTECTION_SET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  protectionState. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CMD_ENCAPSULATION_1BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 618 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_IP_CONFIGURATION_GET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_START_TEMP_REPORT_4BYTE  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CHIMNEY_FAN_SPEED_REPORT_FRAME. . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_AV_RENDERER_STATUS_REPORT_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_SET_3BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_COMMAND_CONFIGURATION_SET_4BYTE_FRAMETYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  commandByte4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
oneMinute. . . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0003H  1
_ZW_ANTITHEFT_REPORT_1BYTE_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_STATE_SET_4BYTE_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
ZW_TIME_GET_V2_FRAME . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 619 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V2  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_HEATING_RELAY_STATUS_REP  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  relayStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_FAN_MODE_SET_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
VG_SCREEN_MD_REPORT_4BYTE_VG . . . . .  TYPEDEF  -----  STRUCT   -----  7
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  character3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  character4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V3  TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
ZW_CMD_ENCAPSULATION_2BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_REPOR  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
VG_METER_TBL_HISTORICAL_DATA_REPORT_V2  TYPEDEF  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  historicalValue1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  historicalValue2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 620 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  historicalValue3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalValue4 . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_GEOGRAPHIC_LOCATION_REPORT_FRAME. .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  longitudeDegrees . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  latitudeDegrees. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAM  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CHIMNEY_FAN_MODE_SET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CHIMNEY_FAN_ALARM_LOG_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_SET_4BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_EVENT_SUPPORTED_GET_V3_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
HealComplete . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  success. . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
_ZW_ANTITHEFT_REPORT_2BYTE_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_VG_ASSOCIATION_GROUP_INFO_REPORT_VG_.  * TAG *  -----  STRUCT   -----  7
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  profile1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  profile2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  eventCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  eventCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V2  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 621 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_TARIFF_TBL_SUPPLIER_GET_FRAME_ . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SEN  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_RATE_TBL_SUPPORTED_REPORT_FRAME . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  ratesSupported . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterSetSupportedBitMask1. . . .  MEMBER   -----  U_CHAR   0003H  1
  parameterSetSupportedBitMask2. . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_CMD_ENCAPSULATION_3BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAMETYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_REPOR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAM  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  groupName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CHIMNEY_FAN_STOP_TEMP_SET_1BYTE_FR  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_CHIMNEY_FAN_SPEED_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_AV_RENDERER_STATUS_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ANTITHEFT_REPORT_3BYTE_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 622 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_WAKE_UP_NOTIFICATION_FRAME_. . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V2  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  5
ZW_THERMOSTAT_HEATING_RELAY_STATUS_GET  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_TARIFF_TBL_COST_REPORT_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  costValue1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  costValue2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  costValue3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  costValue4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
ZW_SWITCH_ALL_SET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SEN  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 623 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_PROTECTION_EC_REPORT_V2_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CMD_ENCAPSULATION_4BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_NODE_NAMING_NODE_NAME_SET_FRAME_ .  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeNameChar1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeNameChar2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeNameChar3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeNameChar4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeNameChar5. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeNameChar6. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nodeNameChar7. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nodeNameChar8. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nodeNameChar9. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nodeNameChar10 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nodeNameChar11 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  nodeNameChar12 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  nodeNameChar13 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  nodeNameChar14 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  nodeNameChar15 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  nodeNameChar16 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
ZW_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAMETYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_REPOR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_METER_TBL_HISTORICAL_DATA_REPORT_1  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 624 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
ZW_GEOGRAPHIC_LOCATION_GET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAM  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  groupName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  groupName3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CONFIGURATION_SET_1BYTE_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CHIMNEY_FAN_STOP_TEMP_SET_2BYTE_FR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CHIMNEY_FAN_ALARM_STATUS_REPORT_FR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
PGPT . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F9H  1
_ZW_ANTITHEFT_REPORT_4BYTE_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte4 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V2  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 625 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  5
ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPO  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_RATE_TBL_SUPPORTED_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_RATE_TBL_ACTIVE_RATE_REPORT_FRAME .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_REPOR  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
  meterPointAdmNumberCharacter4. . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedOperatingStatus1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  supportedOperatingStatus2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  supportedOperatingStatus3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  statusEventLogDepth. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_METER_TBL_HISTORICAL_DATA_REPORT_2  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAM  TYPEDEF  -----  STRUCT   -----  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 626 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  groupName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  groupName3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  groupName4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_CONFIGURATION_SET_2BYTE_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCHEDULE_SET_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  switchpoint01. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  switchpoint02. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  switchpoint03. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  switchpoint11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  switchpoint12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  switchpoint13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  switchpoint21. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  switchpoint22. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  switchpoint23. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  switchpoint31. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  switchpoint32. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  switchpoint33. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  switchpoint41. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  switchpoint42. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  switchpoint43. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  switchpoint51. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  switchpoint52. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  switchpoint53. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  switchpoint61. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  switchpoint62. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  switchpoint63. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  switchpoint71. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  switchpoint72. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  switchpoint73. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  switchpoint81. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  switchpoint82. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  switchpoint83. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
ZW_SCHEDULE_CHANGED_REPORT_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  changecounter. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CHIMNEY_FAN_STOP_TEMP_SET_3BYTE_FR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 627 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_BATTERY_REPORT_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  batteryLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
PSPI . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
WORD . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
_ZW_RequestNewRouteDestinations. . . .  EXTERN   CODE   PROC     -----  -----
_ZW_APPLICATION_META_TX_BUFFER_. . . .  * TAG *  -----  UNION    -----  48
  ZW_MultiCommandEncapFrame. . . . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_CompositeCmdEncapFrame. . . . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_CompositeReplyEncapFrame. . . . .  MEMBER   -----  STRUCT   0000H  41
  ZW_MultiInstanceCmdEncapFrame. . . .  MEMBER   -----  STRUCT   0000H  41
  ZW_MultiChannelCmdEncapV2Frame . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_Common. . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AlarmReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AlarmReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_AlarmReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AlarmReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_AlarmSetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmTypeSupportedReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_AlarmTypeSupportedReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_AlarmTypeSupportedReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_NotificationGetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationReport1byteV3Frame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_NotificationReport2byteV3Frame. .  MEMBER   -----  STRUCT   0000H  11
  ZW_NotificationReport3byteV3Frame. .  MEMBER   -----  STRUCT   0000H  12
  ZW_NotificationReport4byteV3Frame. .  MEMBER   -----  STRUCT   0000H  13
  ZW_NotificationSetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedGetV3Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_NotificationSupportedReport1byteV  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedReport2byteV  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationSupportedReport3byteV  MEMBER   -----  STRUCT   0000H  6
  ZW_NotificationSupportedReport4byteV  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EventSupportedReport1byteV3Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EventSupportedReport2byteV3Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EventSupportedReport3byteV3Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedReport4byteV3Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ApplicationBusyFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ApplicationRejectedRequestFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandConfigurationGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandConfigurationReport1byteFr  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationReport2byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationReport3byteFr  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandConfigurationReport4byteFr  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandConfigurationSet1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandConfigurationSet2byteFrame  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationSet3byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationSet4byteFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandRecordsSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandRecordsSupportedReportFrame MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 628 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AssociationGroupingsGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationSpecificGroupGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationSpecificGroupReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_AvContentBrowseMdByLetterGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdByLetterReportFr  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountReport  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdReportFrame MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusReportFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoReportFrame. . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_BasicWindowCoveringStartLevelChan  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicWindowCoveringStopLevelChang  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BatteryGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BatteryReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmLogGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmLogReportFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmLogSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 629 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ChimneyFanAlarmStatusGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmStatusReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanBoostTimeGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanBoostTimeReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanBoostTimeSetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanDefaultSetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanMinSpeedSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSetupGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSetupReport1byteFrame .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupReport2byteFrame .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupReport3byteFrame .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupReport4byteFrame .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSetupSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSpeedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSpeedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSpeedSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStartTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStartTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStartTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStateGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStateReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStateSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStatusReport1byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStatusReport2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ChimneyFanStatusReport3byteFrame.  MEMBER   -----  STRUCT   0000H  9
  ZW_ChimneyFanStatusReport4byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ChimneyFanStopTempGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTempReport1byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempReport2byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempReport3byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempReport4byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTempSet1byteFrame .  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 630 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ChimneyFanStopTempSet2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempSet3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempSet4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTimeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTimeReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStopTimeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleChangedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleChangedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleOverrideGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleOverrideReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleOverrideSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ScheduleSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ClockGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ClockReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ClockSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationBulkGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ConfigurationBulkReport1byteV2VGr  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkReport2byteV2VGr  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkReport3byteV2VGr  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkReport4byteV2VGr  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkReport1byteV2FrameMEMBER   -----  STRUCT   0000H  11
  ZW_ConfigurationBulkReport2byteV2FrameMEMBER   -----  STRUCT   0000H  15
  ZW_ConfigurationBulkReport3byteV2FrameMEMBER   -----  STRUCT   0000H  19
  ZW_ConfigurationBulkReport4byteV2FrameMEMBER   -----  STRUCT   0000H  23
  VG_ConfigurationBulkSet1byteV2VGroup  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkSet2byteV2VGroup  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkSet3byteV2VGroup  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkSet4byteV2VGroup  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkSet1byteV2Frame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ConfigurationBulkSet2byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ConfigurationBulkSet3byteV2Frame.  MEMBER   -----  STRUCT   0000H  18
  ZW_ConfigurationBulkSet4byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_ConfigurationGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteV2Frame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteV2Frame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteV2Frame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferGroupFrame  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferGroupName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferGroupName4  MEMBER   -----  STRUCT   0000H  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 631 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_CtrlReplicationTransferSceneFrame  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferSceneName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferSceneName4  MEMBER   -----  STRUCT   0000H  8
  ZW_DcpListRemoveFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  VG_DcpListSetVGroup. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  28
  ZW_DcpListSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_DcpListSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_DcpListSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  34
  ZW_DcpListSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_DcpEventStatusGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DcpEventStatusReportFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_DcpListGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_DcpListReportVGroup . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  29
  ZW_DcpListReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_DcpListReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  33
  ZW_DcpListReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  35
  ZW_DoorLockLoggingRecordsSupportedGe  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockLoggingRecordsSupportedRe  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordGetFrame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordReport1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_RecordReport2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_RecordReport3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_RecordReport4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_DoorLockConfigurationGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportFrame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DoorLockConfigurationGetV2Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportV2Frame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EnergyProductionReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EnergyProductionReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EnergyProductionReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareMdGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_FirmwareUpdateMdReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestGetFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareMdGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 632 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_FirmwareUpdateMdGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport2byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdReport3byteV2Frame MEMBER   -----  STRUCT   0000H  9
  ZW_FirmwareUpdateMdReport4byteV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_FirmwareUpdateMdRequestGetV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportV2FrameMEMBER   -----  STRUCT   0000H  3
  ZW_GeographicLocationGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_GeographicLocationReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GeographicLocationSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GroupingNameGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_GroupingNameReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_GroupingNameSetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_HailFrame . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlBypassSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_HrvControlModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvControlModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvControlModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvControlVentilationRateGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlVentilationRateReportFr  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlVentilationRateSetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvStatusReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvStatusReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_HrvStatusSupportedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvStatusSupportedReport1byteFrame MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusSupportedReport2byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_HrvStatusSupportedReport3byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusSupportedReport4byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_IndicatorGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IndicatorReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IndicatorSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IpConfigurationGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReleaseFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationRenewFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReportFrame. . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpConfigurationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_LanguageGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LanguageReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LanguageSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LockGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LockReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_LockSetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ManufacturerSpecificGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ManufacturerSpecificGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportV2Frame  MEMBER   -----  STRUCT   0000H  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 633 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_DeviceSpecificGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DeviceSpecificReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_DeviceSpecificReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DeviceSpecificReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_DeviceSpecificReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterPulseGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterPulseReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoSet2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoSet3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet4byteFr  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportVGroup. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportFrame MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportVGroup .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteFrameMEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteFrameMEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteFrameMEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteFrameMEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetFrame. .  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportVGroup MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportV2VGroup. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportV2VGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteV2F  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteV2F  MEMBER   -----  STRUCT   0000H  24
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 634 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterTblCurrentDataReport3byteV2F  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteV2F  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetV2Frame.  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportV2VGr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblPushConfigurationGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblPushConfigurationReportFr  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterTblPushConfigurationSetFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterReport1byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterReport2byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterReport3byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterReport4byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterGetV3Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV3Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV3Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MoveToPositionGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MoveToPositionReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MoveToPositionSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGetV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGroupingsG  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelAssociationGroupingsR  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationRemove1byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationRemove2byt  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationRemove3byt  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationRemove4byt  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelAssociationReport1byt  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelAssociationReport2byt  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiChannelAssociationReport3byt  MEMBER   -----  STRUCT   0000H  15
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 635 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MultiChannelAssociationReport4byt  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiChannelAssociationSet1byteV2  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationSet2byteV2  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationSet3byteV2  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationSet4byteV2  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelCapabilityGetV2Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV2Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV2V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiChannelCapabilityGetV3Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV3Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV3V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV3Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceAssociationGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationRemove1by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationRemove2by  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationRemove3by  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationRemove4by  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceAssociationReport1by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiInstanceAssociationReport2by  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiInstanceAssociationReport3by  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiInstanceAssociationReport4by  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiInstanceAssociationSet1byteF  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationSet2byteF  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationSet3byteF  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationSet4byteF  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeInfoCachedGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeInfoCachedReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeInfoCachedReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeInfoCachedReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  18
  ZW_NodeInfoCachedReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  20
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 636 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_NodeListGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NodeListReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeListReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_NodeListReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_NodeListReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_LearnModeSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LearnModeSetStatusFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeInformationSendFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkUpdateRequestFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkUpdateRequestStatusFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_DefaultSetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DefaultSetCompleteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveStatusFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeAddFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeAddStatus1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_NodeAddStatus2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeAddStatus3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_NodeAddStatus4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeRemoveFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeRemoveStatusFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FailedNodeReplaceFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_FailedNodeReplaceStatusFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeNeighborUpdateRequestFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNeighborUpdateStatusFrame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteAssignFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ReturnRouteAssignCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNamingNodeLocationReportFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationSetFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameReportFrame . .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeNameSetFrame. . . .  MEMBER   -----  STRUCT   0000H  19
  ZW_PowerlevelGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelTestNodeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelTestNodeReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PowerlevelTestNodeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_CmdEncapsulation1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CmdEncapsulation2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CmdEncapsulation3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CmdEncapsulation4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PrepaymentBalanceGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_PrepaymentBalanceReportFrame. . .  MEMBER   -----  STRUCT   0000H  22
  ZW_PrepaymentSupportedGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PrepaymentSupportedReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryGet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryGet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietaryReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 637 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ProprietarySet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietarySet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietarySet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietarySet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProtectionGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionEcReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcSetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSupportedGetV2Frame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionSupportedReportV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ProtectionTimeoutGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionTimeoutReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionTimeoutSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblRemove1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_RateTblRemove2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblRemove3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_RateTblRemove4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_RateTblSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblActiveRateGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblActiveRateReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblCurrentDataGetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  VG_RateTblCurrentDataReportVGroup. .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblCurrentDataReport1byteFrame MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblCurrentDataReport2byteFrame MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblCurrentDataReport3byteFrame MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblCurrentDataReport4byteFrame MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblHistoricalDataGetFrame . .  MEMBER   -----  STRUCT   0000H  21
  VG_RateTblHistoricalDataReportVGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblHistoricalDataReport1byteF  MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblHistoricalDataReport2byteF  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblHistoricalDataReport3byteF  MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblHistoricalDataReport4byteF  MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationActivateFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationGet  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationRep  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationConfigurationSet  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActivationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SceneActuatorConfGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneActuatorConfReportFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActuatorConfSetFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_SceneControllerConfGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneControllerConfReportFrame. .  MEMBER   -----  STRUCT   0000H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 638 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SceneControllerConfSetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockEnableAllSetFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportFrameMEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportFrameMEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV2F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV2F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV2F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV2Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV3Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV3F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV3F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV3F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV3Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV3F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV3Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockDailyRepeatingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockDailyRepeatingRe  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockDailyRepeatingSe  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenAttributesGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ScreenAttributesGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenMdReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_ScreenMdReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_ScreenMdReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_ScreenMdGetV2Frame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 639 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  VG_ScreenMdReport4byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_ScreenMdReport2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ScreenMdReport3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_ScreenMdReport4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_SecurityPanelModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandClassSecurityPanelZoneSens  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SecurityPanelZoneSensorInstalledG  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneSensorStateGetFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorStateRepor  MEMBER   -----  STRUCT   0000H  7
  ZW_SecurityPanelZoneNumberSupportedG  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelZoneStateGetFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneStateReportFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSupportedReportF  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeGetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeReportFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkKeySet2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NetworkKeySet4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkKeyVerifyFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedReport1b  MEMBER   -----  STRUCT   0000H  6
  ZW_SecurityCommandsSupportedReport2b  MEMBER   -----  STRUCT   0000H  8
  ZW_SecurityCommandsSupportedReport3b  MEMBER   -----  STRUCT   0000H  10
  ZW_SecurityCommandsSupportedReport4b  MEMBER   -----  STRUCT   0000H  12
  ZW_SecurityMessageEncapsulation1byte  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulation2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulation3byte  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulation4byte  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityNonceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityNonceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SecuritySchemeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeInheritFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSupportedGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorAlarmSupportedReport1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSupportedReport2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorAlarmSupportedReport3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorAlarmSupportedReport4byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedGetSensorV2F  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 640 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorTriggerLevelReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorTriggerLevelReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet1byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelSet2byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelSet3byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet4byteFrame .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV2Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV3Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV3Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV3Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV3Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV4Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV4Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV4Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV4Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV4Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV5Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV5Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV5Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV5Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV5Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelGetV6Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV6Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV6Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV6Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV6Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 641 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SensorAlarmSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorAlarmSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorAlarmSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  VG_SimpleAvControlSetVGroup. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SimpleAvControlSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_SimpleAvControlSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  14
  ZW_SimpleAvControlSupportedGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_SimpleAvControlSupportedReport1by  MEMBER   -----  STRUCT   0000H  4
  ZW_SimpleAvControlSupportedReport2by  MEMBER   -----  STRUCT   0000H  5
  ZW_SimpleAvControlSupportedReport3by  MEMBER   -----  STRUCT   0000H  6
  ZW_SimpleAvControlSupportedReport4by  MEMBER   -----  STRUCT   0000H  7
  ZW_SwitchAllGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOffFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOnFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchAllSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinarySetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelStartLevelChangeF  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStopLevelChangeFr  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  5
  ZW_SwitchMultilevelStopLevelChangeV2  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV3Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  6
  ZW_SwitchMultilevelStopLevelChangeV3  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedGetV3FrameMEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedReportV3  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleBinarySetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelSetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelStartLevelC  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleMultilevelStopLevelCh  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblRemove1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_TariffTblRemove2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_TariffTblRemove3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TariffTblRemove4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_TariffTblSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierSet1byteFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierSet2byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierSet3byteFrame. .  MEMBER   -----  STRUCT   0000H  21
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 642 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_TariffTblSupplierSet4byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_TariffTblCostGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_TariffTblCostReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_TariffTblGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_TariffTblReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblSupplierReport1byteFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierReport2byteFrame  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierReport3byteFrame  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierReport4byteFrame  MEMBER   -----  STRUCT   0000H  22
  ZW_ThermostatFanModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV3Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV3Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV3Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanStateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanStateReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingStatusReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingModeReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingRelayStatusGetFr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingRelayStatusRepor  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointGetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointReport1b  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointReport2b  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointReport3b  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointReport4b  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingSetpointSet1byte  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointSet2byte  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointSet3byte  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointSet4byte  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingStatusGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingStatusSetFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingTimedOffSetFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 643 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatModeGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateGetFrame.  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportFrameMEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingSu  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  6
  VG_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  13
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  18
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  23
  ZW_ThermostatSetbackGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetbackReportFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetbackSetFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointGetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteV2Frame  MEMBER   -----  STRUCT   0000H  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 644 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatSetpointSupportedGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeParametersGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeParametersReportFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_TimeParametersSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DateGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_DateGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeOffsetSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandFirstFragment1byteFrame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_CommandFirstFragment2byteFrame. .  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFirstFragment3byteFrame. .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandFirstFragment4byteFrame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentCompleteFrame. . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandFragmentRequestVGroup. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandFragmentRequest1byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_CommandFragmentRequest2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFragmentRequest3byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentRequest4byteFrame.  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandFragmentWaitFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandSubsequentFragment1byteFrameMEMBER   -----  STRUCT   0000H  8
  ZW_CommandSubsequentFragment2byteFrameMEMBER   -----  STRUCT   0000H  9
  ZW_CommandSubsequentFragment3byteFrameMEMBER   -----  STRUCT   0000H  10
  ZW_CommandSubsequentFragment4byteFrameMEMBER   -----  STRUCT   0000H  11
  ZW_UserCodeGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_UserCodeReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UserCodeSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UsersNumberGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_UsersNumberReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassReportFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_VersionGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_VersionReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_WakeUpIntervalGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesReportV  MEMBER   -----  STRUCT   0000H  14
  ZW_WakeUpIntervalGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LowpanFirstFragment1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LowpanFirstFragment2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 645 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_LowpanFirstFragment3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanFirstFragment4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment1byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanSubsequentFragment2byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanSubsequentFragment3byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment4byteFrame MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandZipPacket3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_CommandZipPacket4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_CommandCommandClassNotSupportedFr  MEMBER   -----  STRUCT   0000H  5
  ZW_CapabilityGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CapabilityReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_StateGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_StateReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_StateSetVGroup. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_StateSet1byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_StateSet2byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_StateSet3byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_StateSet4byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_StartCapabilityLevelChangeFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_StopStateChangeFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleSupportedGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_ScheduleSupportedReportVGroup . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleSupportedReport1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_ScheduleSupportedReport2byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleSupportedReport3byteFrame  MEMBER   -----  STRUCT   0000H  12
  ZW_ScheduleSupportedReport4byteFrame  MEMBER   -----  STRUCT   0000H  14
  VG_CommandScheduleSet1byteVGroup . .  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleSet2byteVGroup . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleSet3byteVGroup . .  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleSet4byteVGroup . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  34
  ZW_CommandScheduleGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport1byteVGroup.  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleReport2byteVGroup.  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport3byteVGroup.  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleReport4byteVGroup.  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleReport1byteFrame .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleReport2byteFrame .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleReport3byteFrame .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleReport4byteFrame .  MEMBER   -----  STRUCT   0000H  34
  ZW_ScheduleRemoveFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleStateSetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleStateGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleStateReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeStatus1byteFrame.  MEMBER   -----  STRUCT   0000H  13
  ZW_ControllerChangeStatus2byteFrame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ControllerChangeStatus3byteFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ControllerChangeStatus4byteFrame.  MEMBER   -----  STRUCT   0000H  16
  ZW_ZipNodeSolicitationFrame. . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_ZipInvNodeSolicitationFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ZipNodeAdvertisementFrame . . . .  MEMBER   -----  STRUCT   0000H  24
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 646 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AssociationGroupNameGetFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupNameReport1byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupNameReport2byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupNameReport3byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupNameReport4byteFr  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationGroupInfoGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  VG_AssociationGroupInfoReportVGroup.  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupInfoReport1byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_AssociationGroupInfoReport2byteFr  MEMBER   -----  STRUCT   0000H  17
  ZW_AssociationGroupInfoReport3byteFr  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupInfoReport4byteFr  MEMBER   -----  STRUCT   0000H  31
  ZW_AssociationGroupCommandListGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceResetLocallyNotificationFrameMEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_CentralSceneNotificationFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_IpAssociationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_IpAssociationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  26
  ZW_IpAssociationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpAssociationRemove1byteFrame . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationRemove2byteFrame . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationRemove3byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationRemove4byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_AntitheftSet1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet1byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetV2Frame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  10
  bPadding . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  48
ZW_DATE_REPORT_FRAME . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 647 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  5
ZW_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_TARIFF_TBL_COST_GET_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
ZW_SIMPLE_AV_CONTROL_SET_1BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  itemId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  itemId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPO  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SENSOR_ALARM_SUPPORTED_REPORT_1BYTE  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SECURITY_COMMANDS_SUPPORTED_GET_FR  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SCREEN_MD_GET_V2_FRAME. . . . . . .  TYPEDEF  -----  STRUCT   -----  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 648 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_PROTECTION_EC_GET_V2_FRAME_. . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_HISTORICAL_DATA_REPORT_3  * TAG *  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
_ZW_HAIL_FRAME_. . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CONFIGURATION_SET_3BYTE_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CONFIGURATION_BULK_REPORT_1BYTE_V2_  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  4
_ZW_CHIMNEY_FAN_STOP_TEMP_SET_4BYTE_FR  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CHIMNEY_FAN_MIN_SPEED_REPORT_FRAME_ * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 649 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_CHIMNEY_FAN_ALARM_STATUS_GET_FRAME_ * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_APPLICATION_BUSY_FRAME. . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  waitTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ALARM_REPORT_1BYTE_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  numberOfEventParameters. . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0012H  5
ZW_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SIMPLE_AV_CONTROL_SET_2BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  itemId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  itemId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPO  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SENSOR_ALARM_SUPPORTED_REPORT_2BYTE  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 650 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_FR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG_ * TAG *  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  historicalValue1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  historicalValue2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  historicalValue3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalValue4 . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_RATE_TBL_ACTIVE_RATE_GET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_PROTECTION_SUPPORTED_REPORT_V2_FRAME TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  localProtectionState1. . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  localProtectionState2. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rfProtectionState1 . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rfProtectionState2 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_NODE_REMOVE_STATUS_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_NODE_INFORMATION_SEND_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  destinationNodeId. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  txOptions. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG  TYPEDEF  -----  STRUCT   -----  2
  multiChannelNodeId . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_STATUS_SUPPORTED_GET_V2_F  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_HISTORICAL_DATA_REPORT_4  * TAG *  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 651 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
VG_DCP_LIST_SET_VG . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CONFIGURATION_SET_4BYTE_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  configurationValue4. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_CONFIGURATION_BULK_REPORT_2BYTE_V2_  TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  4
_ZW_CONFIGURATION_GET_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_CHANGED_GET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_BATTERY_GET_FRAME . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_EVENT_SUPPORTED_REPORT_1BYTE_V3_FR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_ALARM_REPORT_2BYTE_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  numberOfEventParameters. . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 652 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
_ZW_CONTROLLER_CHANGE_STATUS_1BYTE_FRA  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
_ZW_WAKE_UP_INTERVAL_REPORT_V2_FRAME_.  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_DATE_GET_FRAME. . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SIMPLE_AV_CONTROL_SET_3BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  itemId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  itemId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPO  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SENSOR_ALARM_SUPPORTED_REPORT_3BYTE  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 653 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCENE_CONTROLLER_CONF_REPORT_FRAME_ * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_NODE_ADD_STATUS_1BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
ZW_FAILED_NODE_REMOVE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NETWORK_UPDATE_REQUEST_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1B  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_VG_METER_TBL_CURRENT_DATA_REPORT_VG_.  * TAG *  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  currentValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  currentValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_INDICATOR_REPORT_FRAME. . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_DCP_LIST_SUPPORTED_REPORT_FRAME . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  dcpListSize. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  freeDcpListEntries . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_CONFIGURATION_BULK_REPORT_3BYTE_V2_  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 654 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  4
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000FH  4
_ZW_CHIMNEY_FAN_MIN_SPEED_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_AV_CONTENT_SEARCH_MD_REPORT_FRAME .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_EVENT_SUPPORTED_REPORT_2BYTE_V3_FR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_ALARM_REPORT_3BYTE_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  numberOfEventParameters. . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  eventParameter3. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
PTRI . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F8H  1
_UART_SendByte . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_ZW_CONTROLLER_CHANGE_STATUS_2BYTE_FRA  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_THERMOSTAT_OPERATING_STATE_LOGGING_  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 655 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_TARIFF_TBL_SUPPLIER_REPORT_1BYTE_FR  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
_ZW_SWITCH_TOGGLE_MULTILEVEL_REPORT_FR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SWITCH_TOGGLE_BINARY_REPORT_FRAME .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SIMPLE_AV_CONTROL_SET_4BYTE_FRAME .  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  itemId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  itemId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SENSOR_ALARM_SUPPORTED_REPORT_4BYTE  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING  TYPEDEF  -----  STRUCT   -----  10
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 656 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  weekDayBitmask . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationHour . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_PROTECTION_SUPPORTED_GET_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_NODE_ADD_STATUS_2BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1B  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2B  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CONFIGURATION_BULK_REPORT_4BYTE_V2_  TYPEDEF  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  4
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000FH  4
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  4
_ZW_EVENT_SUPPORTED_REPORT_3BYTE_V3_FR  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 657 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_ALARM_REPORT_4BYTE_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  numberOfEventParameters. . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  eventParameter3. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  eventParameter4. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
STATE_HEAL_ASSOCIATED_FAIL . . . . . .  E_CONST  -----  U_CHAR   -----  1
_ZW_CONTROLLER_CHANGE_STATUS_3BYTE_FRA  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_WAKE_UP_INTERVAL_GET_V2_FRAME_ . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_TARIFF_TBL_SUPPLIER_REPORT_2BYTE_FR  TYPEDEF  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 658 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SECURITY_PANEL_MODE_SET_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SCENE_CONTROLLER_CONF_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_NODE_ADD_STATUS_3BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 659 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_1  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
_ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2B  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3B  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_METER_TBL_STATUS_DEPTH_GET_FRAME_.  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusEventLogDepth. . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_INDICATOR_GET_FRAME . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_FIRMWARE_UPDATE_MD_GET_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_DCP_LIST_SUPPORTED_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SCHEDULE_OVERRIDE_SET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  overrideState. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_BASIC_REPORT_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_AV_CONTENT_SEARCH_MD_GET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 660 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_COMMAND_RECORDS_SUPPORTED_REPORT_FR  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  freeCommandRecords1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  freeCommandRecords2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  maxCommandRecords1 . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  maxCommandRecords2 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_EVENT_SUPPORTED_REPORT_4BYTE_V3_FR  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_CONTROLLER_CHANGE_STATUS_4BYTE_FRA  * TAG *  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandClass4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
_ZW_VERSION_COMMAND_CLASS_REPORT_FRAME_ * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  requestedCommandClass. . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandClassVersion. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
VG_COMMAND_FRAGMENT_REQUEST_VG . . . .  TYPEDEF  -----  STRUCT   -----  2
  datagramOffset1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_OPERATING_LOGGING_SUPPO  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_HEATING_SETPOINT_SET_1BY  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_TARIFF_TBL_SUPPLIER_REPORT_3BYTE_FR  TYPEDEF  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 661 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  supplierCharacter3 . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
_ZW_SWITCH_TOGGLE_MULTILEVEL_GET_FRAME_ * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SWITCH_TOGGLE_BINARY_GET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCREEN_MD_REPORT_1BYTE_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
ZW_NODE_ADD_STATUS_4BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeInfoLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 662 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandClass4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_2  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
_ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3B  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4B  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandClass4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_MOVE_TO_POSITION_SET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_TBL_PUSH_CONFIGURATION_REPORT  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  pushDataset1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  pushDataset2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  pushDataset3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  intervalMonths . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  intervalDays . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  intervalHours. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  intervalMinutes. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  pushNodeId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
_ZW_DOOR_LOCK_OPERATION_SET_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  doorLockMode . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_ASSOCIATION_REMOVE_1BYTE_V2_FRAME_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 663 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NOTIFICATION_SUPPORTED_GET_V3_FRAME  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
VG_COMMAND_SCHEDULE_SET_1BYTE_VG . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_OPERATING_LOGGING_SUPPO  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_THERMOSTAT_MODE_SET_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_HEATING_SETPOINT_SET_2BY  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_TARIFF_TBL_SUPPLIER_REPORT_4BYTE_FR  TYPEDEF  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  supplierCharacter3 . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  supplierCharacter4 . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 664 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  commandClassSupport1 . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandClassMark . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassControl1 . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCREEN_MD_REPORT_2BYTE_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_FR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_3  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
_ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4B  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClass1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClass2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClass3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandClass4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_METER_TBL_TABLE_ID_GET_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_HRV_STATUS_SUPPORTED_GET_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_START_TEMP_SET_1BYTE_FR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_BASIC_GET_FRAME_ . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ASSOCIATION_REMOVE_2BYTE_V2_FRAME_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ASSOCIATION_GROUPINGS_REPORT_FRAME_ * TAG *  -----  STRUCT   -----  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 665 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedGroupings . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_COMMAND_RECORDS_SUPPORTED_GET_FRAME  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ALARM_SET_V2_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
VG_COMMAND_SCHEDULE_SET_2BYTE_VG . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CAPABILITY_REPORT_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  capabilityMask1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  capabilityMask2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_VERSION_COMMAND_CLASS_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  requestedCommandClass. . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_OPERATING_LOGGING_SUPPO  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_HEATING_SETPOINT_SET_3BY  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SWITCH_MULTILEVEL_REPORT_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandClassSupport1 . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandClassSupport2 . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassMark . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassControl1 . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClassControl2 . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SCREEN_MD_REPORT_3BYTE_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 666 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_4  TYPEDEF  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
ZW_METER_TBL_PUSH_CONFIGURATION_GET_FR  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
VG_METER_TBL_STATUS_REPORT_VG. . . . .  TYPEDEF  -----  STRUCT   -----  8
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_MANUFACTURER_SPECIFIC_REPORT_V2_FRAMETYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  productTypeId1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  productTypeId2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  productId1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  productId2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_IP_CONFIGURATION_SET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipAddress1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipAddress2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipAddress3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipAddress4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  subnetMask1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  subnetMask2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  subnetMask3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  subnetMask4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  gateway1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  gateway2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  gateway3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  gateway4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  dns11. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  dns12. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  dns13. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  dns14. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  dns21. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 667 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  dns22. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  dns23. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  dns24. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
ZW_CONFIGURATION_REPORT_1BYTE_FRAME. .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_CHIMNEY_FAN_START_TEMP_SET_2BYTE_FR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ASSOCIATION_REMOVE_3BYTE_V2_FRAME_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
nextState. . . . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
VG_COMMAND_SCHEDULE_SET_3BYTE_VG . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  cmdByte3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_THERMOSTAT_OPERATING_LOGGING_SUPPO  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_THERMOSTAT_HEATING_SETPOINT_SET_4BY  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SWITCH_MULTILEVEL_REPORT_V3_FRAME .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_R  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 668 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  commandClassSupport1 . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandClassSupport2 . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassSupport3 . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassMark . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClassControl1 . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandClassControl2 . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandClassControl3 . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_SCREEN_MD_REPORT_4BYTE_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  32
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  7
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
_ZW_REMOTE_ASSOCIATION_ACTIVATE_FRAME_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_DCP_LIST_REMOVE_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_CONFIGURATION_REPORT_2BYTE_FRAME. .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_CHIMNEY_FAN_START_TEMP_SET_3BYTE_FR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CHIMNEY_FAN_ALARM_LOG_SET_FRAME_ .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  message. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_ASSOCIATION_REMOVE_4BYTE_V2_FRAME_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_ASSOCIATION_GROUPINGS_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 669 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
STATE_COMMAND_HANDLER. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
VG_COMMAND_SCHEDULE_SET_4BYTE_VG . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  cmdByte3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  cmdByte4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CAPABILITY_GET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SWITCH_MULTILEVEL_GET_V2_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_R  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandClassSupport1 . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandClassSupport2 . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassSupport3 . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassSupport4 . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandClassMark . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandClassControl1 . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandClassControl2 . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  commandClassControl3 . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassControl4 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
_ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_FRA  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_RETURN_ROUTE_DELETE_COMPLETE_FRAME_ * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_FAILED_NODE_REMOVE_STATUS_FRAME_ .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_NETWORK_UPDATE_REQUEST_STATUS_FRAME_* TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_MANUFACTURER_SPECIFIC_GET_V2_FRAME.  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 670 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_DOOR_LOCK_CONFIGURATION_REPORT_V2_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  operationType. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_CONFIGURATION_REPORT_3BYTE_FRAME. .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CHIMNEY_FAN_START_TEMP_SET_4BYTE_FR  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CHIMNEY_FAN_SPEED_SET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
StartWatchdog. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_ZW_ANTITHEFT_SET_1BYTE_V2_FRAME_. . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_VERSION_REPORT_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zWaveLibraryType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zWaveProtocolVersion . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zWaveProtocolSubVersion. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  applicationVersion . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  applicationSubVersion. . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V2_FR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SWITCH_MULTILEVEL_GET_V3_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 671 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCA  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_GET_V2_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_GEOGRAPHIC_LOCATION_SET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  longitudeDegrees . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  latitudeDegrees. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V2  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V2_  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CONFIGURATION_REPORT_4BYTE_FRAME. .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  configurationValue4. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_AV_MATCH_ITEM_TO_RENDERER_MD_REPORT  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_NOTIFICATION_SUPPORTED_REPORT_1BYT  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ALARM_TYPE_SUPPORTED_GET_V2_FRAME .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ANTITHEFT_SET_2BYTE_V2_FRAME_. . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 672 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V2_FR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_OPERATING_STATE_REPORT_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_FAN_STATE_REPORT_FRAME .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCA  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SECURITY_MESSAGE_ENCAPSULATION_1BYT  TYPEDEF  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   000FH  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0016H  1
ZW_RATE_TBL_REMOVE_1BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 673 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_GET_V3_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_PULSE_REPORT_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  pulseCount1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  pulseCount2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  pulseCount3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  pulseCount4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_LOCK_REPORT_FRAME . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  lockState. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_HRV_CONTROL_MODE_SUPPORTED_GET_FRAME TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V2_  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_DOOR_LOCK_CONFIGURATION_GET_V2_FRA  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_STATE_REPORT_FRAME. . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_NOTIFICATION_SUPPORTED_REPORT_2BYT  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
_ZW_ANTITHEFT_SET_3BYTE_V2_FRAME_. . .  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  magicCode3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 674 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_VERSION_GET_FRAME . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V2_FR  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SECURITY_MESSAGE_ENCAPSULATION_2BYT  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0017H  1
ZW_RATE_TBL_REMOVE_2BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_PROTECTION_EC_SET_V2_FRAME_. . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 675 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_RETURN_ROUTE_DELETE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_GET_FRA  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V2_  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_TBL_REPORT_V2_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetSupported1. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  datasetSupported2. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  datasetSupported3. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  datasetHistorySupported1 . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  datasetHistorySupported2 . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  datasetHistorySupported3 . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dataHistorySupported1. . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  dataHistorySupported2. . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  dataHistorySupported3. . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
ZW_HRV_STATUS_SUPPORTED_REPORT_1BYTE_F  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_HRV_CONTROL_BYPASS_REPORT_FRAME . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bypass . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V2_  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_CHIMNEY_FAN_ALARM_STATUS_SET_FRAME_ * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  message. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_AV_MATCH_ITEM_TO_RENDERER_MD_GET_FR  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_NOTIFICATION_SUPPORTED_REPORT_3BYT  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 676 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
IP1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
UpdateNetworkUpdateCount . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  reset. . . . . . . . . . . . . . . .  AUTO     DATA   BIT      0000H  1
_ZW_ANTITHEFT_SET_4BYTE_V2_FRAME_. . .  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  magicCode3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  magicCode4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  antiTheftHintByte4 . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V2_FR  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_THERMOSTAT_SETPOINT_GET_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_OPERATING_STATE_GET_V2_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_FAN_STATE_GET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SENSOR_ALARM_REPORT_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 677 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sourceNodeId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorState. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SECURITY_MESSAGE_ENCAPSULATION_3BYT  TYPEDEF  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0017H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0018H  1
ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_FR  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_RATE_TBL_REMOVE_3BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateParameterSetId3. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V2_  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_METER_PULSE_GET_FRAME_ . . . . . .  * TAG *  -----  STRUCT   -----  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 678 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_LOCK_GET_FRAME. . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_HRV_STATUS_SUPPORTED_REPORT_2BYTE_F  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V2_  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_CHIMNEY_FAN_STATE_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_REP  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_NOTIFICATION_SUPPORTED_REPORT_4BYT  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
networkUpdateTimerHandle . . . . . . .  PUBLIC   XDATA  U_CHAR   0004H  1
ZW_ANTITHEFT_GET_FRAME . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
VG_STATE_SET_VG. . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_COMMAND_FIRST_FRAGMENT_1BYTE_FRAME.  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_THERMOSTAT_MODE_SUPPORTED_GET_V2_FR  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 679 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SENSOR_BINARY_REPORT_V2_FRAME_ . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorValue. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SECURITY_MESSAGE_ENCAPSULATION_4BYT  TYPEDEF  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  commandByte4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0017H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0018H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0019H  1
ZW_RATE_TBL_REMOVE_4BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateParameterSetId3. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateParameterSetId4. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V2_  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterIdCharacter3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_FR  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_HRV_STATUS_SUPPORTED_REPORT_3BYTE_F  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 680 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_HRV_CONTROL_BYPASS_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CONFIGURATION_BULK_SET_1BYTE_V2_FRAMETYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  4
_ZW_CLOCK_REPORT_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minute . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_CHIMNEY_FAN_MIN_SPEED_SET_FRAME_ .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_BASIC_WINDOW_COVERING_STOP_LEVEL_CH  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_AV_TAGGING_MD_REPORT_FRAME_. . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_ASSOCIATION_GET_V2_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
_ZW_SECURITY_MESSAGE_ENCAP_FRAME_. . .  * TAG *  -----  STRUCT   -----  48
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initVectorByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initVectorByte2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initVectorByte3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initVectorByte4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initVectorByte5. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initVectorByte6. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initVectorByte7. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initVectorByte8. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  securityEncapMessage . . . . . . . .  MEMBER   -----  ARRAY    000AH  29
  receiverNonceIdent . . . . . . . . .  MEMBER   -----  U_CHAR   0027H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0028H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0029H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   002AH  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   002BH  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   002CH  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   002DH  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   002EH  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   002FH  1
ZW_COMMAND_FIRST_FRAGMENT_2BYTE_FRAME.  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 681 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SENSOR_ALARM_GET_FRAME. . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_PROPRIETARY_REPORT_1BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V2_  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterIdCharacter3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterIdCharacter4. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_HRV_STATUS_SUPPORTED_REPORT_4BYTE_F  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CONFIGURATION_BULK_SET_2BYTE_V2_FRAMETYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  4
_ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_GET  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ALARM_TYPE_SUPPORTED_REPORT_1BYTE_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ALARM_REPORT_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 682 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
_ZW_WAKE_UP_INTERVAL_SET_V2_FRAME_ . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_WAKE_UP_NO_MORE_INFORMATION_FRAME .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_COMMAND_FIRST_FRAGMENT_3BYTE_FRAME.  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_BINARY_GET_V2_FRAME_. . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLE  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfSensors. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCREEN_ATTRIBUTES_REPORT_FRAME. . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfCharactersPerLine. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sizeOfLineBuffer . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numericalPresentationOfACharacter. .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCENE_CONTROLLER_CONF_SET_FRAME_ .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_PROPRIETARY_REPORT_2BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_MULTI_INSTANCE_REPORT_V2_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 683 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1B  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
ZW_METER_REPORT_1BYTE_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_INDICATOR_SET_FRAME . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_CONFIGURATION_BULK_SET_3BYTE_V2_FRAMETYPEDEF  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  4
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  4
_ZW_CLOCK_GET_FRAME_ . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_AV_TAGGING_MD_GET_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_R  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ALARM_TYPE_SUPPORTED_REPORT_2BYTE_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_TimerCancel . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
STATE_LEARN_MODE_START . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_COMPOSITE_REPLY_ENCAP_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  41
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 684 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  endPoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0003H  38
ALL_EXCEPT_ENCAP . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  38
  ZW_Common. . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AlarmReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AlarmReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_AlarmReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AlarmReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_AlarmSetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmTypeSupportedReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_AlarmTypeSupportedReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_AlarmTypeSupportedReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_NotificationGetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationReport1byteV3Frame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_NotificationReport2byteV3Frame. .  MEMBER   -----  STRUCT   0000H  11
  ZW_NotificationReport3byteV3Frame. .  MEMBER   -----  STRUCT   0000H  12
  ZW_NotificationReport4byteV3Frame. .  MEMBER   -----  STRUCT   0000H  13
  ZW_NotificationSetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedGetV3Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_NotificationSupportedReport1byteV  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedReport2byteV  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationSupportedReport3byteV  MEMBER   -----  STRUCT   0000H  6
  ZW_NotificationSupportedReport4byteV  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EventSupportedReport1byteV3Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EventSupportedReport2byteV3Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EventSupportedReport3byteV3Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedReport4byteV3Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ApplicationBusyFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ApplicationRejectedRequestFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandConfigurationGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandConfigurationReport1byteFr  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationReport2byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationReport3byteFr  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandConfigurationReport4byteFr  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandConfigurationSet1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandConfigurationSet2byteFrame  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationSet3byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationSet4byteFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandRecordsSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandRecordsSupportedReportFrame MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  9
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 685 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AssociationSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationSpecificGroupGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationSpecificGroupReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_AvContentBrowseMdByLetterGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdByLetterReportFr  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountReport  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdReportFrame MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusReportFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoReportFrame. . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_BasicWindowCoveringStartLevelChan  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicWindowCoveringStopLevelChang  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BatteryGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BatteryReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmLogGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmLogReportFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmLogSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmStatusReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 686 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ChimneyFanAlarmTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanBoostTimeGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanBoostTimeReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanBoostTimeSetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanDefaultSetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanMinSpeedSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSetupGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSetupReport1byteFrame .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupReport2byteFrame .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupReport3byteFrame .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupReport4byteFrame .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSetupSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSpeedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSpeedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSpeedSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStartTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStartTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStartTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStateGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStateReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStateSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStatusReport1byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStatusReport2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ChimneyFanStatusReport3byteFrame.  MEMBER   -----  STRUCT   0000H  9
  ZW_ChimneyFanStatusReport4byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ChimneyFanStopTempGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTempReport1byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempReport2byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempReport3byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempReport4byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTempSet1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempSet2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempSet3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempSet4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTimeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTimeReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStopTimeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleChangedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleChangedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleOverrideGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 687 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ScheduleOverrideReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleOverrideSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ScheduleSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ClockGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ClockReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ClockSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationBulkGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ConfigurationBulkReport1byteV2VGr  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkReport2byteV2VGr  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkReport3byteV2VGr  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkReport4byteV2VGr  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkReport1byteV2FrameMEMBER   -----  STRUCT   0000H  11
  ZW_ConfigurationBulkReport2byteV2FrameMEMBER   -----  STRUCT   0000H  15
  ZW_ConfigurationBulkReport3byteV2FrameMEMBER   -----  STRUCT   0000H  19
  ZW_ConfigurationBulkReport4byteV2FrameMEMBER   -----  STRUCT   0000H  23
  VG_ConfigurationBulkSet1byteV2VGroup  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkSet2byteV2VGroup  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkSet3byteV2VGroup  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkSet4byteV2VGroup  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkSet1byteV2Frame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ConfigurationBulkSet2byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ConfigurationBulkSet3byteV2Frame.  MEMBER   -----  STRUCT   0000H  18
  ZW_ConfigurationBulkSet4byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_ConfigurationGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteV2Frame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteV2Frame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteV2Frame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferGroupFrame  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferGroupName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferGroupName4  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferSceneFrame  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferSceneName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferSceneName4  MEMBER   -----  STRUCT   0000H  8
  ZW_DcpListRemoveFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  VG_DcpListSetVGroup. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  28
  ZW_DcpListSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_DcpListSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  32
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 688 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_DcpListSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  34
  ZW_DcpListSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_DcpEventStatusGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DcpEventStatusReportFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_DcpListGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_DcpListReportVGroup . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  29
  ZW_DcpListReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_DcpListReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  33
  ZW_DcpListReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  35
  ZW_DoorLockLoggingRecordsSupportedGe  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockLoggingRecordsSupportedRe  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordGetFrame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordReport1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_RecordReport2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_RecordReport3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_RecordReport4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_DoorLockConfigurationGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportFrame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DoorLockConfigurationGetV2Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportV2Frame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EnergyProductionReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EnergyProductionReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EnergyProductionReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareMdGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_FirmwareUpdateMdReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestGetFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareMdGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport2byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdReport3byteV2Frame MEMBER   -----  STRUCT   0000H  9
  ZW_FirmwareUpdateMdReport4byteV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_FirmwareUpdateMdRequestGetV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportV2FrameMEMBER   -----  STRUCT   0000H  3
  ZW_GeographicLocationGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_GeographicLocationReportFrame . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 689 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_GeographicLocationSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GroupingNameGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_GroupingNameReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_GroupingNameSetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_HailFrame . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlBypassSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_HrvControlModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvControlModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvControlModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvControlVentilationRateGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlVentilationRateReportFr  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlVentilationRateSetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvStatusReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvStatusReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_HrvStatusSupportedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvStatusSupportedReport1byteFrame MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusSupportedReport2byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_HrvStatusSupportedReport3byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusSupportedReport4byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_IndicatorGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IndicatorReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IndicatorSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IpConfigurationGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReleaseFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationRenewFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReportFrame. . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpConfigurationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_LanguageGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LanguageReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LanguageSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LockGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LockReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_LockSetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ManufacturerSpecificGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ManufacturerSpecificGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceSpecificGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DeviceSpecificReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_DeviceSpecificReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DeviceSpecificReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_DeviceSpecificReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterPulseGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterPulseReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoSet2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoSet3byteFr  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 690 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterTblTablePointAdmNoSet4byteFr  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportVGroup. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportFrame MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportVGroup .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteFrameMEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteFrameMEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteFrameMEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteFrameMEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetFrame. .  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportVGroup MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportV2VGroup. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportV2VGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteV2F  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteV2F  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteV2F  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteV2F  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetV2Frame.  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportV2VGr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetV2Frame  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 691 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterTblTableIdGetV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblPushConfigurationGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblPushConfigurationReportFr  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterTblPushConfigurationSetFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterReport1byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterReport2byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterReport3byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterReport4byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterGetV3Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV3Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV3Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MoveToPositionGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MoveToPositionReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MoveToPositionSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGetV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGroupingsG  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelAssociationGroupingsR  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationRemove1byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationRemove2byt  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationRemove3byt  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationRemove4byt  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelAssociationReport1byt  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelAssociationReport2byt  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiChannelAssociationReport3byt  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiChannelAssociationReport4byt  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiChannelAssociationSet1byteV2  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationSet2byteV2  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationSet3byteV2  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationSet4byteV2  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelCapabilityGetV2Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 692 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MultiChannelEndPointFindV2Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV2V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiChannelCapabilityGetV3Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV3Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV3V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV3Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceAssociationGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationRemove1by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationRemove2by  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationRemove3by  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationRemove4by  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceAssociationReport1by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiInstanceAssociationReport2by  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiInstanceAssociationReport3by  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiInstanceAssociationReport4by  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiInstanceAssociationSet1byteF  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationSet2byteF  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationSet3byteF  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationSet4byteF  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeInfoCachedGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeInfoCachedReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeInfoCachedReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeInfoCachedReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  18
  ZW_NodeInfoCachedReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_NodeListGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NodeListReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeListReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_NodeListReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_NodeListReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_LearnModeSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LearnModeSetStatusFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeInformationSendFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkUpdateRequestFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkUpdateRequestStatusFrame .  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 693 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_DefaultSetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DefaultSetCompleteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveStatusFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeAddFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeAddStatus1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_NodeAddStatus2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeAddStatus3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_NodeAddStatus4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeRemoveFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeRemoveStatusFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FailedNodeReplaceFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_FailedNodeReplaceStatusFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeNeighborUpdateRequestFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNeighborUpdateStatusFrame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteAssignFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ReturnRouteAssignCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNamingNodeLocationReportFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationSetFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameReportFrame . .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeNameSetFrame. . . .  MEMBER   -----  STRUCT   0000H  19
  ZW_PowerlevelGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelTestNodeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelTestNodeReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PowerlevelTestNodeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_CmdEncapsulation1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CmdEncapsulation2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CmdEncapsulation3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CmdEncapsulation4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PrepaymentBalanceGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_PrepaymentBalanceReportFrame. . .  MEMBER   -----  STRUCT   0000H  22
  ZW_PrepaymentSupportedGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PrepaymentSupportedReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryGet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryGet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietaryReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietarySet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietarySet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietarySet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietarySet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProtectionGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionEcReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcSetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 694 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ProtectionGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSupportedGetV2Frame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionSupportedReportV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ProtectionTimeoutGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionTimeoutReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionTimeoutSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblRemove1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_RateTblRemove2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblRemove3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_RateTblRemove4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_RateTblSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblActiveRateGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblActiveRateReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblCurrentDataGetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  VG_RateTblCurrentDataReportVGroup. .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblCurrentDataReport1byteFrame MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblCurrentDataReport2byteFrame MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblCurrentDataReport3byteFrame MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblCurrentDataReport4byteFrame MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblHistoricalDataGetFrame . .  MEMBER   -----  STRUCT   0000H  21
  VG_RateTblHistoricalDataReportVGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblHistoricalDataReport1byteF  MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblHistoricalDataReport2byteF  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblHistoricalDataReport3byteF  MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblHistoricalDataReport4byteF  MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationActivateFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationGet  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationRep  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationConfigurationSet  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActivationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SceneActuatorConfGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneActuatorConfReportFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActuatorConfSetFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_SceneControllerConfGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneControllerConfReportFrame. .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneControllerConfSetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockEnableAllSetFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportFrameMEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportFrameMEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 695 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ScheduleEntryTypeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV2F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV2F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV2F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV2Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV3Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV3F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV3F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV3F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV3Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV3F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV3Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockDailyRepeatingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockDailyRepeatingRe  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockDailyRepeatingSe  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenAttributesGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ScreenAttributesGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenMdReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_ScreenMdReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_ScreenMdReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_ScreenMdGetV2Frame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_ScreenMdReport2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ScreenMdReport3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_ScreenMdReport4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_SecurityPanelModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 696 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_CommandClassSecurityPanelZoneSens  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SecurityPanelZoneSensorInstalledG  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneSensorStateGetFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorStateRepor  MEMBER   -----  STRUCT   0000H  7
  ZW_SecurityPanelZoneNumberSupportedG  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelZoneStateGetFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneStateReportFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSupportedReportF  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeGetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeReportFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkKeySet2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NetworkKeySet4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkKeyVerifyFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedReport1b  MEMBER   -----  STRUCT   0000H  6
  ZW_SecurityCommandsSupportedReport2b  MEMBER   -----  STRUCT   0000H  8
  ZW_SecurityCommandsSupportedReport3b  MEMBER   -----  STRUCT   0000H  10
  ZW_SecurityCommandsSupportedReport4b  MEMBER   -----  STRUCT   0000H  12
  ZW_SecurityMessageEncapsulation1byte  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulation2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulation3byte  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulation4byte  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityNonceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityNonceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SecuritySchemeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeInheritFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSupportedGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorAlarmSupportedReport1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSupportedReport2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorAlarmSupportedReport3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorAlarmSupportedReport4byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedGetSensorV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorTriggerLevelReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorTriggerLevelReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet1byteFrame .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 697 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SensorTriggerLevelSet2byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelSet3byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet4byteFrame .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV2Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV3Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV3Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV3Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV3Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV4Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV4Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV4Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV4Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV4Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV5Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV5Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV5Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV5Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV5Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelGetV6Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV6Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV6Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV6Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV6Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorAlarmSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorAlarmSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  VG_SimpleAvControlSetVGroup. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SimpleAvControlSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 698 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SimpleAvControlSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  14
  ZW_SimpleAvControlSupportedGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_SimpleAvControlSupportedReport1by  MEMBER   -----  STRUCT   0000H  4
  ZW_SimpleAvControlSupportedReport2by  MEMBER   -----  STRUCT   0000H  5
  ZW_SimpleAvControlSupportedReport3by  MEMBER   -----  STRUCT   0000H  6
  ZW_SimpleAvControlSupportedReport4by  MEMBER   -----  STRUCT   0000H  7
  ZW_SwitchAllGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOffFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOnFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchAllSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinarySetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelStartLevelChangeF  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStopLevelChangeFr  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  5
  ZW_SwitchMultilevelStopLevelChangeV2  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV3Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  6
  ZW_SwitchMultilevelStopLevelChangeV3  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedGetV3FrameMEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedReportV3  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleBinarySetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelSetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelStartLevelC  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleMultilevelStopLevelCh  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblRemove1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_TariffTblRemove2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_TariffTblRemove3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TariffTblRemove4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_TariffTblSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierSet1byteFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierSet2byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierSet3byteFrame. .  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierSet4byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_TariffTblCostGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_TariffTblCostReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_TariffTblGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_TariffTblReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblSupplierReport1byteFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierReport2byteFrame  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierReport3byteFrame  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierReport4byteFrame  MEMBER   -----  STRUCT   0000H  22
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 699 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatFanModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV3Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV3Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV3Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanStateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanStateReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingStatusReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingModeReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingRelayStatusGetFr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingRelayStatusRepor  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointGetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointReport1b  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointReport2b  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointReport3b  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointReport4b  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingSetpointSet1byte  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointSet2byte  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointSet3byte  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointSet4byte  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingStatusGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingStatusSetFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingTimedOffSetFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatModeGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 700 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateGetFrame.  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportFrameMEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingSu  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  6
  VG_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  13
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  18
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  23
  ZW_ThermostatSetbackGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetbackReportFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetbackSetFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointGetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeParametersGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeParametersReportFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_TimeParametersSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DateGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 701 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_TimeGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_DateGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeOffsetSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandFirstFragment1byteFrame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_CommandFirstFragment2byteFrame. .  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFirstFragment3byteFrame. .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandFirstFragment4byteFrame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentCompleteFrame. . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandFragmentRequestVGroup. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandFragmentRequest1byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_CommandFragmentRequest2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFragmentRequest3byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentRequest4byteFrame.  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandFragmentWaitFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandSubsequentFragment1byteFrameMEMBER   -----  STRUCT   0000H  8
  ZW_CommandSubsequentFragment2byteFrameMEMBER   -----  STRUCT   0000H  9
  ZW_CommandSubsequentFragment3byteFrameMEMBER   -----  STRUCT   0000H  10
  ZW_CommandSubsequentFragment4byteFrameMEMBER   -----  STRUCT   0000H  11
  ZW_UserCodeGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_UserCodeReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UserCodeSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UsersNumberGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_UsersNumberReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassReportFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_VersionGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_VersionReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_WakeUpIntervalGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesReportV  MEMBER   -----  STRUCT   0000H  14
  ZW_WakeUpIntervalGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LowpanFirstFragment1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LowpanFirstFragment2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanFirstFragment3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanFirstFragment4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment1byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanSubsequentFragment2byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanSubsequentFragment3byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment4byteFrame MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandZipPacket3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_CommandZipPacket4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  15
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 702 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_CommandCommandClassNotSupportedFr  MEMBER   -----  STRUCT   0000H  5
  ZW_CapabilityGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CapabilityReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_StateGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_StateReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_StateSetVGroup. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_StateSet1byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_StateSet2byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_StateSet3byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_StateSet4byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_StartCapabilityLevelChangeFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_StopStateChangeFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleSupportedGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_ScheduleSupportedReportVGroup . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleSupportedReport1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_ScheduleSupportedReport2byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleSupportedReport3byteFrame  MEMBER   -----  STRUCT   0000H  12
  ZW_ScheduleSupportedReport4byteFrame  MEMBER   -----  STRUCT   0000H  14
  VG_CommandScheduleSet1byteVGroup . .  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleSet2byteVGroup . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleSet3byteVGroup . .  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleSet4byteVGroup . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  34
  ZW_CommandScheduleGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport1byteVGroup.  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleReport2byteVGroup.  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport3byteVGroup.  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleReport4byteVGroup.  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleReport1byteFrame .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleReport2byteFrame .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleReport3byteFrame .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleReport4byteFrame .  MEMBER   -----  STRUCT   0000H  34
  ZW_ScheduleRemoveFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleStateSetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleStateGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleStateReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeStatus1byteFrame.  MEMBER   -----  STRUCT   0000H  13
  ZW_ControllerChangeStatus2byteFrame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ControllerChangeStatus3byteFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ControllerChangeStatus4byteFrame.  MEMBER   -----  STRUCT   0000H  16
  ZW_ZipNodeSolicitationFrame. . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_ZipInvNodeSolicitationFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ZipNodeAdvertisementFrame . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupNameGetFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupNameReport1byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupNameReport2byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupNameReport3byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupNameReport4byteFr  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationGroupInfoGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  VG_AssociationGroupInfoReportVGroup.  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupInfoReport1byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_AssociationGroupInfoReport2byteFr  MEMBER   -----  STRUCT   0000H  17
  ZW_AssociationGroupInfoReport3byteFr  MEMBER   -----  STRUCT   0000H  24
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 703 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AssociationGroupInfoReport4byteFr  MEMBER   -----  STRUCT   0000H  31
  ZW_AssociationGroupCommandListGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceResetLocallyNotificationFrameMEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_CentralSceneNotificationFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_IpAssociationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_IpAssociationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  26
  ZW_IpAssociationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpAssociationRemove1byteFrame . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationRemove2byteFrame . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationRemove3byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationRemove4byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_AntitheftSet1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet1byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetV2Frame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  10
ZW_COMMAND_FIRST_FRAGMENT_4BYTE_FRAME.  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_TIME_REPORT_FRAME . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 704 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_SETBACK_REPORT_FRAME_ .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  setbackState . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_TARIFF_TBL_SUPPLIER_SET_1BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
_ZW_SWITCH_TOGGLE_MULTILEVEL_SET_FRAME_ * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SWITCH_TOGGLE_BINARY_SET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_GET_V2_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_NETWORK_KEY_VERIFY_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_PROPRIETARY_REPORT_3BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_PROPRIETARY_GET_1BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_MULTI_INSTANCE_REPORT_V3_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2B  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 705 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
ZW_METER_REPORT_1BYTE_V3_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_METER_REPORT_2BYTE_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_METER_TBL_CURRENT_DATA_GET_V2_FRAME  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datasetRequested1. . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datasetRequested2. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetRequested3. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V2_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  firmwareId1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  firmwareId2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_CONFIGURATION_BULK_SET_4BYTE_V2_FRAMETYPEDEF  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  4
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  4
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  4
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0012H  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 706 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_CHIMNEY_FAN_ALARM_TEMP_GET_FRAME. .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ALARM_TYPE_SUPPORTED_REPORT_3BYTE_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_ALARM_GET_FRAME_ . . . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
_VG_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  usageTodayHours. . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  usageTodayMinutes. . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  usageYesterdayHours. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  usageYesterdayMinutes. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_TARIFF_TBL_SUPPLIER_SET_2BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
ZW_SENSOR_MULTILEVEL_GET_V3_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_TRIGGER_LEVEL_GET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLE  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCREEN_ATTRIBUTES_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_FR  TYPEDEF  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 707 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
ZW_REMOTE_ASSOCIATION_CONFIGURATION_RE  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  localGroupingIdentifier. . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  remoteNodeid . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  remoteGroupingIdentifier . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_PROPRIETARY_REPORT_4BYTE_FRAME. . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_PROPRIETARY_GET_2BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_1  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
ZW_MULTI_INSTANCE_GET_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3B  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
ZW_METER_REPORT_2BYTE_V3_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  10
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 708 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_METER_REPORT_3BYTE_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  previousMeterValue3. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
_ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_GROUPING_NAME_REPORT_FRAME_. . . .  * TAG *  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupingName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  groupingName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  groupingName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  groupingName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  groupingName5. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  groupingName6. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  groupingName7. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  groupingName8. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  groupingName9. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  groupingName10 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  groupingName11 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  groupingName12 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  groupingName13 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  groupingName14 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  groupingName15 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  groupingName16 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
_ZW_CRC_16_ENCAP_1BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  command. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 709 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CTRL_REPLICATION_TRANSFER_SCENE_FRAMETYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_BASIC_SET_FRAME_ . . . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_G  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_APPLICATION_REJECTED_REQUEST_FRAME.  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_ALARM_TYPE_SUPPORTED_REPORT_4BYTE_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
lostCount. . . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   07EAH  1
networkUpdateFailureCount. . . . . . .  PUBLIC   XDATA  U_CHAR   07E9H  1
_ZW_ANTITHEFT_REPORT_1BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPOR  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  minimumWakeUpIntervalSeconds1. . . .  MEMBER   -----  U_CHAR   0002H  1
  minimumWakeUpIntervalSeconds2. . . .  MEMBER   -----  U_CHAR   0003H  1
  minimumWakeUpIntervalSeconds3. . . .  MEMBER   -----  U_CHAR   0004H  1
  maximumWakeUpIntervalSeconds1. . . .  MEMBER   -----  U_CHAR   0005H  1
  maximumWakeUpIntervalSeconds2. . . .  MEMBER   -----  U_CHAR   0006H  1
  maximumWakeUpIntervalSeconds3. . . .  MEMBER   -----  U_CHAR   0007H  1
  defaultWakeUpIntervalSeconds1. . . .  MEMBER   -----  U_CHAR   0008H  1
  defaultWakeUpIntervalSeconds2. . . .  MEMBER   -----  U_CHAR   0009H  1
  defaultWakeUpIntervalSeconds3. . . .  MEMBER   -----  U_CHAR   000AH  1
  wakeUpIntervalStepSeconds1 . . . . .  MEMBER   -----  U_CHAR   000BH  1
  wakeUpIntervalStepSeconds2 . . . . .  MEMBER   -----  U_CHAR   000CH  1
  wakeUpIntervalStepSeconds3 . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_TIME_GET_FRAME. . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 710 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_FR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_SETBACK_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_TARIFF_TBL_SUPPLIER_SET_3BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  supplierCharacter3 . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
_ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANG  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_GET_V4_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_RATE_TBL_GET_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_PROPRIETARY_GET_3BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_NODE_INFO_CACHED_GET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 711 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_2  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
ZW_MULTI_INSTANCE_GET_V3_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4B  TYPEDEF  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
ZW_METER_REPORT_3BYTE_V3_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  previousMeterValue3. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_METER_REPORT_4BYTE_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  meterValue4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  previousMeterValue3. . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  previousMeterValue4. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_METER_TBL_PUSH_CONFIGURATION_SET_FR  TYPEDEF  -----  STRUCT   -----  11
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 712 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  pushDataset1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  pushDataset2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  pushDataset3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  intervalMonths . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  intervalDays . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  intervalHours. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  intervalMinutes. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  pushNodeId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_REPOR  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
VG_METER_TBL_HISTORICAL_DATA_REPORT_VG  TYPEDEF  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  historicalValue1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  historicalValue2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  historicalValue3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalValue4 . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CRC_16_ENCAP_2BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  command. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_ASSOCIATION_REPORT_1BYTE_V2_FRAME_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
_ZW_ANTITHEFT_REPORT_2BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_FR  TYPEDEF  -----  STRUCT   -----  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 713 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_TARIFF_TBL_SUPPLIER_SET_4BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  standingChargeValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  standingChargeValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  standingChargeValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  standingChargeValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  supplierCharacter1 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  supplierCharacter2 . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  supplierCharacter3 . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  supplierCharacter4 . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
_ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANG  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_SIMPLE_AV_CONTROL_SET_VG_. . . . .  * TAG *  -----  STRUCT   -----  2
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  command2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SENSOR_MULTILEVEL_GET_V5_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_REMOTE_ASSOCIATION_CONFIGURATION_GE  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  localGroupingIdentifier. . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_PROPRIETARY_GET_4BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_3  TYPEDEF  -----  STRUCT   -----  15
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 714 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
ZW_METER_REPORT_4BYTE_V3_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  meterValue4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  deltaTime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  deltaTime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  previousMeterValue1. . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  previousMeterValue2. . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  previousMeterValue3. . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  previousMeterValue4. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_REPOR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_GROUPING_NAME_GET_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CRC_16_ENCAP_3BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  command. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_ASSOCIATION_REPORT_2BYTE_V2_FRAME_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_ANTITHEFT_REPORT_3BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 715 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_SCHEDULE_STATE_REPORT_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_STOP_STATE_CHANGE_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_FR  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SWITCH_MULTILEVEL_SET_V2_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SENSOR_MULTILEVEL_GET_V6_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_RE  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_PROTECTION_REPORT_V2_FRAME_. . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 716 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_POWERLEVEL_TEST_NODE_REPORT_FRAME .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  testNodeid . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  statusOfOperation. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  testFrameCount1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  testFrameCount2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_4  TYPEDEF  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0010H  2
_ZW_METER_TBL_STATUS_DATE_GET_V2_FRAME_ * TAG *  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_REPOR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CRC_16_ENCAP_4BYTE_FRAME_. . . . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  command. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 717 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_CONFIGURATION_SET_1BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ASSOCIATION_REPORT_3BYTE_V2_FRAME_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeid3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_ANTITHEFT_REPORT_4BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte4 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_IP_ASSOCIATION_REMOVE_1BYTE_FRAME_  * TAG *  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ZIP_NODE_SOLICITATION_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 718 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
ZW_COMMAND_SCHEDULE_GET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_FR  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SWITCH_MULTILEVEL_SET_V3_FRAME. . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V2_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_RE  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_RATE_TBL_CURRENT_DATA_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 719 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datasetRequested1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetRequested2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  datasetRequested3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_PREPAYMENT_SUPPORTED_REPORT_FRAME .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_CURRENT_DATA_REPORT_1BYT  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
_ZW_METER_TBL_TABLE_POINT_ADM_NO_REPOR  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
  meterPointAdmNumberCharacter4. . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_METER_TBL_STATUS_SUPPORTED_REPORT_F  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedOperatingStatus1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  supportedOperatingStatus2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  supportedOperatingStatus3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  statusEventLogDepth. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_CONFIGURATION_SET_2BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_1BYT  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_BASIC_WINDOW_COVERING_START_LEVEL_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 720 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_ASSOCIATION_REPORT_4BYTE_V2_FRAME_  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeid3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeid4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
_ZW_COMPOSITE_CMD_ENCAP_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  42
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  endPointMask1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  endPointMask2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0004H  38
_ZW_IP_ASSOCIATION_REMOVE_2BYTE_FRAME_  * TAG *  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
ZW_SCHEDULE_STATE_GET_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_FAN_MODE_REPORT_V2_FRAME  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_FR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V3_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 721 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V2_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SENSOR_TRIGGER_LEVEL_REPORT_1BYTE_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SCREEN_MD_GET_FRAME . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GE  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_PROTECTION_GET_V2_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_POWERLEVEL_TEST_NODE_GET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_CURRENT_DATA_REPORT_2BYT  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_DOOR_LOCK_CONFIGURATION_SET_V2_FRA  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  operationType. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_CONFIGURATION_SET_3BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 722 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_2BYT  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
_ZW_IP_ASSOCIATION_REMOVE_3BYTE_FRAME_  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
ZW_ASSOCIATION_GROUP_NAME_GET_FRAME. .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_COMMAND_SUBSEQUENT_FRAGMENT_1BYTE_F  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_THERMOSTAT_FAN_MODE_REPORT_V3_FRAME  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SWITCH_TOGGLE_MULTILEVEL_START_LEV  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 723 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V4_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V3_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V2_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SENSOR_TRIGGER_LEVEL_REPORT_2BYTE_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GE  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_PREPAYMENT_SUPPORTED_GET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_NODE_INFO_CACHED_REPORT_1BYTE_FRAME_* TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nonSecureCommandClass1 . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  securityScheme0Mark1 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  securityScheme0Mark2 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  securityScheme0CommandClass1 . . . .  MEMBER   -----  U_CHAR   000DH  1
_VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_  * TAG *  -----  STRUCT   -----  2
  multiInstanceNodeId. . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  instance . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_MULTI_CHANNEL_END_POINT_REPORT_V2_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 724 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_GET_V2_F  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_CURRENT_DATA_REPORT_3BYT  * TAG *  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
ZW_METER_TBL_STATUS_SUPPORTED_GET_FRAME TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_HRV_CONTROL_VENTILATION_RATE_REPORT  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  ventilationRate. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_DCP_LIST_GET_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CONFIGURATION_SET_4BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  configurationValue4. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_3BYT  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
_ZW_IP_ASSOCIATION_REMOVE_4BYTE_FRAME_  * TAG *  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 725 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
_ZW_WAKE_UP_INTERVAL_REPORT_FRAME_ . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_COMMAND_SUBSEQUENT_FRAGMENT_2BYTE_F  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_COMMAND_FRAGMENT_COMPLETE_FRAME . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_FAN_MODE_GET_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V5_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V4_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 726 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V3_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V2_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SENSOR_TRIGGER_LEVEL_REPORT_3BYTE_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_RATE_TBL_REPORT_1BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
_ZW_NODE_INFO_CACHED_REPORT_2BYTE_FRAME_* TAG *  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 727 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nonSecureCommandClass1 . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nonSecureCommandClass2 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  securityScheme0Mark1 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  securityScheme0Mark2 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  securityScheme0CommandClass1 . . . .  MEMBER   -----  U_CHAR   000EH  1
  securityScheme0CommandClass2 . . . .  MEMBER   -----  U_CHAR   000FH  1
_ZW_MULTI_CHANNEL_END_POINT_REPORT_V3_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_TBL_CURRENT_DATA_REPORT_4BYT  * TAG *  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
ZW_LOCK_SET_FRAME. . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  lockState. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_STATE_SET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_4BYT  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_NOTIFICATION_GET_V3_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 728 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_MULTI_COMMAND_ENCAP_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  42
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCommands . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0004H  38
_ZW_COMMAND_ZIP_PACKET_1BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  headerExtension1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  zWaveCommand1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_COMMAND_SUBSEQUENT_FRAGMENT_3BYTE_F  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_THERMOSTAT_FAN_MODE_GET_V3_FRAME. .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V6_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V5_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V4_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V3_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 729 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SENSOR_TRIGGER_LEVEL_REPORT_4BYTE_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  triggerValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_RATE_TBL_REPORT_2BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
_ZW_NODE_INFO_CACHED_REPORT_3BYTE_FRAME_* TAG *  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nonSecureCommandClass1 . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nonSecureCommandClass2 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nonSecureCommandClass3 . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  securityScheme0Mark1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  securityScheme0Mark2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  securityScheme0CommandClass1 . . . .  MEMBER   -----  U_CHAR   000FH  1
  securityScheme0CommandClass2 . . . .  MEMBER   -----  U_CHAR   0010H  1
  securityScheme0CommandClass3 . . . .  MEMBER   -----  U_CHAR   0011H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 730 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_MULTI_CHANNEL_END_POINT_GET_V2_FRA  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_HRV_CONTROL_VENTILATION_RATE_GET_FR  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_HRV_CONTROL_BYPASS_SET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bypass . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
_VerifyAssociatedTransmit. . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  txStatus . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  attemptedNodeId. . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
ZW_DEVICE_RESET_LOCALLY_NOTIFICATION_F  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ASSOCIATION_GROUP_COMMAND_LIST_REP  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  listLength . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_COMMAND_SCHEDULE_REPORT_1BYTE_FRAME_* TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
_ZW_COMMAND_ZIP_PACKET_2BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  headerExtension1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  headerExtension2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  zWaveCommand1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  zWaveCommand2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
_ZW_WAKE_UP_INTERVAL_GET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_COMMAND_SUBSEQUENT_FRAGMENT_4BYTE_F  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 731 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  payload4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
_ZW_THERMOSTAT_HEATING_MODE_REPORT_FRA  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V6_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V5_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V4_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_RATE_TBL_REPORT_3BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateCharacter3 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 732 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
_ZW_RETURN_ROUTE_ASSIGN_COMPLETE_FRAME_ * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_NODE_INFO_CACHED_REPORT_4BYTE_FRAME_* TAG *  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  basicDeviceClass . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nonSecureCommandClass1 . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nonSecureCommandClass2 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nonSecureCommandClass3 . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nonSecureCommandClass4 . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  securityScheme0Mark1 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  securityScheme0Mark2 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  securityScheme0CommandClass1 . . . .  MEMBER   -----  U_CHAR   0010H  1
  securityScheme0CommandClass2 . . . .  MEMBER   -----  U_CHAR   0011H  1
  securityScheme0CommandClass3 . . . .  MEMBER   -----  U_CHAR   0012H  1
  securityScheme0CommandClass4 . . . .  MEMBER   -----  U_CHAR   0013H  1
_ZW_MULTI_CHANNEL_END_POINT_GET_V3_FRA  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_STATUS_REPORT_1BYTE_V2_FR  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
ZW_HRV_STATUS_GET_FRAME. . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_FIRMWARE_UPDATE_MD_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 733 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
APPL_NODE_TYPE . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  generic. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  specific . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ASSOCIATION_GROUP_COMMAND_LIST_REP  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  listLength . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  command2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_COMMAND_SCHEDULE_REPORT_2BYTE_FRAME_* TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_START_CAPABILITY_LEVEL_CHANGE_FRAME_* TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startState . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_COMMAND_COMMAND_CLASS_NOT_SUPPORTE  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  offendingCommandClass. . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  offendingCommand . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_COMMAND_ZIP_PACKET_3BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  headerExtension1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  headerExtension2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  headerExtension3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  zWaveCommand1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  zWaveCommand2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  zWaveCommand3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
ZW_THERMOSTAT_HEATING_STATUS_REPORT_FR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 734 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_TARIFF_TBL_REMOVE_1BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANG  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V6_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V5_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SCREEN_MD_REPORT_1BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
ZW_RATE_TBL_REPORT_4BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  27
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateCharacter3 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  rateCharacter4 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 735 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
ZW_RATE_TBL_CURRENT_DATA_REPORT_1BYTE_  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
ZW_MULTI_CHANNEL_END_POINT_FIND_V2_FRAMETYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_TBL_STATUS_REPORT_2BYTE_V2_FR  TYPEDEF  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
ZW_FIRMWARE_MD_REPORT_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  firmwareId1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  firmwareId2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_ENERGY_PRODUCTION_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CTRL_REPLICATION_TRANSFER_SCENE_NA  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
VG_CONFIGURATION_BULK_REPORT_1BYTE_V2_VGTYPEDEF  -----  STRUCT   -----  1
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
_ZW_CLOCK_SET_FRAME_ . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 736 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minute . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ASSOCIATION_REMOVE_1BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ASSOCIATION_GROUP_COMMAND_LIST_REP  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  listLength . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  command2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  command3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYT  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  lengthOfName . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  name1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_COMMAND_SCHEDULE_REPORT_3BYTE_FRAME_* TAG *  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
_ZW_COMMAND_ZIP_PACKET_4BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  headerExtension1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  headerExtension2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  headerExtension3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  headerExtension4 . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  zWaveCommand1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  zWaveCommand2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  zWaveCommand3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  zWaveCommand4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 737 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_THERMOSTAT_HEATING_MODE_GET_FRAME_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_TARIFF_TBL_REMOVE_2BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANG  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  stepSize . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SWITCH_BINARY_REPORT_FRAME_. . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V6_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SCREEN_MD_REPORT_2BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
ZW_RATE_TBL_CURRENT_DATA_REPORT_2BYTE_  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 738 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_PROPRIETARY_SET_1BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_MULTI_CHANNEL_END_POINT_FIND_V3_FRAMETYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_TBL_STATUS_REPORT_3BYTE_V2_FR  TYPEDEF  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0016H  8
_ZW_METER_TBL_TABLE_ID_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_IP_CONFIGURATION_RENEW_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_HRV_CONTROL_MODE_REPORT_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CTRL_REPLICATION_TRANSFER_SCENE_NA  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sceneName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
VG_CONFIGURATION_BULK_REPORT_2BYTE_V2_VGTYPEDEF  -----  STRUCT   -----  2
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_SETUP_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ASSOCIATION_REMOVE_2BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_UART_SendNum. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_ZW_ASSOCIATION_GROUP_COMMAND_LIST_REP  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  listLength . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  command1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  command2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  command3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 739 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  command4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYT  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  lengthOfName . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  name1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  name2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_COMMAND_SCHEDULE_REPORT_4BYTE_FRAME_* TAG *  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
_ZW_SCHEDULE_SUPPORTED_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_USER_CODE_REPORT_FRAME. . . . . . .  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdStatus . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  userCode3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  userCode4. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  userCode5. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  userCode6. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  userCode7. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userCode8. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCode9. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode10 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_THERMOSTAT_HEATING_STATUS_GET_FRAME  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_TARIFF_TBL_REMOVE_3BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateParameterSetId3. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_SWITCH_MULTILEVEL_REPORT_FRAME. . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 740 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SCREEN_MD_REPORT_3BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
_ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSlotsWeekDay . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfSlotsYearDay . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_RATE_TBL_CURRENT_DATA_REPORT_3BYTE_  TYPEDEF  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
ZW_PROPRIETARY_SET_2BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_RETURN_ROUTE_ASSIGN_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sourceNodeId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  destinationNodeId. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1B  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 741 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
ZW_METER_TBL_STATUS_REPORT_4BYTE_V2_FR  TYPEDEF  -----  STRUCT   -----  38
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0016H  8
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001EH  8
ZW_MANUFACTURER_SPECIFIC_REPORT_FRAME.  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  productTypeId1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  productTypeId2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  productId1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  productId2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_IP_CONFIGURATION_RELEASE_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_FIRMWARE_MD_GET_V2_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_DCP_LIST_REPORT_1BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dcpId. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
_ZW_CTRL_REPLICATION_TRANSFER_SCENE_NA  * TAG *  -----  STRUCT   -----  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 742 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sceneName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sceneName3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
VG_CONFIGURATION_BULK_REPORT_3BYTE_V2_VGTYPEDEF  -----  STRUCT   -----  3
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameter3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_DEFAULT_SET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_AV_CONTENT_BROWSE_MD_REPORT_FRAME .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ASSOCIATION_REMOVE_3BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
AppState_Typedef . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
STATE_KEEP_ALIVE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_IP_ASSOCIATION_GET_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYT  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  lengthOfName . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  name1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  name2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  name3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_ZIP_NODE_ADVERTISEMENT_FRAME_. . .  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 743 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  homeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  homeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  homeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  homeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
_ZW_LOWPAN_FIRST_FRAGMENT_1BYTE_FRAME_  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_SETBACK_SET_FRAME_. . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  setbackState . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_TARIFF_TBL_REMOVE_4BYTE_FRAME . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId1. . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateParameterSetId2. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateParameterSetId3. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateParameterSetId4. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SWITCH_BINARY_GET_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCREEN_MD_REPORT_4BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  31
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  7
_ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSlotsWeekDay . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfSlotsYearDay . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSlotsDailyRepeating. . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_RATE_TBL_CURRENT_DATA_REPORT_4BYTE_  TYPEDEF  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 744 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
ZW_PROPRIETARY_SET_3BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2B  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
_ZW_HRV_CONTROL_MODE_GET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_DCP_LIST_REPORT_2BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  31
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dcpId. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 745 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
_ZW_CTRL_REPLICATION_TRANSFER_SCENE_NA  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sceneName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sceneName3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sceneName4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VGTYPEDEF  -----  STRUCT   -----  4
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameter3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameter4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ASSOCIATION_REMOVE_4BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_NOTIFICATION_REPORT_1BYTE_V3_FRAME.  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  v1AlarmLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ERF. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
_UpdateNetworkUpdateCountCallback. . .  PUBLIC   CODE   PROC     0000H  -----
  txStatus . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_AskNodeForHelp. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  NodeID . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
STATE_LEARN_MODE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYT  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  lengthOfName . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  name1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  name2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  name3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  name4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_LOWPAN_FIRST_FRAGMENT_2BYTE_FRAME_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 746 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_USER_CODE_GET_FRAME . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_MODE_REPORT_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SWITCH_MULTILEVEL_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportNo . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SCENE_ACTUATOR_CONF_REPORT_FRAME. .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_REMOTE_ASSOCIATION_CONFIGURATION_SE  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  localGroupingIdentifier. . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  remoteNodeid . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  remoteGroupingIdentifier . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_PROTECTION_TIMEOUT_REPORT_V2_FRAME_ * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  timeout. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_PROPRIETARY_SET_4BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_MULTI_INSTANCE_ASSOCIATION_SET_1BYT  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3B  TYPEDEF  -----  STRUCT   -----  15
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 747 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
ZW_METER_TBL_TABLE_CAPABILITY_GET_V2_F  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_MANUFACTURER_SPECIFIC_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_HRV_STATUS_REPORT_1BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_GROUPING_NAME_SET_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupingName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  groupingName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  groupingName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  groupingName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  groupingName5. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  groupingName6. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  groupingName7. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  groupingName8. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  groupingName9. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  groupingName10 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  groupingName11 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  groupingName12 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  groupingName13 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  groupingName14 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  groupingName15 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  groupingName16 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
ZW_DOOR_LOCK_OPERATION_REPORT_V2_FRAME  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  doorLockMode . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  doorCondition. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_DOOR_LOCK_CONFIGURATION_REPORT_FRA  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  operationType. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 748 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_DCP_LIST_REPORT_3BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  33
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dcpId. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0010H  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
_ZW_CHIMNEY_FAN_STOP_TIME_REPORT_FRAME_ * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  time . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_AV_CONTENT_BROWSE_MD_GET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_NOTIFICATION_REPORT_2BYTE_V3_FRAME.  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  v1AlarmLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
_ZW_ANTITHEFT_SET_1BYTE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 749 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_LOWPAN_FIRST_FRAGMENT_3BYTE_FRAME_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_USERS_NUMBER_REPORT_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedUsers . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_SETPOINT_SET_1BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SECURITY_PANEL_MODE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedModeBitMask1. . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  supportedModeBitMask2. . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_VG_SCREEN_MD_REPORT_1BYTE_V2_VG_. . .  * TAG *  -----  STRUCT   -----  4
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_MULTI_INSTANCE_ASSOCIATION_SET_2BYT  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4B  TYPEDEF  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 750 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0010H  2
_ZW_METER_GET_FRAME_ . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_HISTORICAL_DATA_GET_V2_F  * TAG *  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  historicalDatasetRequested1. . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalDatasetRequested2. . . . .  MEMBER   -----  U_CHAR   0004H  1
  historicalDatasetRequested3. . . . .  MEMBER   -----  U_CHAR   0005H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_1  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_HRV_STATUS_REPORT_2BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_FR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_FRAMETYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ENERGY_PRODUCTION_REPORT_1BYTE_FRA  * TAG *  -----  STRUCT   -----  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 751 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_DCP_LIST_REPORT_4BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  35
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dcpId. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0010H  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0012H  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   0021H  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   0022H  1
_ZW_ASSOCIATION_SET_1BYTE_V2_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NOTIFICATION_REPORT_3BYTE_V3_FRAME.  TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  v1AlarmLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  eventParameter3. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
_ZW_ANTITHEFT_SET_2BYTE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 752 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_LOWPAN_FIRST_FRAGMENT_4BYTE_FRAME_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_THERMOSTAT_SETPOINT_SET_2BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_OPERATING_STATE_REPORT_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_MODE_GET_V2_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_TARIFF_TBL_REPORT_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  tariffValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  tariffValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  tariffValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  tariffValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SENSOR_ALARM_SET_1BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SECURITY_MESSAGE_ENCAPSULATION_NONC  TYPEDEF  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 753 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   000FH  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0016H  1
_VG_SCREEN_MD_REPORT_2BYTE_V2_VG_. . .  * TAG *  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SCENE_ACTUATOR_CONF_GET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_PROTECTION_TIMEOUT_GET_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_MULTI_INSTANCE_ASSOCIATION_SET_3BYT  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
_ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_2  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_HRV_STATUS_REPORT_3BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 754 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_FRAMETYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_ENERGY_PRODUCTION_REPORT_2BYTE_FRA  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_DOOR_LOCK_OPERATION_GET_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_DOOR_LOCK_CONFIGURATION_GET_FRAME_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_STOP_TIME_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_SETUP_REPORT_1BYTE_FRA  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_CHIMNEY_FAN_BOOST_TIME_REPORT_FRAME  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  time . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_ASSOCIATION_SET_2BYTE_V2_FRAME_. .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_NOTIFICATION_REPORT_4BYTE_V3_FRAME.  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  v1AlarmType. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  v1AlarmLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  mevent . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 755 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventParameter2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  eventParameter3. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  eventParameter4. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
P0DIR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AEH  1
_ZW_ANTITHEFT_SET_3BYTE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  magicCode3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_ASSOCIATION_GROUP_INFO_GET_FRAME. .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCHEDULE_STATE_SET_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleState. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCHEDULE_REMOVE_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_STATE_REPORT_FRAME_. . . . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_USERS_NUMBER_GET_FRAME. . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_SETPOINT_SET_3BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 756 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SENSOR_ALARM_SET_2BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SECURITY_MESSAGE_ENCAPSULATION_NONC  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0017H  1
_ZW_SECURITY_PANEL_MODE_SUPPORTED_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_SCREEN_MD_REPORT_3BYTE_V2_VG_. . .  * TAG *  -----  STRUCT   -----  6
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  character3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SE  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_PROTECTION_SET_V2_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 757 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_POWERLEVEL_TEST_NODE_SET_FRAME. . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  testNodeid . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  powerLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  testFrameCount1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  testFrameCount2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_MULTI_INSTANCE_ASSOCIATION_SET_4BYT  TYPEDEF  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_FRAMETYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_TBL_REPORT_FRAME. . . . . . .  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetSupported1. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  datasetSupported2. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  datasetSupported3. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  datasetHistorySupported1 . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  datasetHistorySupported2 . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  datasetHistorySupported3 . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  dataHistorySupported1. . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  dataHistorySupported2. . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  dataHistorySupported3. . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_3  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_HRV_STATUS_REPORT_4BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusParameter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 758 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_FRAMETYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_ENERGY_PRODUCTION_REPORT_3BYTE_FRA  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CHIMNEY_FAN_SETUP_REPORT_2BYTE_FRA  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_ASSOCIATION_SET_3BYTE_V2_FRAME_. .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
P1DIR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AFH  1
_ZW_ANTITHEFT_SET_4BYTE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  magicCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  magicCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  magicCode3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  magicCode4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 759 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  antiTheftHintByte4 . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_IP_ASSOCIATION_REPORT_1BYTE_FRAME_  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  actualNodes. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
_ZW_ZIP_INV_NODE_SOLICITATION_FRAME_ .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_FRAMETYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSupportedCc. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_TIME_OFFSET_REPORT_V2_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  monthStartDst. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dayStartDst. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourStartDst . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  monthEndDst. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dayEndDst. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  hourEndDst . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
ZW_THERMOSTAT_SETPOINT_SET_4BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 760 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_THERMOSTAT_OPERATING_STATE_GET_FRA  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_TARIFF_TBL_GET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_ALARM_SET_3BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_SECURITY_MESSAGE_ENCAPSULATION_NONC  TYPEDEF  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0017H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0018H  1
_VG_SCREEN_MD_REPORT_4BYTE_V2_VG_. . .  * TAG *  -----  STRUCT   -----  7
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 761 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  character3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  character4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SE  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
_VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V  * TAG *  -----  STRUCT   -----  2
  multiChannelNodeId . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_FRAMETYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_4  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
  meterPointAdmNumberCharacter4. . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_FRAMETYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reportNumber2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_ENERGY_PRODUCTION_REPORT_4BYTE_FRA  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 762 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_RECORD_GET_FRAME. . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_DCP_EVENT_STATUS_REPORT_FRAME_ . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_CHIMNEY_FAN_SETUP_REPORT_3BYTE_FRA  * TAG *  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startTemperature3. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopTemperature3 . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  alarmTemperatureValue3 . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
ZW_CHIMNEY_FAN_BOOST_TIME_GET_FRAME. .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_ALARM_TEMP_SET_1BYTE_F  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ASSOCIATION_SET_4BYTE_V2_FRAME_. .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_COMMAND_CONFIGURATION_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 763 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_IP_ASSOCIATION_REPORT_2BYTE_FRAME_  * TAG *  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  actualNodes. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_FRAMETYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSupportedCc. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_STATE_GET_FRAME_ . . . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  capabilityId . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_MODE_SUPPORTED_GET_FRAME  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_FAN_MODE_SET_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_ALARM_SET_4BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 764 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_SENSOR_TRIGGER_LEVEL_SET_1BYTE_FRA  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SENSOR_BINARY_REPORT_FRAME_. . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorValue. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SECURITY_MESSAGE_ENCAPSULATION_NONC  TYPEDEF  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  initializationVectorByte1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  initializationVectorByte2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  initializationVectorByte3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  initializationVectorByte4. . . . . .  MEMBER   -----  U_CHAR   0005H  1
  initializationVectorByte5. . . . . .  MEMBER   -----  U_CHAR   0006H  1
  initializationVectorByte6. . . . . .  MEMBER   -----  U_CHAR   0007H  1
  initializationVectorByte7. . . . . .  MEMBER   -----  U_CHAR   0008H  1
  initializationVectorByte8. . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  commandByte4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  receiversNonceIdentifier . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  messageAuthenticationCodeByte1 . . .  MEMBER   -----  U_CHAR   0012H  1
  messageAuthenticationCodeByte2 . . .  MEMBER   -----  U_CHAR   0013H  1
  messageAuthenticationCodeByte3 . . .  MEMBER   -----  U_CHAR   0014H  1
  messageAuthenticationCodeByte4 . . .  MEMBER   -----  U_CHAR   0015H  1
  messageAuthenticationCodeByte5 . . .  MEMBER   -----  U_CHAR   0016H  1
  messageAuthenticationCodeByte6 . . .  MEMBER   -----  U_CHAR   0017H  1
  messageAuthenticationCodeByte7 . . .  MEMBER   -----  U_CHAR   0018H  1
  messageAuthenticationCodeByte8 . . .  MEMBER   -----  U_CHAR   0019H  1
ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 765 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  1
ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_FRAMETYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterIdCharacter3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CHIMNEY_FAN_SETUP_REPORT_4BYTE_FRA  * TAG *  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startTemperature3. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startTemperature4. . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopTemperature3 . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopTemperature4 . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  alarmTemperatureValue3 . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  alarmTemperatureValue4 . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
_ZW_CHIMNEY_FAN_ALARM_TEMP_SET_2BYTE_F  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_ASSOCIATION_GET_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_NOTIFICATION_SET_V3_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  notificationStatus . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
s_nodeStatus_. . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  onValue. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  onTime . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME_. .  * TAG *  -----  STRUCT   -----  41
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  instance . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0003H  38
_ZW_IP_ASSOCIATION_REPORT_3BYTE_FRAME_  * TAG *  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 766 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  actualNodes. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_FRAMETYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSupportedCc. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_TIME_OFFSET_GET_V2_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_FAN_MODE_SET_V3_FRAME. .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_TRIGGER_LEVEL_SET_2BYTE_FRA  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_VG_MULTI_INSTANCE_ASSOCIATION_REPORT_  * TAG *  -----  STRUCT   -----  2
  multiInstanceNodeId. . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  instance . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 767 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  1
ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  1
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  1
ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_FRAMETYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterIdCharacter1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterIdCharacter2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterIdCharacter3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterIdCharacter4. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_HRV_CONTROL_VENTILATION_RATE_SET_FR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  ventilationRate. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_DCP_EVENT_STATUS_GET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_CHIMNEY_FAN_ALARM_TEMP_SET_3BYTE_F  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  group. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_IP_ASSOCIATION_REPORT_4BYTE_FRAME_  * TAG *  -----  STRUCT   -----  27
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  index. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 768 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  actualNodes. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  resourceName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_FRAMETYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSupportedScheduleId. . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfSupportedCc. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
ZW_WAKE_UP_NOTIFICATION_V2_FRAME . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_WAKE_UP_INTERVAL_SET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seconds1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  seconds2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  seconds3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_TRIGGER_LEVEL_SET_3BYTE_FRA  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  triggerValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 769 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_SENSOR_BINARY_GET_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SECURITY_PANEL_ZONE_NUMBER_SUPPORTE  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPOR  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_RATE_TBL_HISTORICAL_DATA_GET_FRAME.  TYPEDEF  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetRequested1. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  datasetRequested2. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  datasetRequested3. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
ZW_RATE_TBL_SET_1BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 770 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
ZW_MULTI_INSTANCE_REPORT_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  instances. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  1
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  1
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  1
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  1
ZW_METER_REPORT_1BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  meterType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_METER_TBL_HISTORICAL_DATA_REPORT_1B  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
_ZW_CHIMNEY_FAN_ALARM_TEMP_SET_4BYTE_F  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
P0PULLUP . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B1H  1
BYTE_P . . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
CancelRediscoveryTimer . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
UpdateNetworkUpdateCountOneMinute. . .  PUBLIC   CODE   PROC     0000H  -----
_ZW_CENTRAL_SCENE_SUPPORTED_REPORT_FRA  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 771 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedScenes. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYT  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
_ZW_DATE_REPORT_V2_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SENSOR_MULTILEVEL_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_TRIGGER_LEVEL_SET_4BYTE_FRA  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  triggerValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  triggerValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  triggerValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  triggerValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPOR  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_RATE_TBL_SET_2BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 772 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
_ZW_NODE_NEIGHBOR_UPDATE_STATUS_FRAME_  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NODE_LIST_GET_FRAME . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_REPORT_2BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  meterType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_METER_TBL_HISTORICAL_DATA_REPORT_2B  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
ZW_METER_TBL_CURRENT_DATA_GET_FRAME. .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datasetRequested1. . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datasetRequested2. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datasetRequested3. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_DEVICE_SPECIFIC_GET_V2_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_LANGUAGE_REPORT_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 773 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  language1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  language2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  language3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  country1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  country2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_FRA  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  firmwareId1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  firmwareId2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V2_F  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
P1PULLUP . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B2H  1
_ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYT  * TAG *  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
_ZW_COMMAND_SCHEDULE_SET_1BYTE_FRAME_.  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
_ZW_LOWPAN_SUBSEQUENT_FRAGMENT_1BYTE_F  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_HEATING_MODE_SET_FRAME_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 774 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_RATE_TBL_SET_3BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  26
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateCharacter3 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
_ZW_LEARN_MODE_SET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_MULTI_INSTANCE_GET_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  commandClass . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_REPORT_3BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  meterType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_METER_TBL_HISTORICAL_DATA_REPORT_3B  TYPEDEF  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 775 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
_ZW_RECORD_REPORT_1BYTE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCodeLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_CHIMNEY_FAN_STOP_TEMP_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_COMMAND_CONFIGURATION_REPORT_1BYTE  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_CENTRAL_SCENE_SUPPORTED_GET_FRAME_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYT  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
_ZW_COMMAND_SCHEDULE_SET_2BYTE_FRAME_.  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 776 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_LOWPAN_SUBSEQUENT_FRAGMENT_2BYTE_F  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_DATE_GET_V2_FRAME_ . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_TIME_PARAMETERS_REPORT_FRAME_. . .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourUtc. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteUtc. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondUtc. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_HEATING_STATUS_SET_FRAME  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANG  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SIMPLE_AV_CONTROL_REPORT_FRAME. . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 777 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_RATE_TBL_SET_4BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  27
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  rateCharacter1 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  rateCharacter2 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  rateCharacter3 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  rateCharacter4 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationMinute1. . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationMinute2. . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  minConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  minConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  minConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  minConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  maxConsumptionValue1 . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  maxConsumptionValue2 . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  maxConsumptionValue3 . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  maxConsumptionValue4 . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  maxDemandValue1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  maxDemandValue2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  maxDemandValue3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  maxDemandValue4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
_ZW_POWERLEVEL_REPORT_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  powerLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  timeout. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_NODE_NAMING_NODE_LOCATION_REPORT_F  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeLocationChar1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeLocationChar2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeLocationChar3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeLocationChar4. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeLocationChar5. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeLocationChar6. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nodeLocationChar7. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nodeLocationChar8. . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nodeLocationChar9. . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nodeLocationChar10 . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nodeLocationChar11 . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  nodeLocationChar12 . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  nodeLocationChar13 . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  nodeLocationChar14 . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  nodeLocationChar15 . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  nodeLocationChar16 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
ZW_METER_REPORT_4BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  meterType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 778 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  meterValue1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  meterValue2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  meterValue3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  meterValue4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_METER_TBL_HISTORICAL_DATA_REPORT_4B  TYPEDEF  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
ZW_LANGUAGE_GET_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_RECORD_REPORT_2BYTE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCodeLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
ZW_CONFIGURATION_GET_V2_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
VG_CONFIGURATION_BULK_SET_1BYTE_V2_VG.  TYPEDEF  -----  STRUCT   -----  1
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
_ZW_ASSOCIATION_REPORT_1BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_COMMAND_CONFIGURATION_REPORT_2BYTE  * TAG *  -----  STRUCT   -----  10
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 779 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
PRF. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FBH  1
_ZW_CENTRAL_SCENE_NOTIFICATION_FRAME_.  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sceneNumber. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYT  * TAG *  -----  STRUCT   -----  31
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  7
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  7
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  7
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  7
_ZW_COMMAND_SCHEDULE_SET_3BYTE_FRAME_.  * TAG *  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
_ZW_LOWPAN_SUBSEQUENT_FRAGMENT_3BYTE_F  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 780 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_SWITCH_BINARY_SET_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  switchValue. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG  TYPEDEF  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  currentValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  currentValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_HRV_CONTROL_MODE_SET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_RECORD_REPORT_3BYTE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCodeLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  userCode3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
VG_CONFIGURATION_BULK_SET_2BYTE_V2_VG.  TYPEDEF  -----  STRUCT   -----  2
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ASSOCIATION_REPORT_2BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_COMMAND_CONFIGURATION_REPORT_3BYTE  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
s_nodeInfo_. . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  5
  memberClass. . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  5
_ZW_COMMAND_SCHEDULE_SET_4BYTE_FRAME_.  * TAG *  -----  STRUCT   -----  34
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 781 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  scheduleId . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  durationByte1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  durationByte2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  numberOfCmdToFollow. . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
_ZW_LOWPAN_SUBSEQUENT_FRAGMENT_4BYTE_F  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_datagramSize1. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  datagramSize2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  datagramTag. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  datagramOffset . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  payload1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  payload2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  payload3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  payload4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_USER_CODE_SET_FRAME . . . . . . . .  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdStatus . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  userCode3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  userCode4. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  userCode5. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  userCode6. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  userCode7. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userCode8. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCode9. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode10 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_TIME_PARAMETERS_GET_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_SWITCH_MULTILEVEL_SET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SWITCH_ALL_OFF_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 782 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SIMPLE_AV_CONTROL_GET_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_SECURITY_SCHEME_INHERIT_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedSecuritySchemes . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPOR  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_RATE_TBL_HISTORICAL_DATA_REPORT_1B  * TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
_ZW_PROTECTION_REPORT_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  protectionState. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_POWERLEVEL_GET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_NODE_NAMING_NODE_LOCATION_GET_FRAME_* TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 783 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
_ZW_METER_TBL_STATUS_DATE_GET_FRAME_ .  * TAG *  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
_ZW_RECORD_REPORT_4BYTE_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  17
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  recordNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  eventType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  userCodeLength . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  userCode1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  userCode2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  userCode3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  userCode4. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
ZW_DCP_LIST_SET_1BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  28
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 784 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
VG_CONFIGURATION_BULK_SET_3BYTE_V2_VG.  TYPEDEF  -----  STRUCT   -----  3
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameter3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_ASSOCIATION_REPORT_3BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeid3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_COMMAND_CONFIGURATION_REPORT_4BYTE  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  commandByte4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
_ZW_COMMON_FRAME_. . . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  bitMask3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  bitMask4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_FRA  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPOR  * TAG *  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 785 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
_ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_RATE_TBL_HISTORICAL_DATA_REPORT_2B  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_NODE_LIST_REPORT_1BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeListControllerId . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeListData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_GROUPIN  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedGroupings . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
ZW_METER_TBL_STATUS_DEPTH_GET_V2_FRAME  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  statusEventLogDepth. . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_TBL_CURRENT_DATA_REPORT_1BYT  * TAG *  -----  STRUCT   -----  19
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 786 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
_ZW_DEVICE_SPECIFIC_REPORT_1BYTE_V2_FR  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  deviceIdData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maxRecordsStored . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_DCP_LIST_SET_2BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG.  TYPEDEF  -----  STRUCT   -----  4
  parameter1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  parameter2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 787 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  parameter3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameter4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ASSOCIATION_REPORT_4BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  maxNodesSupported. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeid1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeid2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeid3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeid4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_VerifyAssociatedTransmitCallback. . .  PUBLIC   CODE   PROC     0000H  -----
  SUCStatus. . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
_ZW_THERMOSTAT_MODE_SET_V2_FRAME_. . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_THERMOSTAT_FAN_MODE_REPORT_FRAME. .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SWITCH_ALL_ON_FRAME . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_FRA  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_NETWORK_KEY_SET_1BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  networkKeyByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_R  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  eventParameters. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SCENE_ACTUATOR_CONF_SET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_RATE_TBL_HISTORICAL_DATA_REPORT_3B  * TAG *  -----  STRUCT   -----  29
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 788 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
_ZW_PROTECTION_TIMEOUT_SET_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  timeout. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_PROTECTION_GET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_NODE_NEIGHBOR_UPDATE_REQUEST_FRAME.  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_NODE_LIST_REPORT_2BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeListControllerId . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeListData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeListData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE  TYPEDEF  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
_ZW_METER_RESET_V2_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_CURRENT_DATA_REPORT_2BYT  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 789 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_DEVICE_SPECIFIC_REPORT_2BYTE_V2_FR  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  deviceIdData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deviceIdData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_DOOR_LOCK_OPERATION_SET_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  doorLockMode . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_DOOR_LOCK_CONFIGURATION_SET_FRAME_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  operationType. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_DCP_LIST_SET_3BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  32
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000FH  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 790 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
_ZW_CHIMNEY_FAN_STOP_TIME_SET_FRAME_ .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  time . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_MODE_REPORT_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
STATE_BASIC_CMD_START. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_ZW_SWITCH_ALL_REPORT_FRAME_ . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_FRA  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_NETWORK_KEY_SET_2BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  networkKeyByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  networkKeyByte2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_REP  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_RATE_TBL_HISTORICAL_DATA_REPORT_4B  * TAG *  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 791 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
_ZW_NODE_LIST_REPORT_3BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeListControllerId . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeListData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeListData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeListData3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_MULTI_INSTANCE_ASSOCIATION_GROUPIN  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE  TYPEDEF  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  marker . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000CH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  2
_ZW_METER_RESET_V3_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_METER_TBL_STATUS_REPORT_V2_VG_ . .  * TAG *  -----  STRUCT   -----  8
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_METER_TBL_CURRENT_DATA_REPORT_3BYT  * TAG *  -----  STRUCT   -----  29
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
_ZW_DEVICE_SPECIFIC_REPORT_3BYTE_V2_FR  * TAG *  -----  STRUCT   -----  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 792 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  deviceIdData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deviceIdData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deviceIdData3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_DCP_LIST_SET_4BYTE_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dcpRateId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000BH  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000FH  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0011H  2
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  durationHourTime . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  durationMinuteTime . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  durationSecondTime . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  eventPriority. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
  loadShedding . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001EH  1
  startAssociationGroup. . . . . . . .  MEMBER   -----  U_CHAR   001FH  1
  stopAssociationGroup . . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
  randomizationInterval. . . . . . . .  MEMBER   -----  U_CHAR   0021H  1
_ZW_CONFIGURATION_REPORT_1BYTE_V2_FRAME_* TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_1BYTE_  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_ASSOCIATION_GROUPINGS_REPORT_V2_FRAMETYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedGroupings . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
WORD_P . . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 793 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_COMMAND_FRAGMENT_REQUEST_1BYTE_FRAME TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfOffsets. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0004H  2
ZW_THERMOSTAT_FAN_MODE_GET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_TARIFF_TBL_SET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  tariffValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  tariffValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  tariffValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  tariffValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_FRA  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sensorType . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sensorValue1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  sensorValue2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  sensorValue3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  sensorValue4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_NETWORK_KEY_SET_3BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  networkKeyByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  networkKeyByte2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  networkKeyByte3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_G  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_VG_RATE_TBL_CURRENT_DATA_REPORT_VG_ .  * TAG *  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  currentValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  currentValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_NODE_NAMING_NODE_NAME_REPORT_FRAME.  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeNameChar1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeNameChar2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeNameChar3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeNameChar4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeNameChar5. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeNameChar6. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nodeNameChar7. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nodeNameChar8. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nodeNameChar9. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 794 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  nodeNameChar10 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nodeNameChar11 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  nodeNameChar12 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  nodeNameChar13 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  nodeNameChar14 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  nodeNameChar15 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  nodeNameChar16 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
ZW_FAILED_NODE_REPLACE_FRAME . . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  txOptions. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_NODE_LIST_REPORT_4BYTE_FRAME_. . .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeListControllerId . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeListData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeListData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeListData3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeListData4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_METER_TBL_CURRENT_DATA_REPORT_4BYT  * TAG *  -----  STRUCT   -----  34
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0018H  5
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001DH  5
_ZW_DEVICE_SPECIFIC_REPORT_4BYTE_V2_FR  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  deviceIdData1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  deviceIdData2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  deviceIdData3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  deviceIdData4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_CONFIGURATION_REPORT_2BYTE_V2_FRAME_* TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 795 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_2BYTE_  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CHIMNEY_FAN_STATUS_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_SETUP_SET_1BYTE_FRAME_  * TAG *  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
ZW_CHIMNEY_FAN_MODE_GET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_BOOST_TIME_SET_FRAME. .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  time . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_COMMAND_FRAGMENT_REQUEST_2BYTE_FRAME TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfOffsets. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0004H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
ZW_THERMOSTAT_HEATING_SETPOINT_GET_FRAMETYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SWITCH_ALL_GET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_NETWORK_KEY_SET_4BYTE_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  networkKeyByte1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  networkKeyByte2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  networkKeyByte3. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  networkKeyByte4. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SECURITY_PANEL_ZONE_TYPE_REPORT_FR  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zoneType . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 796 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_SECURITY_PANEL_ZONE_STATE_REPORT_FR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zoneState. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_GET  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  sensorNumber . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_LEARN_MODE_SET_STATUS_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  newNodeId. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_CTRL_REPLICATION_TRANSFER_GROUP_FRAMETYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CONFIGURATION_REPORT_3BYTE_V2_FRAME_* TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_SCHEDULE_REPORT_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  switchpoint01. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  switchpoint02. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  switchpoint03. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  switchpoint11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  switchpoint12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  switchpoint13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  switchpoint21. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  switchpoint22. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  switchpoint23. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  switchpoint31. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  switchpoint32. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  switchpoint33. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  switchpoint41. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  switchpoint42. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  switchpoint43. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  switchpoint51. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  switchpoint52. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  switchpoint53. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  switchpoint61. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  switchpoint62. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  switchpoint63. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  switchpoint71. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 797 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  switchpoint72. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  switchpoint73. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  switchpoint81. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  switchpoint82. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  switchpoint83. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_3BYTE_  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CHIMNEY_FAN_SETUP_SET_2BYTE_FRAME_  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_BASIC_TARIFF_INFO_REPORT_FRAME_. .  * TAG *  -----  STRUCT   -----  16
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  e1RateConsumptionRegister1 . . . . .  MEMBER   -----  U_CHAR   0004H  1
  e1RateConsumptionRegister2 . . . . .  MEMBER   -----  U_CHAR   0005H  1
  e1RateConsumptionRegister3 . . . . .  MEMBER   -----  U_CHAR   0006H  1
  e1RateConsumptionRegister4 . . . . .  MEMBER   -----  U_CHAR   0007H  1
  e1TimeForNextRateHours . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  e1TimeForNextRateMinutes . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  e1TimeForNextRateSeconds . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  e2RateConsumptionRegister1 . . . . .  MEMBER   -----  U_CHAR   000CH  1
  e2RateConsumptionRegister2 . . . . .  MEMBER   -----  U_CHAR   000DH  1
  e2RateConsumptionRegister3 . . . . .  MEMBER   -----  U_CHAR   000EH  1
  e2RateConsumptionRegister4 . . . . .  MEMBER   -----  U_CHAR   000FH  1
ZW_ASSOCIATION_GROUPINGS_GET_V2_FRAME.  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME_.  * TAG *  -----  STRUCT   -----  42
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  encapFrame . . . . . . . . . . . . .  MEMBER   -----  UNION    0004H  38
_ZW_IP_ASSOCIATION_SET_1BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 798 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
_ZW_COMMAND_FRAGMENT_WAIT_FRAME_ . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  pendingFragments . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_COMMAND_FRAGMENT_REQUEST_3BYTE_FRAME TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfOffsets. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0004H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
ZW_TIME_OFFSET_SET_V2_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteTzo. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  monthStartDst. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dayStartDst. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  hourStartDst . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  monthEndDst. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  dayEndDst. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  hourEndDst . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
ZW_SECURITY_NONCE_REPORT_FRAME . . . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  nonceByte1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nonceByte2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nonceByte3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nonceByte4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nonceByte5 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nonceByte6 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nonceByte7 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nonceByte8 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2_F  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 799 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_NODE_NAMING_NODE_NAME_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_NODE_ADD_FRAME_. . . . . . . . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  txOptions. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V  * TAG *  -----  STRUCT   -----  2
  multiChannelNodeId . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_STATUS_REPORT_1BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  14
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
_VG_DCP_LIST_REPORT_VG_. . . . . . . .  * TAG *  -----  STRUCT   -----  2
  genericDeviceClass . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  specificDeviceClass. . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CONFIGURATION_REPORT_4BYTE_V2_FRAME_* TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  configurationValue4. . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_4BYTE_  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CHIMNEY_FAN_START_TEMP_GET_FRAME. .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CHIMNEY_FAN_SETUP_SET_3BYTE_FRAME_  * TAG *  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 800 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startTemperature3. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopTemperature3 . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  alarmTemperatureValue3 . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
_UpdateLostCounter . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  txStatus . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
_ZW_IP_ASSOCIATION_SET_2BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  23
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
ZW_CONTROLLER_CHANGE_FRAME . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  txOptions. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_COMMAND_FRAGMENT_REQUEST_4BYTE_FRAME TYPEDEF  -----  STRUCT   -----  12
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd_reserved . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfOffsets. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0004H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   000AH  2
ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANG  TYPEDEF  -----  STRUCT   -----  4
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 801 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SECURITY_PANEL_ZONE_TYPE_GET_FRAME_ * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SECURITY_PANEL_ZONE_STATE_GET_FRAME  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  zoneNumber . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3_F  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  enabled. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_SUPPORTED_REPORT_V2_FRAME_ .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_TBL_STATUS_REPORT_2BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
ZW_FIRMWARE_MD_REPORT_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  firmwareId1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  firmwareId2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  checksum1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  checksum2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SCHEDULE_GET_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CHIMNEY_FAN_SETUP_SET_4BYTE_FRAME_  * TAG *  -----  STRUCT   -----  21
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  boostTime. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  stopTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  minSpeed . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startTemperature1. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startTemperature2. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startTemperature3. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startTemperature4. . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 802 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  stopTemperature1 . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopTemperature2 . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopTemperature3 . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopTemperature4 . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  alarmTemperatureValue1 . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  alarmTemperatureValue2 . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  alarmTemperatureValue3 . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  alarmTemperatureValue4 . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
_ZW_BASIC_TARIFF_INFO_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_RediscoveryNeeded. . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_ZW_IP_ASSOCIATION_SET_3BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
_ZW_THERMOSTAT_HEATING_TIMED_OFF_SET_F  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  minutes. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  hours. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SECURITY_SCHEME_REPORT_FRAME_. . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedSecuritySchemes . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SECURITY_NONCE_GET_FRAME. . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATIN  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  weekDayBitmask . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 803 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  durationHour . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  durationMinute . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_PREPAYMENT_BALANCE_REPORT_FRAME . .  TYPEDEF  -----  STRUCT   -----  22
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  balanceValue1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  balanceValue2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  balanceValue3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  balanceValue4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  properties3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  debt1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  debt2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  debt3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  debt4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  properties4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  emerCredit1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  emerCredit2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  emerCredit3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  emerCredit4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  debtRecoveryPercentage . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
ZW_DEFAULT_SET_COMPLETE_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_VG_MULTI_INSTANCE_ASSOCIATION_SET_VG_  * TAG *  -----  STRUCT   -----  2
  multiInstanceNodeId. . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  instance . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_SUPPORTED_REPORT_V3_FRAME_ .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scaleSupported . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_TBL_STATUS_REPORT_3BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0016H  8
_ZW_IP_ASSOCIATION_SET_4BYTE_FRAME_. .  * TAG *  -----  STRUCT   -----  25
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipv6Address1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipv6Address2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipv6Address3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipv6Address4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 804 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ipv6Address5 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  ipv6Address6 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  ipv6Address7 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  ipv6Address8 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  ipv6Address9 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  ipv6Address10. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  ipv6Address11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  ipv6Address12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  ipv6Address13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  ipv6Address14. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  ipv6Address15. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  ipv6Address16. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  endpoint . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  resourceName1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  resourceName2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  resourceName3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  resourceName4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V3_  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfSlotsWeekDay . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfSlotsYearDay . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_METER_SUPPORTED_GET_V2_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_METER_TBL_STATUS_REPORT_4BYTE_FRAME  TYPEDEF  -----  STRUCT   -----  38
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  currentOperatingStatus1. . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  currentOperatingStatus2. . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  currentOperatingStatus3. . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  8
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  8
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0016H  8
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   001EH  8
ZW_FIRMWARE_MD_GET_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SCHEDULE_OVERRIDE_REPORT_FRAME_. .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 805 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  overrideState. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ANTITHEFT_GET_V2_FRAME_. . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_THERMOSTAT_SETPOINT_GET_V2_FRAME. .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_HEATING_SETPOINT_REPORT  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_SECURITY_SCHEME_GET_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedSecuritySchemes . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SECURITY_PANEL_MODE_REPORT_FRAME. .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATIN  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
ZW_SCENE_ACTIVATION_SET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sceneId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  dimmingDuration. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_PREPAYMENT_BALANCE_GET_FRAME. . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_DEFAULT_SET_FRAME_ . . . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_MOVE_TO_POSITION_REPORT_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  value. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_METER_SUPPORTED_GET_V3_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 806 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_LANGUAGE_SET_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  language1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  language2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  language3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  country1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  country2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_CHIMNEY_FAN_STATUS_REPORT_1BYTE_FRAMETYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
minus1dBm. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_APPLICATION_TX_BUFFER . . . . . . .  TYPEDEF  -----  UNION    -----  42
  ZW_MultiCommandEncapFrame. . . . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_CompositeCmdEncapFrame. . . . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_CompositeReplyEncapFrame. . . . .  MEMBER   -----  STRUCT   0000H  41
  ZW_MultiInstanceCmdEncapFrame. . . .  MEMBER   -----  STRUCT   0000H  41
  ZW_MultiChannelCmdEncapV2Frame . . .  MEMBER   -----  STRUCT   0000H  42
  ZW_Common. . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AlarmReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AlarmReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_AlarmReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AlarmReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_AlarmSetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AlarmTypeSupportedReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  4
  ZW_AlarmTypeSupportedReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_AlarmTypeSupportedReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_AlarmTypeSupportedReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_NotificationGetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationReport1byteV3Frame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_NotificationReport2byteV3Frame. .  MEMBER   -----  STRUCT   0000H  11
  ZW_NotificationReport3byteV3Frame. .  MEMBER   -----  STRUCT   0000H  12
  ZW_NotificationReport4byteV3Frame. .  MEMBER   -----  STRUCT   0000H  13
  ZW_NotificationSetV3Frame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedGetV3Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_NotificationSupportedReport1byteV  MEMBER   -----  STRUCT   0000H  4
  ZW_NotificationSupportedReport2byteV  MEMBER   -----  STRUCT   0000H  5
  ZW_NotificationSupportedReport3byteV  MEMBER   -----  STRUCT   0000H  6
  ZW_NotificationSupportedReport4byteV  MEMBER   -----  STRUCT   0000H  7
  ZW_EventSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EventSupportedReport1byteV3Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_EventSupportedReport2byteV3Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EventSupportedReport3byteV3Frame.  MEMBER   -----  STRUCT   0000H  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 807 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_EventSupportedReport4byteV3Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ApplicationBusyFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ApplicationRejectedRequestFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandConfigurationGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandConfigurationReport1byteFr  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationReport2byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationReport3byteFr  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandConfigurationReport4byteFr  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandConfigurationSet1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandConfigurationSet2byteFrame  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandConfigurationSet3byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandConfigurationSet4byteFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandRecordsSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandRecordsSupportedReportFrame MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGetV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupingsGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationGroupingsReportV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationRemove1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationRemove2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationRemove3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationRemove4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport1byteV2Frame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationReport2byteV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationReport3byteV2Frame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationReport4byteV2Frame . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AssociationSet1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_AssociationSet2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationSet3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationSet4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationSpecificGroupGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_AssociationSpecificGroupReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_AvContentBrowseMdByLetterGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdByLetterReportFr  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdChildCountReport  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentBrowseMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvMatchItemToRendererMdReportFrame MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvContentSearchMdReportFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvRendererStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 808 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AvRendererStatusReportFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AvTaggingMdReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicTariffInfoReportFrame. . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_BasicWindowCoveringStartLevelChan  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicWindowCoveringStopLevelChang  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BasicReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BasicSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_BatteryGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_BatteryReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmLogGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmLogReportFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmLogSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmStatusReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmStatusSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanAlarmTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanAlarmTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanAlarmTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanAlarmTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanAlarmTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanAlarmTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanBoostTimeGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanBoostTimeReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanBoostTimeSetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanDefaultSetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanMinSpeedReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanMinSpeedSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSetupGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSetupReport1byteFrame .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupReport2byteFrame .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupReport3byteFrame .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupReport4byteFrame .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSetupSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_ChimneyFanSetupSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  15
  ZW_ChimneyFanSetupSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ChimneyFanSetupSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  21
  ZW_ChimneyFanSpeedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanSpeedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanSpeedSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStartTempGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStartTempReport1byteFrameMEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempReport2byteFrameMEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempReport3byteFrameMEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStartTempReport4byteFrameMEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStartTempSet1byteFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStartTempSet2byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStartTempSet3byteFrame.  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 809 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ChimneyFanStartTempSet4byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStateGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStateReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStateSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStatusGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStatusReport1byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStatusReport2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_ChimneyFanStatusReport3byteFrame.  MEMBER   -----  STRUCT   0000H  9
  ZW_ChimneyFanStatusReport4byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ChimneyFanStopTempGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTempReport1byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempReport2byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempReport3byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempReport4byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTempSet1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ChimneyFanStopTempSet2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ChimneyFanStopTempSet3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ChimneyFanStopTempSet4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ChimneyFanStopTimeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ChimneyFanStopTimeReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ChimneyFanStopTimeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleChangedGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleChangedReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleOverrideGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleOverrideReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleOverrideSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ScheduleSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_ClockGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ClockReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ClockSetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationBulkGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ConfigurationBulkReport1byteV2VGr  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkReport2byteV2VGr  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkReport3byteV2VGr  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkReport4byteV2VGr  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkReport1byteV2FrameMEMBER   -----  STRUCT   0000H  11
  ZW_ConfigurationBulkReport2byteV2FrameMEMBER   -----  STRUCT   0000H  15
  ZW_ConfigurationBulkReport3byteV2FrameMEMBER   -----  STRUCT   0000H  19
  ZW_ConfigurationBulkReport4byteV2FrameMEMBER   -----  STRUCT   0000H  23
  VG_ConfigurationBulkSet1byteV2VGroup  MEMBER   -----  STRUCT   0000H  1
  VG_ConfigurationBulkSet2byteV2VGroup  MEMBER   -----  STRUCT   0000H  2
  VG_ConfigurationBulkSet3byteV2VGroup  MEMBER   -----  STRUCT   0000H  3
  VG_ConfigurationBulkSet4byteV2VGroup  MEMBER   -----  STRUCT   0000H  4
  ZW_ConfigurationBulkSet1byteV2Frame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ConfigurationBulkSet2byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ConfigurationBulkSet3byteV2Frame.  MEMBER   -----  STRUCT   0000H  18
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 810 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ConfigurationBulkSet4byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_ConfigurationGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ConfigurationReport1byteV2Frame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationReport2byteV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationReport3byteV2Frame .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationReport4byteV2Frame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ConfigurationSet1byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ConfigurationSet2byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ConfigurationSet3byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ConfigurationSet4byteV2Frame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferGroupFrame  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferGroupName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferGroupName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferGroupName4  MEMBER   -----  STRUCT   0000H  8
  ZW_CtrlReplicationTransferSceneFrame  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName1  MEMBER   -----  STRUCT   0000H  5
  ZW_CtrlReplicationTransferSceneName2  MEMBER   -----  STRUCT   0000H  6
  ZW_CtrlReplicationTransferSceneName3  MEMBER   -----  STRUCT   0000H  7
  ZW_CtrlReplicationTransferSceneName4  MEMBER   -----  STRUCT   0000H  8
  ZW_DcpListRemoveFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  VG_DcpListSetVGroup. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  28
  ZW_DcpListSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  30
  ZW_DcpListSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_DcpListSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  34
  ZW_DcpListSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_DcpEventStatusGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DcpEventStatusReportFrame . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_DcpListGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_DcpListReportVGroup . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DcpListReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  29
  ZW_DcpListReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_DcpListReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  33
  ZW_DcpListReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  35
  ZW_DoorLockLoggingRecordsSupportedGe  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockLoggingRecordsSupportedRe  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordGetFrame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RecordReport1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_RecordReport2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_RecordReport3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_RecordReport4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_DoorLockConfigurationGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportFrame. . .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DoorLockConfigurationGetV2Frame .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockConfigurationReportV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockConfigurationSetV2Frame .  MEMBER   -----  STRUCT   0000H  6
  ZW_DoorLockOperationGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DoorLockOperationReportV2Frame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_DoorLockOperationSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_EnergyProductionReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 811 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_EnergyProductionReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_EnergyProductionReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_EnergyProductionReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareMdGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_FirmwareUpdateMdReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestGetFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareMdGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_FirmwareMdReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FirmwareUpdateMdReport1byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_FirmwareUpdateMdReport2byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdReport3byteV2Frame MEMBER   -----  STRUCT   0000H  9
  ZW_FirmwareUpdateMdReport4byteV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_FirmwareUpdateMdRequestGetV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_FirmwareUpdateMdRequestReportV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_FirmwareUpdateMdStatusReportV2FrameMEMBER   -----  STRUCT   0000H  3
  ZW_GeographicLocationGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_GeographicLocationReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GeographicLocationSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_GroupingNameGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_GroupingNameReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_GroupingNameSetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_HailFrame . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlBypassReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlBypassSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_HrvControlModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvControlModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvControlModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvControlVentilationRateGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvControlVentilationRateReportFr  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvControlVentilationRateSetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_HrvStatusReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_HrvStatusReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_HrvStatusSupportedGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_HrvStatusSupportedReport1byteFrame MEMBER   -----  STRUCT   0000H  3
  ZW_HrvStatusSupportedReport2byteFrame MEMBER   -----  STRUCT   0000H  4
  ZW_HrvStatusSupportedReport3byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_HrvStatusSupportedReport4byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_IndicatorGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IndicatorReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_IndicatorSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 812 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_IpConfigurationGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReleaseFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationRenewFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_IpConfigurationReportFrame. . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpConfigurationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_LanguageGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LanguageReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LanguageSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LockGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LockReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_LockSetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ManufacturerSpecificGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ManufacturerSpecificGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_ManufacturerSpecificReportV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceSpecificGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DeviceSpecificReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  5
  ZW_DeviceSpecificReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  6
  ZW_DeviceSpecificReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_DeviceSpecificReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterPulseGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterPulseReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoSet2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoSet3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoSet4byteFr  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportVGroup. . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportFrame MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportVGroup .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteFrameMEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteFrameMEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteFrameMEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteFrameMEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetFrame. .  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportVGroup MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 813 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  VG_MeterTblStatusReportV2VGroup. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterTblStatusReport1byteV2Frame.  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterTblStatusReport2byteV2Frame.  MEMBER   -----  STRUCT   0000H  22
  ZW_MeterTblStatusReport3byteV2Frame.  MEMBER   -----  STRUCT   0000H  30
  ZW_MeterTblStatusReport4byteV2Frame.  MEMBER   -----  STRUCT   0000H  38
  ZW_MeterTblStatusDateGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  17
  ZW_MeterTblStatusDepthGetV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterTblStatusSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblStatusSupportedReportV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblCurrentDataGetV2Frame . .  MEMBER   -----  STRUCT   0000H  5
  VG_MeterTblCurrentDataReportV2VGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblCurrentDataReport1byteV2F  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblCurrentDataReport2byteV2F  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblCurrentDataReport3byteV2F  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblCurrentDataReport4byteV2F  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblHistoricalDataGetV2Frame.  MEMBER   -----  STRUCT   0000H  20
  VG_MeterTblHistoricalDataReportV2VGr  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblHistoricalDataReport1byte  MEMBER   -----  STRUCT   0000H  19
  ZW_MeterTblHistoricalDataReport2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_MeterTblHistoricalDataReport3byte  MEMBER   -----  STRUCT   0000H  29
  ZW_MeterTblHistoricalDataReport4byte  MEMBER   -----  STRUCT   0000H  34
  ZW_MeterTblReportV2Frame . . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_MeterTblTableCapabilityGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdGetV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTableIdReport1byteV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTableIdReport2byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTableIdReport3byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTableIdReport4byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblTablePointAdmNoGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblTablePointAdmNoReport1byt  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterTblTablePointAdmNoReport2byt  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterTblTablePointAdmNoReport3byt  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterTblTablePointAdmNoReport4byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterTblPushConfigurationGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterTblPushConfigurationReportFr  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterTblPushConfigurationSetFrame  MEMBER   -----  STRUCT   0000H  11
  ZW_MeterGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterReport1byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_MeterReport2byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_MeterReport3byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_MeterReport4byteFrame . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterGetV2Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MeterGetV3Frame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MeterReport1byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_MeterReport2byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_MeterReport3byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_MeterReport4byteV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_MeterResetV3Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 814 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MeterSupportedGetV3Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MeterSupportedReportV3Frame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MoveToPositionGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_MoveToPositionReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MoveToPositionSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGetV2Frame  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationGroupingsG  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelAssociationGroupingsR  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelAssociationRemove1byt  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationRemove2byt  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationRemove3byt  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationRemove4byt  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelAssociationReport1byt  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelAssociationReport2byt  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiChannelAssociationReport3byt  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiChannelAssociationReport4byt  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiChannelAssociationSet1byteV2  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelAssociationSet2byteV2  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiChannelAssociationSet3byteV2  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiChannelAssociationSet4byteV2  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiChannelCapabilityGetV2Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV2Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV2V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiChannelCapabilityGetV3Frame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiChannelCapabilityReport1byte  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelCapabilityReport2byte  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelCapabilityReport3byte  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelCapabilityReport4byte  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointFindV3Frame .  MEMBER   -----  STRUCT   0000H  4
  VG_MultiChannelEndPointFindReportV3V  MEMBER   -----  STRUCT   0000H  1
  ZW_MultiChannelEndPointFindReport1by  MEMBER   -----  STRUCT   0000H  6
  ZW_MultiChannelEndPointFindReport2by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiChannelEndPointFindReport3by  MEMBER   -----  STRUCT   0000H  8
  ZW_MultiChannelEndPointFindReport4by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiChannelEndPointGetV3Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiChannelEndPointReportV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceGetV3Frame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_MultiInstanceAssociationGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  2
  ZW_MultiInstanceAssociationGroupings  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceAssociationRemove1by  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationRemove2by  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationRemove3by  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationRemove4by  MEMBER   -----  STRUCT   0000H  16
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 815 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_MultiInstanceAssociationReport1by  MEMBER   -----  STRUCT   0000H  9
  ZW_MultiInstanceAssociationReport2by  MEMBER   -----  STRUCT   0000H  12
  ZW_MultiInstanceAssociationReport3by  MEMBER   -----  STRUCT   0000H  15
  ZW_MultiInstanceAssociationReport4by  MEMBER   -----  STRUCT   0000H  18
  ZW_MultiInstanceAssociationSet1byteF  MEMBER   -----  STRUCT   0000H  7
  ZW_MultiInstanceAssociationSet2byteF  MEMBER   -----  STRUCT   0000H  10
  ZW_MultiInstanceAssociationSet3byteF  MEMBER   -----  STRUCT   0000H  13
  ZW_MultiInstanceAssociationSet4byteF  MEMBER   -----  STRUCT   0000H  16
  ZW_MultiInstanceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_MultiInstanceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeInfoCachedGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeInfoCachedReport1byteFrame. .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeInfoCachedReport2byteFrame. .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeInfoCachedReport3byteFrame. .  MEMBER   -----  STRUCT   0000H  18
  ZW_NodeInfoCachedReport4byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_NodeListGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NodeListReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeListReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_NodeListReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_NodeListReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_LearnModeSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LearnModeSetStatusFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeInformationSendFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkUpdateRequestFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkUpdateRequestStatusFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_DefaultSetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_DefaultSetCompleteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_FailedNodeRemoveStatusFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeAddFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NodeAddStatus1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_NodeAddStatus2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_NodeAddStatus3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_NodeAddStatus4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  16
  ZW_NodeRemoveFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeRemoveStatusFrame . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_FailedNodeReplaceFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_FailedNodeReplaceStatusFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NodeNeighborUpdateRequestFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNeighborUpdateStatusFrame . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteAssignFrame. . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ReturnRouteAssignCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ReturnRouteDeleteCompleteFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_NodeNamingNodeLocationReportFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationSetFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeLocationGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_NodeNamingNodeNameReportFrame . .  MEMBER   -----  STRUCT   0000H  19
  ZW_NodeNamingNodeNameSetFrame. . . .  MEMBER   -----  STRUCT   0000H  19
  ZW_PowerlevelGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_PowerlevelTestNodeGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PowerlevelTestNodeReportFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PowerlevelTestNodeSetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_CmdEncapsulation1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 816 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_CmdEncapsulation2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_CmdEncapsulation3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CmdEncapsulation4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_PrepaymentBalanceGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_PrepaymentBalanceReportFrame. . .  MEMBER   -----  STRUCT   0000H  22
  ZW_PrepaymentSupportedGetFrame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_PrepaymentSupportedReportFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryGet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryGet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryGet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietaryReport1byteFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietaryReport2byteFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietaryReport3byteFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietaryReport4byteFrame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProprietarySet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProprietarySet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProprietarySet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ProprietarySet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ProtectionGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionSetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionEcReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionEcSetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ProtectionSupportedGetV2Frame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionSupportedReportV2Frame.  MEMBER   -----  STRUCT   0000H  7
  ZW_ProtectionTimeoutGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ProtectionTimeoutReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ProtectionTimeoutSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblRemove1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_RateTblRemove2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblRemove3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_RateTblRemove4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_RateTblSet1byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblSet2byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblSet3byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblSet4byteFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblActiveRateGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblActiveRateReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblCurrentDataGetFrame. . . .  MEMBER   -----  STRUCT   0000H  6
  VG_RateTblCurrentDataReportVGroup. .  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblCurrentDataReport1byteFrame MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblCurrentDataReport2byteFrame MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblCurrentDataReport3byteFrame MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblCurrentDataReport4byteFrame MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_RateTblHistoricalDataGetFrame . .  MEMBER   -----  STRUCT   0000H  21
  VG_RateTblHistoricalDataReportVGroup  MEMBER   -----  STRUCT   0000H  5
  ZW_RateTblHistoricalDataReport1byteF  MEMBER   -----  STRUCT   0000H  19
  ZW_RateTblHistoricalDataReport2byteF  MEMBER   -----  STRUCT   0000H  24
  ZW_RateTblHistoricalDataReport3byteF  MEMBER   -----  STRUCT   0000H  29
  ZW_RateTblHistoricalDataReport4byteF  MEMBER   -----  STRUCT   0000H  34
  ZW_RateTblReport1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  24
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 817 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_RateTblReport2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_RateTblReport3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  26
  ZW_RateTblReport4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  27
  ZW_RateTblSupportedGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_RateTblSupportedReportFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationActivateFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationGet  MEMBER   -----  STRUCT   0000H  3
  ZW_RemoteAssociationConfigurationRep  MEMBER   -----  STRUCT   0000H  5
  ZW_RemoteAssociationConfigurationSet  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActivationSetFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SceneActuatorConfGetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneActuatorConfReportFrame. . .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneActuatorConfSetFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_SceneControllerConfGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SceneControllerConfReportFrame. .  MEMBER   -----  STRUCT   0000H  5
  ZW_SceneControllerConfSetFrame . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockEnableAllSetFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetFrame .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportFrameMEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportFrameMEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV2Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV2Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV2F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV2F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV2Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV2Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV2F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV2Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockEnableAllSetV3Fr  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleEntryLockEnableSetV3Frame  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockTimeOffsetGetV3F  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryLockTimeOffsetReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockTimeOffsetSetV3F  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockWeekDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockWeekDayReportV3F  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockWeekDaySetV3Frame MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleEntryLockYearDayGetV3Frame MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockYearDayReportV3F  MEMBER   -----  STRUCT   0000H  14
  ZW_ScheduleEntryLockYearDaySetV3Frame MEMBER   -----  STRUCT   0000H  15
  ZW_ScheduleEntryTypeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleEntryTypeSupportedReportV  MEMBER   -----  STRUCT   0000H  5
  ZW_ScheduleEntryLockDailyRepeatingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleEntryLockDailyRepeatingRe  MEMBER   -----  STRUCT   0000H  9
  ZW_ScheduleEntryLockDailyRepeatingSe  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenAttributesGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportFrame . . .  MEMBER   -----  STRUCT   0000H  6
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 818 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ScreenAttributesGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScreenAttributesReportV2Frame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteVGroup . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_ScreenMdReport2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  17
  ZW_ScreenMdReport3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_ScreenMdReport4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  31
  ZW_ScreenMdGetV2Frame. . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport1byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  4
  VG_ScreenMdReport2byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  5
  VG_ScreenMdReport3byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  6
  VG_ScreenMdReport4byteV2VGroup . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_ScreenMdReport1byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_ScreenMdReport2byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  18
  ZW_ScreenMdReport3byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_ScreenMdReport4byteV2Frame. . . .  MEMBER   -----  STRUCT   0000H  32
  ZW_SecurityPanelModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelModeSupportedReportF  MEMBER   -----  STRUCT   0000H  4
  ZW_CommandClassSecurityPanelZoneSens  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorTypeReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SecurityPanelZoneSensorInstalledG  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneSensorStateGetFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSensorStateRepor  MEMBER   -----  STRUCT   0000H  7
  ZW_SecurityPanelZoneNumberSupportedG  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityPanelZoneStateGetFrame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneStateReportFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_SecurityPanelZoneSupportedReportF  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeGetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecurityPanelZoneTypeReportFrame.  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet1byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_NetworkKeySet2byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_NetworkKeySet3byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_NetworkKeySet4byteFrame . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_NetworkKeyVerifyFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedGetFrame  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityCommandsSupportedReport1b  MEMBER   -----  STRUCT   0000H  6
  ZW_SecurityCommandsSupportedReport2b  MEMBER   -----  STRUCT   0000H  8
  ZW_SecurityCommandsSupportedReport3b  MEMBER   -----  STRUCT   0000H  10
  ZW_SecurityCommandsSupportedReport4b  MEMBER   -----  STRUCT   0000H  12
  ZW_SecurityMessageEncapsulation1byte  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulation2byte  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulation3byte  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulation4byte  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  23
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  24
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  25
  ZW_SecurityMessageEncapsulationNonce  MEMBER   -----  STRUCT   0000H  26
  ZW_SecurityNonceGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SecurityNonceReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 819 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SecuritySchemeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeInheritFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SecuritySchemeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorAlarmReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSupportedGetFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorAlarmSupportedReport1byteFr  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSupportedReport2byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorAlarmSupportedReport3byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorAlarmSupportedReport4byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryGetV2Frame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinaryReportV2Frame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedGetSensorV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorBinarySupportedSensorReport  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorTriggerLevelReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorTriggerLevelReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet1byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorTriggerLevelSet2byteFrame .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorTriggerLevelSet3byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorTriggerLevelSet4byteFrame .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteFrame.  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteFrame.  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV2Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV2Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV2Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV2Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV3Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV3Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV3Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV3Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV4Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelReport1byteV4Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV4Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV4Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV4Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelGetV5Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV5Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV5Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV5Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV5Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 820 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelGetV6Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelReport1byteV6Frame MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelReport2byteV6Frame MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelReport3byteV6Frame MEMBER   -----  STRUCT   0000H  7
  ZW_SensorMultilevelReport4byteV6Frame MEMBER   -----  STRUCT   0000H  8
  ZW_SensorMultilevelSupportedGetSenso  MEMBER   -----  STRUCT   0000H  2
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  5
  ZW_SensorMultilevelSupportedSensorRe  MEMBER   -----  STRUCT   0000H  6
  ZW_SensorMultilevelSupportedGetScale  MEMBER   -----  STRUCT   0000H  3
  ZW_SensorMultilevelSupportedScaleRep  MEMBER   -----  STRUCT   0000H  4
  ZW_SensorAlarmSet1byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_SensorAlarmSet2byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SensorAlarmSet3byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_SensorAlarmSet4byteFrame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlReportFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  VG_SimpleAvControlSetVGroup. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SimpleAvControlSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  8
  ZW_SimpleAvControlSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  10
  ZW_SimpleAvControlSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  12
  ZW_SimpleAvControlSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  14
  ZW_SimpleAvControlSupportedGetFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_SimpleAvControlSupportedReport1by  MEMBER   -----  STRUCT   0000H  4
  ZW_SimpleAvControlSupportedReport2by  MEMBER   -----  STRUCT   0000H  5
  ZW_SimpleAvControlSupportedReport3by  MEMBER   -----  STRUCT   0000H  6
  ZW_SimpleAvControlSupportedReport4by  MEMBER   -----  STRUCT   0000H  7
  ZW_SwitchAllGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOffFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllOnFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchAllReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchAllSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinaryGetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchBinaryReportFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchBinarySetFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelGetFrame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelStartLevelChangeF  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStopLevelChangeFr  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV2Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV2Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  5
  ZW_SwitchMultilevelStopLevelChangeV2  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelGetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelReportV3Frame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchMultilevelSetV3Frame. . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchMultilevelStartLevelChangeV  MEMBER   -----  STRUCT   0000H  6
  ZW_SwitchMultilevelStopLevelChangeV3  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedGetV3FrameMEMBER   -----  STRUCT   0000H  2
  ZW_SwitchMultilevelSupportedReportV3  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleBinarySetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 821 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_SwitchToggleBinaryGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleBinaryReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelSetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelGetFrame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_SwitchToggleMultilevelReportFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_SwitchToggleMultilevelStartLevelC  MEMBER   -----  STRUCT   0000H  4
  ZW_SwitchToggleMultilevelStopLevelCh  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblRemove1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_TariffTblRemove2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_TariffTblRemove3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TariffTblRemove4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_TariffTblSetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierSet1byteFrame. .  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierSet2byteFrame. .  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierSet3byteFrame. .  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierSet4byteFrame. .  MEMBER   -----  STRUCT   0000H  22
  ZW_TariffTblCostGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_TariffTblCostReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_TariffTblGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_TariffTblReportFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_TariffTblSupplierGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TariffTblSupplierReport1byteFrame  MEMBER   -----  STRUCT   0000H  19
  ZW_TariffTblSupplierReport2byteFrame  MEMBER   -----  STRUCT   0000H  20
  ZW_TariffTblSupplierReport3byteFrame  MEMBER   -----  STRUCT   0000H  21
  ZW_TariffTblSupplierReport4byteFrame  MEMBER   -----  STRUCT   0000H  22
  ZW_ThermostatFanModeGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetFrame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV2Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV2Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanModeGetV3Frame . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeReportV3Frame. .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSetV3Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedGetV3Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanModeSupportedReport1  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatFanModeSupportedReport2  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatFanModeSupportedReport3  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatFanModeSupportedReport4  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatFanStateGetFrame. . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatFanStateReportFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingStatusReportFrame MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingModeReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingModeSetFrame . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingRelayStatusGetFr  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingRelayStatusRepor  MEMBER   -----  STRUCT   0000H  3
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 822 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatHeatingSetpointGetFrame  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingSetpointReport1b  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointReport2b  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointReport3b  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointReport4b  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingSetpointSet1byte  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatHeatingSetpointSet2byte  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatHeatingSetpointSet3byte  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatHeatingSetpointSet4byte  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatHeatingStatusGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatHeatingStatusSetFrame .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatHeatingTimedOffSetFrame  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportFrame . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetFrame .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatModeGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedGetV2Frame  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatModeSupportedReport1byt  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatModeSupportedReport2byt  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatModeSupportedReport3byt  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatModeSupportedReport4byt  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateGetFrame.  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportFrameMEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateGetV2Frame MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingStateReportV2F  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingSu  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingLoggingSupport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingGe  MEMBER   -----  STRUCT   0000H  6
  VG_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  13
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  18
  ZW_ThermostatOperatingStateLoggingRe  MEMBER   -----  STRUCT   0000H  23
  ZW_ThermostatSetbackGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetbackReportFrame. . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetbackSetFrame . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointGetFrame. . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteFrame MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteFrame .  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteFrame .  MEMBER   -----  STRUCT   0000H  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 823 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_ThermostatSetpointSet4byteFrame .  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetFrameMEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointGetV2Frame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointReport1byteV2Fr  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointReport2byteV2Fr  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointReport3byteV2Fr  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointReport4byteV2Fr  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSet1byteV2Frame  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSet2byteV2Frame  MEMBER   -----  STRUCT   0000H  6
  ZW_ThermostatSetpointSet3byteV2Frame  MEMBER   -----  STRUCT   0000H  7
  ZW_ThermostatSetpointSet4byteV2Frame  MEMBER   -----  STRUCT   0000H  8
  ZW_ThermostatSetpointSupportedGetV2F  MEMBER   -----  STRUCT   0000H  2
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  3
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  4
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  5
  ZW_ThermostatSetpointSupportedReport  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeParametersGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeParametersReportFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_TimeParametersSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_DateGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetFrame. . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeReportFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_DateGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_DateReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_TimeGetV2Frame. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetGetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_TimeOffsetReportV2Frame . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeOffsetSetV2Frame. . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_TimeReportV2Frame . . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandFirstFragment1byteFrame. .  MEMBER   -----  STRUCT   0000H  7
  ZW_CommandFirstFragment2byteFrame. .  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFirstFragment3byteFrame. .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandFirstFragment4byteFrame. .  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentCompleteFrame. . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandFragmentRequestVGroup. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CommandFragmentRequest1byteFrame.  MEMBER   -----  STRUCT   0000H  6
  ZW_CommandFragmentRequest2byteFrame.  MEMBER   -----  STRUCT   0000H  8
  ZW_CommandFragmentRequest3byteFrame.  MEMBER   -----  STRUCT   0000H  10
  ZW_CommandFragmentRequest4byteFrame.  MEMBER   -----  STRUCT   0000H  12
  ZW_CommandFragmentWaitFrame. . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_CommandSubsequentFragment1byteFrameMEMBER   -----  STRUCT   0000H  8
  ZW_CommandSubsequentFragment2byteFrameMEMBER   -----  STRUCT   0000H  9
  ZW_CommandSubsequentFragment3byteFrameMEMBER   -----  STRUCT   0000H  10
  ZW_CommandSubsequentFragment4byteFrameMEMBER   -----  STRUCT   0000H  11
  ZW_UserCodeGetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_UserCodeReportFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UserCodeSetFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_UsersNumberGetFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_UsersNumberReportFrame. . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassGetFrame . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_VersionCommandClassReportFrame. .  MEMBER   -----  STRUCT   0000H  4
  ZW_VersionGetFrame . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 824 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_VersionReportFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_WakeUpIntervalGetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportFrame . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetFrame. . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationFrame. . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationFrame . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesGetV2Fr  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalCapabilitiesReportV  MEMBER   -----  STRUCT   0000H  14
  ZW_WakeUpIntervalGetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpIntervalReportV2Frame . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpIntervalSetV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_WakeUpNoMoreInformationV2Frame. .  MEMBER   -----  STRUCT   0000H  2
  ZW_WakeUpNotificationV2Frame . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_LowpanFirstFragment1byteFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_LowpanFirstFragment2byteFrame . .  MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanFirstFragment3byteFrame . .  MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanFirstFragment4byteFrame . .  MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment1byteFrame MEMBER   -----  STRUCT   0000H  6
  ZW_LowpanSubsequentFragment2byteFrame MEMBER   -----  STRUCT   0000H  7
  ZW_LowpanSubsequentFragment3byteFrame MEMBER   -----  STRUCT   0000H  8
  ZW_LowpanSubsequentFragment4byteFrame MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_CommandZipPacket2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_CommandZipPacket3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  13
  ZW_CommandZipPacket4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  15
  ZW_CommandCommandClassNotSupportedFr  MEMBER   -----  STRUCT   0000H  5
  ZW_CapabilityGetFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CapabilityReportFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_StateGetFrame . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_StateReportFrame. . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  VG_StateSetVGroup. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_StateSet1byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  5
  ZW_StateSet2byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_StateSet3byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_StateSet4byteFrame. . . . . . . .  MEMBER   -----  STRUCT   0000H  11
  ZW_StartCapabilityLevelChangeFrame .  MEMBER   -----  STRUCT   0000H  5
  ZW_StopStateChangeFrame. . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleSupportedGetFrame . . . .  MEMBER   -----  STRUCT   0000H  2
  VG_ScheduleSupportedReportVGroup . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleSupportedReport1byteFrame  MEMBER   -----  STRUCT   0000H  8
  ZW_ScheduleSupportedReport2byteFrame  MEMBER   -----  STRUCT   0000H  10
  ZW_ScheduleSupportedReport3byteFrame  MEMBER   -----  STRUCT   0000H  12
  ZW_ScheduleSupportedReport4byteFrame  MEMBER   -----  STRUCT   0000H  14
  VG_CommandScheduleSet1byteVGroup . .  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleSet2byteVGroup . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleSet3byteVGroup . .  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleSet4byteVGroup . .  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleSet1byteFrame. . .  MEMBER   -----  STRUCT   0000H  19
  ZW_CommandScheduleSet2byteFrame. . .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleSet3byteFrame. . .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleSet4byteFrame. . .  MEMBER   -----  STRUCT   0000H  34
  ZW_CommandScheduleGetFrame . . . . .  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport1byteVGroup.  MEMBER   -----  STRUCT   0000H  2
  VG_CommandScheduleReport2byteVGroup.  MEMBER   -----  STRUCT   0000H  3
  VG_CommandScheduleReport3byteVGroup.  MEMBER   -----  STRUCT   0000H  4
  VG_CommandScheduleReport4byteVGroup.  MEMBER   -----  STRUCT   0000H  5
  ZW_CommandScheduleReport1byteFrame .  MEMBER   -----  STRUCT   0000H  19
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 825 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_CommandScheduleReport2byteFrame .  MEMBER   -----  STRUCT   0000H  24
  ZW_CommandScheduleReport3byteFrame .  MEMBER   -----  STRUCT   0000H  29
  ZW_CommandScheduleReport4byteFrame .  MEMBER   -----  STRUCT   0000H  34
  ZW_ScheduleRemoveFrame . . . . . . .  MEMBER   -----  STRUCT   0000H  3
  ZW_ScheduleStateSetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ScheduleStateGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_ScheduleStateReportFrame. . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeFrame . . . . . .  MEMBER   -----  STRUCT   0000H  6
  ZW_ControllerChangeStatus1byteFrame.  MEMBER   -----  STRUCT   0000H  13
  ZW_ControllerChangeStatus2byteFrame.  MEMBER   -----  STRUCT   0000H  14
  ZW_ControllerChangeStatus3byteFrame.  MEMBER   -----  STRUCT   0000H  15
  ZW_ControllerChangeStatus4byteFrame.  MEMBER   -----  STRUCT   0000H  16
  ZW_ZipNodeSolicitationFrame. . . . .  MEMBER   -----  STRUCT   0000H  20
  ZW_ZipInvNodeSolicitationFrame . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_ZipNodeAdvertisementFrame . . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupNameGetFrame. . .  MEMBER   -----  STRUCT   0000H  3
  ZW_AssociationGroupNameReport1byteFr  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupNameReport2byteFr  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupNameReport3byteFr  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupNameReport4byteFr  MEMBER   -----  STRUCT   0000H  8
  ZW_AssociationGroupInfoGetFrame. . .  MEMBER   -----  STRUCT   0000H  4
  VG_AssociationGroupInfoReportVGroup.  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupInfoReport1byteFr  MEMBER   -----  STRUCT   0000H  10
  ZW_AssociationGroupInfoReport2byteFr  MEMBER   -----  STRUCT   0000H  17
  ZW_AssociationGroupInfoReport3byteFr  MEMBER   -----  STRUCT   0000H  24
  ZW_AssociationGroupInfoReport4byteFr  MEMBER   -----  STRUCT   0000H  31
  ZW_AssociationGroupCommandListGetFrameMEMBER   -----  STRUCT   0000H  4
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  5
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  6
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  7
  ZW_AssociationGroupCommandListReport  MEMBER   -----  STRUCT   0000H  8
  ZW_DeviceResetLocallyNotificationFrameMEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedGetFrame . .  MEMBER   -----  STRUCT   0000H  2
  ZW_CentralSceneSupportedReportFrame.  MEMBER   -----  STRUCT   0000H  3
  ZW_CentralSceneNotificationFrame . .  MEMBER   -----  STRUCT   0000H  5
  ZW_IpAssociationSet1byteFrame. . . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationSet2byteFrame. . . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationSet3byteFrame. . . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationSet4byteFrame. . . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationGetFrame . . . . . .  MEMBER   -----  STRUCT   0000H  4
  ZW_IpAssociationReport1byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationReport2byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_IpAssociationReport3byteFrame . .  MEMBER   -----  STRUCT   0000H  26
  ZW_IpAssociationReport4byteFrame . .  MEMBER   -----  STRUCT   0000H  27
  ZW_IpAssociationRemove1byteFrame . .  MEMBER   -----  STRUCT   0000H  22
  ZW_IpAssociationRemove2byteFrame . .  MEMBER   -----  STRUCT   0000H  23
  ZW_IpAssociationRemove3byteFrame . .  MEMBER   -----  STRUCT   0000H  24
  ZW_IpAssociationRemove4byteFrame . .  MEMBER   -----  STRUCT   0000H  25
  ZW_AntitheftSet1byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteFrame. . . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetFrame . . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteFrame . . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteFrame . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteFrame . . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteFrame . . . .  MEMBER   -----  STRUCT   0000H  10
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 826 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  ZW_AntitheftSet1byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftSet2byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  10
  ZW_AntitheftSet3byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  12
  ZW_AntitheftSet4byteV2Frame. . . . .  MEMBER   -----  STRUCT   0000H  14
  ZW_AntitheftGetV2Frame . . . . . . .  MEMBER   -----  STRUCT   0000H  2
  ZW_AntitheftReport1byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  7
  ZW_AntitheftReport2byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  8
  ZW_AntitheftReport3byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  9
  ZW_AntitheftReport4byteV2Frame . . .  MEMBER   -----  STRUCT   0000H  10
_VG_COMMAND_SCHEDULE_REPORT_1BYTE_VG_.  * TAG *  -----  STRUCT   -----  2
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_MODE_REPORT_FRAME_. . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_HEATING_SETPOINT_REPORT  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_FAILED_NODE_REPLACE_STATUS_FRAME_.  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_VG_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
ZW_METER_TBL_TABLE_CAPABILITY_GET_FRAME TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_DOOR_LOCK_OPERATION_REPORT_FRAME. .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  doorLockMode . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  doorCondition. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  lockTimeoutMinutes . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  lockTimeoutSeconds . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SCHEDULE_OVERRIDE_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_STATUS_REPORT_2BYTE_FRAMETYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 827 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_CHIMNEY_FAN_START_TEMP_REPORT_1BYT  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_COMMAND_CONFIGURATION_SET_1BYTE_FR  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
ZW_Random. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
minus2dBm. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_VG_COMMAND_SCHEDULE_REPORT_2BYTE_VG_.  * TAG *  -----  STRUCT   -----  3
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_VG_SCHEDULE_SUPPORTED_REPORT_VG_. . .  * TAG *  -----  STRUCT   -----  2
  supportedCc. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_WAKE_UP_NO_MORE_INFORMATION_V2_FRA  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_TIME_PARAMETERS_SET_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  hourUtc. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  minuteUtc. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  secondUtc. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_HEATING_SETPOINT_REPORT  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SECURITY_PANEL_ZONE_SUPPORTED_REPO  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameters1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_SECURITY_PANEL_MODE_GET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_SCREEN_MD_REPORT_1BYTE_VG_ . . . .  * TAG *  -----  STRUCT   -----  4
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 828 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCREEN_ATTRIBUTES_REPORT_V2_FRAME_  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  numberOfCharactersPerLine. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  sizeOfLineBuffer . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  numericalPresentationOfACharacter. .  MEMBER   -----  U_CHAR   0005H  1
  screenTimeout. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_POWERLEVEL_SET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  powerLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  timeout. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_NODE_NAMING_NODE_LOCATION_SET_FRAME_* TAG *  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeLocationChar1. . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeLocationChar2. . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeLocationChar3. . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeLocationChar4. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeLocationChar5. . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeLocationChar6. . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nodeLocationChar7. . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nodeLocationChar8. . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nodeLocationChar9. . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nodeLocationChar10 . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nodeLocationChar11 . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  nodeLocationChar12 . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  nodeLocationChar13 . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  nodeLocationChar14 . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  nodeLocationChar15 . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  nodeLocationChar16 . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
_VG_MULTI_CHANNEL_END_POINT_FIND_REPOR  * TAG *  -----  STRUCT   -----  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
_ZW_MOVE_TO_POSITION_GET_FRAME_. . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_METER_TBL_HISTORICAL_DATA_GET_FRAME_* TAG *  -----  STRUCT   -----  20
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  maximumReports . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  historicalDatasetRequested1. . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalDatasetRequested2. . . . .  MEMBER   -----  U_CHAR   0004H  1
  historicalDatasetRequested3. . . . .  MEMBER   -----  U_CHAR   0005H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  startSecondLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 829 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  stopSecondLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
ZW_CHIMNEY_FAN_STATUS_REPORT_3BYTE_FRAMETYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
_ZW_CHIMNEY_FAN_START_TEMP_REPORT_2BYT  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ASSOCIATION_SET_1BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_COMMAND_CONFIGURATION_SET_2BYTE_FR  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
minus3dBm. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_VG_COMMAND_SCHEDULE_REPORT_3BYTE_VG_.  * TAG *  -----  STRUCT   -----  4
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  cmdByte3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_STATE_SET_1BYTE_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  2
_ZW_TIME_REPORT_V2_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_MODE_GET_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_HEATING_SETPOINT_REPORT  * TAG *  -----  STRUCT   -----  8
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 830 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setpointNr . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_SENSOR_BINARY_SUPPORTED_GET_SENSOR_  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_SCREEN_MD_REPORT_2BYTE_VG_ . . . .  * TAG *  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_NODE_REMOVE_FRAME_ . . . . . . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  seqNo. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_GROUPING  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedGroupings . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_IP_CONFIGURATION_REPORT_FRAME . . .  TYPEDEF  -----  STRUCT   -----  27
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  ipAddress1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  ipAddress2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  ipAddress3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  ipAddress4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  subnetMask1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  subnetMask2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  subnetMask3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  subnetMask4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  gateway1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  gateway2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  gateway3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  gateway4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  dns11. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  dns12. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  dns13. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  dns14. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  dns21. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  dns22. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  dns23. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  dns24. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  leasetime1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  leasetime2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  leasetime3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  leasetime4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
ZW_DOOR_LOCK_OPERATION_GET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 831 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_STATUS_REPORT_4BYTE_FRAMETYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  state. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_CHIMNEY_FAN_START_TEMP_REPORT_3BYT  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_ASSOCIATION_SET_2BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_COMMAND_CONFIGURATION_SET_3BYTE_FR  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
minus4dBm. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG_.  * TAG *  -----  STRUCT   -----  5
  cmdLength. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmdByte1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  cmdByte2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  cmdByte3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  cmdByte4 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_STATE_SET_2BYTE_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
ZW_SENSOR_ALARM_SUPPORTED_GET_FRAME. .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_SCREEN_MD_REPORT_3BYTE_VG_ . . . .  * TAG *  -----  STRUCT   -----  6
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 832 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  character3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCREEN_ATTRIBUTES_GET_V2_FRAME_. .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_PROTECTION_SET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  protectionState. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_CMD_ENCAPSULATION_1BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CONFIGURATION_BULK_GET_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CHIMNEY_FAN_START_TEMP_REPORT_4BYT  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CHIMNEY_FAN_SPEED_REPORT_FRAME_. .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  speed. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_ALARM_LOG_REPORT_FRAME.  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmEvent1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmEvent2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  alarmEvent3. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  alarmEvent4. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  alarmEvent5. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_AV_RENDERER_STATUS_REPORT_FRAME_ .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 833 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_ASSOCIATION_SET_3BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_COMMAND_CONFIGURATION_SET_4BYTE_FR  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  commandLength. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  commandClassIdentifier . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  commandIdentifier. . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  commandByte1 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  commandByte2 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  commandByte3 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  commandByte4 . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
ZW_ALARM_GET_V2_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
STATE_EXECUTE. . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
minus5dBm. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_STATE_SET_3BYTE_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
_ZW_TIME_GET_V2_FRAME_ . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_THERMOSTAT_HEATING_RELAY_STATUS_RE  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  relayStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_VG_SCREEN_MD_REPORT_4BYTE_VG_ . . . .  * TAG *  -----  STRUCT   -----  7
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  characterPosition. . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfCharacters . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  character1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  character2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  character3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  character4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 834 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  setAction. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startYear. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_CMD_ENCAPSULATION_2BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_MULTI_CHANNEL_ASSOCIATION_GROUPING  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_VG_METER_TBL_HISTORICAL_DATA_REPORT_V  * TAG *  -----  STRUCT   -----  5
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  historicalValue1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  historicalValue2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  historicalValue3 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  historicalValue4 . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_IP_CONFIGURATION_GET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_GEOGRAPHIC_LOCATION_REPORT_FRAME_.  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  longitudeDegrees . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  latitudeDegrees. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CTRL_REPLICATION_TRANSFER_GROUP_NA  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_ASSOCIATION_SET_4BYTE_FRAME_ . . .  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeId3. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeId4. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_EVENT_SUPPORTED_GET_V3_FRAME_. . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  notificationType . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
minus6dBm. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 835 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ZW_ANTITHEFT_REPORT_1BYTE_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_STATE_SET_4BYTE_FRAME . . . . . . .  TYPEDEF  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  2
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0005H  2
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  2
  variantgroup4. . . . . . . . . . . .  MEMBER   -----  STRUCT   0009H  2
_ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_THERMOSTAT_FAN_MODE_SET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SE  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_RATE_TBL_SUPPORTED_REPORT_FRAME_ .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  ratesSupported . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterSetSupportedBitMask1. . . .  MEMBER   -----  U_CHAR   0003H  1
  parameterSetSupportedBitMask2. . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_CMD_ENCAPSULATION_3BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_MULTI_CHANNEL_CAPABILITY_GET_V2_FR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_CTRL_REPLICATION_TRANSFER_GROUP_NA  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 836 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  groupName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_CHIMNEY_FAN_SPEED_GET_FRAME_ . . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_CHIMNEY_FAN_MODE_SET_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_ALARM_LOG_GET_FRAME . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_AV_RENDERER_STATUS_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
minus7dBm. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_ANTITHEFT_REPORT_2BYTE_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
VG_ASSOCIATION_GROUP_INFO_REPORT_VG. .  TYPEDEF  -----  STRUCT   -----  7
  groupingIdentifier . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  profile1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  profile2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  reserved . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  eventCode1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  eventCode2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  5
_ZW_THERMOSTAT_HEATING_RELAY_STATUS_GE  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
ZW_TARIFF_TBL_SUPPLIER_GET_FRAME . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_TARIFF_TBL_COST_REPORT_FRAME_. . .  * TAG *  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 837 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  currency1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  currency2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  currency3. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  properties2. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  costValue1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  costValue2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  costValue3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  costValue4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
_ZW_SWITCH_ALL_SET_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  mode . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SE  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CMD_ENCAPSULATION_4BYTE_FRAME_ . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  data1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  data2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  data3. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  data4. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_MULTI_CHANNEL_CAPABILITY_GET_V3_FR  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT  TYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
_ZW_GEOGRAPHIC_LOCATION_GET_FRAME_ . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_CTRL_REPLICATION_TRANSFER_GROUP_NA  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  groupName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  groupName3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CONFIGURATION_SET_1BYTE_V2_FRAME_.  * TAG *  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 838 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_CHIMNEY_FAN_STOP_TEMP_SET_1BYTE_FRAMETYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
STATE_BASIC_CMD. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
minus8dBm. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_ANTITHEFT_REPORT_3BYTE_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
ZW_WAKE_UP_NOTIFICATION_FRAME. . . . .  TYPEDEF  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  value4 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  13
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  5
_ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REP  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPOR  * TAG *  -----  STRUCT   -----  9
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  userIdentifier . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  scheduleSlotId . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dayOfWeek. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startHour. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startMinute. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  stopHour . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  stopMinute . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 839 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_ZW_RATE_TBL_SUPPORTED_GET_FRAME_. . .  * TAG *  -----  STRUCT   -----  2
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
_ZW_RATE_TBL_ACTIVE_RATE_REPORT_FRAME_  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_PROTECTION_EC_REPORT_V2_FRAME . . .  TYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_NODE_NAMING_NODE_NAME_SET_FRAME . .  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeNameChar1. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  nodeNameChar2. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  nodeNameChar3. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  nodeNameChar4. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  nodeNameChar5. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  nodeNameChar6. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  nodeNameChar7. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  nodeNameChar8. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  nodeNameChar9. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  nodeNameChar10 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  nodeNameChar11 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  nodeNameChar12 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
  nodeNameChar13 . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  nodeNameChar14 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  nodeNameChar15 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  nodeNameChar16 . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT  TYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_METER_TBL_STATUS_SUPPORTED_REPORT_  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  supportedOperatingStatus1. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  supportedOperatingStatus2. . . . . .  MEMBER   -----  U_CHAR   0003H  1
  supportedOperatingStatus3. . . . . .  MEMBER   -----  U_CHAR   0004H  1
  statusEventLogDepth. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_METER_TBL_HISTORICAL_DATA_REPORT_1B  TYPEDEF  -----  STRUCT   -----  19
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 840 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
_ZW_CTRL_REPLICATION_TRANSFER_GROUP_NA  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  groupId. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  groupName1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  groupName2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  groupName3 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  groupName4 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
_ZW_CONFIGURATION_SET_2BYTE_V2_FRAME_.  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_SCHEDULE_CHANGED_REPORT_FRAME_ . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  changecounter. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
ZW_CHIMNEY_FAN_STOP_TEMP_SET_2BYTE_FRAMETYPEDEF  -----  STRUCT   -----  5
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
ZW_CHIMNEY_FAN_ALARM_STATUS_REPORT_FRAMETYPEDEF  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmStatus. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_BATTERY_REPORT_FRAME_. . . . . . .  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  batteryLevel . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
myNodeID . . . . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
minus9dBm. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ZW_ANTITHEFT_REPORT_4BYTE_V2_FRAME . .  TYPEDEF  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  antiTheftProtectionStatus. . . . . .  MEMBER   -----  U_CHAR   0002H  1
  manufacturerId1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  manufacturerId2. . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  antiTheftHintNumberBytes . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  antiTheftHintByte1 . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  antiTheftHintByte2 . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  antiTheftHintByte3 . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  antiTheftHintByte4 . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
_ZW_DATE_REPORT_FRAME_ . . . . . . . .  * TAG *  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 841 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPOR  TYPEDEF  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  18
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0003H  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0008H  5
  variantgroup3. . . . . . . . . . . .  MEMBER   -----  STRUCT   000DH  5
_ZW_THERMOSTAT_OPERATING_STATE_LOGGING  * TAG *  -----  STRUCT   -----  3
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
_ZW_TARIFF_TBL_COST_GET_FRAME_ . . . .  * TAG *  -----  STRUCT   -----  15
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  rateParameterSetId . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  startYear1 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  startYear2 . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  startMonth . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  startDay . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  startHourLocalTime . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  startMinuteLocalTime . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  stopYear1. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  stopYear2. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  stopMonth. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  stopDay. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  stopHourLocalTime. . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  stopMinuteLocalTime. . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
_ZW_SIMPLE_AV_CONTROL_SET_1BYTE_FRAME_  * TAG *  -----  STRUCT   -----  8
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  sequenceNumber . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  itemId1. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  itemId2. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0006H  2
_ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REP  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SENSOR_ALARM_SUPPORTED_REPORT_1BYT  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfBitMasks . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  bitMask1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_SCREEN_MD_GET_V2_FRAME_. . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  numberOfReports. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  nodeId . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT  TYPEDEF  -----  STRUCT   -----  7
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 842 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  meterPointAdmNumberCharacter1. . . .  MEMBER   -----  U_CHAR   0003H  1
  meterPointAdmNumberCharacter2. . . .  MEMBER   -----  U_CHAR   0004H  1
  meterPointAdmNumberCharacter3. . . .  MEMBER   -----  U_CHAR   0005H  1
  meterPointAdmNumberCharacter4. . . .  MEMBER   -----  U_CHAR   0006H  1
ZW_METER_TBL_HISTORICAL_DATA_REPORT_2B  TYPEDEF  -----  STRUCT   -----  24
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dataset1 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  dataset2 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  dataset3 . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  year1. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  year2. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  month. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  day. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  hourLocalTime. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  minuteLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  secondLocalTime. . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   000EH  5
  variantgroup2. . . . . . . . . . . .  MEMBER   -----  STRUCT   0013H  5
_ZW_CONFIGURATION_SET_3BYTE_V2_FRAME_.  * TAG *  -----  STRUCT   -----  7
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterNumber. . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  level. . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  configurationValue1. . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  configurationValue2. . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  configurationValue3. . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
_ZW_CONFIGURATION_BULK_REPORT_1BYTE_V2  * TAG *  -----  STRUCT   -----  11
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  parameterOffset1 . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  parameterOffset2 . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  numberOfParameters . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  reportsToFollow. . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  variantgroup1. . . . . . . . . . . .  MEMBER   -----  STRUCT   0007H  4
ZW_SCHEDULE_SET_FRAME. . . . . . . . .  TYPEDEF  -----  STRUCT   -----  30
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  switchpoint01. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  switchpoint02. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  switchpoint03. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  switchpoint11. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  switchpoint12. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  switchpoint13. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  switchpoint21. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1
  switchpoint22. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000AH  1
  switchpoint23. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  switchpoint31. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000CH  1
  switchpoint32. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000DH  1
  switchpoint33. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000EH  1
C51 COMPILER V9.53.0.0   SELF_HEAL                                                         08/06/2018 15:47:47 PAGE 843 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  switchpoint41. . . . . . . . . . . .  MEMBER   -----  U_CHAR   000FH  1
  switchpoint42. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0010H  1
  switchpoint43. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0011H  1
  switchpoint51. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0012H  1
  switchpoint52. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0013H  1
  switchpoint53. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0014H  1
  switchpoint61. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0015H  1
  switchpoint62. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0016H  1
  switchpoint63. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0017H  1
  switchpoint71. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0018H  1
  switchpoint72. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0019H  1
  switchpoint73. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001AH  1
  switchpoint81. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001BH  1
  switchpoint82. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001CH  1
  switchpoint83. . . . . . . . . . . .  MEMBER   -----  U_CHAR   001DH  1
ZW_CHIMNEY_FAN_STOP_TEMP_SET_3BYTE_FRAMETYPEDEF  -----  STRUCT   -----  6
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  properties1. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  value1 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  value2 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  value3 . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
_ZW_APPLICATION_BUSY_FRAME_. . . . . .  * TAG *  -----  STRUCT   -----  4
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  status . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  waitTime . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
_ZW_ALARM_REPORT_1BYTE_V2_FRAME_ . . .  * TAG *  -----  STRUCT   -----  10
  cmdClass . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  cmd. . . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
  alarmType. . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0002H  1
  alarmLevel . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  zensorNetSourceNodeId. . . . . . . .  MEMBER   -----  U_CHAR   0004H  1
  zwaveAlarmStatus . . . . . . . . . .  MEMBER   -----  U_CHAR   0005H  1
  zwaveAlarmType . . . . . . . . . . .  MEMBER   -----  U_CHAR   0006H  1
  zwaveAlarmEvent. . . . . . . . . . .  MEMBER   -----  U_CHAR   0007H  1
  numberOfEventParameters. . . . . . .  MEMBER   -----  U_CHAR   0008H  1
  eventParameter1. . . . . . . . . . .  MEMBER   -----  U_CHAR   0009H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1118    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
